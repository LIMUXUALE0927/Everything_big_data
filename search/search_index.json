{"config":{"lang":["zh"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome","text":"<p>\u8bb0\u5f55\u5728\u5927\u6570\u636e\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u7b14\u8bb0</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/","title":"Flink \u57fa\u7840","text":""},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#flink_1","title":"Flink \u7b80\u4ecb","text":"<p>Apache Flink \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u6d41\u5904\u7406\u5f15\u64ce\uff0c\u7528\u4e8e\u5bf9\u65e0\u754c\u548c\u6709\u754c\u6570\u636e\u6d41\u8fdb\u884c\u6709\u72b6\u6001\u8ba1\u7b97\u3002</p> <p>\u7279\u70b9\uff1a</p> \u771f\u6b63\u7684\u6d41\u5904\u7406\u5f15\u64ce <p>\u5728 Flink \u7684\u6d41\u5904\u7406\u6a21\u5f0f\u4e0b\uff0cFlink \u5904\u7406\u6570\u636e\u7684\u7c92\u5ea6\u662f\u4e8b\u4ef6\u7c92\u5ea6\u6216\u8005\u8bf4\u6570\u636e\u7c92\u5ea6\uff0c\u8fd9\u4e2a\u7279\u6027\u53cd\u6620\u5230\u4e1a\u52a1\u4e2d\u5c31\u662f\u6570\u636e\u5904\u7406\u5ef6\u8fdf\u6781\u4f4e\uff0c\u4e00\u822c\u662f\u6beb\u79d2\u7ea7\u522b\u3002</p> \u5f3a\u5927\u6027\u80fd\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u5f15\u64ce <p>Flink \u662f\u5206\u5e03\u5f0f\u7684\u8ba1\u7b97\u5f15\u64ce\uff0c\u5904\u7406\u6570\u636e\u7684\u541e\u5410\u80fd\u529b\u80fd\u591f\u8f7b\u677e\u8fbe\u5230\u767e\u4e07\u3001\u5343\u4e07\u7ea7\u522b QPS\u3002</p> \u65f6\u95f4\u8bed\u4e49\u4e30\u5bcc <p>Flink \u9884\u7f6e\u4e86\u591a\u91cd\u65f6\u95f4\u8bed\u4e49\u7684 API\uff0c\u5305\u62ec\u4e8b\u4ef6\u4e8b\u4ef6\u3001\u5904\u7406\u65f6\u95f4\u548c\u6444\u5165\u65f6\u95f4\u3002</p> \u9ad8\u53ef\u7528\u7684\u6709\u72b6\u6001\u8ba1\u7b97\u5f15\u64ce <p>Flink \u4e0d\u4f46\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u72b6\u6001\u7c7b\u578b\u548c\u72b6\u6001\u64cd\u4f5c API\uff0c\u800c\u4e14\u63d0\u4f9b\u4e86 Checkpoint\u3001Savepoint \u8fd9\u6837\u7684\u5feb\u7167\u673a\u5236\u6765\u4fdd\u969c\u7cbe\u786e\u4e00\u6b21\u7684\u6570\u636e\u5904\u7406\u3002</p> \u6d41\u6279\u4e00\u4f53\u7684\u8ba1\u7b97\u5f15\u64ce <p>Flink SQL \u53ef\u4ee5\u901a\u8fc7\u540c\u4e00\u6761 SQL \u8bed\u53e5\u5c31\u540c\u65f6\u5b8c\u6210\u6d41\u5904\u7406\u548c\u6279\u5904\u7406\uff0c\u964d\u4f4e\u5f00\u53d1\u3001\u7ef4\u62a4\u7684\u96be\u5ea6\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#flink_2","title":"Flink \u7684\u5e94\u7528\u573a\u666f","text":"<p>Flink \u5b98\u65b9\u5217\u4e3e\u4e86 3 \u79cd Flink \u7684\u5e94\u7528\u573a\u666f\uff1a</p> <ul> <li>\u6570\u636e\u540c\u6b65\u578b\u5e94\u7528</li> <li>\u6570\u636e\u5206\u6790\u578b\u5e94\u7528</li> <li>\u4e8b\u4ef6\u9a71\u52a8\u578b\u5e94\u7528</li> </ul> <p>\u6570\u636e\u540c\u6b65\u578b\u5e94\u7528</p> <p></p> <p>\u6570\u636e\u5206\u6790\u578b\u5e94\u7528</p> <p></p> <p>\u4e8b\u4ef6\u9a71\u52a8\u578b\u5e94\u7528</p> <p></p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#lambda","title":"Lambda \u67b6\u6784","text":"<p>Lambda \u67b6\u6784\u5728\u4f20\u7edf\u5468\u671f\u6027\u6279\u5904\u7406\u67b6\u6784\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7531\u4f4e\u5ef6\u8fdf\u6d41\u5904\u7406\u5f15\u64ce\u6240\u9a71\u52a8\u7684\u300c\u63d0\u901f\u5c42\u300d\uff08speed layer\uff09\u3002\u5728\u8be5\u67b6\u6784\u4e2d\uff0c\u5230\u6765\u7684\u6570\u636e\u4f1a\u540c\u65f6\u53d1\u5f80\u6d41\u5904\u7406\u5f15\u64ce\u548c\u5199\u5165\u6279\u91cf\u5b58\u50a8\u3002\u6d41\u5904\u7406\u5f15\u64ce\u4f1a\u8fd1\u4e4e\u5b9e\u65f6\u5730\u8ba1\u7b97\u51fa\u8fd1\u4f3c\u7ed3\u679c\uff0c\u5e76\u5c06\u5176\u5199\u5165\u300c\u63d0\u901f\u8868\u300d\u4e2d\u3002\u6279\u5904\u7406\u5f15\u64ce\u5468\u671f\u6027\u5730\u5904\u7406\u6279\u91cf\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5c06\u7cbe\u786e\u7ed3\u679c\u5199\u5165\u6279\u5904\u7406\u8868\uff0c\u968f\u540e\u5c06\u300c\u63d0\u901f\u8868\u300d\u4e2d\u5bf9\u5e94\u7684\u975e\u7cbe\u786e\u7ed3\u679c\u5220\u9664\u3002\u4e3a\u4e86\u83b7\u53d6\u6700\u7ec8\u7ed3\u679c\uff0c\u5e94\u7528\u9700\u8981\u5c06\u300c\u63d0\u901f\u8868\u300d\u4e2d\u7684\u8fd1\u4f3c\u7ed3\u679c\u548c\u6279\u5904\u7406\u8868\u4e2d\u7684\u7cbe\u786e\u7ed3\u679c\u5408\u5e76\u3002</p> <p>\u7f3a\u70b9\uff1a</p> <ol> <li> <p>\u8be5\u67b6\u6784\u9700\u8981\u5728\u62e5\u6709\u4e0d\u540c API \u7684\u4e24\u5957\u72ec\u7acb\u5904\u7406\u7cfb\u7edf\u4e4b\u4e0a\u5b9e\u73b0\u4e24\u5957\u8bed\u4e49\u76f8\u540c\u7684\u5e94\u7528\u903b\u8f91</p> </li> <li> <p>\u6d41\u5904\u7406\u5f15\u64ce\u8ba1\u7b97\u7684\u7ed3\u679c\u53ea\u662f\u8fd1\u4f3c\u7684</p> </li> <li> <p>Lambda \u67b6\u6784\u8f83\u96be\u914d\u7f6e\u548c\u7ef4\u62a4</p> </li> </ol> <p></p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#flink_3","title":"Flink \u76f8\u5173\u6982\u5ff5","text":""},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_1","title":"\u72b6\u6001","text":"<p>\u5728\u62bd\u8c61\u5c42\u6b21\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u72b6\u6001\u89c6\u4e3a Flink \u4e2d\u7b97\u5b50\u7684\u8bb0\u5fc6\uff0c\u5b83\u8bb0\u4f4f\u6709\u5173\u8fc7\u53bb\u8f93\u5165\u7684\u4fe1\u606f\uff0c\u5e76\u53ef\u7528\u4e8e\u5f71\u54cd\u672a\u6765\u8f93\u5165\u7684\u5904\u7406\u3002\u72b6\u6001\u662f\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u6570\u636e\u4fe1\u606f\uff0c\u5728 Apache Flink \u7684\u5bb9\u9519\u3001\u6545\u969c\u6062\u590d\u548c\u68c0\u67e5\u70b9\u4e2d\u8d77\u7740\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_2","title":"\u7b97\u5b50","text":"<p>\u7b97\u5b50\u662f\u6570\u636e\u6d41\u7a0b\u5e8f\u7684\u57fa\u672c\u529f\u80fd\u5355\u5143\uff0c\u4ed6\u4eec\u4ece\u8f93\u5165\u83b7\u53d6\u6570\u636e\uff0c\u5bf9\u5176\u8fdb\u884c\u8ba1\u7b97\uff0c\u7136\u540e\u4ea7\u751f\u6570\u636e\u5e76\u53d1\u5f80\u8f93\u51fa\u4ee5\u4f9b\u540e\u7eed\u5904\u7406\u3002\u6ca1\u6709\u8f93\u5165\u7aef\u7684\u7b97\u5b50\u79f0\u4e3a\u6570\u636e\u6e90\uff0c\u6ca1\u6709\u8f93\u51fa\u7aef\u7684\u7b97\u5b50\u79f0\u4e3a\u6570\u636e\u6c47\u3002</p> <p></p> <p></p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_3","title":"\u5ef6\u8fdf\u548c\u541e\u5410","text":"<p>\u7531\u4e8e\u6d41\u5f0f\u5e94\u7528\u4f1a\u6301\u7eed\u6267\u884c\u4e14\u8f93\u5165\u53ef\u80fd\u662f\u65e0\u9650\u7684\uff0c\u56e0\u6b64\u6d41\u5f0f\u5e94\u7528\u9700\u8981\u5c3d\u53ef\u80fd\u5feb\u5730\u8ba1\u7b97\u7ed3\u679c\uff0c\u540c\u65f6\u8fd8\u8981\u5e94\u5bf9\u5f88\u9ad8\u7684\u4e8b\u4ef6\u63a5\u5165\u901f\u7387\u3002\u6211\u4eec\u7528\u5ef6\u8fdf\u548c\u541e\u5410\u8868\u793a\u8fd9\u4e24\u65b9\u9762\u7684\u6027\u80fd\u9700\u6c42\u3002</p> <ul> <li> <p>\u5ef6\u8fdf\u8868\u793a\u5904\u7406\u4e00\u4e2a\u4e8b\u4ef6\u6240\u9700\u8981\u7684\u65f6\u95f4</p> </li> <li> <p>\u541e\u5410\u8868\u793a\u7cfb\u7edf\u6bcf\u5355\u4f4d\u65f6\u95f4\u53ef\u4ee5\u5904\u7406\u591a\u5c11\u4e8b\u4ef6</p> </li> <li> <p>\u4e00\u65e6\u4e8b\u4ef6\u5230\u8fbe\u901f\u7387\u8fc7\u9ad8\uff0c\u7cfb\u7edf\u5c31\u4f1a\u88ab\u8feb\u5f00\u59cb\u7f13\u51b2\u4e8b\u4ef6\u3002\u5982\u679c\u7cfb\u7edf\u6301\u7eed\u4ee5\u529b\u4e0d\u80fd\u53ca\u7684\u9ad8\u901f\u7387\u63a5\u6536\u6570\u636e\uff0c\u90a3\u4e48\u7f13\u51b2\u533a\u53ef\u80fd\u4f1a\u7528\u5c3d\uff0c\u7ee7\u800c\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u4e22\u5931\u3002\u8fd9\u79cd\u60c5\u5f62\u901a\u5e38\u88ab\u79f0\u4e3a\u300c\u80cc\u538b\u300d\uff08backpressure\uff09\u3002</p> </li> </ul> <p>\u901a\u8fc7\u5e76\u884c\u5904\u7406\u591a\u6761\u6570\u636e\u6d41\uff0c\u53ef\u4ee5\u5728\u5904\u7406\u66f4\u591a\u4e8b\u4ef6\u7684\u540c\u65f6\u964d\u4f4e\u5ef6\u8fdf\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_4","title":"\u6570\u636e\u6d41\u56fe","text":"<p>\u6240\u6709\u7684 Flink \u7a0b\u5e8f\u90fd\u53ef\u4ee5\u5f52\u7eb3\u4e3a\u7531\u4e09\u90e8\u5206\u6784\u6210\uff1aSource\u3001Transformation \u548c Sink\u3002</p> <p></p> <p>\u6570\u636e\u6d41\u56fe\u4e2d\u6bcf\u4e00\u6761\u6570\u636e\u6d41\uff08dataflow\uff09\u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a source \u7b97\u5b50\u5f00\u59cb\uff0c\u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a sink \u7b97\u5b50\u7ed3\u675f\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_5","title":"\u5e76\u884c\u5ea6","text":"<p>\u5728 Flink \u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u7b97\u5b50\uff08operator\uff09\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u4efb\u52a1\uff08operator subtask\uff09\uff0c\u8fd9\u4e9b\u5b50\u4efb\u52a1\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u3001\u4e0d\u540c\u7684\u7269\u7406\u673a\u6216\u4e0d\u540c\u7684\u5bb9\u5668\u4e2d\u5b8c\u5168\u72ec\u7acb\u5730\u6267\u884c\u3002</p> <p></p> <p>\u4e00\u4e2a\u7279\u5b9a\u7b97\u5b50\u7684\u5b50\u4efb\u52a1\uff08subtask\uff09\u7684\u4e2a\u6570\u88ab\u79f0\u4e4b\u4e3a\u5176\u5e76\u884c\u5ea6\uff08parallelism\uff09\u3002\u8fd9\u6837\uff0c\u5305\u542b\u5e76\u884c\u5b50\u4efb\u52a1\u7684\u6570\u636e\u6d41\uff0c\u5c31\u662f\u5e76\u884c\u6570\u636e\u6d41\uff0c\u5b83\u9700\u8981\u591a\u4e2a\u5206\u533a\uff08stream partition\uff09\u6765\u5206\u914d\u5e76\u884c\u4efb\u52a1\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u6d41\u7a0b\u5e8f\u7684\u5e76\u884c\u5ea6\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u662f\u5176\u6240\u6709\u7b97\u5b50\u4e2d\u6700\u5927\u7684\u5e76\u884c\u5ea6\u3002\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u4e0d\u540c\u7684\u7b97\u5b50\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u5e76\u884c\u5ea6\u3002</p> <p>\u5e76\u884c\u5ea6\u8bbe\u7f6e\u7684\u65b9\u6cd5\uff0c\u5b83\u4eec\u7684\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a</p> <ol> <li>\u5bf9\u4e8e\u4e00\u4e2a\u7b97\u5b50\uff0c\u9996\u5148\u770b\u5728\u4ee3\u7801\u4e2d\u662f\u5426\u5355\u72ec\u6307\u5b9a\u4e86\u5b83\u7684\u5e76\u884c\u5ea6\uff0c\u8fd9\u4e2a\u7279\u5b9a\u7684\u8bbe\u7f6e\u4f18\u5148\u7ea7\u6700\u9ad8\uff0c\u4f1a\u8986\u76d6\u540e\u9762\u6240\u6709\u7684\u8bbe\u7f6e\u3002</li> <li>\u5982\u679c\u6ca1\u6709\u5355\u72ec\u8bbe\u7f6e\uff0c\u90a3\u4e48\u91c7\u7528\u5f53\u524d\u4ee3\u7801\u4e2d\u6267\u884c\u73af\u5883\u5168\u5c40\u8bbe\u7f6e\u7684\u5e76\u884c\u5ea6\u3002</li> <li>\u5982\u679c\u4ee3\u7801\u4e2d\u5b8c\u5168\u6ca1\u6709\u8bbe\u7f6e\uff0c\u90a3\u4e48\u91c7\u7528\u63d0\u4ea4\u65f6-p \u53c2\u6570\u6307\u5b9a\u7684\u5e76\u884c\u5ea6\u3002</li> <li>\u5982\u679c\u63d0\u4ea4\u65f6\u4e5f\u672a\u6307\u5b9a-p \u53c2\u6570\uff0c\u90a3\u4e48\u91c7\u7528\u96c6\u7fa4\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u9ed8\u8ba4\u5e76\u884c\u5ea6\u3002</li> </ol>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_6","title":"\u7b97\u5b50\u94fe","text":"<p>\u5728 Flink \u4e2d\uff0c\u5e76\u884c\u5ea6\u76f8\u540c\u7684\u4e00\u5bf9\u4e00\uff08one to one\uff09\u7b97\u5b50\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u94fe\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u201c\u5927\u201d\u7684\u4efb\u52a1\uff08task\uff09\u3002</p> <p></p> <p>Flink \u4e3a\u4ec0\u4e48\u8981\u6709\u7b97\u5b50\u94fe\u8fd9\u6837\u4e00\u4e2a\u8bbe\u8ba1\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u5c06\u7b97\u5b50\u94fe\u63a5\u6210 task \u662f\u975e\u5e38\u6709\u6548\u7684\u4f18\u5316\uff1a\u53ef\u4ee5\u51cf\u5c11\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\u548c\u57fa\u4e8e\u7f13\u5b58\u533a\u7684\u6570\u636e\u4ea4\u6362\uff0c\u5728\u51cf\u5c11\u65f6\u5ef6\u7684\u540c\u65f6\u63d0\u5347\u541e\u5410\u91cf\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_7","title":"\u4efb\u52a1\u548c\u4efb\u52a1\u69fd","text":"<p>\u6bcf\u4e2a TaskManager \u662f\u4e00\u4e2a JVM \u7684\u8fdb\u7a0b, \u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u4efb\u52a1\u3002\u4e3a\u4e86\u63a7\u5236\u4e00\u4e2a worker \u80fd\u63a5\u6536\u591a\u5c11\u4e2a task\uff0cworker \u901a\u8fc7 task slot \u6765\u8fdb\u884c\u63a7\u5236\uff08\u4e00\u4e2a worker \u81f3\u5c11\u6709\u4e00\u4e2a task slot\uff09\u3002</p> <p></p> <p>\u6bcf\u4e2a\u4efb\u52a1\u69fd\uff08task slot\uff09\u5176\u5b9e\u8868\u793a\u4e86 TaskManager \u62e5\u6709\u8ba1\u7b97\u8d44\u6e90\u7684\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5b50\u96c6\u3002\u8fd9\u4e9b\u8d44\u6e90\u5c31\u662f\u7528\u6765\u72ec\u7acb\u6267\u884c\u4e00\u4e2a\u5b50\u4efb\u52a1\u7684\u3002</p> <p>\u6211\u4eec\u4e4b\u524d\u7684 WordCount \u7a0b\u5e8f\u8bbe\u7f6e\u5e76\u884c\u5ea6\u4e3a 2 \u63d0\u4ea4\uff0c\u4e00\u5171\u6709 5 \u4e2a\u5e76\u884c\u5b50\u4efb\u52a1\uff0c\u53ef\u96c6\u7fa4\u5373\u4f7f\u53ea\u6709 2 \u4e2a task slot \u4e5f\u662f\u53ef\u4ee5\u6210\u529f\u63d0\u4ea4\u5e76\u8fd0\u884c\u7684\u3002\u8fd9\u53c8\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f</p> <p>\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cFlink \u662f\u5141\u8bb8\u5b50\u4efb\u52a1\u5171\u4eab slot \u7684\u3002\u53ea\u8981\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4f5c\u4e1a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e0d\u540c\u4efb\u52a1\u8282\u70b9\u7684\u5e76\u884c\u5b50\u4efb\u52a1\uff0c\u5c31\u53ef\u4ee5\u653e\u5230\u540c\u4e00\u4e2a slot \u4e0a\u6267\u884c\u3002</p> <p>\u5141\u8bb8 slot \u5171\u4eab\u6709\u4e24\u4e2a\u4e3b\u8981\u597d\u5904\uff1a</p> <ul> <li>\u53ea\u9700\u8ba1\u7b97 Job \u4e2d\u6700\u9ad8\u5e76\u884c\u5ea6\uff08parallelism\uff09\u7684 task slot\uff0c\u53ea\u8981\u8fd9\u4e2a\u6ee1\u8db3\uff0c\u5176\u4ed6\u7684 job \u4e5f\u90fd\u80fd\u6ee1\u8db3\u3002</li> <li>\u8d44\u6e90\u5206\u914d\u66f4\u52a0\u516c\u5e73\uff0c\u5982\u679c\u6709\u6bd4\u8f83\u7a7a\u95f2\u7684 slot \u53ef\u4ee5\u5c06\u66f4\u591a\u7684\u4efb\u52a1\u5206\u914d\u7ed9\u5b83\u3002\u56fe\u4e2d\u82e5\u6ca1\u6709\u4efb\u52a1\u69fd\u5171\u4eab\uff0c\u8d1f\u8f7d\u4e0d\u9ad8\u7684 Source/Map \u7b49 subtask \u5c06\u4f1a\u5360\u636e\u8bb8\u591a\u8d44\u6e90\uff0c\u800c\u8d1f\u8f7d\u8f83\u9ad8\u7684\u7a97\u53e3 subtask \u5219\u4f1a\u7f3a\u4e4f\u8d44\u6e90\u3002</li> <li>\u6709\u4e86\u4efb\u52a1\u69fd\u5171\u4eab\uff0c\u53ef\u4ee5\u5c06\u57fa\u672c\u5e76\u884c\u5ea6\uff08base parallelism\uff09\u4ece 2 \u63d0\u5347\u5230 6\u3002\u63d0\u9ad8\u4e86\u5206\u69fd\u8d44\u6e90\u7684\u5229\u7528\u7387\u3002\u540c\u65f6\u5b83\u8fd8\u53ef\u4ee5\u4fdd\u969c TaskManager \u7ed9 subtask \u7684\u5206\u914d\u7684 slot \u65b9\u6848\u66f4\u52a0\u516c\u5e73\u3002</li> </ul> <p></p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#flink_4","title":"Flink \u7ec4\u4ef6","text":"<p>Flink \u4e2d\u7684\u51e0\u4e2a\u5173\u952e\u7ec4\u4ef6\uff1a</p> <ul> <li>Client</li> <li>JobManager</li> <li>TaskManager</li> </ul> <p>\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u5b9e\u9645\u4e0a\u662f\u7531\u5ba2\u6237\u7aef\u83b7\u53d6\u5e76\u505a\u8f6c\u6362\uff0c\u4e4b\u540e\u63d0\u4ea4\u7ed9 JobManger \u7684\u3002JobManager \u8d1f\u8d23\u5bf9\u4f5c\u4e1a\u8fdb\u884c\u4e2d\u592e\u8c03\u5ea6\u7ba1\u7406\uff0c\u800c\u5b83\u83b7\u53d6\u5230\u8981\u6267\u884c\u7684\u4f5c\u4e1a\u540e\uff0c\u4f1a\u8fdb\u4e00\u6b65\u5904\u7406\u8f6c\u6362\uff0c\u7136\u540e\u5206\u53d1\u4efb\u52a1\u7ed9\u4f17\u591a\u7684 TaskManager\uff0c\u8d1f\u8d23\u5177\u4f53\u7684\u4efb\u52a1\u6267\u884c\u3002</p> <p></p> <p></p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#flink_5","title":"Flink \u7684\u8f6f\u4ef6\u67b6\u6784","text":"<p>Flink \u5206\u522b\u63d0\u4f9b\u4e86\u9762\u5411\u6d41\u5f0f\u5904\u7406\u7684\u63a5\u53e3\uff08DataStream API\uff09\u548c\u9762\u5411\u6279\u5904\u7406\u7684\u63a5\u53e3\uff08DataSet API\uff09\u3002\u56e0\u6b64\uff0cFlink \u65e2\u53ef\u4ee5\u5b8c\u6210\u6d41\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u5b8c\u6210\u6279\u5904\u7406\u3002Flink \u652f\u6301\u7684\u62d3\u5c55\u5e93\u6d89\u53ca\u673a\u5668\u5b66\u4e60\uff08FlinkML\uff09\u3001\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u3001\u4ee5\u53ca\u56fe\u8ba1\u7b97\uff08Gelly\uff09\uff0c\u8fd8\u6709\u5206\u522b\u9488\u5bf9\u6d41\u5904\u7406\u548c\u6279\u5904\u7406\u7684 Table API\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#flink_6","title":"Flink \u8fd0\u884c\u65f6\u67b6\u6784","text":""},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#client","title":"Client","text":"<p>\u6838\u5fc3\u4f5c\u7528\uff1a\u8ba9\u7528\u6237\u901a\u8fc7 Client \u63d0\u4ea4 Flink \u4f5c\u4e1a\u53bb\u672c\u5730\u73af\u5883\u6216\u96c6\u7fa4\u73af\u5883\u8fd0\u884c\u3002</p> <p>Client \u4f1a\u5c06\u4ee3\u7801\u8f6c\u6362\u6210\u201c\u6570\u636e\u6d41\u56fe\u201d\uff08Dataflow Graph\uff09\uff0c\u5e76\u6700\u7ec8\u751f\u6210\u4f5c\u4e1a\u56fe\uff08JobGraph\uff09\uff0c\u4e00\u5e76\u53d1\u9001\u7ed9 JobManager\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#jobmanager","title":"JobManager","text":"<p>JobManger \u5305\u542b 3 \u4e2a\u4e0d\u540c\u7684\u7ec4\u4ef6\uff1a</p> <ul> <li>Dispatcher</li> <li>JobMaster</li> <li>ResourceManager</li> </ul> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a JobManager \u4e2d\u5305\u542b\u4e00\u4e2a Dispatcher\u3001\u4e00\u4e2a ResourceManager \u548c\u591a\u4e2a JobMaster\u3002</p> Dispatcher <p>Dispatcher \u8d1f\u8d23\u63a5\u6536 Client \u63d0\u4ea4\u7684 Flink \u4f5c\u4e1a\uff08\u5305\u542b JAR \u5305\u3001JobGraph \u7b49\uff09\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u63d0\u4ea4\u7684 Flink \u4f5c\u4e1a\u542f\u52a8\u4e00\u4e2a JobMaster\u3002\u5728\u4e0d\u540c\u7684\u90e8\u7f72\u6a21\u5f0f\u548c\u8d44\u6e90\u63d0\u4f9b\u6846\u67b6\u4e0b\u63d0\u4ea4\u8fd0\u884c Flink \u4f5c\u4e1a\u65f6\uff0cDispatcher \u7ec4\u4ef6\u4e0d\u662f\u5fc5\u9700\u7684\u3002</p> JobMaster <p>JobMaster \u5728 Flink \u4f5c\u4e1a\u63d0\u4ea4\u9636\u6bb5\u3001\u90e8\u7f72\u9636\u6bb5\u4ee5\u53ca\u8fd0\u884c\u9636\u6bb5\u90fd\u4f1a\u53c2\u4e0e\u3002</p> <p>\u5728\u63d0\u4ea4\u9636\u6bb5\uff0cJobMaster \u63a5\u6536\u5f85\u6267\u884c\u7684 Flink \u4f5c\u4e1a\u7684 JobGraph\u3001JAR \u5305\uff0c\u7136\u540e\u628a JobGraph \u8f6c\u6362\u6210\u4e00\u4e2a\u7269\u7406\u5c42\u9762\u7684 ExecutionGraph\u3002ExecutionGraph \u5305\u542b\u8be5 Flink \u4f5c\u4e1a\u6240\u6709\u9700\u8981\u6267\u884c\u7684 SubTask \u7684\u4fe1\u606f\u3002</p> <p>\u5728\u90e8\u7f72\u9636\u6bb5\uff0cJobMaster \u5411 ResourceManager \u8bf7\u6c42\u6267\u884c Flink \u4f5c\u4e1a\u6240\u9700\u8981\u7684 Task Slot \u8d44\u6e90\u3002\u5f53\u83b7\u53d6\u8db3\u591f\u7684 Task Slot \u8d44\u6e90\u540e\uff0cJobMaster \u4f1a\u5c06 ExecutionGraph \u4e2d\u7684 SubTask \u5206\u53d1\u5230 TaskManager \u4e0a\u7684 Task Slot \u4e2d\u8fd0\u884c\u3002</p> <p>\u5728\u8fd0\u884c\u9636\u6bb5\uff0cJobMaster \u8d1f\u8d23\u6240\u6709\u9700\u8981\u534f\u8c03\u7684\u5de5\u4f5c\uff0c\u6bd4\u5982\u534f\u8c03 Flink \u4f5c\u4e1a\u4e2d\u7684\u6240\u6709 SubTask \u53bb\u6267\u884c Checkpoint\uff0c\u76d1\u63a7\u6bcf\u4e2a SubTask \u7684\u5fc3\u8df3\uff0c\u83b7\u53d6 SubTask \u7684\u76d1\u63a7\u6307\u6807\u7b49\u4fe1\u606f\uff0c\u5e76\u4e14\u4f1a\u5bf9\u4f5c\u4e1a\u6267\u884c\u5f02\u5e38\u3001\u5931\u8d25\u505a\u51fa\u54cd\u5e94\uff0c\u8d1f\u8d23\u4f5c\u4e1a\u7684\u6545\u969c\u6062\u590d\u3001\u5f02\u5e38\u5bb9\u9519\u7b49\u5de5\u4f5c\u3002</p> ResourceManager <p>ResourceManager \u8d1f\u8d23 Flink \u96c6\u7fa4\u4e2d\u7684 Task Slot \u7533\u8bf7\u3001\u7ba1\u7406\u3001\u5206\u914d\u3001\u56de\u6536\uff0cTask Slot \u662f Flink \u4e2d\u8d44\u6e90\u8c03\u5ea6\u548c\u4f5c\u4e1a\u8fd0\u884c\u7684\u6700\u5c0f\u7c92\u5ea6\uff0c\u6bcf\u4e00\u4e2a Task Slot \u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u7684\u7269\u7406\u5c42\u9762\u7684 CPU \u548c\u5185\u5b58\u8d44\u6e90\u3002Task Slot \u662f\u7531 TaskManager \u63d0\u4f9b\u5e76\u6ce8\u518c\u5230 ResourceManager \u4e0a\u7684\uff0cFlink \u4f5c\u4e1a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b50\u4efb\u52a1\u90fd\u4f1a\u8fd0\u884c\u5728\u4e00\u4e2a Task Slot \u4e2d\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#taskmanager","title":"TaskManager","text":"<p>TaskManager \u662f Flink \u4e2d\u6267\u884c\u6570\u636e\u5904\u7406\u4f5c\u4e1a\u7684\u7ec4\u4ef6\uff08Worker\uff09\uff0c\u6bcf\u4e00\u4e2a TaskManager \u4e2d\u5305\u542b\u4e00\u5b9a\u6570\u91cf\u7684 Task Slot\u3002\u5f53 TaskManager \u542f\u52a8\u4e4b\u540e\u4f1a\u5c06 Task Slot \u8d44\u6e90\u6ce8\u518c\u5230 ResourceManager \u4e2d\uff0c\u968f\u540e TaskManager \u4f1a\u4ece JobMaster \u4e2d\u63a5\u6536\u9700\u8981\u90e8\u7f72\u7684 SubTask\uff0c\u7136\u540e\u5728 Task Slot \u4e2d\u542f\u52a8 SubTask\uff0c\u968f\u540e Flink \u4f5c\u4e1a\u4e2d\u7684\u6bcf\u4e00\u4e2a SubTask \u5f00\u59cb\u8fd0\u884c\uff0c\u5373\u63a5\u6536\u6570\u636e\u3001\u5904\u7406\u6570\u636e\u3001\u4ea7\u51fa\u6570\u636e\u3002</p> <p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a Flink \u4f5c\u4e1a\u4f1a\u6709\u591a\u4e2a SubTask\uff0c\u8fd9\u4e9b SubTask \u4f1a\u90e8\u7f72\u5230\u591a\u4e2a TaskManager \u4e2d\u8fd0\u884c\uff0c\u6bcf\u4e00\u4e2a TaskManager \u90fd\u4f1a\u5305\u542b\u8fd9\u4e2a Flink \u4f5c\u4e1a\u7684\u4e00\u90e8\u5206 SubTask\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#flink_7","title":"Flink \u4f5c\u4e1a\u63d0\u4ea4\u6d41\u7a0b","text":""},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_8","title":"\u9ad8\u5c42\u7ea7\u62bd\u8c61\u89c6\u89d2","text":"<ol> <li>\u63d0\u4ea4\u7a0b\u5e8f\u4ee3\u7801\uff1a\u7f16\u5199 Flink \u4f5c\u4e1a\u7684\u4ee3\u7801\u540e\uff0c\u7528\u6237\u5c06 Flink \u4f5c\u4e1a\u63d0\u4ea4\u5230 Client \u8fd0\u884c</li> <li>\u63d0\u4ea4\u7a0b\u5e8f\uff1aClient \u4f1a\u5c06\u4ee3\u7801\u4e2d\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u5904\u7406\u903b\u8f91\u8f6c\u6362\u4e3a JobGraph\uff08\u4f5c\u4e1a\u56fe\uff09\uff0cJobGraph \u662f Flink \u96c6\u7fa4\u53ef\u4ee5\u7406\u89e3\u7684\u903b\u8f91\u6570\u636e\u6d41\u56fe\u3002\u63a5\u4e0b\u6765\uff0cClient \u4f1a\u5c06\u7a0b\u5e8f\u4ee3\u7801\u3001JobGraph \u7b49\u4fe1\u606f\u63d0\u4ea4\u5230 Flink \u96c6\u7fa4\u7684 Dispatcher\uff08\u4f5c\u4e1a\u5206\u53d1\u5668\uff09\u4e2d</li> <li>\u5206\u53d1\u7a0b\u5e8f\uff1aDispatcher \u4f1a\u542f\u52a8\u4e00\u4e2a JobMaster \u6765\u89e3\u6790 JobGraph</li> <li>\u89e3\u6790\u7a0b\u5e8f\uff1aJobMaster \u5c06 JobGraph \u89e3\u6790\u4e3a ExecutionGraph\uff0cExecutionGraph \u662f\u7269\u7406\u5c42\u9762\u5177\u6709\u5e76\u884c\u5ea6\u7684\u6267\u884c\u56fe\u3002\u6709\u4e86 ExecutionGraph\uff0cJobMaster \u5c31\u77e5\u9053\u6267\u884c\u8fd9\u4e2a Flink \u7a0b\u5e8f\u9700\u8981\u6d88\u8017\u591a\u5c11\u8d44\u6e90\u4e86</li> <li>\u7533\u8bf7\u4f5c\u4e1a\u8d44\u6e90\uff1aJobMaster \u968f\u540e\u4f1a\u5411 ResourceManager \u53bb\u7533\u8bf7\u6267\u884c\u8fd9\u4e2a Flink \u4f5c\u4e1a\u6240\u9700\u8981\u7684 TaskManager \u8d44\u6e90\uff0c ResourceManager \u968f\u5373\u5411\u8d44\u6e90\u63d0\u4f9b\u6846\u67b6\uff08\u5982 YARN\uff09\u53bb\u7533\u8bf7\u5bf9\u5e94\u7684\u8d44\u6e90\u8282\u70b9</li> <li>\u542f\u52a8 TaskManager\uff1aResourceManager \u5728\u7533\u8bf7\u5230\u8d44\u6e90\u4e4b\u540e\uff0c\u4f1a\u5728\u8fd9\u4e9b\u8d44\u6e90\u8282\u70b9\u4e0a\u542f\u52a8 TaskManager</li> <li>\u6ce8\u518c Task Slot\uff1aTaskManager \u542f\u52a8\u540e\u4f1a\u5411 ResourceManager \u6ce8\u518c\u81ea\u5df1\u53ef\u7528\u7684 Task Slot\u3002Task Slot \u662f Flink \u4e2d\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u7c92\u5ea6\uff0cFlink \u4f5c\u4e1a\u7684\u6bcf\u4e2a SubTask \u6700\u7ec8\u4f1a\u8fd0\u884c\u5728\u4e00\u4e2a\u4e2a Task Slot \u4e2d</li> <li>\u901a\u77e5\u63d0\u4f9b Task Slot\uff1aResourceManager \u901a\u77e5 TaskManager \u6765\u4e3a\u5f53\u524d\u7684 Flink \u4f5c\u4e1a\u63d0\u4f9b\u53ef\u7528\u7684 Task Slot</li> <li>\u63d0\u4f9b Task Slot\uff1aTaskManager \u4f1a\u5c06\u53ef\u4ee5\u7528\u4e8e\u8fd0\u884c\u5f53\u524d\u8fd9\u4e2a Flink \u4f5c\u4e1a\u7684 Task Slot \u544a\u8bc9 JobMaster</li> <li>\u63d0\u4ea4\u6267\u884c\u4f5c\u4e1a\uff1aJobMaster \u5c06 Flink \u4f5c\u4e1a\u5206\u53d1\u5230 TaskManager \u4e0a\u7684 Task Slot \u6267\u884c</li> <li>\u4f5c\u4e1a\u8fd0\u884c\uff1aFlink \u7684\u6bcf\u4e2a SubTask \u90fd\u5728 TaskManager \u4e0a\u521d\u59cb\u5316\u5e76\u8fd0\u884c\uff0c\u8fdb\u884c\u6570\u636e\u5904\u7406\u5de5\u4f5c</li> </ol>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#standalone","title":"StandAlone \u6a21\u5f0f","text":"<p>\u5728\u72ec\u7acb\u6a21\u5f0f\uff08Standalone\uff09\u4e0b\uff0c\u53ea\u6709\u4f1a\u8bdd\u6a21\u5f0f\u548c\u5e94\u7528\u6a21\u5f0f\u4e24\u79cd\u90e8\u7f72\u65b9\u5f0f\u3002\u4e24\u8005\u6574\u4f53\u6765\u770b\u6d41\u7a0b\u662f\u975e\u5e38\u76f8\u4f3c\u7684\uff1aTaskManager \u90fd\u9700\u8981\u624b\u52a8\u542f\u52a8\uff0c\u6240\u4ee5\u5f53 ResourceManager \u6536\u5230 JobMaster \u7684\u8bf7\u6c42\u65f6\uff0c\u4f1a\u76f4\u63a5\u8981\u6c42 TaskManager \u63d0\u4f9b\u8d44\u6e90\u3002\u800c JobMaster \u7684\u542f\u52a8\u65f6\u95f4\u70b9\uff0c\u4f1a\u8bdd\u6a21\u5f0f\u662f\u9884\u5148\u542f\u52a8\uff0c\u5e94\u7528\u6a21\u5f0f\u5219\u662f\u5728\u4f5c\u4e1a\u63d0\u4ea4\u65f6\u542f\u52a8\u3002</p> <p></p> <p>\u6211\u4eec\u53d1\u73b0\u9664\u53bb\u7b2c 4 \u6b65\u4e0d\u4f1a\u542f\u52a8 TaskManager\uff0c\u800c\u4e14\u76f4\u63a5\u5411\u5df2\u6709\u7684 TaskManager \u8981\u6c42\u8d44\u6e90\uff0c\u5176\u4ed6\u6b65\u9aa4\u4e0e\u4e0a\u4e00\u8282\u6240\u8bb2\u62bd\u8c61\u6d41\u7a0b\u5b8c\u5168\u4e00\u81f4\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#yarn","title":"Yarn \u96c6\u7fa4\u6a21\u5f0f","text":""},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#flink_8","title":"Flink \u90e8\u7f72\u6a21\u5f0f","text":"<p>Flink \u4e3a\u5404\u79cd\u573a\u666f\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u90e8\u7f72\u6a21\u5f0f\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li>\u4f1a\u8bdd\u6a21\u5f0f\uff08Session Mode\uff09</li> <li>\u5355\u4f5c\u4e1a\u6a21\u5f0f\uff08Per-Job Mode\uff09<code>@deprecated</code></li> <li>\u5e94\u7528\u6a21\u5f0f\uff08Application Mode\uff09</li> </ul> <p></p> <p>\u5b83\u4eec\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\uff1a</p> <ul> <li>\u96c6\u7fa4\u7684\u751f\u547d\u5468\u671f\u4ee5\u53ca\u8d44\u6e90\u7684\u5206\u914d\u65b9\u5f0f</li> <li>\u5e94\u7528\u7684 <code>main()</code> \u5230\u5e95\u5728\u54ea\u91cc\u6267\u884c\uff1aClient \u8fd8\u662f JobManager</li> </ul>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_9","title":"\u4f1a\u8bdd\u6a21\u5f0f","text":"<p>\u4f1a\u8bdd\u6a21\u5f0f\u5176\u5b9e\u6700\u7b26\u5408\u5e38\u89c4\u601d\u7ef4\u3002\u6211\u4eec\u9700\u8981\u5148\u542f\u52a8\u4e00\u4e2a\u96c6\u7fa4\uff0c\u4fdd\u6301\u4e00\u4e2a\u4f1a\u8bdd\uff0c\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u4e2d\u901a\u8fc7\u5ba2\u6237\u7aef\u63d0\u4ea4\u4f5c\u4e1a\u3002\u96c6\u7fa4\u542f\u52a8\u65f6\u6240\u6709\u8d44\u6e90\u5c31\u90fd\u5df2\u7ecf\u786e\u5b9a\uff0c\u6240\u4ee5\u6240\u6709\u63d0\u4ea4\u7684\u4f5c\u4e1a\u4f1a\u7ade\u4e89\u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\u3002</p> <p></p> <p>\u96c6\u7fa4\u7684\u751f\u547d\u5468\u671f\u662f\u8d85\u8d8a\u4e8e\u4f5c\u4e1a\u4e4b\u4e0a\u7684\uff0c\u4f5c\u4e1a\u7ed3\u675f\u4e86\u5c31\u91ca\u653e\u8d44\u6e90\uff0c\u96c6\u7fa4\u4f9d\u7136\u6b63\u5e38\u8fd0\u884c\u3002\u5f53\u7136\u7f3a\u70b9\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff1a\u56e0\u4e3a\u8d44\u6e90\u662f\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u8d44\u6e90\u4e0d\u591f\u4e86\uff0c\u63d0\u4ea4\u65b0\u7684\u4f5c\u4e1a\u5c31\u4f1a\u5931\u8d25\u3002\u53e6\u5916\uff0c\u540c\u4e00\u4e2a TaskManager \u4e0a\u53ef\u80fd\u8fd0\u884c\u4e86\u5f88\u591a\u4f5c\u4e1a\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u53d1\u751f\u6545\u969c\u5bfc\u81f4 TaskManager \u5b95\u673a\uff0c\u90a3\u4e48\u6240\u6709\u4f5c\u4e1a\u90fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</p> <p>\u4f1a\u8bdd\u6a21\u5f0f\u6bd4\u8f83\u9002\u5408\u4e8e\u5355\u4e2a\u89c4\u6a21\u5c0f\u3001\u6267\u884c\u65f6\u95f4\u77ed\u7684\u5927\u91cf\u4f5c\u4e1a\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_10","title":"\u5355\u4f5c\u4e1a\u6a21\u5f0f","text":"<p>\u4f1a\u8bdd\u6a21\u5f0f\u56e0\u4e3a\u8d44\u6e90\u5171\u4eab\u4f1a\u5bfc\u81f4\u5f88\u591a\u95ee\u9898\uff0c\u6240\u4ee5\u4e3a\u4e86\u66f4\u597d\u5730\u9694\u79bb\u8d44\u6e90\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e3a\u6bcf\u4e2a\u63d0\u4ea4\u7684\u4f5c\u4e1a\u542f\u52a8\u4e00\u4e2a\u96c6\u7fa4\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u5355\u4f5c\u4e1a\uff08Per-Job\uff09\u6a21\u5f0f\u3002</p> <p>\u5355\u4f5c\u4e1a\u6a21\u5f0f\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u4e25\u683c\u7684\u4e00\u5bf9\u4e00\uff0c\u96c6\u7fa4\u53ea\u4e3a\u8fd9\u4e2a\u4f5c\u4e1a\u800c\u751f\u3002\u540c\u6837\u7531\u5ba2\u6237\u7aef\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u542f\u52a8\u96c6\u7fa4\uff0c\u4f5c\u4e1a\u88ab\u63d0\u4ea4\u7ed9 JobManager\uff0c\u8fdb\u800c\u5206\u53d1\u7ed9 TaskManager \u6267\u884c\u3002\u4f5c\u4e1a\u5b8c\u6210\u540e\uff0c\u96c6\u7fa4\u5c31\u4f1a\u5173\u95ed\uff0c\u6240\u6709\u8d44\u6e90\u4e5f\u4f1a\u91ca\u653e\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u4f5c\u4e1a\u90fd\u6709\u5b83\u81ea\u5df1\u7684 JobManager \u7ba1\u7406\uff0c\u5360\u7528\u72ec\u4eab\u7684\u8d44\u6e90\uff0c\u5373\u4f7f\u53d1\u751f\u6545\u969c\uff0c\u5b83\u7684 TaskManager \u5b95\u673a\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u4f5c\u4e1a\u3002</p> <p>\u8fd9\u4e9b\u7279\u6027\u4f7f\u5f97\u5355\u4f5c\u4e1a\u6a21\u5f0f\u5728\u751f\u4ea7\u73af\u5883\u8fd0\u884c\u66f4\u52a0\u7a33\u5b9a\uff0c\u6240\u4ee5\u662f\u5b9e\u9645\u5e94\u7528\u7684\u9996\u9009\u6a21\u5f0f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cFlink \u672c\u8eab\u65e0\u6cd5\u76f4\u63a5\u8fd9\u6837\u8fd0\u884c\uff0c\u6240\u4ee5\u5355\u4f5c\u4e1a\u6a21\u5f0f\u4e00\u822c\u9700\u8981\u501f\u52a9\u4e00\u4e9b\u8d44\u6e90\u7ba1\u7406\u6846\u67b6\u6765\u542f\u52a8\u96c6\u7fa4\uff0c\u6bd4\u5982 YARN\u3001Kubernetes\u3002</p>"},{"location":"Flink/1.Flink%20%E5%9F%BA%E7%A1%80/#_11","title":"\u5e94\u7528\u6a21\u5f0f","text":"<p>\u76f4\u63a5\u628a\u5e94\u7528\u63d0\u4ea4\u5230 JobManger \u4e0a\u8fd0\u884c\u3002\u800c\u8fd9\u4e5f\u5c31\u4ee3\u8868\u7740\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e00\u4e2a\u63d0\u4ea4\u7684\u5e94\u7528\u5355\u72ec\u542f\u52a8\u4e00\u4e2a JobManager\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u96c6\u7fa4\uff0c\u4f46\u8fd9\u6b21\u5e94\u7528\u7a0b\u5e8f\u7684 main() \u65b9\u6cd5\u7531 JobManager \u6267\u884c\u3002\u4e3a\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a\u96c6\u7fa4\u53ef\u4ee5\u88ab\u89c6\u4e3a\u521b\u5efa\u4e00\u4e2a\u4ec5\u5728\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u4f5c\u4e1a\u4e4b\u95f4\u5171\u4eab\u7684\u4f1a\u8bdd\u96c6\u7fa4\uff0c\u5e76\u5728\u5e94\u7528\u7a0b\u5e8f\u5b8c\u6210\u65f6\u5173\u95ed\u3002\u901a\u8fc7\u8fd9\u79cd\u67b6\u6784\uff0c\u5e94\u7528\u7a0b\u5e8f\u6a21\u5f0f\u63d0\u4f9b\u4e0e\u6309\u4f5c\u4e1a\u6a21\u5f0f\u76f8\u540c\u7684\u8d44\u6e90\u9694\u79bb\u548c\u8d1f\u8f7d\u5747\u8861\u4fdd\u8bc1\uff0c\u4f46\u7c92\u5ea6\u662f\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>\u5e94\u7528\u7a0b\u5e8f\u6a21\u5f0f\u57fa\u4e8e\u4e00\u4e2a\u5047\u8bbe\uff0c\u5373\u7528\u6237\u7684 jar \u6587\u4ef6\u5df2\u7ecf\u5728\u6240\u6709\u9700\u8981\u8bbf\u95ee\u5b83\u7684 Flink \u7ec4\u4ef6\uff08JobManager\u3001TaskManager\uff09\u7684\u7c7b\u8def\u5f84\uff08usrlib \u6587\u4ef6\u5939\uff09\u4e2d\u53ef\u7528\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0e Flink \u53d1\u884c\u7248\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u8fd9\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u6a21\u5f0f\u80fd\u591f\u52a0\u5feb\u90e8\u7f72/\u6062\u590d\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u50cf\u5176\u4ed6\u90e8\u7f72\u6a21\u5f0f\u90a3\u6837\u901a\u8fc7 RPC \u5c06\u7528\u6237\u7684 jar \u6587\u4ef6\u5206\u53d1\u5230 Flink \u7ec4\u4ef6\u3002</p>"},{"location":"Flink/2.DataStream%20API/","title":"DataStream API","text":""},{"location":"Flink/2.DataStream%20API/#datastream","title":"DataStream","text":"<p>Flink \u63d0\u4f9b\u7684\u56db\u79cd API\uff1a</p> <p></p> <p>DataStream \u662f Flink \u4e2d\u4e0d\u53ef\u53d8\u7684\u6570\u636e\u96c6\u5408\u3002\u5176\u4e2d\u7684\u6570\u636e\u65e2\u53ef\u4ee5\u662f\u6709\u754c\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u65e0\u754c\u7684\uff0c\u4e0d\u8fc7\u5904\u7406\u5b83\u4eec\u6240\u7528\u7684 API \u662f\u4e00\u6837\u7684\u3002</p> <p>DataStream \u5728\u4f7f\u7528\u65b9\u5f0f\u4e0a\u548c\u5e38\u89c4\u7684 Java \u96c6\u5408\u6709\u4e9b\u76f8\u4f3c\uff0c\u4f46\u5728\u4e00\u4e9b\u5173\u952e\u5730\u65b9\u53c8\u5927\u4e0d\u76f8\u540c\uff1a</p> <ul> <li>\u5b83\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5373\u4e00\u65e6\u521b\u5efa\u597d\uff0c\u4fbf\u65e0\u6cd5\u5f80\u91cc\u6dfb\u52a0\u6216\u8005\u5220\u9664\u5143\u7d20\u4e86</li> <li>\u4e0d\u80fd\u76f4\u63a5\u67e5\u770b\u5176\u4e2d\u7684\u5143\u7d20\uff0c\u53ea\u80fd\u901a\u8fc7 DataStream API \u63d0\u4f9b\u7684\u64cd\u4f5c\uff08\u4e5f\u5c31\u662f\u6240\u8c13\u7684 \u201c\u8f6c\u6362\u201d \u64cd\u4f5c\uff09\u6765\u5bf9\u5176\u8fdb\u884c\u5904\u7406</li> </ul>"},{"location":"Flink/2.DataStream%20API/#example-program","title":"Example Program","text":"<pre><code>public class WindowWordCount {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setParallelism(1);\n        DataStream&lt;Tuple2&lt;String, Integer&gt;&gt; dataStream = env\n                .socketTextStream(\"localhost\", 9999)\n                .flatMap(new Splitter())\n                .keyBy(value -&gt; value.f0)\n                .window(TumblingProcessingTimeWindows.of(Duration.ofSeconds(5)))\n                .sum(1);\n\n        dataStream.print();\n        env.execute(\"Window WordCount\");\n    }\n\n    public static class Splitter implements FlatMapFunction&lt;String, Tuple2&lt;String, Integer&gt;&gt; {\n        @Override\n        public void flatMap(String sentence, Collector&lt;Tuple2&lt;String, Integer&gt;&gt; out) {\n            for (String word : sentence.split(\" \")) {\n                out.collect(Tuple2.of(word, 1));\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#source","title":"Source","text":"<p>Sources are where your program reads its input from. You can attach a source to your program by using <code>StreamExecutionEnvironment.addSource(sourceFunction)</code>. Flink comes with a number of pre-implemented source functions, but you can always write your own custom sources by implementing the SourceFunction for non-parallel sources, or by implementing the ParallelSourceFunction interface or extending the RichParallelSourceFunction for parallel sources.</p> <p>\u5982\u679c\u5bf9 Data Source \u7684\u539f\u7406\u90e8\u5206\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u53c2\u8003\uff1aData Sources</p>"},{"location":"Flink/2.DataStream%20API/#_1","title":"\u96c6\u5408\u6570\u636e\u6e90","text":"<pre><code>public class SourceTest {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setParallelism(1);\n        DataStreamSource&lt;Event&gt; stream = env.fromElements(\n                new Event(\"Alice\", \"www.baidu.com\", 123456789L),\n                new Event(\"Bob\", \"www.google.com\", 123456789L),\n                new Event(\"Alice\", \"www.sina.com\", 123456789L)\n        );\n//        ArrayList&lt;Event&gt; events = new ArrayList&lt;&gt;();\n//        events.add(new Event(\"Alice\", \"www.baidu.com\", 123456789L));\n//        events.add(new Event(\"Bob\", \"www.google.com\", 123456789L));\n//        events.add(new Event(\"Alice\", \"www.sina.com\", 123456789L));\n//        DataStreamSource&lt;Event&gt; stream2 = env.fromCollection(events);\n        stream.print();\n        env.execute();\n    }\n}\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#_2","title":"\u6587\u4ef6\u6570\u636e\u6e90","text":"<pre><code>public class FileTest {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setParallelism(1);\n        DataStreamSource&lt;String&gt; stream = env.readTextFile(\"data/input.txt\");\n        stream.print();\n        env.execute();\n    }\n}\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#socket","title":"Socket \u6570\u636e\u6e90","text":"<pre><code>public class SocketTest {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setParallelism(1);\n        DataStreamSource&lt;String&gt; stream = env.socketTextStream(\"localhost\", 9999);\n        stream.print();\n        env.execute();\n    }\n}\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#kafka","title":"Kafka \u6570\u636e\u6e90","text":"<p><code>FlinkKafkaConsumer</code> \u5728 Flink 1.17 \u4e2d\u5220\u9664\uff0c\u8bf7\u6539\u7528 <code>KafkaSource</code>\u3002</p> <pre><code>KafkaSource&lt;String&gt; source = KafkaSource.&lt;String&gt;builder()\n    .setBootstrapServers(brokers)\n    .setTopics(\"input-topic\")\n    .setGroupId(\"my-group\")\n    .setStartingOffsets(OffsetsInitializer.earliest())\n    .setValueOnlyDeserializer(new SimpleStringSchema())\n    .build();\n\nenv.fromSource(source, WatermarkStrategy.noWatermarks(), \"Kafka Source\");\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#_3","title":"\u81ea\u5b9a\u4e49\u6570\u636e\u6e90","text":"<p>\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u6e90\uff0c\u9700\u8981\u5b9e\u73b0 SourceFunction \u63a5\u53e3\u5e76\u4e14\u91cd\u5199\u4e24\u4e2a\u5173\u952e\u65b9\u6cd5\uff1a<code>run()</code> \u548c <code>cancel()</code>\u3002</p> <ul> <li><code>run()</code>\u65b9\u6cd5\uff1a\u4f7f\u7528\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff08SourceContext\uff09\u5411\u4e0b\u6e38\u53d1\u9001\u6570\u636e</li> <li><code>cancel()</code>\u65b9\u6cd5\uff1a\u901a\u8fc7\u6807\u8bc6\u4f4d\u63a7\u5236\u9000\u51fa\u5faa\u73af\uff0c\u6765\u8fbe\u5230\u4e2d\u65ad\u6570\u636e\u6e90\u7684\u6548\u679c</li> </ul> <p>\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u5e76\u884c\u7684\u6570\u636e\u6e90\uff08\u5e76\u884c\u5ea6&gt;1\uff09\uff0c\u9700\u8981\u5b9e\u73b0 ParallelSourceFunction \u63a5\u53e3\uff0c\u5e76\u91cd\u5199 <code>run()</code> \u548c <code>cancel()</code>\u3002</p> <pre><code>public class CustomSource implements SourceFunction&lt;Event&gt; {\n    private Boolean running = true;\n\n    @Override\n    public void run(SourceContext&lt;Event&gt; sourceContext) throws Exception {\n        while (running) {\n            sourceContext.collect(new Event(\"user\", \"url\", System.currentTimeMillis()));\n            Thread.sleep(1000);\n        }\n    }\n\n    @Override\n    public void cancel() {\n        running = false;\n    }\n}\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#transformation","title":"Transformation","text":"<p>\u5404\u7c7b Transformation \u64cd\u4f5c API</p>"},{"location":"Flink/2.DataStream%20API/#map","title":"Map","text":"<p>\u5c06 DataStream \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8f6c\u6362\u4e3a\u53e6\u5916\u4e00\u4e2a\u5143\u7d20\u3002</p> <pre><code>env.fromElements(1, 2, 3, 4)\n    .map(x -&gt; x * 2)\n    .print();\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#filter","title":"Filter","text":"<p>\u8ba1\u7b97\u6bcf\u4e2a\u6570\u636e\u5143\u7684\u5e03\u5c14\u51fd\u6570\uff0c\u5e76\u4fdd\u5b58\u51fd\u6570\u8fd4\u56de true \u7684\u6570\u636e\u5143\u3002</p> <pre><code>env.fromElements(1, 2, 3, 4)\n    .filter(x -&gt; x % 2 == 0)\n    .print();\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#flatmap","title":"FlatMap","text":"<p>FlatMap \u64cd\u4f5c\u7528\u4e8e\u6570\u636e\u5c55\u5f00\u6620\u5c04\uff0c\u662f Filter + Map \u7684\u7ec4\u5408\u4ee5\u53ca\u6269\u5c55\u3002FlatMap \u53ef\u4ee5\u5b9e\u73b0\u52a0\u5de5\u8f93\u5165\u6570\u636e\u5e76\u6539\u53d8\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7136\u540e\u4e0d\u8f93\u51fa\u6570\u636e\u6216\u8f93\u51fa\u591a\u6761\u6570\u636e\u3002</p> <pre><code>env.fromElements(\"hello world\", \"world\", \"hello\")\n    .flatMap((String line, Collector&lt;String&gt; out) -&gt; {\n        for (String word : line.split(\" \")) {\n            if (word.equals(\"world\")) {\n                out.collect(word);\n            }\n        }\n    })\n    .returns(Types.STRING)\n    .print();\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#keyby","title":"KeyBy","text":"<p>KeyBy \u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e00\u6761\u8f93\u5165 DataStream \u6309\u7167 key \u8f6c\u6362\u4e3a\u5206\u7ec4\u7684\u6570\u636e\u6d41 KeyedStream\u3002DataStream API \u63d0\u4f9b\u4e86 <code>KeyedStream&lt;T, K&gt; keyBy(KeySelector&lt;T, K&gt; key)</code> \u65b9\u6cd5\u6765\u5b8c\u6210\u6570\u636e\u7684\u5206\u7ec4\u64cd\u4f5c\uff0c\u5176\u4e2d T \u4e3a\u8f93\u5165\u7684\u6570\u636e\u7c7b\u578b\uff0cK \u4e3a\u6570\u636e\u5206\u7ec4\u952e\u7684\u7c7b\u578b\u3002</p> <pre><code>stream.keyBy(x -&gt; x.getSomeKey());\nstream.keyBy(x -&gt; x.f0);\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#maxminsum","title":"Max/Min/Sum","text":"<p>\u5bf9\u5206\u7ec4\u7684\u6570\u636e\u8fdb\u884c\u805a\u5408\u3002</p> <pre><code>stream.keyBy(x -&gt; x.f0).sum(\"f0\");\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#reduce","title":"Reduce","text":"<p>\u5bf9\u4e8e min/max/sum \u65e0\u6cd5\u5904\u7406\u7684\u805a\u5408\u8ba1\u7b97\u903b\u8f91\uff0c\u53ef\u4ee5\u901a\u8fc7 reduce \u64cd\u4f5c\u6765\u81ea\u5b9a\u4e49\u6570\u636e\u805a\u5408\u8ba1\u7b97\u7684\u903b\u8f91\u3002</p> <p>\u4f7f\u7528\u65f6\u9700\u8981\u5b9e\u73b0 <code>reduce(T acc, T in)</code> \u65b9\u6cd5\uff0cacc \u8868\u793a\u8be5\u5206\u7ec4\u7684\u5386\u53f2\u805a\u5408\u7ed3\u679c\uff0cin \u8868\u793a\u8be5\u5206\u7ec4\u4e2d\u65b0\u7684\u8f93\u5165\u6570\u636e\u3002</p> <pre><code>public interface ReduceFunction&lt;T&gt; extends Function, Serializable {\n    T reduce(T acc, T in) throws Exception;\n}\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#sink","title":"Sink","text":""},{"location":"Flink/2.DataStream%20API/#_4","title":"\u63a7\u5236\u53f0","text":"<pre><code>stream.print();\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#kafka_1","title":"Kafka","text":"<pre><code>DataStream&lt;String&gt; stream = ...;\n\nKafkaSink&lt;String&gt; sink = KafkaSink.&lt;String&gt;builder()\n        .setBootstrapServers(brokers)\n        .setRecordSerializer(KafkaRecordSerializationSchema.builder()\n            .setTopic(\"topic-name\")\n            .setValueSerializationSchema(new SimpleStringSchema())\n            .build()\n        )\n        .setDeliveryGuarantee(DeliveryGuarantee.AT_LEAST_ONCE)\n        .build();\n\nstream.sinkTo(sink);\n</code></pre>"},{"location":"Flink/2.DataStream%20API/#sink_1","title":"\u81ea\u5b9a\u4e49 Sink","text":""},{"location":"Flink/2.DataStream%20API/#8","title":"\u7b97\u5b50\u95f4\u6570\u636e\u4f20\u8f93\u7684 8 \u79cd\u7b56\u7565","text":""},{"location":"Flink/2.DataStream%20API/#forward","title":"Forward","text":"<p>Forward \u6307\u4e0a\u4e0b\u6e38\u7b97\u5b50\u5728\u4f20\u8f93\u65f6\u4e00\u5bf9\u4e00\u7684\u6a21\u5f0f\uff0c\u662f Flink \u7684\u9ed8\u8ba4\u4f20\u8f93\u7b56\u7565\uff0c\u524d\u63d0\u662f\u4e0a\u4e0b\u6e38\u7b97\u5b50\u5e76\u884c\u5ea6\u76f8\u540c\u3002</p> <p></p>"},{"location":"Flink/2.DataStream%20API/#rebalance","title":"Rebalance","text":"<p>\u5728 Rebalance \u4f20\u8f93\u7b56\u7565\u4e0b\uff0c\u4e0a\u6e38\u7b97\u5b50\u4f1a\u6309\u7167\u8f6e\u8be2\u6a21\u5f0f\u4f20\u8f93\u6570\u636e\u7ed9\u4e0b\u6e38\u7b97\u5b50\u3002\u8f6e\u8be2\u7b97\u6cd5\u662f Round-Robin \u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u3002RebalancePartitioner \u4f1a\u5148\u968f\u673a\u9009\u4e00\u4e2a\u4e0b\u6e38\u5206\u533a\uff0c\u4e4b\u540e\u8f6e\u8be2\u904d\u5386\u4e0b\u6e38\u6240\u6709\u5206\u533a\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002</p> <p>\u5728\u7528\u6237\u6ca1\u6709\u6307\u5b9a\u5176\u4ed6\u6570\u636e\u4f20\u8f93\u7b56\u7565\uff08\u5982 Shuffle\u3001Rescale \u7b49\uff09\u5e76\u4e14\u4e0d\u6ee1\u8db3 Forward \u4f20\u8f93\u7b56\u7565\u7684\u6761\u4ef6\u4e0b\uff0cFlink \u9ed8\u8ba4\u4f7f\u7528 Rebalance \u4f20\u8f93\u7b56\u7565\u3002</p> <p>\u5e94\u7528\u573a\u666f\uff1a\u5f53\u4e00\u4e2a\u7b97\u5b50\u7684\u4e0d\u540c SubTask \u4e4b\u95f4\u8981\u5904\u7406\u7684\u6570\u636e\u91cf\u5dee\u5f02\u5f88\u5927\uff0c\u5bfc\u81f4\u51fa\u73b0\u6570\u636e\u503e\u659c\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 Rebalance \u4f20\u8f93\u7b56\u7565\u6765\u7f13\u89e3\u6570\u636e\u503e\u659c\u7684\u95ee\u9898\u3002</p> <p></p> <p>\u4e0a\u4e0b\u6e38\u7b97\u5b50\u5e76\u884c\u5ea6\u76f8\u540c\u65f6\u4f7f\u7528 Rebalance \u7f13\u89e3\u6570\u636e\u503e\u659c\uff1a</p> <p></p> <p>\u4e0a\u4e0b\u6e38\u7b97\u5b50\u5e76\u884c\u5ea6\u4e0d\u540c\u65f6\u7684 Rebalance \u4f20\u8f93\u7b56\u7565\uff1a</p> <p></p> <p>\u603b\u7ed3</p> <p>Forward \u548c Rebalance \u662f Flink \u5f15\u64ce\u6839\u636e\u7b97\u5b50\u5e76\u884c\u5ea6\u7b49\u56e0\u7d20\u9ed8\u8ba4\u4e3a\u4e0a\u4e0b\u6e38\u7b97\u5b50\u6307\u5b9a\u7684\u6570\u636e\u4f20\u8f93\u7b56\u7565\u3002\u800c\u9488\u5bf9\u63a5\u4e0b\u6765\u7684\u5176\u4f59 6 \u79cd\u6570\u636e\u4f20\u8f93\u7b56\u7565\uff0c\u53ea\u8981\u7528\u6237\u4e0d\u901a\u8fc7\u4ee3\u7801\u4e3b\u52a8\u8bbe\u7f6e\uff0c\u7b97\u5b50\u4e4b\u95f4\u662f\u4e0d\u4f1a\u4f7f\u7528\u8fd9 6 \u79cd\u6570\u636e\u4f20\u8f93\u7b56\u7565\u7684\u3002</p>"},{"location":"Flink/2.DataStream%20API/#shuffle","title":"Shuffle","text":"<p>Shuffle \u4f20\u8f93\u7b56\u7565\u662f\u53e6\u4e00\u4e2a\u7248\u672c\u7684 Rebalance \u4f20\u8f93\u7b56\u7565\uff0cShuffle \u548c Rebalance \u4f20\u8f93\u7b56\u7565\u90fd\u53ef\u4ee5\u505a\u5230\u6570\u636e\u7684\u5747\u5300\u4e0b\u53d1\u3002\u5f53\u7b97\u5b50\u4e4b\u95f4\u4f7f\u7528 Shuffle \u4f20\u8f93\u7b56\u7565\uff0c\u4e0a\u6e38\u7b97\u5b50\u7684 SubTask \u5f80\u4e0b\u6e38\u7b97\u5b50\u7684 SubTask \u4f20\u8f93\u6570\u636e\u65f6\uff0c\u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u4e0b\u6e38\u7b97\u5b50\u7684 SubTask \u8fdb\u884c\u4e0b\u53d1\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>DataStream.shuffle()</code> \u5c06\u4e0a\u4e0b\u6e38\u7b97\u5b50\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u7b56\u7565\u8bbe\u7f6e\u4e3a Shuffle\u3002</p>"},{"location":"Flink/2.DataStream%20API/#keygroup","title":"KeyGroup","text":"<p>\u5f53\u6211\u4eec\u4f7f\u7528\u4e86 KeyBy \u64cd\u4f5c\u540e\uff0c\u4e0a\u4e0b\u6e38\u7b97\u5b50\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u7b56\u7565\u5c31\u662f KeyGroup\u3002</p> <p>\u5bf9\u4e8e KeyGroup \u4f20\u8f93\u7b56\u7565\u6765\u8bf4\uff0c\u4e0a\u6e38\u7b97\u5b50\u7684\u6bcf\u4e00\u4e2a SubTask \u5bf9\u4e8e\u6bcf\u4e00\u6761\u6570\u636e\uff0c\u4f1a\u901a\u8fc7 <code>DataStream.keyBy()</code> \u65b9\u6cd5\u7684\u5165\u53c2 KeySelector \u6765\u83b7\u53d6 key\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a key \u7ecf\u8fc7\u54c8\u5e0c\u7b97\u6cd5\u8ba1\u7b97\u8981\u5c06\u8be5\u6761\u6570\u636e\u4e0b\u53d1\u5230\u4e0b\u6e38\u7b97\u5b50\u7684\u54ea\u4e00\u4e2a SubTask \u4e2d\uff0c\u76f8\u540c key \u7684\u6570\u636e\u4f1a\u88ab\u4e0b\u53d1\u5230\u540c\u4e00\u4e2a SubTask \u4e2d\u8fdb\u884c\u5904\u7406\u3002\u6b64\u5916\uff0cKeyGroup \u4e5f\u79f0\u4f5c\u54c8\u5e0c\u4f20\u8f93\u7b56\u7565\uff0c\u5728 Flink Web UI \u4e2d Flink \u4f5c\u4e1a\u7684\u903b\u8f91\u6570\u636e\u6d41\u56fe\u4f1a\u5c55\u793a\u4e3a\u54c8\u5e0c\u3002</p>"},{"location":"Flink/2.DataStream%20API/#rescale","title":"Rescale","text":"<p>\u548c Rebalance \u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff0cRescale \u5e76\u4e0d\u662f\u5b8c\u5168\u5c06\u6570\u636e\u8f6e\u8be2\u4e0b\u53d1\u5230\u4e0b\u6e38\u7b97\u5b50\u7684\u6240\u6709 SubTask \u4e2d\uff0c\u800c\u662f\u8f6e\u8be2\u4e0b\u53d1\u5230\u4e0b\u6e38\u7b97\u5b50\u7684\u4e00\u90e8\u5206 SubTask \u4e2d\u3002</p> <p></p> <p>Rescale \u4f20\u8f93\u7b56\u7565\u548c Rebalance \u4f20\u8f93\u7b56\u7565\u662f\u7c7b\u4f3c\u7684\uff0c\u4e3b\u8981\u5dee\u5f02\u6709\u4ee5\u4e0b 3 \u70b9\uff1a</p> <ul> <li>Rescale \u6bd4 Rebalance \u5360\u7528\u7684\u7f51\u7edc\u4f20\u8f93\u8d44\u6e90\u66f4\u5c0f\uff0cRebalance \u4f20\u8f93\u7b56\u7565\u4e2d\uff0c\u4e0a\u6e38\u7684\u6bcf\u4e00\u4e2a SubTask \u90fd\u8981\u8fde\u63a5\u4e0b\u6e38\u6240\u6709\u7684 SubTask\uff0c\u800c Rescale \u53ea\u9700\u8981\u8fde\u63a5\u4e0b\u6e38\u7b97\u5b50\u7684\u90e8\u5206 SubTask\u3002</li> <li>Rescale \u6bd4 Rebalance \u5bf9\u4e8e\u6570\u636e\u4e71\u5e8f\u7684\u5f71\u54cd\u66f4\u5c0f\uff0c\u5728 Rebalance \u4f20\u8f93\u7b56\u7565\u4e2d\uff0c\u7531\u4e8e\u6570\u636e\u4f1a\u8f6e\u8be2\u4e0b\u53d1\u5230\u4e0b\u6e38\u7b97\u5b50\u6240\u6709\u7684 SubTask \u4e2d\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f1a\u52a0\u5267\u6570\u636e\u4e71\u5e8f\uff0c\u800c Rescale \u53ea\u662f\u4e0b\u53d1\u5230\u4e0b\u6e38\u7b97\u5b50\u7684\u90e8\u5206 SubTask \u4e2d\uff0c\u56e0\u6b64\u6570\u636e\u4e71\u5e8f\u7684\u7a0b\u5ea6\u76f8\u6bd4 Rebalance \u66f4\u5c0f\u3002\u6570\u636e\u4e71\u5e8f\u95ee\u9898\u4f1a\u5bf9\u65f6\u95f4\u7a97\u53e3\u7b97\u5b50\u7684\u6570\u636e\u8ba1\u7b97\u8fc7\u7a0b\u4ea7\u751f\u5f71\u54cd\u3002</li> <li>Rebalance \u76f8\u6bd4\u4e8e Rescale \u6765\u8bf4\uff0c\u4e0b\u53d1\u5230\u4e0b\u6e38\u7b97\u5b50 SubTask \u4e2d\u7684\u6570\u636e\u91cf\u66f4\u52a0\u5747\u5300\u3002</li> </ul>"},{"location":"Flink/2.DataStream%20API/#broadcast","title":"Broadcast","text":"<p>Broadcast \u4f1a\u5c06\u4e0a\u6e38\u6bcf\u4e00\u6761\u6570\u636e\u90fd\u4e0b\u53d1\u7ed9\u4e0b\u6e38\u7b97\u5b50\u7684\u6240\u6709 SubTask\u3002</p> <p></p> <p>Broadcast \u4e3b\u8981\u7684\u4f7f\u7528\u573a\u666f\u662f\u5927\u6570\u636e\u6d41\u5173\u8054\u64cd\u4f5c\uff08Join\uff09\u5c0f\u6570\u636e\u6d41\u573a\u666f\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0cA \u6d41\u4e3a\u6570\u636e\u6d41\u91cf\u5927\u7684\u4e00\u6761\u6570\u636e\u6d41\uff0cB \u6d41\u4e3a\u6570\u636e\u6d41\u91cf\u5c0f\u7684\u4e00\u6761\u6570\u636e\u6d41\uff0cA \u6d41\u548c B \u6d41\u4e2d\u7684\u6570\u636e\u90fd\u5305\u542b unique_id \u5b57\u6bb5\uff0c\u73b0\u5728\u7684\u9700\u6c42\u662f A \u6d41\u548c B \u6d41\u901a\u8fc7 unique_id \u505a\u6570\u636e\u5173\u8054\u3002\u5f53\u9762\u4e34\u8fd9\u79cd\u9700\u6c42\u65f6\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u53cd\u5e94\u5f80\u5f80\u662f\u5bf9\u4e24\u6761\u6570\u636e\u6d41\u8fdb\u884c KeyBy \u64cd\u4f5c\uff0c\u5c06\u76f8\u540c unique_id \u7684\u6570\u636e\u53d1\u9001\u5230\u76f8\u540c\u7684 SubTask \u4e2d\u8fdb\u884c\u5173\u8054\u5904\u7406\u3002\u8fd9\u79cd\u65b9\u6848\u7684\u7f3a\u70b9\u5728\u4e8e\u5982\u679c\u51fa\u73b0\u70ed\u70b9 unique_id\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6570\u636e\u503e\u659c\u3002\u800c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528 Broadcast \u4f20\u8f93\u7b56\u7565\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 B \u6d41\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5e7f\u64ad\uff0c\u5c06 B \u6d41\u7684\u6570\u636e\u5e7f\u64ad\u5230 A \u6d41\u7684\u6240\u6709 SubTask \u4e2d\u8fdb\u884c\u6570\u636e\u5173\u8054\uff0c\u4ee5\u6b64\u6765\u907f\u514d\u6570\u636e\u503e\u659c\u3002</p>"},{"location":"Flink/2.DataStream%20API/#global","title":"Global","text":"<p>\u5728 Global \u7684\u4f20\u8f93\u7b56\u7565\u4e0b\uff0c\u4e0a\u6e38\u7b97\u5b50\u4f1a\u5c06\u6240\u6709\u6570\u636e\u4e0b\u53d1\u5230\u4e0b\u6e38\u7b97\u5b50\u4e0b\u6807\u4e3a 0 \u7684 SubTask \u4e2d\uff0c\u5373\u4f7f\u4e0b\u6e38\u7b97\u5b50\u7684\u5e76\u884c\u5ea6\u5927\u4e8e 1\u3002</p> <p></p>"},{"location":"Flink/2.DataStream%20API/#custom-partition","title":"Custom Partition","text":"<p>\u81ea\u5b9a\u4e49\u4f20\u8f93\u7b56\u7565\u3002\u4f7f\u7528 <code>DataStream.partitionCustom(Partitioner p, KeySelector k)</code> \u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u6570\u636e\u4f20\u8f93\u7b56\u7565\uff0cSubTask \u5728\u6267\u884c\u81ea\u5b9a\u4e49\u4f20\u8f93\u7b56\u7565\u65f6\u5206\u4e3a 2 \u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u4f7f\u7528 KeySelector \u83b7\u53d6\u5f53\u524d\u6570\u636e\u7684 key</li> <li>\u6267\u884c Partitioner</li> </ol>"},{"location":"Flink/2.DataStream%20API/#_5","title":"\u6267\u884c\u6a21\u5f0f\uff08\u6d41/\u6279\uff09","text":"<p>DataStream API \u6709\u4e00\u79cd\u201d\u7ecf\u5178\u201c\u7684\u6267\u884c\u884c\u4e3a\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6d41\uff08STREAMING\uff09\u6267\u884c\u6a21\u5f0f\u3002\u8fd9\u79cd\u6a21\u5f0f\u9002\u7528\u4e8e\u9700\u8981\u8fde\u7eed\u589e\u91cf\u5904\u7406\uff0c\u800c\u4e14\u5e38\u9a7b\u7ebf\u4e0a\u7684\u65e0\u8fb9\u754c\u4f5c\u4e1a\u3002</p> <p>\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u6279\u5f0f\u6267\u884c\u6a21\u5f0f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6279\uff08BATCH\uff09\u6267\u884c\u6a21\u5f0f\u3002\u8fd9\u79cd\u6267\u884c\u4f5c\u4e1a\u7684\u65b9\u5f0f\u7c7b\u4f3c\u4e8e MapReduce \u7b49\u6279\u5904\u7406\u6846\u67b6\uff0c\u9002\u7528\u4e8e\u5df2\u77e5\u8f93\u5165\u3001\u4e0d\u4f1a\u8fde\u7eed\u8fd0\u884c\u7684\u7684\u6709\u8fb9\u754c\u4f5c\u4e1a\u3002</p> <p>Apache Flink \u5bf9\u6d41\u5904\u7406\u548c\u6279\u5904\u7406\u91c7\u53d6\u7edf\u4e00\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u8fd9\u610f\u5473\u7740\u65e0\u8bba\u914d\u7f6e\u4f55\u79cd\u6267\u884c\u6a21\u5f0f\uff0c\u5728\u6709\u754c\u8f93\u5165\u4e0a\u6267\u884c\u7684 DataStream \u5e94\u7528\u90fd\u4f1a\u4ea7\u751f\u76f8\u540c\u7684\u6700\u7ec8\u7ed3\u679c\u3002\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u6700\u7ec8\u5728\u8fd9\u91cc\u662f\u4ec0\u4e48\u610f\u601d\uff1a\u4e00\u4e2a\u5728\u6d41\u6a21\u5f0f\u6267\u884c\u7684\u4f5c\u4e1a\u53ef\u80fd\u4f1a\u4ea7\u751f\u589e\u91cf\u66f4\u65b0\uff08\u60f3\u60f3\u6570\u636e\u5e93\u4e2d\u7684 upsert \u64cd\u4f5c\uff09\uff0c\u800c\u6279\u4f5c\u4e1a\u53ea\u5728\u6700\u540e\u4ea7\u751f\u4e00\u4e2a\u6700\u7ec8\u7ed3\u679c\u3002\u5c3d\u7ba1\u8ba1\u7b97\u65b9\u6cd5\u4e0d\u540c\uff0c\u53ea\u8981\u5448\u73b0\u65b9\u5f0f\u5f97\u5f53\uff0c\u6700\u7ec8\u7ed3\u679c\u4f1a\u662f\u76f8\u540c\u7684\u3002</p> <p>\u901a\u8fc7\u542f\u7528\u6279\u6267\u884c\u6a21\u5f0f\uff0cFlink \u53ef\u4ee5\u5bf9\u6709\u8fb9\u754c\u4f5c\u4e1a\u8fdb\u884c\u989d\u5916\u7684\u4f18\u5316\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u5173\u8054\uff08join\uff09/ \u805a\u5408\uff08aggregation\uff09\u7b56\u7565\u3001\u4e0d\u540c shuffle \u5b9e\u73b0\u6765\u63d0\u9ad8\u4efb\u52a1\u8c03\u5ea6\u548c\u6545\u969c\u6062\u590d\u7684\u6548\u7387\u3002</p> <p>\u6267\u884c\u6a21\u5f0f\u53ef\u4ee5\u901a\u8fc7 <code>execution.runtime-mode</code> \u8bbe\u7f6e\u6765\u914d\u7f6e\u3002\u6709\u4e09\u79cd\u53ef\u9009\u7684\u503c\uff1a</p> <ul> <li>STREAMING: \u7ecf\u5178 DataStream \u6267\u884c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09</li> <li>BATCH: \u5728 DataStream API \u4e0a\u8fdb\u884c\u6279\u91cf\u5f0f\u6267\u884c</li> <li>AUTOMATIC: \u8ba9\u7cfb\u7edf\u6839\u636e\u6570\u636e\u6e90\u7684\u8fb9\u754c\u6027\u6765\u51b3\u5b9a</li> </ul> <p>\u8fd9\u53ef\u4ee5\u901a\u8fc7 <code>bin/flink run ...</code> \u7684\u547d\u4ee4\u884c\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\uff0c\u6216\u8005\u5728\u521b\u5efa/\u914d\u7f6e <code>StreamExecutionEnvironment</code> \u65f6\u5199\u8fdb\u7a0b\u5e8f\u3002</p> <p>\u4e0b\u9762\u662f\u5982\u4f55\u901a\u8fc7\u547d\u4ee4\u884c\u914d\u7f6e\u6267\u884c\u6a21\u5f0f\uff1a</p> <pre><code>$ bin/flink run -Dexecution.runtime-mode=BATCH &lt;jarFile&gt;\n</code></pre> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u5728\u4ee3\u7801\u4e2d\u914d\u7f6e\u6267\u884c\u6a21\u5f0f\uff1a</p> <pre><code>StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\nenv.setRuntimeMode(RuntimeExecutionMode.BATCH);\n</code></pre>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/","title":"\u65f6\u95f4\u548c\u7a97\u53e3","text":""},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_2","title":"\u65f6\u95f4\u8bed\u4e49","text":"<p>Flink \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5904\u7406\u7cfb\u7edf\u3002\u5206\u5e03\u5f0f\u67b6\u6784\u6700\u5927\u7684\u7279\u70b9\uff0c\u5c31\u662f\u8282\u70b9\u5f7c\u6b64\u72ec\u7acb\u3001\u4e92\u4e0d\u5f71\u54cd\uff0c\u8fd9\u5e26\u6765\u4e86\u66f4\u9ad8\u7684\u541e\u5410\u91cf\u548c\u5bb9\u9519\u6027\uff0c\u4f46\u60f3\u8981\u62e5\u6709\u4e00\u4e2a\u5168\u5c40\u7edf\u4e00\u7684\u65f6\u949f\uff0c\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u91cc\u662f\u505a\u4e0d\u5230\u7684\u3002</p> <ul> <li>\u5904\u7406\u65f6\u95f4\uff08Processing Time\uff09\uff1a\u6307\u6267\u884c\u5904\u7406\u64cd\u4f5c\u7684\u673a\u5668\u7684\u7cfb\u7edf\u65f6\u95f4</li> <li>\u4e8b\u4ef6\u4e8b\u4ef6\uff08Event Time\uff09\uff1a\u6570\u636e\u751f\u6210\u7684\u65f6\u95f4\uff0c\u6570\u636e\u4e00\u65e6\u4ea7\u751f\uff0c\u8fd9\u4e2a\u65f6\u95f4\u81ea\u7136\u5c31\u786e\u5b9a\u4e86\uff0c\u5b83\u901a\u5e38\u4f5c\u4e3a\u65f6\u95f4\u6233\u5c5e\u6027\u5d4c\u5165\u5230\u6570\u636e\u4e2d</li> </ul> <p>\u4e8b\u4ef6\u65f6\u95f4\u4e0e\u6c34\u4f4d\u7ebf</p> <p>\u7531\u4e8e\u6d41\u5904\u7406\u4e2d\u6570\u636e\u662f\u6e90\u6e90\u4e0d\u65ad\u4ea7\u751f\u7684\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5148\u4ea7\u751f\u7684\u6570\u636e\u4e5f\u4f1a\u5148\u88ab\u5904\u7406\uff0c\u6240\u4ee5\u5f53\u4efb\u52a1\u4e0d\u505c\u5730\u63a5\u5230\u6570\u636e\u65f6\uff0c\u5b83\u4eec\u7684\u65f6\u95f4\u6233\u4e5f\u57fa\u672c\u4e0a\u662f\u4e0d\u65ad\u589e\u957f\u7684\uff0c\u5c31\u53ef\u4ee5\u4ee3\u8868\u65f6\u95f4\u7684\u63a8\u8fdb\u3002\u4f46\u662f\uff0c\u8fd9\u91cc\u6709\u4e2a\u524d\u63d0\uff0c\u5c31\u662f\u300c\u5148\u4ea7\u751f\u7684\u6570\u636e\u5148\u88ab\u5904\u7406\u300d\uff0c\u8fd9\u8981\u6c42\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u5230\u8fbe\u7684\u987a\u5e8f\u3002</p> <p>\u4f46\u662f\u7531\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7f51\u7edc\u4f20\u8f93\u5ef6\u8fdf\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u6570\u636e\u6d41\u5f80\u5f80\u662f\u4e71\u5e8f\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c31\u4e0d\u80fd\u7b80\u5355\u5730\u628a\u6570\u636e\u81ea\u5e26\u7684\u65f6\u95f4\u6233\u5f53\u4f5c\u65f6\u949f\u4e86\uff0c\u800c\u9700\u8981\u7528\u53e6\u5916\u7684\u6807\u5fd7\u6765\u8868\u793a\u4e8b\u4ef6\u65f6\u95f4\u8fdb\u5c55\uff0c\u5728 Flink \u4e2d\u628a\u5b83\u53eb\u4f5c\u4e8b\u4ef6\u65f6\u95f4\u7684\u300c\u6c34\u4f4d\u7ebf\u300d\uff08Watermark\uff09\u3002</p> <p>\u4e24\u79cd\u65f6\u95f4\u8bed\u4e49\u7684\u5bf9\u6bd4</p> <p>\u901a\u5e38\u6765\u8bf4\uff0c\u5904\u7406\u65f6\u95f4\u662f\u6211\u4eec\u8ba1\u7b97\u6548\u7387\u7684\u8861\u91cf\u6807\u51c6\uff0c\u800c\u4e8b\u4ef6\u65f6\u95f4\u4f1a\u66f4\u7b26\u5408\u6211\u4eec\u7684\u4e1a\u52a1\u8ba1\u7b97\u903b\u8f91\u3002</p> <p>\u5bf9\u4e8e\u5904\u7406\u65f6\u95f4\u800c\u8a00\uff0c\u7531\u4e8e\u6ca1\u6709\u4efb\u4f55\u9644\u52a0\u8003\u8651\uff0c\u6570\u636e\u4e00\u6765\u5c31\u76f4\u63a5\u5904\u7406\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8ba9\u6211\u4eec\u7684\u6d41\u5904\u7406\u5ef6\u8fdf\u964d\u5230\u6700\u4f4e\uff0c\u6548\u7387\u8fbe\u5230\u6700\u9ad8\u3002\u6240\u4ee5\u5904\u7406\u65f6\u95f4\u8bed\u4e49\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9e\u65f6\u6027\u8981\u6c42\u6781\u9ad8\u3001\u800c\u5bf9\u8ba1\u7b97\u51c6\u786e\u6027\u8981\u6c42\u4e0d\u592a\u9ad8\u7684\u573a\u666f\u3002</p> <p>\u800c\u5728\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4e0b\uff0c\u6c34\u4f4d\u7ebf\u6210\u4e3a\u4e86\u65f6\u949f\uff0c\u53ef\u4ee5\u7edf\u4e00\u63a7\u5236\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c31\u4fdd\u8bc1\u4e86\u6211\u4eec\u603b\u53ef\u4ee5\u5c06\u6570\u636e\u5212\u5206\u5230\u6b63\u786e\u7684\u7a97\u53e3\u4e2d\u3002\u6240\u4ee5\u6574\u4f53\u4e0a\u770b\uff0c\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u662f\u4ee5\u4e00\u5b9a\u5ef6\u8fdf\u4e3a\u4ee3\u4ef7\uff0c\u6362\u6765\u4e86\u5904\u7406\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_3","title":"\u6c34\u4f4d\u7ebf","text":"<p>\u5728\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4e0b\uff0c\u6211\u4eec\u4e0d\u4f9d\u8d56\u7cfb\u7edf\u65f6\u95f4\uff0c\u800c\u662f\u57fa\u4e8e\u6570\u636e\u81ea\u5e26\u7684\u65f6\u95f4\u6233\u53bb\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65f6\u949f\uff0c\u7528\u6765\u8868\u793a\u5f53\u524d\u65f6\u95f4\u7684\u8fdb\u5c55\u3002\u4e8e\u662f\u6bcf\u4e2a\u5e76\u884c\u5b50\u4efb\u52a1\u90fd\u4f1a\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u903b\u8f91\u65f6\u949f\uff0c\u5b83\u7684\u524d\u8fdb\u662f\u9760\u6570\u636e\u7684\u65f6\u95f4\u6233\u6765\u9a71\u52a8\u7684\u3002</p> <p>\u4f46\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u79cd\u9a71\u52a8\u65b9\u5f0f\u53c8\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\u3002\u56e0\u4e3a\u6570\u636e\u672c\u8eab\u5728\u5904\u7406\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u53d8\u5316\uff0c\u5982\u679c\u9047\u5230\u7a97\u53e3\u805a\u5408\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u5176\u5b9e\u662f\u8981\u6512\u4e00\u6279\u6570\u636e\u624d\u4f1a\u8f93\u51fa\u4e00\u4e2a\u7ed3\u679c\uff0c\u90a3\u4e48\u4e0b\u6e38\u7684\u6570\u636e\u5c31\u4f1a\u53d8\u5c11\uff0c\u65f6\u95f4\u8fdb\u5ea6\u7684\u63a7\u5236\u5c31\u4e0d\u591f\u7cbe\u7ec6\u4e86\u3002\u53e6\u5916\uff0c\u6570\u636e\u5411\u4e0b\u6e38\u4efb\u52a1\u4f20\u9012\u65f6\uff0c\u4e00\u822c\u53ea\u80fd\u4f20\u8f93\u7ed9\u4e00\u4e2a\u5b50\u4efb\u52a1\uff08\u9664\u5e7f\u64ad\u5916\uff09\uff0c\u8fd9\u6837\u5176\u4ed6\u7684\u5e76\u884c\u5b50\u4efb\u52a1\u7684\u65f6\u949f\u5c31\u65e0\u6cd5\u63a8\u8fdb\u4e86\u3002\u4f8b\u5982\u4e00\u4e2a\u65f6\u95f4\u6233\u4e3a 9 \u70b9\u6574\u7684\u6570\u636e\u5230\u6765\uff0c\u5f53\u524d\u4efb\u52a1\u7684\u65f6\u949f\u5c31\u5df2\u7ecf\u662f 9 \u70b9\u4e86\uff1b\u5904\u7406\u5b8c\u5f53\u524d\u6570\u636e\u8981\u53d1\u9001\u5230\u4e0b\u6e38\uff0c\u5982\u679c\u4e0b\u6e38\u4efb\u52a1\u662f\u4e00\u4e2a\u7a97\u53e3\u8ba1\u7b97\uff0c\u5e76\u884c\u5ea6\u4e3a 3\uff0c\u90a3\u4e48\u63a5\u6536\u5230\u8fd9\u4e2a\u6570\u636e\u7684\u5b50\u4efb\u52a1\uff0c\u65f6\u949f\u4e5f\u4f1a\u8fdb\u5c55\u5230 9 \u70b9\uff0c9 \u70b9\u7ed3\u675f\u7684\u7a97\u53e3\u5c31\u53ef\u4ee5\u5173\u95ed\u8fdb\u884c\u8ba1\u7b97\u4e86\uff1b\u800c\u53e6\u5916\u4e24\u4e2a\u5e76\u884c\u5b50\u4efb\u52a1\u5219\u65f6\u95f4\u6ca1\u6709\u53d8\u5316\uff0c\u4e0d\u80fd\u8fdb\u884c\u7a97\u53e3\u8ba1\u7b97\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u628a\u65f6\u949f\u4e5f\u4ee5\u6570\u636e\u7684\u5f62\u5f0f\u4f20\u9012\u51fa\u53bb\uff0c\u544a\u8bc9\u4e0b\u6e38\u4efb\u52a1\u5f53\u524d\u65f6\u95f4\u7684\u8fdb\u5c55\uff1b\u800c\u4e14\u8fd9\u4e2a\u65f6\u949f\u7684\u4f20\u9012\u4e0d\u4f1a\u56e0\u4e3a\u7a97\u53e3\u805a\u5408\u4e4b\u7c7b\u7684\u8fd0\u7b97\u800c\u505c\u6ede\u3002\u4e00\u79cd\u7b80\u5355\u7684\u60f3\u6cd5\u662f\uff0c\u5728\u6570\u636e\u6d41\u4e2d\u52a0\u5165\u4e00\u4e2a\u65f6\u949f\u6807\u8bb0\uff0c\u8bb0\u5f55\u5f53\u524d\u7684\u4e8b\u4ef6\u65f6\u95f4\uff1b\u8fd9\u4e2a\u6807\u8bb0\u53ef\u4ee5\u76f4\u63a5\u5e7f\u64ad\u5230\u4e0b\u6e38\uff0c\u5f53\u4e0b\u6e38\u4efb\u52a1\u6536\u5230\u8fd9\u4e2a\u6807\u8bb0\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b0\u81ea\u5df1\u7684\u65f6\u949f\u4e86\u3002\u7531\u4e8e\u7c7b\u4f3c\u4e8e\u6c34\u6d41\u4e2d\u7528\u6765\u505a\u6807\u5fd7\u7684\u8bb0\u53f7\uff0c\u5728 Flink \u4e2d\uff0c\u8fd9\u79cd\u7528\u6765\u8861\u91cf\u4e8b\u4ef6\u65f6\u95f4\uff08Event Time\uff09\u8fdb\u5c55\u7684\u6807\u8bb0\uff0c\u5c31\u88ab\u79f0\u4f5c\u300c\u6c34\u4f4d\u7ebf\u300d\uff08Watermark\uff09\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u6c34\u4f4d\u7ebf\u53ef\u4ee5\u770b\u4f5c\u4e00\u6761\u7279\u6b8a\u7684\u6570\u636e\u8bb0\u5f55\uff0c\u5b83\u662f\u63d2\u5165\u5230\u6570\u636e\u6d41\u4e2d\u7684\u4e00\u4e2a\u6807\u8bb0\u70b9\uff0c\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u7528\u6765\u6307\u793a\u5f53\u524d\u7684\u4e8b\u4ef6\u65f6\u95f4\u3002\u800c\u5b83\u63d2\u5165\u6d41\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5c31\u5e94\u8be5\u662f\u5728\u67d0\u4e2a\u6570\u636e\u5230\u6765\u4e4b\u540e\uff1b\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u6570\u636e\u4e2d\u63d0\u53d6\u65f6\u95f4\u6233\uff0c\u4f5c\u4e3a\u5f53\u524d\u6c34\u4f4d\u7ebf\u7684\u65f6\u95f4\u6233\u4e86\u3002</p> <p></p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_4","title":"\u6709\u5e8f\u6d41\u4e2d\u7684\u6c34\u4f4d\u7ebf","text":"<p>\u5728\u7406\u60f3\u72b6\u6001\u4e0b\uff0c\u6570\u636e\u5e94\u8be5\u6309\u7167\u5b83\u4eec\u751f\u6210\u7684\u5148\u540e\u987a\u5e8f\u3001\u6392\u597d\u961f\u8fdb\u5165\u6d41\u4e2d\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u5904\u7406\u7684\u8fc7\u7a0b\u4f1a\u4fdd\u6301\u539f\u5148\u7684\u987a\u5e8f\u4e0d\u53d8\uff0c\u9075\u5b88\u5148\u6765\u540e\u5230\u7684\u539f\u5219\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u4ece\u6bcf\u4e2a\u6570\u636e\u4e2d\u63d0\u53d6\u65f6\u95f4\u6233\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u603b\u662f\u4ece\u5c0f\u5230\u5927\u589e\u957f\u7684\uff0c\u4ece\u800c\u63d2\u5165\u7684\u6c34\u4f4d\u7ebf\u4e5f\u4f1a\u4e0d\u65ad\u589e\u957f\u3001\u4e8b\u4ef6\u65f6\u949f\u4e0d\u65ad\u5411\u524d\u63a8\u8fdb\u3002</p> <p>\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5982\u679c\u5f53\u524d\u6570\u636e\u91cf\u975e\u5e38\u5927\uff0c\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u6570\u636e\u7684\u65f6\u95f4\u6233\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u65f6\u6bcf\u6765\u4e00\u6761\u6570\u636e\u5c31\u63d0\u53d6\u65f6\u95f4\u6233\u3001\u63d2\u5165\u6c34\u4f4d\u7ebf\u5c31\u505a\u4e86\u5927\u91cf\u7684\u65e0\u7528\u529f\u3002\u800c\u4e14\u5373\u4f7f\u65f6\u95f4\u6233\u4e0d\u540c\uff0c\u540c\u65f6\u6d8c\u6765\u7684\u6570\u636e\u65f6\u95f4\u5dee\u4f1a\u975e\u5e38\u5c0f\uff08\u6bd4\u5982\u51e0\u6beb\u79d2\uff09\uff0c\u5f80\u5f80\u5bf9\u5904\u7406\u8ba1\u7b97\u4e5f\u6ca1\u4ec0\u4e48\u5f71\u54cd\u3002\u6240\u4ee5\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u4e00\u822c\u4f1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u751f\u6210\u4e00\u4e2a\u6c34\u4f4d\u7ebf\uff0c\u8fd9\u4e2a\u6c34\u4f4d\u7ebf\u7684\u65f6\u95f4\u6233\uff0c\u5c31\u662f\u5f53\u524d\u6700\u65b0\u6570\u636e\u7684\u65f6\u95f4\u6233\u3002</p> <p></p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_5","title":"\u4e71\u5e8f\u6d41\u4e2d\u7684\u6c34\u4f4d\u7ebf","text":"<p>\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u5728\u8282\u70b9\u95f4\u4f20\u8f93\uff0c\u4f1a\u56e0\u4e3a\u7f51\u7edc\u4f20\u8f93\u5ef6\u8fdf\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u5bfc\u81f4\u987a\u5e8f\u53d1\u751f\u6539\u53d8\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u300c\u4e71\u5e8f\u6570\u636e\u300d\u3002</p> <p>\u6700\u76f4\u89c2\u7684\u60f3\u6cd5\u81ea\u7136\u662f\u8ddf\u4e4b\u524d\u4e00\u6837\uff0c\u6211\u4eec\u8fd8\u662f\u9760\u6570\u636e\u6765\u9a71\u52a8\uff0c\u6bcf\u6765\u4e00\u4e2a\u6570\u636e\u5c31\u63d0\u53d6\u5b83\u7684\u65f6\u95f4\u6233\u3001\u63d2\u5165\u4e00\u4e2a\u6c34\u4f4d\u7ebf\u3002\u4e0d\u8fc7\u73b0\u5728\u7684\u60c5\u51b5\u662f\u6570\u636e\u4e71\u5e8f\uff0c\u6240\u4ee5\u6709\u53ef\u80fd\u65b0\u7684\u65f6\u95f4\u6233\u6bd4\u4e4b\u524d\u7684\u8fd8\u5c0f\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u8fd9\u4e2a\u65f6\u95f4\u7684\u6c34\u4f4d\u7ebf\u518d\u63d2\u5165\uff0c\u6211\u4eec\u7684\u201c\u65f6\u949f\u201d\u5c31\u56de\u9000\u4e86\u2014\u2014\u6c34\u4f4d\u7ebf\u5c31\u4ee3\u8868\u4e86\u65f6\u949f\uff0c\u65f6\u5149\u4e0d\u80fd\u5012\u6d41\uff0c\u6240\u4ee5\u6c34\u4f4d\u7ebf\u7684\u65f6\u95f4\u6233\u4e5f\u4e0d\u80fd\u51cf\u5c0f\u3002</p> <p>\u89e3\u51b3\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u63d2\u5165\u65b0\u7684\u6c34\u4f4d\u7ebf\u65f6\uff0c\u8981\u5148\u5224\u65ad\u4e00\u4e0b\u65f6\u95f4\u6233\u662f\u5426\u6bd4\u4e4b\u524d\u7684\u5927\uff0c\u5426\u5219\u5c31\u4e0d\u518d\u751f\u6210\u65b0\u7684\u6c34\u4f4d\u7ebf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u6570\u636e\u7684\u65f6\u95f4\u6233\u6bd4\u5f53\u524d\u65f6\u949f\u5927\uff0c\u624d\u80fd\u63a8\u52a8\u65f6\u949f\u524d\u8fdb\uff0c\u8fd9\u65f6\u624d\u63d2\u5165\u6c34\u4f4d\u7ebf\u3002</p> <p></p> <p>\u8fd9\u6837\u505a\u5c3d\u7ba1\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u4e2a\u4e8b\u4ef6\u65f6\u949f\uff0c\u5374\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u95ee\u9898\uff1a\u6211\u4eec\u65e0\u6cd5\u6b63\u786e\u5904\u7406\u300c\u8fdf\u5230\u300d\u7684\u6570\u636e\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u6211\u4eec\u53ef\u4ee5\u66f4\u6539\u4e00\u4e0b\u65f6\u949f\u63a8\u8fdb\u7684\u903b\u8f91\uff1a\u5f53\u4e00\u4e2a\u5546\u54c1\u5230\u8fbe\u65f6\uff0c\u4e0d\u8981\u76f4\u63a5\u7528\u5b83\u7684\u751f\u4ea7\u65f6\u95f4\u4f5c\u4e3a\u5f53\u524d\u65f6\u95f4\uff0c\u800c\u662f\u51cf\u4e0a\u4e24\u79d2\u3002\u5373\u7528\u5f53\u524d\u5df2\u6709\u6570\u636e\u7684\u6700\u5927\u65f6\u95f4\u6233\u51cf\u53bb 2 \u79d2\uff0c\u5c31\u662f\u8981\u63d2\u5165\u7684\u6c34\u4f4d\u7ebf\u7684\u65f6\u95f4\u6233\u3002</p> <p>\u6c34\u4f4d\u7ebf\u7684\u9ed8\u8ba4\u8ba1\u7b97\u516c\u5f0f\uff1a<code>\u6c34\u4f4d\u7ebf = \u89c2\u5bdf\u5230\u7684\u6700\u5927\u4e8b\u4ef6\u65f6\u95f4 - \u6700\u5927\u5ef6\u8fdf\u65f6\u95f4 - 1ms</code></p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_6","title":"\u6c34\u4f4d\u7ebf\u7684\u7279\u6027","text":"<p>\u6c34\u4f4d\u7ebf\u5c31\u4ee3\u8868\u4e86\u5f53\u524d\u7684\u4e8b\u4ef6\u65f6\u95f4\u65f6\u949f\uff0c\u800c\u4e14\u53ef\u4ee5\u5728\u6570\u636e\u7684\u65f6\u95f4\u6233\u57fa\u7840\u4e0a\u52a0\u4e00\u4e9b\u5ef6\u8fdf\u6765\u4fdd\u8bc1\u4e0d\u4e22\u6570\u636e\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u4e71\u5e8f\u6d41\u7684\u6b63\u786e\u5904\u7406\u975e\u5e38\u91cd\u8981</p> <ul> <li>\u6c34\u4f4d\u7ebf\u662f\u63d2\u5165\u5230\u6570\u636e\u6d41\u4e2d\u7684\u4e00\u4e2a\u6807\u8bb0\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6570\u636e</li> <li>\u6c34\u4f4d\u7ebf\u4e3b\u8981\u7684\u5185\u5bb9\u662f\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u7528\u6765\u8868\u793a\u5f53\u524d\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5c55</li> <li>\u6c34\u4f4d\u7ebf\u662f\u57fa\u4e8e\u6570\u636e\u7684\u65f6\u95f4\u6233\u751f\u6210\u7684</li> <li>\u6c34\u4f4d\u7ebf\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u5355\u8c03\u9012\u589e\uff0c\u4ee5\u786e\u4fdd\u4efb\u52a1\u7684\u4e8b\u4ef6\u65f6\u95f4\u65f6\u949f\u4e00\u76f4\u5411\u524d\u63a8\u8fdb</li> <li>\u6c34\u4f4d\u7ebf\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u5ef6\u8fdf\uff0c\u6765\u4fdd\u8bc1\u6b63\u786e\u5904\u7406\u4e71\u5e8f\u6570\u636e</li> <li>\u4e00\u4e2a\u6c34\u4f4d\u7ebf Watermark(t)\uff0c\u8868\u793a\u5728\u5f53\u524d\u6d41\u4e2d\u4e8b\u4ef6\u65f6\u95f4\u5df2\u7ecf\u8fbe\u5230\u4e86\u65f6\u95f4\u6233 t, \u8fd9\u4ee3\u8868 t \u4e4b\u524d\u7684\u6240\u6709\u6570\u636e\u90fd\u5230\u9f50\u4e86\uff0c\u4e4b\u540e\u6d41\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u65f6\u95f4\u6233 t' \u2264 t \u7684\u6570\u636e</li> </ul> <p>\u6c34\u4f4d\u7ebf\u7684\u6743\u8861\u53d6\u820d</p> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8ba1\u7b97\u7ed3\u679c\u80fd\u66f4\u52a0\u51c6\u786e\uff0c\u90a3\u53ef\u4ee5\u5c06\u6c34\u4f4d\u7ebf\u7684\u5ef6\u8fdf\u8bbe\u7f6e\u5f97\u66f4\u9ad8\u4e00\u4e9b\uff0c\u7b49\u5f85\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u81ea\u7136\u4e5f\u5c31\u8d8a\u4e0d\u5bb9\u6613\u6f0f\u6389\u6570\u636e\u3002\u4e0d\u8fc7\u8fd9\u6837\u505a\u7684\u4ee3\u4ef7\u662f\u5904\u7406\u7684\u5b9e\u65f6\u6027\u964d\u4f4e\u4e86\uff0c\u6211\u4eec\u53ef\u80fd\u4e3a\u6781\u5c11\u6570\u7684\u8fdf\u5230\u6570\u636e\u589e\u52a0\u4e86\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u5ef6\u8fdf\u3002</p> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5904\u7406\u5f97\u66f4\u5feb\u3001\u5b9e\u65f6\u6027\u66f4\u5f3a\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u6c34\u4f4d\u7ebf\u5ef6\u8fdf\u8bbe\u5f97\u4f4e\u4e00\u4e9b\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5f88\u591a\u8fdf\u5230\u6570\u636e\u4f1a\u5728\u6c34\u4f4d\u7ebf\u4e4b\u540e\u624d\u5230\u8fbe\uff0c\u5c31\u4f1a\u5bfc\u81f4\u7a97\u53e3\u9057\u6f0f\u6570\u636e\uff0c\u8ba1\u7b97\u7ed3\u679c\u4e0d\u51c6\u786e\u3002</p> <p>\u6240\u4ee5 Flink \u4e2d\u7684\u6c34\u4f4d\u7ebf\uff0c\u5176\u5b9e\u662f\u6d41\u5904\u7406\u4e2d\u5bf9\u4f4e\u5ef6\u8fdf\u548c\u7ed3\u679c\u6b63\u786e\u6027\u7684\u4e00\u4e2a\u6743\u8861\u673a\u5236\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_7","title":"\u6c34\u4f4d\u7ebf\u7684\u4f20\u9012","text":"<p>\u5b9e\u9645\u5e94\u7528\u4e2d\u5f80\u5f80\u4e0a\u4e0b\u6e38\u90fd\u6709\u591a\u4e2a\u5e76\u884c\u5b50\u4efb\u52a1\uff0c\u4e3a\u4e86\u7edf\u4e00\u63a8\u8fdb\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5c55\uff0c\u6211\u4eec\u8981\u6c42\u4e0a\u6e38\u4efb\u52a1\u5904\u7406\u5b8c\u6c34\u4f4d\u7ebf\u3001\u65f6\u949f\u6539\u53d8\u4e4b\u540e\uff0c\u8981\u628a\u5f53\u524d\u7684\u6c34\u4f4d\u7ebf\u518d\u6b21\u53d1\u51fa\uff0c\u5e7f\u64ad\u7ed9\u6240\u6709\u7684\u4e0b\u6e38\u5b50\u4efb\u52a1\u3002</p> <p>\u53ef\u662f\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u5728\u201c\u91cd\u5206\u533a\u201d\uff08redistributing\uff09\u7684\u4f20\u8f93\u6a21\u5f0f\u4e0b\uff0c\u4e00\u4e2a\u4efb\u52a1\u6709\u53ef\u80fd\u4f1a\u6536\u5230\u6765\u81ea\u4e0d\u540c\u5206\u533a\u4e0a\u6e38\u5b50\u4efb\u52a1\u7684\u6570\u636e\u3002\u800c\u4e0d\u540c\u5206\u533a\u7684\u5b50\u4efb\u52a1\u65f6\u949f\u5e76\u4e0d\u540c\u6b65\uff0c\u6240\u4ee5\u540c\u4e00\u65f6\u523b\u53d1\u7ed9\u4e0b\u6e38\u4efb\u52a1\u7684\u6c34\u4f4d\u7ebf\u53ef\u80fd\u5e76\u4e0d\u76f8\u540c\u3002\u8fd9\u65f6\u4e0b\u6e38\u4efb\u52a1\u53c8\u8be5\u542c\u8c01\u7684\u5462\uff1f</p> <p>\u8fd9\u5c31\u8981\u56de\u5230\u6c34\u4f4d\u7ebf\u5b9a\u4e49\u7684\u672c\u8d28\u4e86\uff1a\u5b83\u8868\u793a\u7684\u662f\u300c\u5f53\u524d\u65f6\u95f4\u4e4b\u524d\u7684\u6570\u636e\uff0c\u90fd\u5df2\u7ecf\u5230\u9f50\u4e86\u300d\u3002\u8fd9\u662f\u4e00\u79cd\u4fdd\u8bc1\uff0c\u544a\u8bc9\u4e0b\u6e38\u4efb\u52a1\uff0c\u53ea\u8981\u4f60\u63a5\u5230\u8fd9\u4e2a\u6c34\u4f4d\u7ebf\uff0c\u5c31\u4ee3\u8868\u4e4b\u540e\u6211\u4e0d\u4f1a\u518d\u7ed9\u4f60\u53d1\u66f4\u65e9\u7684\u6570\u636e\u4e86\uff0c\u4f60\u53ef\u4ee5\u653e\u5fc3\u505a\u7edf\u8ba1\u8ba1\u7b97\u800c\u4e0d\u4f1a\u9057\u6f0f\u6570\u636e\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u6536\u5230\u4e86\u6765\u81ea\u4e0a\u6e38\u5e76\u884c\u4efb\u52a1\u7684\u4e0d\u540c\u7684\u6c34\u4f4d\u7ebf\uff0c\u8bf4\u660e\u4e0a\u6e38\u5404\u4e2a\u5206\u533a\u5904\u7406\u5f97\u6709\u5feb\u6709\u6162\uff0c\u8fdb\u5ea6\u5404\u4e0d\u76f8\u540c\u7684\u4e0a\u6e38\u5e76\u884c\u5b50\u4efb\u52a1\u90fd\u53d1\u6765\u4e86\u6c34\u4f4d\u7ebf\uff0c\u5e94\u8be5\u4ee5\u6162\u7684\u90a3\u4e2a\u4e3a\u51c6\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5f53\u524d\u4efb\u52a1\u7684\u4e0a\u6e38\uff0c\u6709\u56db\u4e2a\u5e76\u884c\u5b50\u4efb\u52a1\uff0c\u6240\u4ee5\u4f1a\u63a5\u6536\u5230\u6765\u81ea\u56db\u4e2a\u5206\u533a\u7684\u6c34\u4f4d\u7ebf\u3002\u800c\u4e0b\u6e38\u6709\u4e09\u4e2a\u5e76\u884c\u5b50\u4efb\u52a1\uff0c\u6240\u4ee5\u4f1a\u5411\u4e09\u4e2a\u5206\u533a\u53d1\u51fa\u6c34\u4f4d\u7ebf\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u4e0a\u6e38\u5e76\u884c\u5b50\u4efb\u52a1\u53d1\u6765\u4e0d\u540c\u7684\u6c34\u4f4d\u7ebf\uff0c\u5f53\u524d\u4efb\u52a1\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u5206\u533a\u8bbe\u7f6e\u4e00\u4e2a\u201c\u5206\u533a\u6c34\u4f4d\u7ebf\u201d\uff08Partition Watermark\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u5206\u533a\u65f6\u949f\uff1b\u800c\u5f53\u524d\u4efb\u52a1\u81ea\u5df1\u7684\u65f6\u949f\uff0c\u5c31\u662f\u6240\u6709\u5206\u533a\u65f6\u949f\u91cc\u6700\u5c0f\u7684\u90a3\u4e2a\u3002</li> <li>\u5f53\u6709\u4e00\u4e2a\u65b0\u7684\u6c34\u4f4d\u7ebf\uff08\u7b2c\u4e00\u5206\u533a\u7684 4\uff09\u4ece\u4e0a\u6e38\u4f20\u6765\u65f6\uff0c\u5f53\u524d\u4efb\u52a1\u4f1a\u9996\u5148\u66f4\u65b0\u5bf9\u5e94\u7684\u5206\u533a\u65f6\u949f\uff1b\u7136\u540e\u518d\u6b21\u5224\u65ad\u6240\u6709\u5206\u533a\u65f6\u949f\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u5982\u679c\u6bd4\u4e4b\u524d\u5927\uff0c\u8bf4\u660e\u4e8b\u4ef6\u65f6\u95f4\u6709\u4e86\u8fdb\u5c55\uff0c\u5f53\u524d\u4efb\u52a1\u7684\u65f6\u949f\u4e5f\u5c31\u53ef\u4ee5\u66f4\u65b0\u4e86\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u66f4\u65b0\u540e\u7684\u4efb\u52a1\u65f6\u949f\uff0c\u5e76\u4e0d\u4e00\u5b9a\u662f\u65b0\u6765\u7684\u90a3\u4e2a\u5206\u533a\u6c34\u4f4d\u7ebf\uff0c\u6bd4\u5982\u8fd9\u91cc\u6539\u53d8\u7684\u662f\u7b2c\u4e00\u5206\u533a\u7684\u65f6\u949f\uff0c\u4f46\u6700\u5c0f\u7684\u5206\u533a\u65f6\u949f\u662f\u7b2c\u4e09\u5206\u533a\u7684 3\uff0c\u4e8e\u662f\u5f53\u524d\u4efb\u52a1\u65f6\u949f\u5c31\u63a8\u8fdb\u5230\u4e86 3\u3002\u5f53\u65f6\u949f\u6709\u8fdb\u5c55\u65f6\uff0c\u5f53\u524d\u4efb\u52a1\u5c31\u4f1a\u5c06\u81ea\u5df1\u7684\u65f6\u949f\u4ee5\u6c34\u4f4d\u7ebf\u7684\u5f62\u5f0f\uff0c\u5e7f\u64ad\u7ed9\u4e0b\u6e38\u6240\u6709\u5b50\u4efb\u52a1\u3002</li> <li>\u518d\u6b21\u6536\u5230\u65b0\u7684\u6c34\u4f4d\u7ebf\uff08\u7b2c\u4e8c\u5206\u533a\u7684 7\uff09\u540e\uff0c\u6267\u884c\u540c\u6837\u7684\u5904\u7406\u6d41\u7a0b\u3002\u9996\u5148\u5c06\u7b2c\u4e8c\u4e2a\u5206\u533a\u65f6\u949f\u66f4\u65b0\u4e3a 7\uff0c\u7136\u540e\u6bd4\u8f83\u6240\u6709\u5206\u533a\u65f6\u949f\uff1b\u53d1\u73b0\u6700\u5c0f\u503c\u6ca1\u6709\u53d8\u5316\uff0c\u90a3\u4e48\u5f53\u524d\u4efb\u52a1\u7684\u65f6\u949f\u4e5f\u4e0d\u53d8\uff0c\u4e5f\u4e0d\u4f1a\u5411\u4e0b\u6e38\u4efb\u52a1\u53d1\u51fa\u6c34\u4f4d\u7ebf\u3002</li> <li>\u540c\u6837\u9053\u7406\uff0c\u5f53\u53c8\u4e00\u6b21\u6536\u5230\u65b0\u7684\u6c34\u4f4d\u7ebf\uff08\u7b2c\u4e09\u5206\u533a\u7684 6\uff09\u4e4b\u540e\uff0c\u7b2c\u4e09\u4e2a\u5206\u533a\u65f6\u949f\u66f4\u65b0\u4e3a 6\uff0c\u540c\u65f6\u6240\u6709\u5206\u533a\u65f6\u949f\u6700\u5c0f\u503c\u53d8\u6210\u4e86\u7b2c\u4e00\u5206\u533a\u7684 4\uff0c\u6240\u4ee5\u5f53\u524d\u4efb\u52a1\u7684\u65f6\u949f\u63a8\u8fdb\u5230 4\uff0c\u5e76\u53d1\u51fa\u65f6\u95f4\u6233\u4e3a 4 \u7684\u6c34\u4f4d\u7ebf\uff0c\u5e7f\u64ad\u5230\u4e0b\u6e38\u5404\u4e2a\u5206\u533a\u4efb\u52a1\u3002</li> </ol> <p>\u6c34\u4f4d\u7ebf\u5728\u4e0a\u4e0b\u6e38\u4efb\u52a1\u4e4b\u95f4\u7684\u4f20\u9012\uff0c\u975e\u5e38\u5de7\u5999\u5730\u907f\u514d\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6ca1\u6709\u7edf\u4e00\u65f6\u949f\u7684\u95ee\u9898\uff0c\u6bcf\u4e2a\u4efb\u52a1\u90fd\u4ee5\u201c\u5904\u7406\u5b8c\u4e4b\u524d\u6240\u6709\u6570\u636e\u201d\u4e3a\u6807\u51c6\u6765\u786e\u5b9a\u81ea\u5df1\u7684\u65f6\u949f\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7a97\u53e3\u5904\u7406\u7684\u7ed3\u679c\u603b\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#watermark-strategy","title":"Watermark Strategy","text":"<p>\u4e3a\u4e86\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\uff0cFlink \u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u77e5\u9053\u4e8b\u4ef6\u65f6\u95f4\u6233\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u610f\u5473\u7740\u6570\u636e\u6d41\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u9700\u8981\u62e5\u6709\u53ef\u5206\u914d\u7684\u4e8b\u4ef6\u65f6\u95f4\u6233\u3002\u5176\u901a\u5e38\u901a\u8fc7\u4f7f\u7528 TimestampAssigner API \u4ece\u5143\u7d20\u4e2d\u7684\u67d0\u4e2a\u5b57\u6bb5\u53bb\u8bbf\u95ee/\u63d0\u53d6\u65f6\u95f4\u6233\u3002</p> <p>\u65f6\u95f4\u6233\u7684\u5206\u914d\u4e0e watermark \u7684\u751f\u6210\u662f\u9f50\u5934\u5e76\u8fdb\u7684\uff0c\u5176\u53ef\u4ee5\u544a\u8bc9 Flink \u5e94\u7528\u7a0b\u5e8f\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u5176\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a WatermarkGenerator \u6765\u914d\u7f6e watermark \u7684\u751f\u6210\u65b9\u5f0f\u3002</p> <p>\u4f7f\u7528 Flink API \u65f6\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u540c\u65f6\u5305\u542b TimestampAssigner \u548c WatermarkGenerator \u7684 WatermarkStrategy\u3002WatermarkStrategy \u5de5\u5177\u7c7b\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u8bb8\u591a\u5e38\u7528\u7684 watermark \u7b56\u7565\uff0c\u5e76\u4e14\u7528\u6237\u4e5f\u53ef\u4ee5\u5728\u67d0\u4e9b\u5fc5\u8981\u573a\u666f\u4e0b\u6784\u5efa\u81ea\u5df1\u7684 watermark \u7b56\u7565\u3002WatermarkStrategy \u63a5\u53e3\u5982\u4e0b\uff1a</p> <pre><code>public interface WatermarkStrategy&lt;T&gt;\n    extends TimestampAssignerSupplier&lt;T&gt;, WatermarkGeneratorSupplier&lt;T&gt;{\n\n    /**\n     * \u6839\u636e\u7b56\u7565\u5b9e\u4f8b\u5316\u4e00\u4e2a\u53ef\u5206\u914d\u65f6\u95f4\u6233\u7684 TimestampAssigner\u3002\n     */\n    @Override\n    TimestampAssigner&lt;T&gt; createTimestampAssigner(TimestampAssignerSupplier.Context context);\n\n    /**\n     * \u6839\u636e\u7b56\u7565\u5b9e\u4f8b\u5316\u4e00\u4e2a watermark \u751f\u6210\u5668\u3002\n     */\n    @Override\n    WatermarkGenerator&lt;T&gt; createWatermarkGenerator(WatermarkGeneratorSupplier.Context context);\n}\n</code></pre> <p>\u5982\u4e0a\u6240\u8ff0\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e0d\u7528\u5b9e\u73b0\u6b64\u63a5\u53e3\uff0c\u800c\u662f\u53ef\u4ee5\u4f7f\u7528 WatermarkStrategy \u5de5\u5177\u7c7b\u4e2d\u901a\u7528\u7684 watermark \u7b56\u7565\uff0c\u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u7c7b\u5c06\u81ea\u5b9a\u4e49\u7684 TimestampAssigner \u4e0e WatermarkGenerator \u8fdb\u884c\u7ed1\u5b9a\u3002\u4f8b\u5982\uff0c\u4f60\u60f3\u8981\u8981\u4f7f\u7528\u6709\u754c\u65e0\u5e8f\uff08bounded-out-of-orderness\uff09watermark \u751f\u6210\u5668\u548c\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u65f6\u95f4\u6233\u5206\u914d\u5668\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\uff1a</p> <pre><code>WatermarkStrategy\n        .&lt;Tuple2&lt;Long, String&gt;&gt;forBoundedOutOfOrderness(Duration.ofSeconds(20))\n        .withTimestampAssigner((event, timestamp) -&gt; event.f0);\n</code></pre> <p>WatermarkStrategy \u53ef\u4ee5\u5728 Flink \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4e24\u5904\u4f7f\u7528\uff0c\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u5728\u6570\u636e\u6e90\u4e0a\u4f7f\u7528\uff0c\u7b2c\u4e8c\u79cd\u662f\u76f4\u63a5\u5728\u975e\u6570\u636e\u6e90\u7684\u64cd\u4f5c\u4e4b\u540e\u4f7f\u7528\u3002</p> <p>\u7b2c\u4e00\u79cd\u65b9\u5f0f\u76f8\u6bd4\u4f1a\u66f4\u597d\uff0c\u56e0\u4e3a\u6570\u636e\u6e90\u53ef\u4ee5\u5229\u7528 watermark \u751f\u6210\u903b\u8f91\u4e2d\u6709\u5173\u5206\u7247/\u5206\u533a\uff08shards/partitions/splits\uff09\u7684\u4fe1\u606f\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6570\u636e\u6e90\u901a\u5e38\u53ef\u4ee5\u66f4\u7cbe\u51c6\u5730\u8ddf\u8e2a watermark\uff0c\u6574\u4f53 watermark \u751f\u6210\u5c06\u66f4\u7cbe\u786e\u3002\u76f4\u63a5\u5728\u6e90\u4e0a\u6307\u5b9a WatermarkStrategy \u610f\u5473\u7740\u4f60\u5fc5\u987b\u4f7f\u7528\u7279\u5b9a\u6570\u636e\u6e90\u63a5\u53e3\u3002</p> <p>\u4ec5\u5f53\u65e0\u6cd5\u76f4\u63a5\u5728\u6570\u636e\u6e90\u4e0a\u8bbe\u7f6e\u7b56\u7565\u65f6\uff0c\u624d\u5e94\u8be5\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff08\u5728\u4efb\u610f\u8f6c\u6362\u64cd\u4f5c\u4e4b\u540e\u8bbe\u7f6e WatermarkStrategy\uff09\uff1a</p> <pre><code>DataStream&lt;MyEvent&gt; stream = env.readFile(\n        myFormat, myFilePath, FileProcessingMode.PROCESS_CONTINUOUSLY, 100,\n        FilePathFilter.createDefaultFilter(), typeInfo);\n\nDataStream&lt;MyEvent&gt; withTimestampsAndWatermarks = stream\n        .filter( event -&gt; event.severity() == WARNING )\n        .assignTimestampsAndWatermarks(&lt;watermark strategy&gt;);\n\nwithTimestampsAndWatermarks\n        .keyBy( (event) -&gt; event.getGroup() )\n        .window(TumblingEventTimeWindows.of(Time.seconds(10)))\n        .reduce( (a, b) -&gt; a.add(b) )\n        .addSink(...);\n</code></pre> <p>\u4f7f\u7528 WatermarkStrategy \u53bb\u83b7\u53d6\u6d41\u5e76\u751f\u6210\u5e26\u6709\u65f6\u95f4\u6233\u7684\u5143\u7d20\u548c watermark \u7684\u65b0\u6d41\u65f6\uff0c\u5982\u679c\u539f\u59cb\u6d41\u5df2\u7ecf\u5177\u6709\u65f6\u95f4\u6233\u6216 watermark\uff0c\u5219\u65b0\u6307\u5b9a\u7684\u65f6\u95f4\u6233\u5206\u914d\u5668\u5c06\u8986\u76d6\u539f\u6709\u7684\u65f6\u95f4\u6233\u548c watermark\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_8","title":"\u5904\u7406\u7a7a\u95f2\u6570\u636e\u6e90","text":"<p>\u5982\u679c\u6570\u636e\u6e90\u4e2d\u7684\u67d0\u4e00\u4e2a\u5206\u533a/\u5206\u7247\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u672a\u53d1\u9001\u4e8b\u4ef6\u6570\u636e\uff0c\u5219\u610f\u5473\u7740 WatermarkGenerator \u4e5f\u4e0d\u4f1a\u83b7\u5f97\u4efb\u4f55\u65b0\u6570\u636e\u53bb\u751f\u6210 watermark\u3002\u6211\u4eec\u79f0\u8fd9\u7c7b\u6570\u636e\u6e90\u4e3a\u7a7a\u95f2\u8f93\u5165\u6216\u7a7a\u95f2\u6e90\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u67d0\u4e9b\u5176\u4ed6\u5206\u533a\u4ecd\u7136\u53d1\u9001\u4e8b\u4ef6\u6570\u636e\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u7531\u4e8e\u4e0b\u6e38\u7b97\u5b50 watermark \u7684\u8ba1\u7b97\u65b9\u5f0f\u662f\u53d6\u6240\u6709\u4e0d\u540c\u7684\u4e0a\u6e38\u5e76\u884c\u6570\u636e\u6e90 watermark \u7684\u6700\u5c0f\u503c\uff0c\u5219\u5176 watermark \u5c06\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 WatermarkStrategy \u6765\u68c0\u6d4b\u7a7a\u95f2\u8f93\u5165\u5e76\u5c06\u5176\u6807\u8bb0\u4e3a\u7a7a\u95f2\u72b6\u6001\u3002WatermarkStrategy \u4e3a\u6b64\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de5\u5177\u63a5\u53e3\uff1a</p> <pre><code>WatermarkStrategy\n        .&lt;Tuple2&lt;Long, String&gt;&gt;forBoundedOutOfOrderness(Duration.ofSeconds(20))\n        .withIdleness(Duration.ofMinutes(1));\n</code></pre>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#watermarkgenerator","title":"\u81ea\u5b9a\u4e49 WatermarkGenerator","text":"<p>TimestampAssigner \u662f\u4e00\u4e2a\u53ef\u4ee5\u4ece\u4e8b\u4ef6\u6570\u636e\u4e2d\u63d0\u53d6\u65f6\u95f4\u6233\u5b57\u6bb5\u7684\u7b80\u5355\u51fd\u6570\uff0c\u6211\u4eec\u65e0\u9700\u8be6\u7ec6\u67e5\u770b\u5176\u5b9e\u73b0\u3002\u4f46\u662f WatermarkGenerator \u7684\u7f16\u5199\u76f8\u5bf9\u5c31\u8981\u590d\u6742\u4e00\u4e9b\u4e86\uff0cWatermarkGenerator \u63a5\u53e3\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * \u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u6216\u8005\u5468\u671f\u6027\u7684\u751f\u6210 watermark\u3002\n *\n * \u6ce8\u610f\uff1aWatermarkGenerator \u5c06\u4ee5\u524d\u4e92\u76f8\u72ec\u7acb\u7684 AssignerWithPunctuatedWatermarks\n * \u548c AssignerWithPeriodicWatermarks \u4e00\u540c\u5305\u542b\u4e86\u8fdb\u6765\u3002\n */\n@Public\npublic interface WatermarkGenerator&lt;T&gt; {\n\n    /**\n     * \u6bcf\u6765\u4e00\u6761\u4e8b\u4ef6\u6570\u636e\u8c03\u7528\u4e00\u6b21\uff0c\u53ef\u4ee5\u68c0\u67e5\u6216\u8005\u8bb0\u5f55\u4e8b\u4ef6\u7684\u65f6\u95f4\u6233\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u6570\u636e\u672c\u8eab\u53bb\u751f\u6210 watermark\u3002\n     */\n    void onEvent(T event, long eventTimestamp, WatermarkOutput output);\n\n    /**\n     * \u5468\u671f\u6027\u7684\u8c03\u7528\uff0c\u4e5f\u8bb8\u4f1a\u751f\u6210\u65b0\u7684 watermark\uff0c\u4e5f\u8bb8\u4e0d\u4f1a\u3002\n     *\n     * \u8c03\u7528\u6b64\u65b9\u6cd5\u751f\u6210 watermark \u7684\u95f4\u9694\u65f6\u95f4\u7531 ExecutionConfig#getAutoWatermarkInterval() \u51b3\u5b9a\u3002\n     */\n    void onPeriodicEmit(WatermarkOutput output);\n}\n</code></pre> <p>watermark \u7684\u751f\u6210\u65b9\u5f0f\u672c\u8d28\u4e0a\u662f\u6709\u4e24\u79cd\uff1a\u5468\u671f\u6027\u751f\u6210\u548c\u6807\u8bb0\u751f\u6210\u3002</p> <p>\u5468\u671f\u6027\u751f\u6210\u5668\u901a\u5e38\u901a\u8fc7 <code>onEvent()</code> \u89c2\u5bdf\u4f20\u5165\u7684\u4e8b\u4ef6\u6570\u636e\uff0c\u7136\u540e\u5728\u6846\u67b6\u8c03\u7528 <code>onPeriodicEmit()</code> \u65f6\u53d1\u51fa watermark\u3002</p> <p>\u6807\u8bb0\u751f\u6210\u5668\u5c06\u67e5\u770b <code>onEvent()</code> \u4e2d\u7684\u4e8b\u4ef6\u6570\u636e\uff0c\u5e76\u7b49\u5f85\u68c0\u67e5\u5728\u6d41\u4e2d\u643a\u5e26 watermark \u7684\u7279\u6b8a\u6807\u8bb0\u4e8b\u4ef6\u6216\u6253\u70b9\u6570\u636e\u3002\u5f53\u83b7\u53d6\u5230\u8fd9\u4e9b\u4e8b\u4ef6\u6570\u636e\u65f6\uff0c\u5b83\u5c06\u7acb\u5373\u53d1\u51fa watermark\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6807\u8bb0\u751f\u6210\u5668\u4e0d\u4f1a\u901a\u8fc7 <code>onPeriodicEmit()</code> \u53d1\u51fa watermark\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#watermark","title":"\u81ea\u5b9a\u4e49\u5468\u671f\u6027 Watermark \u751f\u6210\u5668","text":"<p>\u5468\u671f\u6027\u751f\u6210\u5668\u4f1a\u89c2\u5bdf\u6d41\u4e8b\u4ef6\u6570\u636e\u5e76\u5b9a\u671f\u751f\u6210 watermark\uff08\u5176\u751f\u6210\u53ef\u80fd\u53d6\u51b3\u4e8e\u6d41\u6570\u636e\uff0c\u6216\u8005\u5b8c\u5168\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\uff09\u3002</p> <p>\u751f\u6210 watermark \u7684\u65f6\u95f4\u95f4\u9694\uff08\u6bcf n \u6beb\u79d2\uff09\u53ef\u4ee5\u901a\u8fc7 <code>ExecutionConfig.setAutoWatermarkInterval(...)</code> \u6307\u5b9a\u3002\u6bcf\u6b21\u90fd\u4f1a\u8c03\u7528\u751f\u6210\u5668\u7684 <code>onPeriodicEmit()</code> \u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56de\u7684 watermark \u975e\u7a7a\u4e14\u503c\u5927\u4e8e\u524d\u4e00\u4e2a watermark\uff0c\u5219\u5c06\u53d1\u51fa\u65b0\u7684 watermark\u3002</p> <p>\u5982\u4e0b\u662f\u4e24\u4e2a\u4f7f\u7528\u5468\u671f\u6027 watermark \u751f\u6210\u5668\u7684\u7b80\u5355\u793a\u4f8b\u3002</p> <pre><code>/**\n * \u8be5 watermark \u751f\u6210\u5668\u53ef\u4ee5\u8986\u76d6\u7684\u573a\u666f\u662f\uff1a\u6570\u636e\u6e90\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e71\u5e8f\u3002\n * \u5373\u67d0\u4e2a\u6700\u65b0\u5230\u8fbe\u7684\u65f6\u95f4\u6233\u4e3a t \u7684\u5143\u7d20\u5c06\u5728\u6700\u65e9\u5230\u8fbe\u7684\u65f6\u95f4\u6233\u4e3a t \u7684\u5143\u7d20\u4e4b\u540e\u6700\u591a n \u6beb\u79d2\u5230\u8fbe\u3002\n */\npublic class BoundedOutOfOrdernessGenerator implements WatermarkGenerator&lt;MyEvent&gt; {\n\n    private final long maxOutOfOrderness = 3500; // 3.5 \u79d2\n\n    private long currentMaxTimestamp;\n\n    @Override\n    public void onEvent(MyEvent event, long eventTimestamp, WatermarkOutput output) {\n        currentMaxTimestamp = Math.max(currentMaxTimestamp, eventTimestamp);\n    }\n\n    @Override\n    public void onPeriodicEmit(WatermarkOutput output) {\n        // \u53d1\u51fa\u7684 watermark = \u5f53\u524d\u6700\u5927\u65f6\u95f4\u6233 - \u6700\u5927\u4e71\u5e8f\u65f6\u95f4\n        output.emitWatermark(new Watermark(currentMaxTimestamp - maxOutOfOrderness - 1));\n    }\n\n}\n</code></pre> <pre><code>/**\n * \u8be5\u751f\u6210\u5668\u751f\u6210\u7684 watermark \u6ede\u540e\u4e8e\u5904\u7406\u65f6\u95f4\u56fa\u5b9a\u91cf\u3002\u5b83\u5047\u5b9a\u5143\u7d20\u4f1a\u5728\u6709\u9650\u5ef6\u8fdf\u540e\u5230\u8fbe Flink\u3002\n */\npublic class TimeLagWatermarkGenerator implements WatermarkGenerator&lt;MyEvent&gt; {\n\n    private final long maxTimeLag = 5000; // 5 \u79d2\n\n    @Override\n    public void onEvent(MyEvent event, long eventTimestamp, WatermarkOutput output) {\n        // \u5904\u7406\u65f6\u95f4\u573a\u666f\u4e0b\u4e0d\u9700\u8981\u5b9e\u73b0\n    }\n\n    @Override\n    public void onPeriodicEmit(WatermarkOutput output) {\n        output.emitWatermark(new Watermark(System.currentTimeMillis() - maxTimeLag));\n    }\n}\n</code></pre>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#watermark_1","title":"\u81ea\u5b9a\u4e49\u6807\u8bb0 Watermark \u751f\u6210\u5668","text":"<p>\u6807\u8bb0 watermark \u751f\u6210\u5668\u89c2\u5bdf\u6d41\u4e8b\u4ef6\u6570\u636e\u5e76\u5728\u83b7\u53d6\u5230\u5e26\u6709 watermark \u4fe1\u606f\u7684\u7279\u6b8a\u4e8b\u4ef6\u5143\u7d20\u65f6\u53d1\u51fa watermark\u3002</p> <p>\u5982\u4e0b\u662f\u5b9e\u73b0\u6807\u8bb0\u751f\u6210\u5668\u7684\u65b9\u6cd5\uff0c\u5f53\u4e8b\u4ef6\u5e26\u6709\u67d0\u4e2a\u6307\u5b9a\u6807\u8bb0\u65f6\uff0c\u8be5\u751f\u6210\u5668\u5c31\u4f1a\u53d1\u51fa watermark\uff1a</p> <pre><code>public class PunctuatedAssigner implements WatermarkGenerator&lt;MyEvent&gt; {\n\n    @Override\n    public void onEvent(MyEvent event, long eventTimestamp, WatermarkOutput output) {\n        if (event.hasWatermarkMarker()) {\n            output.emitWatermark(new Watermark(event.getWatermarkTimestamp()));\n        }\n    }\n\n    @Override\n    public void onPeriodicEmit(WatermarkOutput output) {\n        // onEvent \u4e2d\u5df2\u7ecf\u5b9e\u73b0\n    }\n}\n</code></pre> <p>\u6ce8\u610f\uff1a \u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e2a\u4e8b\u4ef6\u53bb\u751f\u6210 watermark\u3002\u4f46\u662f\u7531\u4e8e\u6bcf\u4e2a watermark \u90fd\u4f1a\u5728\u4e0b\u6e38\u505a\u4e00\u4e9b\u8ba1\u7b97\uff0c\u56e0\u6b64\u8fc7\u591a\u7684 watermark \u4f1a\u964d\u4f4e\u7a0b\u5e8f\u6027\u80fd\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#watermark_2","title":"\u5185\u7f6e Watermark \u751f\u6210\u5668","text":"<p>Flink \u63d0\u4f9b\u7684\u62bd\u8c61\u65b9\u6cd5\u53ef\u4ee5\u5141\u8bb8\u7528\u6237\u81ea\u5df1\u53bb\u5b9a\u4e49\u65f6\u95f4\u6233\u5206\u914d\u65b9\u5f0f\u548c watermark \u751f\u6210\u7684\u65b9\u5f0f\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0 WatermarkGenerator \u63a5\u53e3\u6765\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\u3002</p> <p>\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7b80\u5316\u6b64\u7c7b\u4efb\u52a1\u7684\u7f16\u7a0b\u5de5\u4f5c\uff0cFlink \u6846\u67b6\u9884\u8bbe\u4e86\u4e00\u4e9b\u65f6\u95f4\u6233\u5206\u914d\u5668\u3002</p> <p>\u5355\u8c03\u9012\u589e\u65f6\u95f4\u6233\u5206\u914d\u5668</p> <p>\u5468\u671f\u6027 watermark \u751f\u6210\u65b9\u5f0f\u7684\u4e00\u4e2a\u6700\u7b80\u5355\u7279\u4f8b\u5c31\u662f\u4f60\u7ed9\u5b9a\u7684\u6570\u636e\u6e90\u4e2d\u6570\u636e\u7684\u65f6\u95f4\u6233\u5347\u5e8f\u51fa\u73b0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u524d\u65f6\u95f4\u6233\u5c31\u53ef\u4ee5\u5145\u5f53 watermark\uff0c\u56e0\u4e3a\u540e\u7eed\u5230\u8fbe\u6570\u636e\u7684\u65f6\u95f4\u6233\u4e0d\u4f1a\u6bd4\u5f53\u524d\u7684\u5c0f\u3002</p> <p>\u6ce8\u610f\uff1a\u5728 Flink \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u662f\u5e76\u884c\u6570\u636e\u6e90\uff0c\u5219\u53ea\u8981\u6c42\u5e76\u884c\u6570\u636e\u6e90\u4e2d\u7684\u6bcf\u4e2a\u5355\u5206\u533a\u6570\u636e\u6e90\u4efb\u52a1\u65f6\u95f4\u6233\u9012\u589e\u3002\u4f8b\u5982\uff0c\u8bbe\u7f6e\u6bcf\u4e00\u4e2a\u5e76\u884c\u6570\u636e\u6e90\u5b9e\u4f8b\u90fd\u53ea\u8bfb\u53d6\u4e00\u4e2a Kafka \u5206\u533a\uff0c\u5219\u65f6\u95f4\u6233\u53ea\u9700\u5728\u6bcf\u4e2a Kafka \u5206\u533a\u5185\u9012\u589e\u5373\u53ef\u3002Flink \u7684 watermark \u5408\u5e76\u673a\u5236\u4f1a\u5728\u5e76\u884c\u6570\u636e\u6d41\u8fdb\u884c\u5206\u53d1\uff08shuffle\uff09\u3001\u8054\u5408\uff08union\uff09\u3001\u8fde\u63a5\uff08connect\uff09\u6216\u5408\u5e76\uff08merge\uff09\u65f6\u751f\u6210\u6b63\u786e\u7684 watermark\u3002</p> <pre><code>WatermarkStrategy.forMonotonousTimestamps();\n</code></pre> <p>\u6570\u636e\u4e4b\u95f4\u5b58\u5728\u6700\u5927\u56fa\u5b9a\u5ef6\u8fdf\u7684\u65f6\u95f4\u6233\u5206\u914d\u5668</p> <p>\u53e6\u4e00\u4e2a\u5468\u671f\u6027 watermark \u751f\u6210\u7684\u5178\u578b\u4f8b\u5b50\u662f\uff0cwatermark \u6ede\u540e\u4e8e\u6570\u636e\u6d41\u4e2d\u6700\u5927\uff08\u4e8b\u4ef6\u65f6\u95f4\uff09\u65f6\u95f4\u6233\u4e00\u4e2a\u56fa\u5b9a\u7684\u65f6\u95f4\u91cf\u3002\u8be5\u793a\u4f8b\u53ef\u4ee5\u8986\u76d6\u7684\u573a\u666f\u662f\u4f60\u9884\u5148\u77e5\u9053\u6570\u636e\u6d41\u4e2d\u7684\u6570\u636e\u53ef\u80fd\u9047\u5230\u7684\u6700\u5927\u5ef6\u8fdf\u3002</p> <pre><code>WatermarkStrategy.forBoundedOutOfOrderness(Duration.ofSeconds(10));\n</code></pre>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_9","title":"\u7a97\u53e3","text":"<p>\u628a\u65e0\u754c\u6d41\u8fdb\u884c\u5207\u5206\uff0c\u6bcf\u4e00\u6bb5\u6570\u636e\u5206\u522b\u8fdb\u884c\u805a\u5408\uff0c\u7ed3\u679c\u53ea\u8f93\u51fa\u4e00\u6b21\u3002\u8fd9\u5c31\u76f8\u5f53\u4e8e\u5c06\u65e0\u754c\u6d41\u7684\u805a\u5408\u8f6c\u5316\u4e3a\u4e86\u6709\u754c\u6570\u636e\u96c6\u7684\u805a\u5408\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u300c\u7a97\u53e3\u300d\uff08Window\uff09\u805a\u5408\u64cd\u4f5c\u3002</p> <p>\u7a97\u53e3\u805a\u5408\u5176\u5b9e\u662f\u5bf9\u5b9e\u65f6\u6027\u548c\u5904\u7406\u6548\u7387\u7684\u4e00\u4e2a\u6743\u8861\u3002</p> <p>\u5728 Flink \u4e2d, \u7a97\u53e3\u5c31\u662f\u7528\u6765\u5904\u7406\u65e0\u754c\u6d41\u7684\u6838\u5fc3\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u628a\u7a97\u53e3\u60f3\u8c61\u6210\u4e00\u4e2a\u56fa\u5b9a\u4f4d\u7f6e\u7684\u201c\u6846\u201d\uff0c\u6570\u636e\u6e90\u6e90\u4e0d\u65ad\u5730\u6d41\u8fc7\u6765\uff0c\u5230\u67d0\u4e2a\u65f6\u95f4\u70b9\u7a97\u53e3\u8be5\u5173\u95ed\u4e86\uff0c\u5c31\u505c\u6b62\u6536\u96c6\u6570\u636e\u3001\u89e6\u53d1\u8ba1\u7b97\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> <p></p> <p>\u5bf9\u4e8e\u5904\u7406\u65f6\u95f4\u4e0b\u7684\u7a97\u53e3\u800c\u8a00\uff0c\u8fd9\u6837\u7406\u89e3\u4f3c\u4e4e\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\u7136\u800c\u5982\u679c\u6211\u4eec\u91c7\u7528\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\uff0c\u7531\u4e8e\u6570\u636e\u4e71\u5e8f\u95ee\u9898\uff0c\u8fd9\u6837\u7406\u89e3\u5c31\u6709\u4e9b\u95ee\u9898\u4e86\u3002\u7531\u4e8e\u6709\u4e71\u5e8f\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5ef6\u8fdf\u65f6\u95f4\u6765\u7b49\u6240\u6709\u6570\u636e\u5230\u9f50\u3002\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5ef6\u8fdf\u65f6\u95f4\u4e3a 2 \u79d2\uff0c\u8fd9\u6837 0~10 \u79d2\u7684\u7a97\u53e3\u4f1a\u5728\u65f6\u95f4\u6233\u4e3a 12 \u7684\u6570\u636e\u5230\u6765\u4e4b\u540e\uff0c\u624d\u771f\u6b63\u5173\u95ed\u8ba1\u7b97\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6b63\u5e38\u5305\u542b\u8fdf\u5230\u7684 9 \u79d2\u6570\u636e\u4e86\u3002</p> <p></p> <p>\u4f46\u662f\u8fd9\u6837\u4e00\u6765\uff0c0~10 \u79d2\u7684\u7a97\u53e3\u4e0d\u5149\u5305\u542b\u4e86\u8fdf\u5230\u7684 9 \u79d2\u6570\u636e\uff0c\u8fde 11 \u79d2\u548c 12 \u79d2\u7684\u6570\u636e\u4e5f\u5305\u542b\u8fdb\u53bb\u4e86\u3002\u6211\u4eec\u4e3a\u4e86\u6b63\u786e\u5904\u7406\u8fdf\u5230\u6570\u636e\uff0c\u7ed3\u679c\u628a\u65e9\u5230\u7684\u6570\u636e\u5212\u5206\u5230\u4e86\u9519\u8bef\u7684\u7a97\u53e3\u2014\u2014\u6700\u7ec8\u7ed3\u679c\u90fd\u662f\u9519\u8bef\u7684\u3002</p> <p>\u6240\u4ee5\u5728 Flink \u4e2d\uff0c\u7a97\u53e3\u5176\u5b9e\u5e76\u4e0d\u662f\u4e00\u4e2a\u300c\u6846\u300d\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u7a97\u53e3\u7406\u89e3\u6210\u4e00\u4e2a\u300c\u6876\u300d\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5728 Flink \u4e2d\uff0c\u7a97\u53e3\u53ef\u4ee5\u628a\u6d41\u5207\u5272\u6210\u6709\u9650\u5927\u5c0f\u7684\u591a\u4e2a\u300c\u5b58\u50a8\u6876\u300d\uff0c\u6bcf\u4e2a\u6570\u636e\u90fd\u4f1a\u5206\u53d1\u5230\u5bf9\u5e94\u7684\u6876\u4e2d\uff0c\u5f53\u5230\u8fbe\u7a97\u53e3\u7ed3\u675f\u65f6\u95f4\u65f6\uff0c\u5c31\u5bf9\u6bcf\u4e2a\u6876\u4e2d\u6536\u96c6\u7684\u6570\u636e\u8fdb\u884c\u8ba1\u7b97\u5904\u7406\u3002</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u68b3\u7406\u4e00\u4e0b\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4e0b\uff0c\u4e4b\u524d\u4f8b\u5b50\u4e2d\u7a97\u53e3\u7684\u5904\u7406\u8fc7\u7a0b\uff1a</p> <ol> <li>\u7b2c\u4e00\u4e2a\u6570\u636e\u65f6\u95f4\u6233\u4e3a 2\uff0c\u5224\u65ad\u4e4b\u540e\u521b\u5efa\u7b2c\u4e00\u4e2a\u7a97\u53e3 <code>[0, 10)</code>\uff0c\u5e76\u5c06 2 \u79d2\u6570\u636e\u4fdd\u5b58\u8fdb\u53bb</li> <li>\u540e\u7eed\u6570\u636e\u4f9d\u6b21\u5230\u6765\uff0c\u65f6\u95f4\u6233\u5747\u5728 <code>[0, 10)</code>\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u5168\u90e8\u4fdd\u5b58\u8fdb\u7b2c\u4e00\u4e2a\u7a97\u53e3</li> <li>11 \u79d2\u6570\u636e\u5230\u6765\uff0c\u5224\u65ad\u5b83\u4e0d\u5c5e\u4e8e<code>[0, 10)</code> \u7a97\u53e3\uff0c\u6240\u4ee5\u521b\u5efa\u7b2c\u4e8c\u4e2a\u7a97\u53e3 <code>[10, 20)</code>\uff0c\u5e76\u5c06 11 \u79d2\u7684\u6570\u636e\u4fdd\u5b58\u8fdb\u53bb\u3002\u7531\u4e8e\u6c34\u4f4d\u7ebf\u8bbe\u7f6e\u5ef6\u8fdf\u65f6\u95f4\u4e3a 2 \u79d2\uff0c\u6240\u4ee5\u73b0\u5728\u7684\u65f6\u949f\u662f 9 \u79d2\uff0c\u7b2c\u4e00\u4e2a\u7a97\u53e3\u4e5f\u6ca1\u6709\u5230\u5173\u95ed\u65f6\u95f4</li> <li>\u4e4b\u540e\u53c8\u6709 9 \u79d2\u6570\u636e\u5230\u6765\uff0c\u540c\u6837\u8fdb\u5165<code>[0, 10)</code> \u7a97\u53e3\u4e2d</li> <li>12 \u79d2\u6570\u636e\u5230\u6765\uff0c\u5224\u65ad\u5c5e\u4e8e <code>[10, 20)</code> \u7a97\u53e3\uff0c\u4fdd\u5b58\u8fdb\u53bb\u3002\u8fd9\u65f6\u4ea7\u751f\u7684\u6c34\u4f4d\u7ebf\u63a8\u8fdb\u5230\u4e86 10 \u79d2\uff0c\u6240\u4ee5 <code>[0, 10)</code> \u7a97\u53e3\u5e94\u8be5\u5173\u95ed\u4e86\u3002\u7b2c\u4e00\u4e2a\u7a97\u53e3\u6536\u96c6\u5230\u4e86\u6240\u6709\u7684 7 \u4e2a\u6570\u636e\uff0c\u8fdb\u884c\u5904\u7406\u8ba1\u7b97\u540e\u8f93\u51fa\u7ed3\u679c\uff0c\u5e76\u5c06\u7a97\u53e3\u5173\u95ed\u9500\u6bc1</li> <li>\u540c\u6837\u7684\uff0c\u4e4b\u540e\u7684\u6570\u636e\u4f9d\u6b21\u8fdb\u5165\u7b2c\u4e8c\u4e2a\u7a97\u53e3\uff0c\u9047\u5230 20 \u79d2\u7684\u6570\u636e\u65f6\u4f1a\u521b\u5efa\u7b2c\u4e09\u4e2a\u7a97\u53e3 <code>[20, 30)</code> \u5e76\u5c06\u6570\u636e\u4fdd\u5b58\u8fdb\u53bb\uff1b\u9047\u5230 22 \u79d2\u6570\u636e\u65f6\uff0c\u6c34\u4f4d\u7ebf\u8fbe\u5230\u4e86 20 \u79d2\uff0c\u7b2c\u4e8c\u4e2a\u7a97\u53e3\u89e6\u53d1\u8ba1\u7b97\uff0c\u8f93\u51fa\u7ed3\u679c\u5e76\u5173\u95ed</li> </ol> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cFlink \u4e2d\u7a97\u53e3\u5e76\u4e0d\u662f\u9759\u6001\u51c6\u5907\u597d\u7684\uff0c\u800c\u662f\u52a8\u6001\u521b\u5efa\u7684\uff1a\u5f53\u6709\u843d\u5728\u8fd9\u4e2a\u7a97\u53e3\u533a\u95f4\u8303\u56f4\u7684\u6570\u636e\u8fbe\u5230\u65f6\uff0c\u624d\u521b\u5efa\u5bf9\u5e94\u7684\u7a97\u53e3\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_10","title":"\u7a97\u53e3\u7c7b\u578b","text":"<p>\u7a97\u53e3\u5206\u914d\u5668\uff08Window Assigner\uff09</p> <p>\u7a97\u53e3\u5206\u914d\u5668\uff08Window Assigner\uff09\u662f\u51b3\u5b9a\u4e00\u4e2a\u5143\u7d20\u5c5e\u4e8e\u54ea\u4e2a\u7a97\u53e3\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002Flink \u4e3a\u6700\u5e38\u7528\u7684\u60c5\u51b5\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5b9a\u4e49\u597d\u7684 window assigner\uff0c\u4e5f\u5c31\u662f tumbling windows\u3001sliding windows\u3001session windows \u548c global windows\u3002\u4f60\u4e5f\u53ef\u4ee5\u7ee7\u627f WindowAssigner \u7c7b\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684 window assigner\u3002\u6240\u6709\u5185\u7f6e\u7684 window assigner\uff08\u9664\u4e86 global window\uff09\u90fd\u662f\u57fa\u4e8e\u65f6\u95f4\u5206\u53d1\u6570\u636e\u7684\uff0cprocessing time \u6216 event time \u5747\u53ef\u3002</p> <p>\u7a97\u53e3\u7684\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u5206\u4e3a 4 \u7c7b\uff1a</p> <ul> <li>\u6eda\u52a8\u7a97\u53e3\uff08Tumbling Window\uff09</li> <li>\u6ed1\u52a8\u7a97\u53e3\uff08Sliding Window\uff09</li> <li>\u4f1a\u8bdd\u7a97\u53e3\uff08Session Window\uff09</li> <li>\u5168\u5c40\u7a97\u53e3\uff08Global Window\uff09</li> </ul>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#tumbling-window","title":"\u6eda\u52a8\u7a97\u53e3\uff08Tumbling Window\uff09","text":"<p>\u6eda\u52a8\u7a97\u53e3\u6709\u56fa\u5b9a\u7684\u5927\u5c0f\uff0c\u662f\u4e00\u79cd\u5bf9\u6570\u636e\u8fdb\u884c\u5747\u5300\u5207\u7247\u7684\u5212\u5206\u65b9\u5f0f\u3002\u7a97\u53e3\u4e4b\u95f4\u6ca1\u6709\u91cd\u53e0\uff0c\u4e5f\u4e0d\u4f1a\u6709\u95f4\u9694\uff0c\u662f\u9996\u5c3e\u76f8\u63a5\u7684\u72b6\u6001\u3002</p> <p></p> <pre><code>DataStream&lt;T&gt; input = ...;\n\n// \u6eda\u52a8 event-time \u7a97\u53e3\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(TumblingEventTimeWindows.of(Time.seconds(5)))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n\n// \u6eda\u52a8 processing-time \u7a97\u53e3\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(TumblingProcessingTimeWindows.of(Time.seconds(5)))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n\n// \u957f\u5ea6\u4e3a\u4e00\u5929\u7684\u6eda\u52a8 event-time \u7a97\u53e3\uff0c \u504f\u79fb\u91cf\u4e3a -8 \u5c0f\u65f6\u3002\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(TumblingEventTimeWindows.of(Time.days(1), Time.hours(-8)))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n</code></pre> <p>\u5982\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u6240\u793a\uff0c\u6eda\u52a8\u7a97\u53e3\u7684 assigners \u4e5f\u53ef\u4ee5\u4f20\u5165\u53ef\u9009\u7684 offset \u53c2\u6570\u3002\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u6765\u5bf9\u9f50\u7a97\u53e3\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u4e0d\u8bbe\u7f6e offset \u65f6\uff0c\u957f\u5ea6\u4e3a\u4e00\u5c0f\u65f6\u7684\u6eda\u52a8\u7a97\u53e3\u4f1a\u4e0e Linux \u7684 epoch \u5bf9\u9f50\u3002\u4f60\u4f1a\u5f97\u5230\u5982\u4e0b\u65f6\u95f4\u6bb5\uff1a</p> <ul> <li>1:00:00.000 - 1:59:59.999</li> <li>2:00:00.000 - 2:59:59.999</li> </ul> <p>\u5982\u679c\u4f60\u60f3\u6539\u53d8\u5bf9\u9f50\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a offset\u3002\u5982\u679c\u8bbe\u7f6e\u4e86 15 \u5206\u949f\u7684 offset\uff0c\u4f60\u4f1a\u5f97\u5230\uff1a</p> <ul> <li>1:15:00.000 - 2:14:59.999</li> <li>2:15:00.000 - 3:14:59.999</li> </ul> <p>\u4e00\u4e2a\u91cd\u8981\u7684 offset \u7528\u4f8b\u662f\u6839\u636e UTC-0 \u8c03\u6574\u7a97\u53e3\u7684\u65f6\u5dee\u3002\u4f8b\u5982\uff0c\u5728\u4e2d\u56fd\uff0c\u4f60\u53ef\u80fd\u4f1a\u8bbe\u7f6e offset \u4e3a <code>Time.hours(-8)</code>\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#sliding-window","title":"\u6ed1\u52a8\u7a97\u53e3\uff08Sliding Window\uff09","text":"<p>\u4e0e\u6eda\u52a8\u7a97\u53e3\u7c7b\u4f3c\uff0c\u6ed1\u52a8\u7a97\u53e3\u7684\u5927\u5c0f\u4e5f\u662f\u56fa\u5b9a\u7684\u3002\u533a\u522b\u5728\u4e8e\uff0c\u7a97\u53e3\u4e4b\u95f4\u5e76\u4e0d\u662f\u9996\u5c3e\u76f8\u63a5\u7684\uff0c\u800c\u662f\u53ef\u4ee5\u300c\u9519\u5f00\u300d\u4e00\u5b9a\u7684\u4f4d\u7f6e\u3002\u5b9a\u4e49\u6ed1\u52a8\u7a97\u53e3\u7684\u53c2\u6570\u6709\u4e24 \u4e2a\uff1a\u7a97\u53e3\u5927\u5c0f\u548c\u6ed1\u52a8\u6b65\u957f\u3002</p> <p></p> <pre><code>DataStream&lt;T&gt; input = ...;\n\n// \u6ed1\u52a8 event-time \u7a97\u53e3\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(SlidingEventTimeWindows.of(Time.seconds(10), Time.seconds(5)))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n\n// \u6ed1\u52a8 processing-time \u7a97\u53e3\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(SlidingProcessingTimeWindows.of(Time.seconds(10), Time.seconds(5)))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n\n// \u6ed1\u52a8 processing-time \u7a97\u53e3\uff0c\u504f\u79fb\u91cf\u4e3a -8 \u5c0f\u65f6\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(SlidingProcessingTimeWindows.of(Time.hours(12), Time.hours(1), Time.hours(-8)))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n</code></pre>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#session-window","title":"\u4f1a\u8bdd\u7a97\u53e3\uff08Session Window\uff09","text":"<p>\u4f1a\u8bdd\u7a97\u53e3\u7684 assigner \u4f1a\u628a\u6570\u636e\u6309\u6d3b\u8dc3\u7684\u4f1a\u8bdd\u5206\u7ec4\u3002\u4e0e\u6eda\u52a8\u7a97\u53e3\u548c\u6ed1\u52a8\u7a97\u53e3\u4e0d\u540c\uff0c\u4f1a\u8bdd\u7a97\u53e3\u4e0d\u4f1a\u76f8\u4e92\u91cd\u53e0\uff0c\u4e14\u6ca1\u6709\u56fa\u5b9a\u7684\u5f00\u59cb\u6216\u7ed3\u675f\u65f6\u95f4\u3002</p> <p>\u4f1a\u8bdd\u7a97\u53e3\u5728\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u6536\u5230\u6570\u636e\u4e4b\u540e\u4f1a\u5173\u95ed\uff0c\u5373\u5728\u4e00\u6bb5\u4e0d\u6d3b\u8dc3\u7684\u95f4\u9694\u4e4b\u540e\u3002\u4f1a\u8bdd\u7a97\u53e3\u7684 assigner \u53ef\u4ee5\u8bbe\u7f6e\u56fa\u5b9a\u7684\u4f1a\u8bdd\u95f4\u9694\uff08session gap\uff09\u6216\u4f7f\u7528 session gap extractor \u51fd\u6570\u6765\u52a8\u6001\u5730\u5b9a\u4e49\u591a\u957f\u65f6\u95f4\u7b97\u4f5c\u4e0d\u6d3b\u8dc3\u3002</p> <p>\u5f53\u8d85\u51fa\u4e86\u4e0d\u6d3b\u8dc3\u7684\u65f6\u95f4\u6bb5\uff0c\u5f53\u524d\u7684\u4f1a\u8bdd\u5c31\u4f1a\u5173\u95ed\uff0c\u5e76\u4e14\u5c06\u63a5\u4e0b\u6765\u7684\u6570\u636e\u5206\u53d1\u5230\u65b0\u7684\u4f1a\u8bdd\u7a97\u53e3\u3002</p> <p></p> <pre><code>DataStream&lt;T&gt; input = ...;\n\n// \u8bbe\u7f6e\u4e86\u56fa\u5b9a\u95f4\u9694\u7684 event-time \u4f1a\u8bdd\u7a97\u53e3\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(EventTimeSessionWindows.withGap(Time.minutes(10)))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n\n// \u8bbe\u7f6e\u4e86\u52a8\u6001\u95f4\u9694\u7684 event-time \u4f1a\u8bdd\u7a97\u53e3\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(EventTimeSessionWindows.withDynamicGap((element) -&gt; {\n        // \u51b3\u5b9a\u5e76\u8fd4\u56de\u4f1a\u8bdd\u95f4\u9694\n    }))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n\n// \u8bbe\u7f6e\u4e86\u56fa\u5b9a\u95f4\u9694\u7684 processing-time session \u7a97\u53e3\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(ProcessingTimeSessionWindows.withGap(Time.minutes(10)))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n\n// \u8bbe\u7f6e\u4e86\u52a8\u6001\u95f4\u9694\u7684 processing-time \u4f1a\u8bdd\u7a97\u53e3\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(ProcessingTimeSessionWindows.withDynamicGap((element) -&gt; {\n        // \u51b3\u5b9a\u5e76\u8fd4\u56de\u4f1a\u8bdd\u95f4\u9694\n    }))\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n</code></pre> <p>Note</p> <p>\u4f1a\u8bdd\u7a97\u53e3\u5e76\u6ca1\u6709\u56fa\u5b9a\u7684\u5f00\u59cb\u6216\u7ed3\u675f\u65f6\u95f4\uff0c\u6240\u4ee5\u5b83\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e0e\u6ed1\u52a8\u7a97\u53e3\u548c\u6eda\u52a8\u7a97\u53e3\u4e0d\u540c\u3002\u5728 Flink \u5185\u90e8\uff0c\u4f1a\u8bdd\u7a97\u53e3\u7684\u7b97\u5b50\u4f1a\u4e3a\u6bcf\u4e00\u6761\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c \u7136\u540e\u5c06\u8ddd\u79bb\u4e0d\u8d85\u8fc7\u9884\u8bbe\u95f4\u9694\u7684\u7a97\u53e3\u5408\u5e76\u3002\u60f3\u8981\u8ba9\u7a97\u53e3\u53ef\u4ee5\u88ab\u5408\u5e76\uff0c\u4f1a\u8bdd\u7a97\u53e3\u9700\u8981\u62e5\u6709\u652f\u6301\u5408\u5e76\u7684 Trigger \u548c Window Function\uff0c \u6bd4\u5982\u8bf4 ReduceFunction\u3001AggregateFunction \u6216 ProcessWindowFunction\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#global-window","title":"\u5168\u5c40\u7a97\u53e3\uff08Global Window\uff09","text":"<p>\u5168\u5c40\u7a97\u53e3\u5168\u5c40\u6709\u6548\uff0c\u4f1a\u628a\u76f8\u540c key \u7684\u6240\u6709\u6570\u636e\u90fd\u5206\u914d\u5230\u540c\u4e00\u4e2a\u7a97\u53e3\u4e2d\uff0c\u5c31\u8ddf\u6ca1\u5206\u7a97\u53e3\u4e00\u6837\u3002\u8fd9\u6837\u7684\u7a97\u53e3\u6a21\u5f0f\u4ec5\u5728\u4f60\u6307\u5b9a\u4e86\u81ea\u5b9a\u4e49\u7684 trigger \u65f6\u6709\u7528\u3002\u65e0\u754c\u6d41\u7684\u6570\u636e\u6c38\u65e0\u6b62\u5c3d\uff0c\u6240\u4ee5\u8fd9\u79cd\u7a97\u53e3\u4e5f\u6ca1\u6709\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u662f\u4e0d\u4f1a\u505a\u89e6\u53d1\u8ba1\u7b97\u7684\u3002\u5982\u679c\u5e0c\u671b\u5b83\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u8ba1\u7b97\u5904\u7406\uff0c\u8fd8\u9700\u8981\u81ea\u5b9a\u4e49\u300c\u89e6\u53d1\u5668\u300d\uff08Trigger\uff09\u3002</p> <p></p> <pre><code>DataStream&lt;T&gt; input = ...;\n\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(GlobalWindows.create())\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n</code></pre>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_11","title":"\u7a97\u53e3\u7684\u751f\u547d\u5468\u671f","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0c\u4e00\u4e2a\u7a97\u53e3\u5728\u7b2c\u4e00\u4e2a\u5c5e\u4e8e\u5b83\u7684\u5143\u7d20\u5230\u8fbe\u65f6\u5c31\u4f1a\u88ab\u521b\u5efa\uff0c\u7136\u540e\u5728\u65f6\u95f4\uff08event \u6216 processing time\uff09 \u8d85\u8fc7\u7a97\u53e3\u7684\u300c\u7ed3\u675f\u65f6\u95f4\u6233 + \u7528\u6237\u5b9a\u4e49\u7684 allowed lateness\u300d\u65f6\u88ab\u5b8c\u5168\u5220\u9664\u3002Flink \u4ec5\u4fdd\u8bc1\u5220\u9664\u57fa\u4e8e\u65f6\u95f4\u7684\u7a97\u53e3\uff0c\u5176\u4ed6\u7c7b\u578b\u7684\u7a97\u53e3\u4e0d\u505a\u4fdd\u8bc1\uff0c\u6bd4\u5982\u5168\u5c40\u7a97\u53e3\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u57fa\u4e8e event time \u4e14\u8303\u56f4\u4e92\u4e0d\u91cd\u5408\uff08\u6eda\u52a8\uff09\u7684\u7a97\u53e3\u7b56\u7565\uff0c\u5982\u679c\u7a97\u53e3\u8bbe\u7f6e\u7684\u65f6\u957f\u4e3a\u4e94\u5206\u949f\u3001\u53ef\u5bb9\u5fcd\u7684\u8fdf\u5230\u65f6\u95f4\uff08allowed lateness\uff09\u4e3a 1 \u5206\u949f\uff0c \u90a3\u4e48\u7b2c\u4e00\u4e2a\u5143\u7d20\u843d\u5165 12:00 \u81f3 12:05 \u8fd9\u4e2a\u533a\u95f4\u65f6\uff0cFlink \u5c31\u4f1a\u4e3a\u8fd9\u4e2a\u533a\u95f4\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\u3002\u5f53 watermark \u8d8a\u8fc7 12:06 \u65f6\uff0c\u8fd9\u4e2a\u7a97\u53e3\u5c06\u88ab\u6467\u6bc1\u3002</p> <p>\u53e6\u5916\uff0c\u6bcf\u4e2a\u7a97\u53e3\u4f1a\u8bbe\u7f6e\u81ea\u5df1\u7684 Trigger \u548c function\uff08ProcessWindowFunction\u3001ReduceFunction\u3001\u6216 AggregateFunction\uff09\u3002function \u51b3\u5b9a\u5982\u4f55\u8ba1\u7b97\u7a97\u53e3\u4e2d\u7684\u5185\u5bb9\uff0c \u800c Trigger \u51b3\u5b9a\u4f55\u65f6\u7a97\u53e3\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u88ab function \u8ba1\u7b97\u3002Trigger \u7684\u89e6\u53d1\uff08fire\uff09\u6761\u4ef6\u53ef\u80fd\u662f\u201c\u5f53\u7a97\u53e3\u4e2d\u6709\u591a\u4e8e 4 \u6761\u6570\u636e\u201d\u6216\u201c\u5f53 watermark \u8d8a\u8fc7\u7a97\u53e3\u7684\u7ed3\u675f\u65f6\u95f4\u201d\u7b49\u3002Trigger \u8fd8\u53ef\u4ee5\u5728 window \u88ab\u521b\u5efa\u540e\u3001\u5220\u9664\u524d\u7684\u8fd9\u6bb5\u65f6\u95f4\u5185\u5b9a\u4e49\u4f55\u65f6\u6e05\u7406\uff08purge\uff09\u7a97\u53e3\u4e2d\u7684\u6570\u636e\u3002\u8fd9\u91cc\u7684\u6570\u636e\u4ec5\u6307\u7a97\u53e3\u5185\u7684\u5143\u7d20\uff0c\u4e0d\u5305\u62ec\u7a97\u53e3\u7684 meta data\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7a97\u53e3\u5728 purge \u540e\u4ecd\u7136\u53ef\u4ee5\u52a0\u5165\u65b0\u7684\u6570\u636e\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a Evictor\uff0c\u5728 trigger \u89e6\u53d1\u4e4b\u540e\uff0cEvictor \u53ef\u4ee5\u5728\u7a97\u53e3\u51fd\u6570\u7684\u524d\u540e\u5220\u9664\u6570\u636e\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_12","title":"\u7a97\u53e3\u7684\u8ba1\u7b97\u673a\u5236","text":"I. \u7a97\u53e3\u7684\u521b\u5efa <p>\u7a97\u53e3\u7684\u7c7b\u578b\u548c\u57fa\u672c\u4fe1\u606f\u7531\u7a97\u53e3\u5206\u914d\u5668\uff08Window Assigner\uff09\u6307\u5b9a\uff0c\u7a97\u53e3\u5206\u914d\u5668\u4f1a\u6839\u636e\u6bcf\u4e00\u6761\u8f93\u5165\u6570\u636e\u7684\u65f6\u95f4\uff08\u5904\u7406\u65f6\u95f4\u6216\u4e8b\u4ef6\u65f6\u95f4\uff09\u3001\u7a97\u53e3\u5927\u5c0f\u7b49\u53c2\u6570\u6765\u51b3\u5b9a\u5c06\u8fd9\u6761\u6570\u636e\u5206\u914d\u5230\u54ea\u4e2a\u65f6\u95f4\u8303\u56f4\u7684\u7a97\u53e3\u4e2d\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7a97\u53e3\u4e0d\u4f1a\u9884\u5148\u521b\u5efa\u597d\uff0c\u800c\u662f\u7531\u6570\u636e\u9a71\u52a8\u521b\u5efa\u3002\u5f53\u7b2c\u4e00\u4e2a\u5e94\u8be5\u5c5e\u4e8e\u8fd9\u4e2a\u7a97\u53e3\u7684\u6570\u636e\u5143\u7d20\u5230\u8fbe\u65f6\uff0c\u5c31\u4f1a\u521b\u5efa\u5bf9\u5e94\u7684\u7a97\u53e3\u3002</p> II. \u7a97\u53e3\u8ba1\u7b97\u7684\u89e6\u53d1 <p>\u9664\u4e86\u7a97\u53e3\u5206\u914d\u5668\uff0c\u6bcf\u4e2a\u7a97\u53e3\u8fd8\u4f1a\u6709\u81ea\u5df1\u7684\u7a97\u53e3\u51fd\u6570\uff08Window Function\uff09\u548c\u89e6\u53d1\u5668\uff08Trigger\uff09\u3002\u7a97\u53e3\u51fd\u6570\u53ef\u4ee5\u5206\u4e3a\u589e\u91cf\u805a\u5408\u51fd\u6570\u548c\u5168\u7a97\u53e3\u51fd\u6570\uff0c\u4e3b\u8981\u5b9a\u4e49\u4e86\u7a97\u53e3\u4e2d\u8ba1\u7b97\u7684\u903b\u8f91\uff1b\u800c\u89e6\u53d1\u5668\u662f\u901a\u8fc7\u5b9a\u65f6\u5668\u6765\u89e6\u53d1\u7a97\u53e3\u8ba1\u7b97\u7684\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u7a97\u53e3\u89e6\u53d1\u8ba1\u7b97\u7684\u65f6\u95f4\u90fd\u662f\u7a97\u53e3\u7ed3\u675f\u7684\u65f6\u95f4\u3002</p> <p>\u5bf9\u4e8e\u4e0d\u540c\u7684\u7a97\u53e3\u7c7b\u578b\uff0c\u89e6\u53d1\u8ba1\u7b97\u7684\u6761\u4ef6\u4e5f\u4f1a\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6eda\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3\uff0c\u5e94\u8be5\u5728\u6c34\u4f4d\u7ebf\u5230\u8fbe\u7a97\u53e3\u7ed3\u675f\u65f6\u95f4\u7684\u65f6\u5019\u89e6\u53d1\u8ba1\u7b97\u3002\u800c\u4e00\u4e2a\u8ba1\u6570\u7a97\u53e3\uff0c\u4f1a\u5728\u7a97\u53e3\u4e2d\u5143\u7d20\u6570\u91cf\u8fbe\u5230\u5b9a\u4e49\u5927\u5c0f\u65f6\u89e6\u53d1\u8ba1\u7b97\u3002\u6240\u6709 Flink \u9884\u5b9a\u4e49\u7684\u7a97\u53e3\u7c7b\u578b\u90fd\u6709\u5bf9\u5e94\u5185\u7f6e\u7684\u89e6\u53d1\u5668\u3002</p> <p>\u5f53\u6211\u4eec\u8bbe\u7f6e\u4e86\u5141\u8bb8\u5ef6\u8fdf\uff0c\u90a3\u4e48\u5982\u679c\u6c34\u4f4d\u7ebf\u8d85\u8fc7\u4e86\u7a97\u53e3\u7ed3\u675f\u65f6\u95f4\u3001\u4f46\u8fd8\u6ca1\u6709\u5230\u8fbe\u8bbe\u5b9a\u7684\u6700\u5927\u5ef6\u8fdf\u65f6\u95f4\uff0c\u8fd9\u671f\u95f4\u5185\u5230\u8fbe\u7684\u8fdf\u5230\u6570\u636e\u4e5f\u4f1a\u89e6\u53d1\u7a97\u53e3\u8ba1\u7b97\u3002</p> III. \u7a97\u53e3\u7684\u9500\u6bc1 <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5f53\u65f6\u95f4\u8fbe\u5230\u4e86\u7ed3\u675f\u70b9\uff0c\u5c31\u4f1a\u76f4\u63a5\u89e6\u53d1\u8ba1\u7b97\u8f93\u51fa\u7ed3\u679c\u3001\u8fdb\u800c\u6e05\u9664\u72b6\u6001\u9500\u6bc1\u7a97\u53e3\u3002\u8fd9\u65f6\u7a97\u53e3\u7684\u9500\u6bc1\u53ef\u4ee5\u8ba4\u4e3a\u548c\u89e6\u53d1\u8ba1\u7b97\u662f\u540c\u4e00\u65f6\u523b\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0cFlink \u4e2d\u53ea\u5bf9\u65f6\u95f4\u7a97\u53e3\u6709\u9500\u6bc1\u673a\u5236\u3002\u7531\u4e8e\u8ba1\u6570\u7a97\u53e3\u662f\u57fa\u4e8e\u5168\u5c40\u7a97\u53e3\u5b9e\u73b0\u7684\uff0c\u800c\u5168\u5c40\u7a97\u53e3\u4e0d\u4f1a\u6e05\u9664\u72b6\u6001\uff0c\u6240\u4ee5\u5c31\u4e0d\u4f1a\u88ab\u9500\u6bc1\u3002</p> <p>\u5728\u7279\u6b8a\u7684\u573a\u666f\u4e0b\uff0c\u7a97\u53e3\u7684\u9500\u6bc1\u548c\u89e6\u53d1\u8ba1\u7b97\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4e0b\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u5141\u8bb8\u5ef6\u8fdf\uff0c\u90a3\u4e48\u5728\u6c34\u4f4d\u7ebf\u5230\u8fbe\u7a97\u53e3\u7ed3\u675f\u65f6\u95f4\u65f6\uff0c\u4ecd\u7136\u4e0d\u4f1a\u9500\u6bc1\u7a97\u53e3\uff1b\u7a97\u53e3\u771f\u6b63\u88ab\u5b8c\u5168\u5220\u9664\u7684\u65f6\u95f4\u70b9\uff0c\u662f\u7a97\u53e3\u7684\u7ed3\u675f\u65f6\u95f4\u52a0\u4e0a\u7528\u6237\u6307\u5b9a\u7684\u5141\u8bb8\u5ef6\u8fdf\u65f6\u95f4\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#api","title":"\u7a97\u53e3 API \u8c03\u7528\u603b\u7ed3","text":"Keyed WindowsNon-Keyed Windows <pre><code>stream\n    .keyBy(...)               &lt;-  \u4ec5 keyed \u7a97\u53e3\u9700\u8981\n    .window(...)              &lt;-  \u5fc5\u586b\u9879\uff1a\"assigner\"\n    [.trigger(...)]            &lt;-  \u53ef\u9009\u9879\uff1a\"trigger\" (\u7701\u7565\u5219\u4f7f\u7528\u9ed8\u8ba4 trigger)\n    [.evictor(...)]            &lt;-  \u53ef\u9009\u9879\uff1a\"evictor\" (\u7701\u7565\u5219\u4e0d\u4f7f\u7528 evictor)\n    [.allowedLateness(...)]    &lt;-  \u53ef\u9009\u9879\uff1a\"lateness\" (\u7701\u7565\u5219\u4e3a 0)\n    [.sideOutputLateData(...)] &lt;-  \u53ef\u9009\u9879\uff1a\"output tag\" (\u7701\u7565\u5219\u4e0d\u5bf9\u8fdf\u5230\u6570\u636e\u4f7f\u7528 side output)\n    .reduce/aggregate/apply()      &lt;-  \u5fc5\u586b\u9879\uff1a\"function\"\n    [.getSideOutput(...)]      &lt;-  \u53ef\u9009\u9879\uff1a\"output tag\"\n</code></pre> <pre><code>stream\n    .windowAll(...)           &lt;-  \u5fc5\u586b\u9879\uff1a\"assigner\"\n    [.trigger(...)]            &lt;-  \u53ef\u9009\u9879\uff1a\"trigger\" (else default trigger)\n    [.evictor(...)]            &lt;-  \u53ef\u9009\u9879\uff1a\"evictor\" (else no evictor)\n    [.allowedLateness(...)]    &lt;-  \u53ef\u9009\u9879\uff1a\"lateness\" (else zero)\n    [.sideOutputLateData(...)] &lt;-  \u53ef\u9009\u9879\uff1a\"output tag\" (else no side output for late data)\n    .reduce/aggregate/apply()      &lt;-  \u5fc5\u586b\u9879\uff1a\"function\"\n    [.getSideOutput(...)]      &lt;-  \u53ef\u9009\u9879\uff1a\"output tag\"\n</code></pre> <p>Window API \u9996\u5148\u6309\u7167\u65f6\u5019\u6309\u952e\u5206\u533a\u5206\u6210\u4e24\u7c7b\uff1a</p> <ul> <li>keyBy \u4e4b\u540e\u7684 KeyedStream\uff0c\u53ef\u4ee5\u8c03\u7528 <code>.window()</code> \u65b9\u6cd5\u58f0\u660e\u6309\u952e\u5206\u533a\u7a97\u53e3\uff08Keyed Windows\uff09</li> <li>\u5982\u679c\u4e0d\u505a keyBy\uff0cDataStream \u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 <code>.windowAll()</code> \u58f0\u660e\u975e\u6309\u952e\u5206\u533a\u7a97\u53e3\uff0c\u4e4b\u540e\u7684\u65b9\u6cd5\u8c03\u7528\u5c31\u5b8c\u5168\u4e00\u6837\u4e86</li> </ul> <p>\u63a5\u4e0b\u6765\u901a\u8fc7\u5404\u7c7b\u8f6c\u6362\u65b9\u6cd5\uff08reduce/aggregate/apply/process\uff09\u7ed9\u51fa\u7a97\u53e3\u51fd\u6570(ReduceFunction/AggregateFunction/ProcessWindowFunction)\uff0c\u5b9a\u4e49\u7a97\u53e3\u7684\u5177\u4f53\u8ba1\u7b97\u5904\u7406\u903b\u8f91\uff0c\u8f6c\u6362\u4e4b\u540e\u91cd\u65b0\u5f97\u5230 DataStream\u3002\u8fd9\u4e24\u8005\u5fc5\u4e0d\u53ef\u5c11\uff0c\u662f\u7a97\u53e3\u7b97\u5b50\uff08WindowOperator\uff09\u6700\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\u3002</p> <p>\u6b64\u5916\uff0c\u5728\u8fd9\u4e24\u8005\u4e4b\u95f4\uff0c\u8fd8\u53ef\u4ee5\u57fa\u4e8e WindowedStream \u8c03\u7528 <code>.trigger()</code> \u81ea\u5b9a\u4e49\u89e6\u53d1\u5668\u3001\u8c03\u7528 <code>.evictor()</code> \u5b9a\u4e49\u79fb\u9664\u5668\u3001\u8c03\u7528 <code>.allowedLateness()</code> \u6307\u5b9a\u5141\u8bb8\u5ef6\u8fdf\u65f6\u95f4\u3001\u8c03\u7528 <code>.sideOutputLateData()</code> \u5c06\u8fdf\u5230\u6570\u636e\u5199\u5165\u4fa7\u8f93\u51fa\u6d41\uff0c\u8fd9\u4e9b\u90fd\u662f\u53ef\u9009\u7684 API\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u5b9e\u73b0\u3002\u800c\u5982\u679c\u5b9a\u4e49\u4e86\u4fa7\u8f93\u51fa\u6d41\uff0c\u53ef\u4ee5\u57fa\u4e8e\u7a97\u53e3\u805a\u5408\u4e4b\u540e\u7684 DataStream \u8c03\u7528 <code>.getSideOutput()</code> \u83b7\u53d6\u4fa7\u8f93\u51fa\u6d41\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#window-functions","title":"\u7a97\u53e3\u51fd\u6570\uff08Window Functions\uff09","text":"<p>\u5b9a\u4e49\u4e86 window assigner \u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u5f53\u7a97\u53e3\u89e6\u53d1\u4e4b\u540e\uff0c\u5982\u4f55\u8ba1\u7b97\u6bcf\u4e2a\u7a97\u53e3\u4e2d\u7684\u6570\u636e\uff0c\u8fd9\u5c31\u662f window function \u7684\u804c\u8d23\u4e86\u3002\u5173\u4e8e\u7a97\u53e3\u5982\u4f55\u89e6\u53d1\uff0c\u8be6\u89c1 triggers\u3002</p> <p>\u7a97\u53e3\u51fd\u6570\u6709\u4e09\u79cd\uff1aReduceFunction\u3001AggregateFunction \u548c ProcessWindowFunction\u3002\u524d\u4e24\u8005\u6267\u884c\u8d77\u6765\u66f4\u9ad8\u6548\uff08\u8be6\u89c1 State Size\uff09\u56e0\u4e3a Flink \u53ef\u4ee5\u5728\u6bcf\u6761\u6570\u636e\u5230\u8fbe\u7a97\u53e3\u540e\u8fdb\u884c\u589e\u91cf\u805a\u5408\uff08incrementally aggregate\uff09\u3002 \u800c ProcessWindowFunction \u4f1a\u5f97\u5230\u80fd\u591f\u904d\u5386\u5f53\u524d\u7a97\u53e3\u5185\u6240\u6709\u6570\u636e\u7684 Iterable\uff0c\u4ee5\u53ca\u5173\u4e8e\u8fd9\u4e2a\u7a97\u53e3\u7684 meta-information\u3002</p> <p>\u4f7f\u7528 ProcessWindowFunction \u7684\u7a97\u53e3\u8f6c\u6362\u64cd\u4f5c\u6ca1\u6709\u5176\u4ed6\u4e24\u79cd\u51fd\u6570\u9ad8\u6548\uff0c\u56e0\u4e3a Flink \u5728\u7a97\u53e3\u89e6\u53d1\u524d\u5fc5\u987b\u7f13\u5b58\u91cc\u9762\u7684\u6240\u6709\u6570\u636e\u3002ProcessWindowFunction \u53ef\u4ee5\u4e0e ReduceFunction \u6216 AggregateFunction \u5408\u5e76\u6765\u63d0\u9ad8\u6548\u7387\u3002 \u8fd9\u6837\u505a\u65e2\u53ef\u4ee5\u589e\u91cf\u805a\u5408\u7a97\u53e3\u5185\u7684\u6570\u636e\uff0c\u53c8\u53ef\u4ee5\u4ece ProcessWindowFunction \u63a5\u6536\u7a97\u53e3\u7684 metadata\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#reducefunction","title":"ReduceFunction","text":"<p>ReduceFunction \u6307\u5b9a\u4e24\u6761\u8f93\u5165\u6570\u636e\u5982\u4f55\u5408\u5e76\u8d77\u6765\u4ea7\u751f\u4e00\u6761\u8f93\u51fa\u6570\u636e\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002Flink \u4f7f\u7528 ReduceFunction \u5bf9\u7a97\u53e3\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u91cf\u805a\u5408\u3002</p> <pre><code>DataStream&lt;Tuple2&lt;String, Long&gt;&gt; input = ...;\n\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(&lt;window assigner&gt;)\n    .reduce(new ReduceFunction&lt;Tuple2&lt;String, Long&gt;&gt;() {\n      public Tuple2&lt;String, Long&gt; reduce(Tuple2&lt;String, Long&gt; v1, Tuple2&lt;String, Long&gt; v2) {\n        return new Tuple2&lt;&gt;(v1.f0, v1.f1 + v2.f1);\n      }\n    });\n</code></pre> <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u5bf9\u7a97\u53e3\u5185\u5143\u7ec4\u7684\u7b2c\u4e8c\u4e2a\u5c5e\u6027\u6c42\u548c\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#aggregatefunction","title":"AggregateFunction","text":"<p>ReduceFunction \u662f AggregateFunction \u7684\u7279\u6b8a\u60c5\u51b5\u3002AggregateFunction \u63a5\u6536\u4e09\u4e2a\u7c7b\u578b\uff1a\u8f93\u5165\u6570\u636e\u7684\u7c7b\u578b(IN)\u3001\u7d2f\u52a0\u5668\u7684\u7c7b\u578b\uff08ACC\uff09\u548c\u8f93\u51fa\u6570\u636e\u7684\u7c7b\u578b\uff08OUT\uff09\u3002\u8f93\u5165\u6570\u636e\u7684\u7c7b\u578b\u662f\u8f93\u5165\u6d41\u7684\u5143\u7d20\u7c7b\u578b\uff0cAggregateFunction \u63a5\u53e3\u6709\u5982\u4e0b\u51e0\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li>\u521b\u5efa\u521d\u59cb\u7d2f\u52a0\u5668</li> <li>\u628a\u6bcf\u4e00\u6761\u5143\u7d20\u52a0\u8fdb\u7d2f\u52a0\u5668</li> <li>\u5408\u5e76\u4e24\u4e2a\u7d2f\u52a0\u5668</li> <li>\u4ece\u7d2f\u52a0\u5668\u4e2d\u63d0\u53d6\u8f93\u51fa\uff08OUT \u7c7b\u578b\uff09</li> </ul> <p>\u4e0e ReduceFunction \u76f8\u540c\uff0cFlink \u4f1a\u5728\u8f93\u5165\u6570\u636e\u5230\u8fbe\u7a97\u53e3\u65f6\u76f4\u63a5\u8fdb\u884c\u589e\u91cf\u805a\u5408\u3002</p> <pre><code>/**\n * The accumulator is used to keep a running sum and a count. The getResult method\n * computes the average.\n */\nprivate static class AverageAggregate\n    implements AggregateFunction&lt;Tuple2&lt;String, Long&gt;, Tuple2&lt;Long, Long&gt;, Double&gt; {\n  @Override\n  public Tuple2&lt;Long, Long&gt; createAccumulator() {\n    return new Tuple2&lt;&gt;(0L, 0L);\n  }\n\n  @Override\n  public Tuple2&lt;Long, Long&gt; add(Tuple2&lt;String, Long&gt; value, Tuple2&lt;Long, Long&gt; accumulator) {\n    return new Tuple2&lt;&gt;(accumulator.f0 + value.f1, accumulator.f1 + 1L);\n  }\n\n  @Override\n  public Double getResult(Tuple2&lt;Long, Long&gt; accumulator) {\n    return ((double) accumulator.f0) / accumulator.f1;\n  }\n\n  @Override\n  public Tuple2&lt;Long, Long&gt; merge(Tuple2&lt;Long, Long&gt; a, Tuple2&lt;Long, Long&gt; b) {\n    return new Tuple2&lt;&gt;(a.f0 + b.f0, a.f1 + b.f1);\n  }\n}\n\nDataStream&lt;Tuple2&lt;String, Long&gt;&gt; input = ...;\n\ninput\n    .keyBy(&lt;key selector&gt;)\n    .window(&lt;window assigner&gt;)\n    .aggregate(new AverageAggregate());\n</code></pre> <p>\u4e0a\u4f8b\u8ba1\u7b97\u4e86\u7a97\u53e3\u5185\u6240\u6709\u5143\u7d20\u7b2c\u4e8c\u4e2a\u5c5e\u6027\u7684\u5e73\u5747\u503c\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#processwindowfunction","title":"ProcessWindowFunction","text":"<p>ProcessWindowFunction \u6709\u80fd\u83b7\u53d6\u5305\u542b\u7a97\u53e3\u5185\u6240\u6709\u5143\u7d20\u7684 Iterable\uff0c\u4ee5\u53ca\u7528\u6765\u83b7\u53d6\u65f6\u95f4\u548c\u72b6\u6001\u4fe1\u606f\u7684 Context \u5bf9\u8c61\uff0c\u6bd4\u5176\u4ed6\u7a97\u53e3\u51fd\u6570\u66f4\u52a0\u7075\u6d3b\u3002 ProcessWindowFunction \u7684\u7075\u6d3b\u6027\u662f\u4ee5\u6027\u80fd\u548c\u8d44\u6e90\u6d88\u8017\u4e3a\u4ee3\u4ef7\u7684\uff0c\u56e0\u4e3a\u7a97\u53e3\u4e2d\u7684\u6570\u636e\u65e0\u6cd5\u88ab\u589e\u91cf\u805a\u5408\uff0c\u800c\u9700\u8981\u5728\u7a97\u53e3\u89e6\u53d1\u524d\u7f13\u5b58\u6240\u6709\u6570\u636e\u3002</p> <pre><code>DataStream&lt;Tuple2&lt;String, Long&gt;&gt; input = ...;\n\ninput\n  .keyBy(t -&gt; t.f0)\n  .window(TumblingEventTimeWindows.of(Time.minutes(5)))\n  .process(new MyProcessWindowFunction());\n\n/* ... */\n\npublic class MyProcessWindowFunction\n    extends ProcessWindowFunction&lt;Tuple2&lt;String, Long&gt;, String, String, TimeWindow&gt; {\n\n  @Override\n  public void process(String key, Context context, Iterable&lt;Tuple2&lt;String, Long&gt;&gt; input, Collector&lt;String&gt; out) {\n    long count = 0;\n    for (Tuple2&lt;String, Long&gt; in: input) {\n      count++;\n    }\n    out.collect(\"Window: \" + context.window() + \"count: \" + count);\n  }\n}\n</code></pre> <p>\u4e0a\u4f8b\u4f7f\u7528 ProcessWindowFunction \u5bf9\u7a97\u53e3\u4e2d\u7684\u5143\u7d20\u8ba1\u6570\uff0c\u5e76\u4e14\u5c06\u7a97\u53e3\u672c\u8eab\u7684\u4fe1\u606f\u4e00\u540c\u8f93\u51fa\u3002\u6ce8\u610f\uff0c\u4f7f\u7528 ProcessWindowFunction \u5b8c\u6210\u7b80\u5355\u7684\u805a\u5408\u4efb\u52a1\u662f\u975e\u5e38\u4f4e\u6548\u7684\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#processwindowfunction_1","title":"\u589e\u91cf\u805a\u5408\u7684 ProcessWindowFunction","text":"<p>ProcessWindowFunction \u53ef\u4ee5\u4e0e ReduceFunction \u6216 AggregateFunction \u642d\u914d\u4f7f\u7528\uff0c\u4f7f\u5176\u80fd\u591f\u5728\u6570\u636e\u5230\u8fbe\u7a97\u53e3\u7684\u65f6\u5019\u8fdb\u884c\u589e\u91cf\u805a\u5408\u3002\u5f53\u7a97\u53e3\u5173\u95ed\u65f6\uff0cProcessWindowFunction \u5c06\u4f1a\u5f97\u5230\u805a\u5408\u7684\u7ed3\u679c\u3002\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u589e\u91cf\u805a\u5408\u7a97\u53e3\u7684\u5143\u7d20\u5e76\u4e14\u4ece ProcessWindowFunction \u4e2d\u83b7\u5f97\u7a97\u53e3\u7684\u5143\u6570\u636e\u3002</p> <p>\u4e0b\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5c06 ReduceFunction \u4e0e ProcessWindowFunction \u7ec4\u5408\uff0c\u8fd4\u56de\u7a97\u53e3\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\u548c\u7a97\u53e3\u7684\u5f00\u59cb\u65f6\u95f4\u3002</p> <pre><code>DataStream&lt;SensorReading&gt; input = ...;\n\ninput\n  .keyBy(&lt;key selector&gt;)\n  .window(&lt;window assigner&gt;)\n  .reduce(new MyReduceFunction(), new MyProcessWindowFunction());\n\n// Function definitions\n\nprivate static class MyReduceFunction implements ReduceFunction&lt;SensorReading&gt; {\n\n  public SensorReading reduce(SensorReading r1, SensorReading r2) {\n      return r1.value() &gt; r2.value() ? r2 : r1;\n  }\n}\n\nprivate static class MyProcessWindowFunction\n    extends ProcessWindowFunction&lt;SensorReading, Tuple2&lt;Long, SensorReading&gt;, String, TimeWindow&gt; {\n\n  public void process(String key,\n                    Context context,\n                    Iterable&lt;SensorReading&gt; minReadings,\n                    Collector&lt;Tuple2&lt;Long, SensorReading&gt;&gt; out) {\n      SensorReading min = minReadings.iterator().next();\n      out.collect(new Tuple2&lt;Long, SensorReading&gt;(context.window().getStart(), min));\n  }\n}\n</code></pre> <p>\u4e0b\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5c06 AggregateFunction \u4e0e ProcessWindowFunction \u7ec4\u5408\uff0c\u8ba1\u7b97\u5e73\u5747\u503c\u5e76\u4e0e\u7a97\u53e3\u5bf9\u5e94\u7684 key \u4e00\u540c\u8f93\u51fa\u3002</p> <pre><code>DataStream&lt;Tuple2&lt;String, Long&gt;&gt; input = ...;\n\ninput\n  .keyBy(&lt;key selector&gt;)\n  .window(&lt;window assigner&gt;)\n  .aggregate(new AverageAggregate(), new MyProcessWindowFunction());\n\n// Function definitions\n\n/**\n * The accumulator is used to keep a running sum and a count. The {@code getResult} method\n * computes the average.\n */\nprivate static class AverageAggregate\n    implements AggregateFunction&lt;Tuple2&lt;String, Long&gt;, Tuple2&lt;Long, Long&gt;, Double&gt; {\n  @Override\n  public Tuple2&lt;Long, Long&gt; createAccumulator() {\n    return new Tuple2&lt;&gt;(0L, 0L);\n  }\n\n  @Override\n  public Tuple2&lt;Long, Long&gt; add(Tuple2&lt;String, Long&gt; value, Tuple2&lt;Long, Long&gt; accumulator) {\n    return new Tuple2&lt;&gt;(accumulator.f0 + value.f1, accumulator.f1 + 1L);\n  }\n\n  @Override\n  public Double getResult(Tuple2&lt;Long, Long&gt; accumulator) {\n    return ((double) accumulator.f0) / accumulator.f1;\n  }\n\n  @Override\n  public Tuple2&lt;Long, Long&gt; merge(Tuple2&lt;Long, Long&gt; a, Tuple2&lt;Long, Long&gt; b) {\n    return new Tuple2&lt;&gt;(a.f0 + b.f0, a.f1 + b.f1);\n  }\n}\n\nprivate static class MyProcessWindowFunction\n    extends ProcessWindowFunction&lt;Double, Tuple2&lt;String, Double&gt;, String, TimeWindow&gt; {\n\n  public void process(String key,\n                    Context context,\n                    Iterable&lt;Double&gt; averages,\n                    Collector&lt;Tuple2&lt;String, Double&gt;&gt; out) {\n      Double average = averages.iterator().next();\n      out.collect(new Tuple2&lt;&gt;(key, average));\n  }\n}\n</code></pre>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#consecutive-windowed-operations","title":"\u9ad8\u7ea7\u6280\u5de7\uff1aConsecutive windowed operations","text":"<p>\u7a97\u53e3\u64cd\u4f5c\u7684\u7ed3\u679c\u4f1a\u53d8\u56de DataStream\uff0c\u5e76\u4e14\u7a97\u53e3\u64cd\u4f5c\u7684\u4fe1\u606f\u4e0d\u4f1a\u4fdd\u5b58\u5728\u8f93\u51fa\u7684\u5143\u7d20\u4e2d\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u8981\u4fdd\u7559\u7a97\u53e3\u7684 meta-information\uff0c\u9700\u8981\u5728 ProcessWindowFunction \u91cc\u624b\u52a8\u5c06\u5b83\u4eec\u653e\u5165\u8f93\u51fa\u7684\u5143\u7d20\u4e2d\u3002</p> <p>\u8f93\u51fa\u5143\u7d20\u4e2d\u4fdd\u7559\u7684\u552f\u4e00\u76f8\u5173\u7684\u4fe1\u606f\u662f\u5143\u7d20\u7684 timestamp\u3002\u5b83\u88ab\u8bbe\u7f6e\u4e3a\u7a97\u53e3\u80fd\u5141\u8bb8\u7684\u6700\u5927 timestamp\uff0c\u4e5f\u5c31\u662f end timestamp - 1\uff0c\u56e0\u4e3a\u7a97\u53e3\u672b\u7aef\u7684 timestamp \u662f\u6392\u4ed6\u7684\u3002\u8fd9\u4e2a\u60c5\u51b5\u540c\u65f6\u9002\u7528\u4e8e event-time \u7a97\u53e3\u548c processing-time \u7a97\u53e3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7a97\u53e3\u64cd\u4f5c\u4e4b\u540e\uff0c\u5143\u7d20\u603b\u662f\u4f1a\u643a\u5e26\u4e00\u4e2a event-time \u6216 processing-time timestamp\u3002</p> <p>\u5bf9 Processing-time \u7a97\u53e3\u6765\u8bf4\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4ec0\u4e48\u3002\u800c\u5bf9\u4e8e event-time \u7a97\u53e3\u6765\u8bf4\uff0c\u201c\u8f93\u51fa\u643a\u5e26 timestamp\u201d\u4ee5\u53ca\u201cwatermark \u4e0e\u7a97\u53e3\u7684\u76f8\u4e92\u4f5c\u7528\u201d\u8fd9\u4e24\u8005\u4f7f\u5efa\u7acb\u7a97\u53e3\u5927\u5c0f\u76f8\u540c\u7684\u8fde\u7eed\u7a97\u53e3\u64cd\u4f5c\uff08consecutive windowed operations\uff09\u53d8\u4e3a\u53ef\u80fd\u3002</p> <p>\u6211\u4eec\u5148\u770b\u770b watermark \u4e0e\u7a97\u53e3\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u7136\u540e\u518d\u6765\u8ba8\u8bba\u5b83\u3002</p> <p>Interaction of watermarks and windows</p> <p>\u5f53 watermark \u5230\u8fbe\u7a97\u53e3\u7b97\u5b50\u65f6\uff0c\u5b83\u89e6\u53d1\u4e86\u4e24\u4ef6\u4e8b\uff1a</p> <ul> <li>\u8fd9\u4e2a watermark \u89e6\u53d1\u4e86\u6240\u6709\u6700\u5927 timestamp\uff08\u5373 end-timestamp - 1\uff09\u5c0f\u4e8e\u5b83\u7684\u7a97\u53e3</li> <li>\u8fd9\u4e2a watermark \u88ab\u539f\u5c01\u4e0d\u52a8\u5730\u8f6c\u53d1\u7ed9\u4e0b\u6e38\u7684\u4efb\u52a1</li> </ul> <p>\u901a\u4fd7\u6765\u8bb2\uff0cwatermark \u5c06\u5f53\u524d\u7b97\u5b50\u4e2d\u90a3\u4e9b\u300c\u4e00\u65e6\u8fd9\u4e2a watermark \u88ab\u4e0b\u6e38\u4efb\u52a1\u63a5\u6536\u5c31\u80af\u5b9a\u4f1a\u5c31\u8d85\u65f6\u300d\u7684\u7a97\u53e3\u5168\u90e8\u51b2\u8d70\u3002</p> <p>Consecutive windowed operations</p> <p>\u5982\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u7a97\u53e3\u7ed3\u679c\u7684 timestamp \u5982\u4f55\u8ba1\u7b97\u4ee5\u53ca watermark \u5982\u4f55\u4e0e\u7a97\u53e3\u76f8\u4e92\u4f5c\u7528\u4f7f\u4e32\u8054\u591a\u4e2a\u7a97\u53e3\u64cd\u4f5c\u6210\u4e3a\u53ef\u80fd\u3002\u8fd9\u63d0\u4f9b\u4e86\u4e00\u79cd\u4fbf\u5229\u7684\u65b9\u6cd5\uff0c\u8ba9\u4f60\u80fd\u591f\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7a97\u53e3\uff0c\u4ed6\u4eec\u65e2\u80fd\u4f7f\u7528\u4e0d\u540c\u7684 key\uff0c\u53c8\u80fd\u8ba9\u4e0a\u6e38\u64cd\u4f5c\u4e2d\u67d0\u4e2a\u7a97\u53e3\u7684\u6570\u636e\u51fa\u73b0\u5728\u4e0b\u6e38\u64cd\u4f5c\u7684\u76f8\u540c\u7a97\u53e3\u3002\u53c2\u8003\u4e0b\u4f8b\uff1a</p> <pre><code>DataStream&lt;Integer&gt; input = ...;\n\nDataStream&lt;Integer&gt; resultsPerKey = input\n    .keyBy(&lt;key selector&gt;)\n    .window(TumblingEventTimeWindows.of(Time.seconds(5)))\n    .reduce(new Summer());\n\nDataStream&lt;Integer&gt; globalResults = resultsPerKey\n    .windowAll(TumblingEventTimeWindows.of(Time.seconds(5)))\n    .process(new TopKWindowFunction());\n</code></pre> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4e2d\u65f6\u95f4\u7a97\u53e3 <code>[0, 5)</code> \u7684\u7ed3\u679c\u4f1a\u51fa\u73b0\u5728\u4e0b\u4e00\u4e2a\u7a97\u53e3\u64cd\u4f5c\u7684 <code>[0, 5)</code> \u7a97\u53e3\u4e2d\u3002\u8fd9\u5c31\u53ef\u4ee5\u8ba9\u6211\u4eec\u5148\u5728\u4e00\u4e2a\u7a97\u53e3\u5185\u6309 key \u6c42\u548c\uff0c\u518d\u5728\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u4e2d\u627e\u51fa\u8fd9\u4e2a\u7a97\u53e3\u4e2d top-k \u7684\u5143\u7d20\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#triggers","title":"\u7a97\u53e3\u89e6\u53d1\u5668\uff08Triggers\uff09","text":"<p>Trigger \u51b3\u5b9a\u4e86\u4e00\u4e2a\u7a97\u53e3\uff08\u7531 window assigner \u5b9a\u4e49\uff09\u4f55\u65f6\u53ef\u4ee5\u88ab window function \u5904\u7406\u3002</p> <p>\u6bcf\u4e2a WindowAssigner \u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684 Trigger\u3002\u5982\u679c\u9ed8\u8ba4 trigger \u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u8981\uff0c\u4f60\u53ef\u4ee5\u5728 trigger(...) \u8c03\u7528\u4e2d\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684 trigger\u3002</p> <p>Trigger \u63a5\u53e3\u63d0\u4f9b\u4e86\u4e94\u4e2a\u65b9\u6cd5\u6765\u54cd\u5e94\u4e0d\u540c\u7684\u4e8b\u4ef6\uff1a</p> <ul> <li><code>onElement()</code> \u65b9\u6cd5\u5728\u6bcf\u4e2a\u5143\u7d20\u88ab\u52a0\u5165\u7a97\u53e3\u65f6\u8c03\u7528\u3002</li> <li><code>onEventTime()</code> \u65b9\u6cd5\u5728\u6ce8\u518c\u7684 event-time timer \u89e6\u53d1\u65f6\u8c03\u7528\u3002</li> <li><code>onProcessingTime()</code> \u65b9\u6cd5\u5728\u6ce8\u518c\u7684 event-time timer \u89e6\u53d1\u65f6\u8c03\u7528\u3002</li> <li><code>onMerge()</code> \u65b9\u6cd5\u4e0e\u6709\u72b6\u6001\u7684 trigger \u76f8\u5173\u3002\u8be5\u65b9\u6cd5\u4f1a\u5728\u4e24\u4e2a\u7a97\u53e3\u5408\u5e76\u65f6\uff0c\u5c06\u7a97\u53e3\u5bf9\u5e94 trigger \u7684\u72b6\u6001\u8fdb\u884c\u5408\u5e76\uff0c\u6bd4\u5982\u4f7f\u7528\u4f1a\u8bdd\u7a97\u53e3\u65f6\u3002</li> <li><code>clear()</code> \u65b9\u6cd5\u5904\u7406\u5728\u5bf9\u5e94\u7a97\u53e3\u88ab\u79fb\u9664\u65f6\u6240\u9700\u7684\u903b\u8f91\u3002</li> </ul> <p>\u6709\u4e24\u70b9\u9700\u8981\u6ce8\u610f\uff1a</p> <p>\u524d\u4e09\u4e2a\u65b9\u6cd5\u901a\u8fc7\u8fd4\u56de TriggerResult \u6765\u51b3\u5b9a trigger \u5982\u4f55\u5e94\u5bf9\u5230\u8fbe\u7a97\u53e3\u7684\u4e8b\u4ef6\u3002\u5e94\u5bf9\u65b9\u6848\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li><code>CONTINUE</code>: \u4ec0\u4e48\u4e5f\u4e0d\u505a</li> <li><code>FIRE</code>: \u89e6\u53d1\u8ba1\u7b97</li> <li><code>PURGE</code>: \u6e05\u7a7a\u7a97\u53e3\u5185\u7684\u5143\u7d20</li> <li><code>FIRE_AND_PURGE</code>: \u89e6\u53d1\u8ba1\u7b97\uff0c\u8ba1\u7b97\u7ed3\u675f\u540e\u6e05\u7a7a\u7a97\u53e3\u5185\u7684\u5143\u7d20</li> </ul> <p>\u4e0a\u9762\u7684\u4efb\u610f\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u6765\u6ce8\u518c processing-time \u6216 event-time timer\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#evictors","title":"Evictors","text":"<p>Flink \u7684\u7a97\u53e3\u6a21\u578b\u5141\u8bb8\u5728 WindowAssigner \u548c Trigger \u4e4b\u5916\u6307\u5b9a\u53ef\u9009\u7684 Evictor\u3002\u53ef\u4ee5\u901a\u8fc7 evictor(...) \u65b9\u6cd5\u4f20\u5165 Evictor\u3002Evictor \u53ef\u4ee5\u5728 trigger \u89e6\u53d1\u540e\u3001\u8c03\u7528\u7a97\u53e3\u51fd\u6570\u4e4b\u524d\u6216\u4e4b\u540e\u4ece\u7a97\u53e3\u4e2d\u5220\u9664\u5143\u7d20\u3002Evictor \u63a5\u53e3\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5\u5b9e\u73b0\u6b64\u529f\u80fd\uff1a</p> <pre><code>/**\n * Optionally evicts elements. Called before windowing function.\n *\n * @param elements The elements currently in the pane.\n * @param size The current number of elements in the pane.\n * @param window The {@link Window}\n * @param evictorContext The context for the Evictor\n */\nvoid evictBefore(Iterable&lt;TimestampedValue&lt;T&gt;&gt; elements, int size, W window, EvictorContext evictorContext);\n\n/**\n * Optionally evicts elements. Called after windowing function.\n *\n * @param elements The elements currently in the pane.\n * @param size The current number of elements in the pane.\n * @param window The {@link Window}\n * @param evictorContext The context for the Evictor\n */\nvoid evictAfter(Iterable&lt;TimestampedValue&lt;T&gt;&gt; elements, int size, W window, EvictorContext evictorContext);\n</code></pre> <p><code>evictBefore()</code> \u5305\u542b\u5728\u8c03\u7528\u7a97\u53e3\u51fd\u6570\u524d\u7684\u903b\u8f91\uff0c\u800c <code>evictAfter()</code> \u5305\u542b\u5728\u7a97\u53e3\u51fd\u6570\u8c03\u7528\u4e4b\u540e\u7684\u903b\u8f91\u3002\u5728\u8c03\u7528\u7a97\u53e3\u51fd\u6570\u4e4b\u524d\u88ab\u79fb\u9664\u7684\u5143\u7d20\u4e0d\u4f1a\u88ab\u7a97\u53e3\u51fd\u6570\u8ba1\u7b97\u3002</p> <p>Flink \u5185\u7f6e\u6709\u4e09\u4e2a evictor\uff1a</p> <ul> <li>CountEvictor: \u4ec5\u8bb0\u5f55\u7528\u6237\u6307\u5b9a\u6570\u91cf\u7684\u5143\u7d20\uff0c\u4e00\u65e6\u7a97\u53e3\u4e2d\u7684\u5143\u7d20\u8d85\u8fc7\u8fd9\u4e2a\u6570\u91cf\uff0c\u591a\u4f59\u7684\u5143\u7d20\u4f1a\u4ece\u7a97\u53e3\u7f13\u5b58\u7684\u5f00\u5934\u79fb\u9664\u3002</li> <li>DeltaEvictor: \u63a5\u6536 DeltaFunction \u548c threshold \u53c2\u6570\uff0c\u8ba1\u7b97\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e0e\u7a97\u53e3\u7f13\u5b58\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5dee\u503c\uff0c\u5e76\u79fb\u9664\u5dee\u503c\u5927\u4e8e\u6216\u7b49\u4e8e threshold \u7684\u5143\u7d20\u3002</li> <li>TimeEvictor: \u63a5\u6536 interval \u53c2\u6570\uff0c\u4ee5\u6beb\u79d2\u8868\u793a\u3002\u5b83\u4f1a\u627e\u5230\u7a97\u53e3\u4e2d\u5143\u7d20\u7684\u6700\u5927 timestamp max_ts \u5e76\u79fb\u9664\u6bd4 max_ts - interval \u5c0f\u7684\u6240\u6709\u5143\u7d20\u3002</li> </ul> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u5185\u7f6e\u7684 evictor \u903b\u8f91\u90fd\u5728\u8c03\u7528\u7a97\u53e3\u51fd\u6570\u524d\u6267\u884c\u3002</p> <p>Note</p> <p>\u6307\u5b9a\u4e00\u4e2a evictor \u53ef\u4ee5\u907f\u514d\u9884\u805a\u5408\uff0c\u56e0\u4e3a\u7a97\u53e3\u4e2d\u7684\u6240\u6709\u5143\u7d20\u5728\u8ba1\u7b97\u524d\u90fd\u5fc5\u987b\u7ecf\u8fc7 evictor\u3002</p>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_13","title":"\u5173\u4e8e\u72b6\u6001\u5927\u5c0f\u7684\u8003\u91cf","text":"<p>\u7a97\u53e3\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5728\u5f88\u957f\u7684\u65f6\u95f4\u6bb5\u4e0a\uff08\u6bd4\u5982\u51e0\u5929\u3001\u51e0\u5468\u6216\u51e0\u4e2a\u6708\uff09\uff0c\u5e76\u4e14\u79ef\u7d2f\u4e0b\u5f88\u5927\u7684\u72b6\u6001\u3002</p> <p>\u5f53\u4f30\u7b97\u7a97\u53e3\u8ba1\u7b97\u7684\u50a8\u5b58\u9700\u6c42\u65f6\uff0c\u53ef\u94ed\u8bb0\u4ee5\u4e0b\u51e0\u6761\u89c4\u5219\uff1a</p> <ul> <li> <p>Flink \u4f1a\u4e3a\u4e00\u4e2a\u5143\u7d20\u5728\u5176\u6240\u5c5e\u7684\u6bcf\u4e00\u4e2a\u7a97\u53e3\u4e2d\u90fd\u521b\u5efa\u4e00\u4e2a\u526f\u672c\u3002\u56e0\u6b64\uff0c\u5728\u6eda\u52a8\u7a97\u53e3\u8bbe\u7f6e\u4e2d\uff0c\u4e00\u4e2a\u5143\u7d20\u901a\u5e38\u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\u526f\u672c\uff08\u4e00\u4e2a\u5143\u7d20\u4ec5\u5c5e\u4e8e\u4e00\u4e2a\u7a97\u53e3\uff0c\u9664\u975e\u5b83\u8fdf\u5230\u4e86\uff09\u3002\u4e0e\u4e4b\u76f8\u53cd\uff0c\u4e00\u4e2a\u5143\u7d20\u53ef\u80fd\u4f1a\u88ab\u62f7\u8d1d\u5230\u591a\u4e2a\u6ed1\u52a8\u7a97\u53e3\u4e2d\uff0c\u6b63\u5982\u5728 Window Assigners \u4e2d\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u6240\u4ee5\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u5927\u5c0f\u4e3a\u4e00\u5929\u3001\u6ed1\u52a8\u8ddd\u79bb\u4e3a\u4e00\u79d2\u7684\u6ed1\u52a8\u7a97\u53e3\u53ef\u80fd\u5e76\u975e\u4e00\u4e2a\u597d\u4e3b\u610f\u3002</p> </li> <li> <p>ReduceFunction \u548c AggregateFunction \u80fd\u591f\u6781\u5927\u5730\u51cf\u5c11\u50a8\u5b58\u9700\u6c42\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u5c31\u5730\u805a\u5408\u5230\u8fbe\u7684\u5143\u7d20\uff0c\u4e14\u6bcf\u4e2a\u7a97\u53e3\u4ec5\u50a8\u5b58\u4e00\u4e2a\u503c\u3002\u800c\u4f7f\u7528 ProcessWindowFunction \u5219\u9700\u8981\u7d2f\u79ef\u7a97\u53e3\u4e2d\u6240\u6709\u7684\u5143\u7d20\u3002</p> </li> <li> <p>\u4f7f\u7528 Evictor \u53ef\u4ee5\u907f\u514d\u9884\u805a\u5408\uff0c\u56e0\u4e3a\u7a97\u53e3\u4e2d\u7684\u6240\u6709\u6570\u636e\u5fc5\u987b\u5148\u7ecf\u8fc7 evictor \u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002</p> </li> </ul>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#side-output","title":"\u4ece\u65c1\u8def\u8f93\u51fa\uff08side output\uff09\u83b7\u53d6\u8fdf\u5230\u6570\u636e","text":"<p>\u901a\u8fc7 Flink \u7684\u65c1\u8def\u8f93\u51fa\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u83b7\u5f97\u8fdf\u5230\u6570\u636e\u7684\u6570\u636e\u6d41\u3002</p> <p>\u9996\u5148\uff0c\u4f60\u9700\u8981\u5728\u5f00\u7a97\u540e\u7684 stream \u4e0a\u4f7f\u7528 <code>sideOutputLateData(OutputTag)</code> \u8868\u660e\u4f60\u9700\u8981\u83b7\u53d6\u8fdf\u5230\u6570\u636e\u3002\u7136\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u4ece\u7a97\u53e3\u64cd\u4f5c\u7684\u7ed3\u679c\u4e2d\u83b7\u53d6\u65c1\u8def\u8f93\u51fa\u6d41\u4e86\u3002</p> <pre><code>final OutputTag&lt;T&gt; lateOutputTag = new OutputTag&lt;T&gt;(\"late-data\"){};\n\nDataStream&lt;T&gt; input = ...;\n\nSingleOutputStreamOperator&lt;T&gt; result = input\n    .keyBy(&lt;key selector&gt;)\n    .window(&lt;window assigner&gt;)\n    .allowedLateness(&lt;time&gt;)\n    .sideOutputLateData(lateOutputTag)\n    .&lt;windowed transformation&gt;(&lt;window function&gt;);\n\nDataStream&lt;T&gt; lateStream = result.getSideOutput(lateOutputTag);\n</code></pre>"},{"location":"Flink/3.%E6%97%B6%E9%97%B4%E5%92%8C%E7%AA%97%E5%8F%A3/#_14","title":"\u8fdf\u5230\u6570\u636e\u7684\u5904\u7406","text":"<p>\u6240\u8c13\u7684\u300c\u8fdf\u5230\u6570\u636e\u300d\uff0c\u662f\u6307\u67d0\u4e2a\u6c34\u4f4d\u7ebf\u4e4b\u540e\u5230\u6765\u7684\u6570\u636e\uff0c\u4f46\u5b83\u7684\u65f6\u95f4\u6233\u5176\u5b9e\u662f\u5728\u6c34\u4f4d\u7ebf\u4e4b\u524d\u7684\u3002\u53ea\u6709\u5728\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4e0b\uff0c\u8ba8\u8bba\u8fdf\u5230\u6570\u636e\u7684\u5904\u7406\u624d\u662f\u6709\u610f\u4e49\u7684\u3002</p> <p>\u5904\u7406\u8fdf\u5230\u6570\u636e\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4e71\u5e8f\u6d41\uff0c\u6c34\u4f4d\u7ebf\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u5ef6\u8fdf\u65f6\u95f4</li> </ul> \u6c34\u4f4d\u7ebf\u5176\u5b9e\u662f\u6240\u6709\u4e8b\u4ef6\u65f6\u95f4\u5b9a\u65f6\u5668\u89e6\u53d1\u7684\u5224\u65ad\u6807\u51c6\u3002\u6c34\u4f4d\u7ebf\u7684\u5ef6\u8fdf\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40\u65f6\u949f\u7684\u6ede\u540e\u3002\u4e00\u822c\u60c5\u51b5\u4e0d\u5e94\u8be5\u628a\u6c34\u4f4d\u7ebf\u7684\u5ef6\u8fdf\u8bbe\u7f6e\u5f97\u592a\u5927\uff0c\u5426\u5219\u6d41\u5904\u7406\u7684\u5b9e\u65f6\u6027\u5c31\u4f1a\u5927\u5927\u964d\u4f4e\u3002 <ul> <li>\u505a\u7a97\u53e3\u8ba1\u7b97\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u7a97\u53e3\u7684\u5141\u8bb8\u5ef6\u8fdf\u65f6\u95f4</li> </ul> \u7531\u4e8e\u5927\u90e8\u5206\u4e71\u5e8f\u6570\u636e\u53ef\u4ee5\u88ab\u6c34\u4f4d\u7ebf\u7684\u5ef6\u8fdf\u7b49\u5230\uff0c\u6240\u4ee5\u5f80\u5f80\u8fdf\u5230\u7684\u6570\u636e\u4e0d\u4f1a\u592a\u591a\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u4f1a\u5728\u6c34\u4f4d\u7ebf\u5230\u8fbe\u7a97\u53e3\u7ed3\u675f\u65f6\u95f4\u65f6\uff0c\u5148\u5feb\u901f\u5730\u8f93\u51fa\u4e00\u4e2a\u8fd1\u4f3c\u6b63\u786e\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u7136\u540e\u4fdd\u6301\u7a97\u53e3\u7ee7\u7eed\u7b49\u5230\u5ef6\u8fdf\u6570\u636e\uff0c\u6bcf\u6765\u4e00\u6761\u6570\u636e\uff0c\u7a97\u53e3\u5c31\u4f1a\u518d\u6b21\u8ba1\u7b97\uff0c\u5e76\u5c06\u66f4\u65b0\u540e\u7684\u7ed3\u679c\u8f93\u51fa\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u9010\u6b65\u4fee\u6b63\u8ba1\u7b97\u7ed3\u679c\uff0c\u6700\u7ec8\u5f97\u5230\u51c6\u786e\u7684\u7edf\u8ba1\u503c\u4e86\u3002 <ul> <li>\u7a97\u53e3\u53ef\u4ee5\u5c06\u8fdf\u5230\u6570\u636e\u8f93\u51fa\u5230\u6d4b\u8f93\u51fa\u6d41</li> </ul> \u7528\u7a97\u53e3\u7684\u4fa7\u8f93\u51fa\u6d41\u6765\u6536\u96c6\u5173\u7a97\u4ee5\u540e\u7684\u8fdf\u5230\u6570\u636e\u3002\u8fd9\u79cd\u65b9\u5f0f\u662f\u6700\u540e\u515c\u5e95\u7684\u65b9\u6cd5\uff0c\u53ea\u80fd\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\u3002\u56e0\u4e3a\u7a97\u53e3\u5df2\u7ecf\u771f\u6b63\u5173\u95ed\uff0c\u6240\u4ee5\u662f\u65e0\u6cd5\u57fa\u4e8e\u4e4b\u524d\u7a97\u53e3\u7684\u7ed3\u679c\u76f4\u63a5\u505a\u66f4\u65b0\u7684\u3002\u6211\u4eec\u53ea\u80fd\u5c06\u4e4b\u524d\u7684\u7a97\u53e3\u8ba1\u7b97\u7ed3\u679c\u4fdd\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u83b7\u53d6\u4fa7\u8f93\u51fa\u6d41\u4e2d\u7684\u8fdf\u5230\u6570\u636e\uff0c\u5224\u65ad\u6570\u636e\u6240\u5c5e\u7684\u7a97\u53e3\uff0c\u624b\u52a8\u5bf9\u7ed3\u679c\u8fdb\u884c\u5408\u5e76\u66f4\u65b0\u3002"},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/","title":"\u591a\u6d41\u8f6c\u6362","text":"<p>\u591a\u6d41\u8f6c\u6362\u53ef\u4ee5\u5206\u4e3a\u5206\u6d41\u548c\u5408\u6d41\u4e24\u5927\u7c7b\uff1a</p> <ul> <li>\u5206\u6d41\uff1a\u901a\u8fc7\u4fa7\u8f93\u51fa\u6d41\u5b9e\u73b0</li> <li>\u5408\u6d41\uff1a\u901a\u8fc7 <code>union()</code>\u3001<code>connect()</code>\u3001<code>join()</code>\u3001<code>coGroup()</code> \u5b9e\u73b0</li> </ul>"},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/#_2","title":"\u5206\u6d41","text":"<p>\u5904\u7406\u51fd\u6570\u672c\u8eab\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u8f6c\u6362\u7b97\u5b50\uff0c\u5b83\u7684\u8f93\u51fa\u7c7b\u578b\u662f\u5355\u4e00\u7684\uff0c\u5904\u7406\u4e4b\u540e\u5f97\u5230\u7684\u4ecd\u7136\u662f\u4e00\u4e2a DataStream\u3002\u800c\u4fa7\u8f93\u51fa\u6d41\u5219\u4e0d\u53d7\u9650\u5236\uff0c\u53ef\u4ee5\u4efb\u610f\u81ea\u5b9a\u4e49\u8f93\u51fa\u6570\u636e\uff0c\u5b83\u4eec\u5c31\u50cf\u4ece\u201c\u4e3b\u6d41\u201d\u4e0a\u5206\u53c9\u51fa\u7684\u201c\u652f\u6d41\u201d\u3002</p> <p>\u5229\u7528\u4fa7\u8f93\u51fa\u6d41\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5b9e\u73b0\u5206\u6d41\u64cd\u4f5c\uff0c\u800c\u4e14\u5f97\u5230\u7684\u591a\u6761 DataStream \u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c\uff0c\u8fd9\u80fd\u7ed9\u6211\u4eec\u7684\u5e94\u7528\u5e26\u6765\u4e86\u6781\u5927\u7684\u4fbf\u5229\u3002\u4f7f\u7528\u65f6\u53ea\u9700\u8981\u8c03\u7528\u4e0a\u4e0b\u6587 ctx \u7684 <code>.output()</code> \u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u8f93\u51fa\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u4e86\u3002\u800c\u4fa7\u8f93\u51fa\u6d41\u7684\u6807\u8bb0\u548c\u63d0\u53d6\uff0c\u90fd\u79bb\u4e0d\u5f00\u4e00\u4e2a\u201c\u8f93\u51fa\u6807\u7b7e\u201d\uff08OutputTag\uff09\uff0c\u5b83\u5c31\u76f8\u5f53\u4e8e <code>split()</code> \u5206\u6d41\u65f6\u7684\u201c\u6233\u201d\uff0c\u6307\u5b9a\u4e86\u4fa7\u8f93\u51fa\u6d41\u7684 id \u548c\u7c7b\u578b\u3002</p> <pre><code>DataStream&lt;Integer&gt; input = ...;\n\nfinal OutputTag&lt;String&gt; outputTag = new OutputTag&lt;String&gt;(\"side-output\"){};\n\nSingleOutputStreamOperator&lt;Integer&gt; mainDataStream = input\n  .process(new ProcessFunction&lt;Integer, Integer&gt;() {\n\n      @Override\n      public void processElement(\n          Integer value,\n          Context ctx,\n          Collector&lt;Integer&gt; out) throws Exception {\n        // emit data to regular output\n        out.collect(value);\n\n        // emit data to side output\n        ctx.output(outputTag, \"sideout-\" + String.valueOf(value));\n      }\n    });\n</code></pre> <pre><code>final OutputTag&lt;String&gt; outputTag = new OutputTag&lt;String&gt;(\"side-output\"){};\n\nSingleOutputStreamOperator&lt;Integer&gt; mainDataStream = ...;\n\nDataStream&lt;String&gt; sideOutputStream = mainDataStream.getSideOutput(outputTag);\n</code></pre>"},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/#_3","title":"\u5408\u6d41","text":""},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/#union","title":"Union","text":"<p>\u6700\u7b80\u5355\u7684\u5408\u6d41\u64cd\u4f5c\uff0c\u5c31\u662f\u76f4\u63a5\u5c06\u591a\u6761\u6d41\u5408\u5728\u4e00\u8d77\uff0c\u53eb\u4f5c\u6d41\u7684\u300c\u8054\u5408\u300d\uff08union\uff09\u3002\u8054\u5408\u64cd\u4f5c\u8981\u6c42\u5fc5\u987b\u6d41\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\uff0c\u5408\u5e76\u4e4b\u540e\u7684\u65b0\u6d41\u4f1a\u5305\u62ec\u6240\u6709\u6d41\u4e2d\u7684\u5143\u7d20\uff0c\u6570\u636e\u7c7b\u578b\u4e0d\u53d8\u3002</p> <p></p> <pre><code>stream1.union(stream2, stream3, ...)\n</code></pre> <p>\u8fd9\u91cc\u9700\u8981\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5728\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4e0b\uff0c\u6c34\u4f4d\u7ebf\u662f\u65f6\u95f4\u7684\u8fdb\u5ea6\u6807\u5fd7\uff0c\u4e0d\u540c\u7684\u6d41\u4e2d\u53ef\u80fd\u6c34\u4f4d\u7ebf\u7684\u8fdb\u5c55\u5feb\u6162\u5b8c\u5168\u4e0d\u540c\uff0c\u5982\u679c\u5b83\u4eec\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u6c34\u4f4d\u7ebf\u53c8\u8be5\u4ee5\u54ea\u4e2a\u4e3a\u51c6\u5462\uff1f</p> <p>\u8fd8\u4ee5\u8981\u8003\u8651\u6c34\u4f4d\u7ebf\u7684\u672c\u8d28\u542b\u4e49\uff0c\u662f\u300c\u4e4b\u524d\u7684\u6240\u6709\u6570\u636e\u5df2\u7ecf\u5230\u9f50\u4e86\u300d\u3002\u6240\u4ee5\u5bf9\u4e8e\u5408\u6d41\u4e4b\u540e\u7684\u6c34\u4f4d\u7ebf\uff0c\u4e5f\u662f\u8981\u4ee5\u6700\u5c0f\u7684\u90a3\u4e2a\u4e3a\u51c6\uff0c\u8fd9\u6837\u624d\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u6d41\u90fd\u4e0d\u4f1a\u518d\u4f20\u6765\u4e4b\u524d\u7684\u6570\u636e\u3002\u5373\uff1a\u591a\u6d41\u5408\u5e76\u65f6\u5904\u7406\u7684\u65f6\u6548\u6027\u662f\u4ee5\u6700\u6162\u7684\u90a3\u4e2a\u6d41\u4e3a\u51c6\u7684\u3002</p>"},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/#connect","title":"Connect","text":"<p>\u6d41\u7684\u8054\u5408\u867d\u7136\u7b80\u5355\uff0c\u4e0d\u8fc7\u53d7\u9650\u4e8e\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u6539\u53d8\uff0c\u7075\u6d3b\u6027\u5927\u6253\u6298\u6263\uff0c\u6240\u4ee5\u5b9e\u9645\u5e94\u7528\u8f83\u5c11\u51fa\u73b0\u3002\u9664\u4e86\u8054\u5408\uff08union\uff09\uff0cFlink \u8fd8\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u79cd\u65b9\u4fbf\u7684\u5408\u6d41\u64cd\u4f5c\uff1a\u300c\u8fde\u63a5\u300d\uff08connect\uff09\u3002</p> <p>\u4e3a\u4e86\u5904\u7406\u66f4\u52a0\u7075\u6d3b\uff0c\u8fde\u63a5\u64cd\u4f5c\u5141\u8bb8\u6d41\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u540c\u3002\u4f46\u6211\u4eec\u77e5\u9053\u4e00\u4e2a DataStream \u4e2d\u7684\u6570\u636e\u53ea\u80fd\u6709\u552f\u4e00\u7684\u7c7b\u578b\uff0c\u6240\u4ee5\u8fde\u63a5\u5f97\u5230\u7684\u5e76\u4e0d\u662f DataStream\uff0c\u800c\u662f\u4e00\u4e2a\u300c\u8fde\u63a5\u6d41\u300d\uff08ConnectedStreams\uff09\u3002\u8fde\u63a5\u6d41\u53ef\u4ee5\u770b\u6210\u662f\u4e24\u6761\u6d41\u5f62\u5f0f\u4e0a\u7684\u201c\u7edf\u4e00\u201d\uff0c\u88ab\u653e\u5728\u4e86\u4e00\u4e2a\u540c\u4e00\u4e2a\u6d41\u4e2d\uff0c\u4e8b\u5b9e\u4e0a\u5185\u90e8\u4ecd\u4fdd\u6301\u5404\u81ea\u7684\u6570\u636e\u5f62\u5f0f\u4e0d\u53d8\uff0c\u5f7c\u6b64\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002</p> <p>\u8981\u60f3\u5f97\u5230\u65b0\u7684 DataStream\uff0c\u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u5b9a\u4e49\u4e00\u4e2a\u300c\u540c\u5904\u7406\u300d\uff08co-process\uff09\u8f6c\u6362\u64cd\u4f5c\uff0c\u7528\u6765\u8bf4\u660e\u5bf9\u4e8e\u4e0d\u540c\u6765\u6e90\u3001\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u600e\u6837\u5206\u522b\u8fdb\u884c\u5904\u7406\u8f6c\u6362\u3001\u5f97\u5230\u7edf\u4e00\u7684\u8f93\u51fa\u7c7b\u578b\u3002</p> <p></p> <pre><code>DataStream&lt;Integer&gt; stream1 = env.fromElements(1,2,3);\nDataStream&lt;Long&gt; stream2 = env.fromElements(1L,2L,3L);\nConnectedStreams&lt;Integer, Long&gt; connectedStreams = stream1.connect(stream2);\nSingleOutputStreamOperator&lt;String&gt; result = connectedStreams.map(new\n    CoMapFunction&lt;Integer, Long, String&gt;() {\n        @Override\n        public String map1(Integer value) {\n            return \"Integer: \" + value;\n        }\n        @Override\n        public String map2(Long value) {\n            return \"Long: \" + value;\n        }\n    });\nresult.print();\nenv.execute();\n</code></pre>"},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/#join","title":"Join","text":"<p>\u5bf9\u4e8e\u4e24\u6761\u6d41\u7684\u5408\u5e76\uff0c\u5f88\u591a\u60c5\u51b5\u6211\u4eec\u5e76\u4e0d\u662f\u7b80\u5355\u5730\u5c06\u6240\u6709\u6570\u636e\u653e\u5728\u4e00\u8d77\uff0c\u800c\u662f\u5e0c\u671b\u6839\u636e\u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u5c06\u5b83\u4eec\u8054\u7ed3\u8d77\u6765\uff0c\u201c\u914d\u5bf9\u201d\u53bb\u505a\u5904\u7406\u3002</p>"},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/#window-join","title":"Window Join","text":"<p>\u901a\u7528\u8c03\u7528\u5f62\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>stream1.join(stream2)\n    .where(&lt;KeySelector&gt;)\n    .equalTo(&lt;KeySelector&gt;)\n    .window(&lt;WindowAssigner&gt;)\n    .apply(&lt;JoinFunction&gt;)\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li><code>.where()</code> \u7684\u53c2\u6570\u662f\u952e\u9009\u62e9\u5668\uff08KeySelector\uff09\uff0c\u7528\u6765\u6307\u5b9a\u7b2c\u4e00\u6761\u6d41\u4e2d\u7684 key</li> <li><code>.equalTo()</code> \u4f20\u5165\u7684 KeySelector \u5219\u6307\u5b9a\u4e86\u7b2c\u4e8c\u6761\u6d41\u4e2d\u7684 key</li> <li>\u4e24\u8005\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5982\u679c\u5728\u540c\u4e00\u7a97\u53e3\u4e2d\uff0c\u5c31\u53ef\u4ee5\u5339\u914d\u8d77\u6765\uff0c\u5e76\u901a\u8fc7\u4e00\u4e2a JoinFunction \u8fdb\u884c\u5904\u7406</li> <li><code>.window()</code> \u4f20\u5165\u7684\u662f\u7a97\u53e3\u5206\u914d\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u7a97\u53e3\u3001\u6ed1\u52a8\u7a97\u53e3\u548c\u4f1a\u8bdd\u7a97\u53e3</li> </ul> <p>\u4f20\u5165\u7684 JoinFunction \u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u7c7b\u63a5\u53e3\uff0c\u4f7f\u7528\u65f6\u9700\u8981\u5b9e\u73b0\u5185\u90e8\u7684 <code>.join()</code> \u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u8868\u793a\u4e24\u6761\u6d41\u4e2d\u6210\u5bf9\u5339\u914d\u7684\u6570\u636e\u3002JoinFunction \u5728\u6e90\u7801\u4e2d\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public interface JoinFunction&lt;IN1, IN2, OUT&gt; extends Function, Serializable {\n    OUT join(IN1 first, IN2 second) throws Exception;\n}\n</code></pre> <p></p>"},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/#interval-join","title":"Interval Join","text":"<p>\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u8981\u5904\u7406\u7684\u65f6\u95f4\u95f4\u9694\u53ef\u80fd\u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u6837\u7684\u9700\u6c42\uff0cFlink \u63d0\u4f9b\u4e86\u4e00\u79cd\u53eb\u4f5c\u300c\u95f4\u9694\u8054\u7ed3\u300d\uff08interval join\uff09\u7684\u5408\u6d41\u64cd\u4f5c\u3002\u95f4\u9694\u8054\u7ed3\u7684\u601d\u8def\u5c31\u662f\u9488\u5bf9\u4e00\u6761\u6d41\u7684\u6bcf\u4e2a\u6570\u636e\uff0c\u5f00\u8f9f\u51fa\u5176\u65f6\u95f4\u6233\u524d\u540e\u7684\u4e00\u6bb5\u65f6\u95f4\u95f4\u9694\uff0c\u770b\u8fd9\u671f\u95f4\u662f\u5426\u6709\u6765\u81ea\u53e6\u4e00\u6761\u6d41\u7684\u6570\u636e\u5339\u914d\u3002</p> <p>\u95f4\u9694\u8054\u7ed3\u5177\u4f53\u7684\u5b9a\u4e49\u65b9\u5f0f\u662f\uff0c\u6211\u4eec\u7ed9\u5b9a\u4e24\u4e2a\u65f6\u95f4\u70b9\uff0c\u5206\u522b\u53eb\u4f5c\u95f4\u9694\u7684\u201c\u4e0a\u754c\u201d\uff08upperBound\uff09\u548c\u201c\u4e0b\u754c\u201d\uff08lowerBound\uff09\uff0c\u4e8e\u662f\u5bf9\u4e8e\u4e00\u6761\u6d41 A \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6570\u636e\u5143\u7d20 a\uff0c\u5c31\u53ef\u4ee5\u5f00\u8f9f\u4e00\u6bb5\u65f6\u95f4\u95f4\u9694\uff1a<code>[a.timestamp + lowerBound, a.timestamp + upperBound]</code>\uff0c\u5373\u4ee5 a \u7684\u65f6\u95f4\u6233\u4e3a\u4e2d\u5fc3\uff0c\u4e0b\u81f3\u4e0b\u754c\u70b9\u3001\u4e0a\u81f3\u4e0a\u754c\u70b9\u7684\u4e00\u4e2a\u95ed\u533a\u95f4\uff1a\u6211\u4eec\u5c31\u628a\u8fd9\u6bb5\u65f6\u95f4\u4f5c\u4e3a\u53ef\u4ee5\u5339\u914d\u53e6\u4e00\u6761\u6d41\u6570\u636e\u7684\u7a97\u53e3\u8303\u56f4\u3002\u6240\u4ee5\u5bf9\u4e8e\u53e6\u4e00\u6761\u6d41 B \u4e2d\u7684\u6570\u636e\u5143\u7d20 b\uff0c\u5982\u679c\u5b83\u7684\u65f6\u95f4\u6233\u843d\u5728\u4e86\u8fd9\u4e2a\u533a\u95f4\u8303\u56f4\u5185\uff0ca \u548c b \u5c31\u53ef\u4ee5\u6210\u529f\u914d\u5bf9\uff0c\u8fdb\u800c\u8fdb\u884c\u8ba1\u7b97\u8f93\u51fa\u7ed3\u679c\u3002\u6240\u4ee5\u5339\u914d\u7684\u6761\u4ef6\u4e3a\uff1a</p> <p><code>a.timestamp + lowerBound &lt;= b.timestamp &lt;= a.timestamp + upperBound</code></p> <p></p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u95f4\u9694\u8054\u7ed3\u540c\u6837\u662f\u4e00\u79cd\u5185\u8fde\u63a5\uff08inner join\uff09\u3002\u4e0e\u7a97\u53e3\u8054\u7ed3\u4e0d\u540c\u7684\u662f\uff0cinterval join \u505a\u5339\u914d\u7684\u65f6\u95f4\u6bb5\u662f\u57fa\u4e8e\u6d41\u4e2d\u6570\u636e\u7684\uff0c\u6240\u4ee5\u5e76\u4e0d\u786e\u5b9a\uff0c\u800c\u4e14\u6d41 B \u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u4e0d\u53ea\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u88ab\u5339\u914d\u3002</p> <p>\u901a\u7528\u8c03\u7528\u5f62\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>stream1\n    .keyBy(&lt;KeySelector&gt;)\n    .intervalJoin(stream2.keyBy(&lt;KeySelector&gt;))\n    .between(Time.milliseconds(-2), Time.milliseconds(1))\n    .process(new ProcessJoinFunction&lt;Integer, Integer, String() {\n        @Override\n        public void processElement(Integer left, Integer right, Context ctx, Collector&lt;String&gt; out) {\n            out.collect(left + \",\" + right);\n        }\n    });\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u62bd\u8c61\u7c7b ProcessJoinFunction \u5c31\u50cf\u662f ProcessFunction \u548c JoinFunction \u7684\u7ed3\u5408\uff0c\u5185\u90e8\u540c\u6837\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5 <code>.processElement()</code>\u3002\u4e0e\u5176\u4ed6\u5904\u7406\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u591a\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u662f\u56e0\u4e3a\u6709\u6765\u81ea\u4e24\u6761\u6d41\u7684\u6570\u636e\u3002\u53c2\u6570\u4e2d left \u6307\u7684\u5c31\u662f\u7b2c\u4e00\u6761\u6d41\u4e2d\u7684\u6570\u636e\uff0cright \u5219\u662f\u7b2c\u4e8c\u6761\u6d41\u4e2d\u4e0e\u5b83\u5339\u914d\u7684\u6570\u636e\u3002\u6bcf\u5f53\u68c0\u6d4b\u5230\u4e00\u7ec4\u5339\u914d\uff0c\u5c31\u4f1a\u8c03\u7528\u8fd9\u91cc\u7684 <code>.processElement()</code> \u65b9\u6cd5\uff0c\u7ecf\u5904\u7406\u8f6c\u6362\u4e4b\u540e\u8f93\u51fa\u7ed3\u679c\u3002</p>"},{"location":"Flink/4.%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/#cogroup","title":"CoGroup","text":"<p>\u9664\u7a97\u53e3\u8054\u7ed3\u548c\u95f4\u9694\u8054\u7ed3\u4e4b\u5916\uff0cFlink \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u300c\u7a97\u53e3\u540c\u7ec4\u8054\u7ed3\u300d\uff08window coGroup\uff09\u64cd\u4f5c\u3002\u5b83\u7684\u7528\u6cd5\u8ddf window join \u975e\u5e38\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5c06\u4e24\u6761\u6d41\u5408\u5e76\u4e4b\u540e\u5f00\u7a97\u5904\u7406\u5339\u914d\u7684\u5143\u7d20\uff0c\u8c03\u7528\u65f6\u53ea\u9700\u8981\u5c06 <code>.join()</code> \u6362\u4e3a <code>.coGroup()</code> \u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>stream1.coGroup(stream2)\n    .where(&lt;KeySelector&gt;)\n    .equalTo(&lt;KeySelector&gt;)\n    .window(TumblingEventTimeWindows.of(Time.hours(1)))\n    .apply(&lt;CoGroupFunction&gt;)\n</code></pre> <p>\u4e0e window join \u7684\u533a\u522b\u5728\u4e8e\uff0c\u8c03\u7528 <code>.apply()</code> \u65b9\u6cd5\u5b9a\u4e49\u5177\u4f53\u64cd\u4f5c\u65f6\uff0c\u4f20\u5165\u7684\u662f\u4e00\u4e2a CoGroupFunction\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u7c7b\u63a5\u53e3\uff0c\u6e90\u7801\u4e2d\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public interface CoGroupFunction&lt;IN1, IN2, O&gt; extends Function, Serializable {\n    void coGroup(Iterable&lt;IN1&gt; first, Iterable&lt;IN2&gt; second, Collector&lt;O&gt; out) throws Exception;\n}\n</code></pre> <p>\u5185\u90e8\u7684 <code>.coGroup()</code> \u65b9\u6cd5\uff0c\u6709\u4e9b\u7c7b\u4f3c\u4e8e FlatJoinFunction \u4e2d <code>.join()</code> \u7684\u5f62\u5f0f\uff0c\u540c\u6837\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4ee3\u8868\u4e24\u6761\u6d41\u4e2d\u7684\u6570\u636e\u4ee5\u53ca\u7528\u4e8e\u8f93\u51fa\u7684\u6536\u96c6\u5668\uff08Collector\uff09\u3002\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u524d\u4e24\u4e2a\u53c2\u6570\u4e0d\u518d\u662f\u5355\u72ec\u7684\u6bcf\u4e00\u7ec4\u201c\u914d\u5bf9\u201d\u6570\u636e\u4e86\uff0c\u800c\u662f\u4f20\u5165\u4e86\u53ef\u904d\u5386\u7684\u6570\u636e\u96c6\u5408\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u73b0\u5728\u4e0d\u4f1a\u518d \u53bb\u8ba1\u7b97\u7a97\u53e3\u4e2d\u4e24\u6761\u6d41\u6570\u636e\u96c6\u7684\u7b1b\u5361\u5c14\u79ef\uff0c\u800c\u662f\u76f4\u63a5\u628a\u6536\u96c6\u5230\u7684\u6240\u6709\u6570\u636e\u4e00\u6b21\u6027\u4f20\u5165\uff0c\u81f3\u4e8e\u8981\u600e\u6837\u914d\u5bf9\u5b8c\u5168\u662f\u81ea\u5b9a\u4e49\u7684\u3002\u8fd9\u6837 <code>.coGroup()</code> \u65b9\u6cd5\u53ea\u4f1a\u88ab\u8c03\u7528\u4e00\u6b21\uff0c\u800c\u4e14\u5373\u4f7f\u4e00\u6761\u6d41\u7684\u6570\u636e\u6ca1\u6709\u4efb\u4f55\u53e6\u4e00\u6761\u6d41\u7684\u6570\u636e\u5339\u914d\uff0c\u4e5f\u53ef\u4ee5\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\u3001\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u8f93\u51fa\u7ed3\u679c\u4e86\u3002</p> <p>\u6240\u4ee5\u80fd\u591f\u770b\u51fa\uff0ccoGroup \u64cd\u4f5c\u6bd4\u7a97\u53e3\u7684 join \u66f4\u52a0\u901a\u7528\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c SQL \u4e2d\u7684\u201c\u5185\u8fde\u63a5\u201d\uff08inner join\uff09\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5de6\u5916\u8fde\u63a5\uff08left outer join\uff09\u3001\u53f3\u5916\u8fde\u63a5\uff08right outer join\uff09\u548c\u5168\u5916\u8fde\u63a5\uff08full outer join\uff09\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7a97\u53e3 join \u7684\u5e95\u5c42\uff0c\u4e5f\u662f\u901a\u8fc7 coGroup \u6765\u5b9e\u73b0\u7684\u3002</p>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/","title":"\u72b6\u6001\u7ba1\u7406","text":""},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#_2","title":"\u6709\u72b6\u6001\u7b97\u5b50","text":"<p>\u5728 Flink \u4e2d\uff0c\u7b97\u5b50\u4efb\u52a1\u53ef\u4ee5\u5206\u4e3a\u65e0\u72b6\u6001\u548c\u6709\u72b6\u6001\u4e24\u79cd\u60c5\u51b5\u3002</p> <p>\u65e0\u72b6\u6001\u7684\u7b97\u5b50\u4efb\u52a1\u53ea\u9700\u8981\u89c2\u5bdf\u6bcf\u4e2a\u72ec\u7acb\u4e8b\u4ef6\uff0c\u6839\u636e\u5f53\u524d\u8f93\u5165\u7684\u6570\u636e\u76f4\u63a5\u8f6c\u6362\u8f93\u51fa\u7ed3\u679c\u3002\u4e00\u4e9b\u57fa\u672c\u8f6c\u6362\u7b97\u5b50\uff0c\u5982 map\u3001filter\u3001flatMap\uff0c\u8ba1\u7b97\u65f6\u4e0d\u4f9d\u8d56\u5176\u4ed6\u6570\u636e\uff0c\u5c31\u90fd\u5c5e\u4e8e\u65e0\u72b6\u6001\u7684\u7b97\u5b50\u3002</p> <p>\u800c\u6709\u72b6\u6001\u7684\u7b97\u5b50\u4efb\u52a1\uff0c\u5219\u9664\u5f53\u524d\u6570\u636e\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u4e00\u4e9b\u5176\u4ed6\u6570\u636e\u6765\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c\u3002\u8fd9\u91cc\u7684\u201c\u5176\u4ed6\u6570\u636e\u201d\uff0c\u5c31\u662f\u6240\u8c13\u7684\u72b6\u6001\uff08state\uff09\uff0c\u6700\u5e38\u89c1\u7684\u5c31\u662f\u4e4b\u524d\u5230\u8fbe\u7684\u6570\u636e\uff0c\u6216\u8005\u7531\u4e4b\u524d\u6570\u636e\u8ba1\u7b97\u51fa\u7684\u67d0\u4e2a\u7ed3\u679c\u3002</p> <p></p> <p>\u6709\u72b6\u6001\u7b97\u5b50\u7684\u4e00\u822c\u5904\u7406\u6d41\u7a0b\uff1a</p> <ol> <li>\u7b97\u5b50\u4efb\u52a1\u63a5\u6536\u5230\u4e0a\u6e38\u53d1\u6765\u7684\u6570\u636e</li> <li>\u83b7\u53d6\u5f53\u524d\u72b6\u6001</li> <li>\u6839\u636e\u4e1a\u52a1\u903b\u8f91\u8fdb\u884c\u8ba1\u7b97\uff0c\u66f4\u65b0\u72b6\u6001</li> <li>\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c\uff0c\u8f93\u51fa\u53d1\u9001\u5230\u4e0b\u6e38\u4efb\u52a1</li> </ol>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#_3","title":"\u72b6\u6001\u7684\u7ba1\u7406","text":"<p>\u5728\u4f20\u7edf\u7684\u4e8b\u52a1\u578b\u5904\u7406\u67b6\u6784\u4e2d\uff0c\u8fd9\u79cd\u989d\u5916\u7684\u72b6\u6001\u6570\u636e\u662f\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\u7684\u3002\u800c\u5bf9\u4e8e\u5b9e\u65f6\u6d41\u5904\u7406\u6765\u8bf4\uff0c\u8fd9\u6837\u505a\u9700\u8981\u9891\u7e41\u8bfb\u5199\u5916\u90e8\u6570\u636e\u5e93\uff0c\u5982\u679c\u6570\u636e\u89c4\u6a21\u975e\u5e38\u5927\u80af\u5b9a\u5c31\u8fbe\u4e0d\u5230\u6027\u80fd\u8981\u6c42\u4e86\u3002\u6240\u4ee5 Flink \u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u5c06\u72b6\u6001\u76f4\u63a5\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u6765\u4fdd\u8bc1\u6027\u80fd\uff0c\u5e76\u901a\u8fc7\u5206\u5e03\u5f0f\u6269\u5c55\u6765\u63d0\u9ad8\u541e\u5410\u91cf\u3002</p> <p>\u4f46\u662f\u5728\u5206\u5e03\u5f0f\u7684\u573a\u666f\u4e0b\uff0c\u8fd8\u9700\u8981\u989d\u5916\u8003\u8651\uff1a</p> <ol> <li>\u5bb9\u9519\u6027\uff0c\u4e5f\u5c31\u662f\u6545\u969c\u540e\u7684\u6062\u590d\u3002\u72b6\u6001\u53ea\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u663e\u7136\u662f\u4e0d\u591f\u7a33\u5b9a\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u6301\u4e45\u5316\u4fdd\u5b58\uff0c\u5728\u53d1\u751f\u6545\u969c\u540e\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u5907\u4efd\u4e2d\u6062\u590d\u72b6\u6001</li> <li>\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u6a2a\u5411\u6269\u5c55\u6027\u3002\u5f53\u5904\u7406\u7684\u6570\u636e\u91cf\u589e\u5927\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u76f8\u5e94\u5730\u5bf9\u8ba1\u7b97\u8d44\u6e90\u6269\u5bb9\uff0c\u8c03\u5927\u5e76\u884c\u5ea6\uff0c\u6b64\u65f6\u5c31\u6d89\u53ca\u5230\u4e86\u72b6\u6001\u7684\u91cd\u7ec4\u8c03\u6574</li> </ol>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#_4","title":"\u72b6\u6001\u7684\u5206\u7c7b","text":""},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#_5","title":"\u6258\u7ba1\u72b6\u6001\u548c\u539f\u59cb\u72b6\u6001","text":"<p>Flink \u7684\u72b6\u6001\u6709\u4e24\u79cd\uff1a\u6258\u7ba1\u72b6\u6001\uff08Managed State\uff09\u548c\u539f\u59cb\u72b6\u6001\uff08Raw State\uff09\u3002</p> <p>\u6258\u7ba1\u72b6\u6001\u5c31\u662f\u7531 Flink \u7edf\u4e00\u7ba1\u7406\u7684\uff0c\u72b6\u6001\u7684\u5b58\u50a8\u8bbf\u95ee\u3001\u6545\u969c\u6062\u590d\u548c\u91cd\u7ec4\u7b49\u4e00\u7cfb\u5217\u95ee\u9898\u90fd\u7531 Flink \u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u8981\u8c03\u63a5\u53e3\u5c31\u53ef\u4ee5\u3002\u800c\u539f\u59cb\u72b6\u6001\u5219\u662f\u81ea\u5b9a\u4e49\u7684\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u5f00\u8f9f\u4e86\u4e00\u5757\u5185\u5b58\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u7ba1\u7406\uff0c\u5b9e\u73b0\u72b6\u6001\u7684\u5e8f\u5217\u5316\u548c\u6545\u969c\u6062\u590d\u3002</p> <p>\u6258\u7ba1\u72b6\u6001\u662f\u7531 Flink \u7684\u8fd0\u884c\u65f6\uff08Runtime\uff09\u6765\u6258\u7ba1\u7684\u3002\u5728\u914d\u7f6e\u5bb9\u9519\u673a\u5236\u540e\uff0c\u72b6\u6001\u4f1a\u81ea\u52a8\u6301\u4e45\u5316\u4fdd\u5b58\uff0c\u5e76\u5728\u53d1\u751f\u6545\u969c\u65f6\u81ea\u52a8\u6062\u590d\u3002\u5f53\u5e94\u7528\u53d1\u751f\u6a2a\u5411\u6269\u5c55\u65f6\uff0c\u72b6\u6001\u4e5f\u4f1a\u81ea\u52a8\u5730\u91cd\u7ec4\u5206\u914d\u5230\u6240\u6709\u7684\u5b50\u4efb\u52a1\u5b9e\u4f8b\u4e0a\u3002Flink \u63d0\u4f9b\u4e86\u503c\u72b6\u6001\uff08ValueState\uff09\u3001\u5217\u8868\u72b6\u6001\uff08ListState\uff09\u3001\u6620\u5c04\u72b6\u6001\uff08MapState\uff09\u3001\u805a\u5408\u72b6\u6001\uff08AggregateState\uff09\u7b49\u591a\u79cd\u7ed3\u6784\uff0c\u5185\u90e8\u652f\u6301\u5404\u79cd\u6570\u636e\u7c7b\u578b\u3002\u805a\u5408\u3001\u7a97\u53e3\u7b49\u7b97\u5b50\u4e2d\u5185\u7f6e\u7684\u72b6\u6001\uff0c\u5c31\u90fd\u662f\u6258\u7ba1\u72b6\u6001\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u5bcc\u51fd\u6570\u7c7b\uff08RichFunction\uff09\u4e2d\u901a\u8fc7\u4e0a\u4e0b\u6587\u6765\u81ea\u5b9a\u4e49\u72b6\u6001\uff0c\u8fd9\u4e9b\u4e5f\u90fd\u662f\u6258\u7ba1\u72b6\u6001\u3002</p> <p>\u539f\u59cb\u72b6\u6001\u5c31\u5168\u90e8\u9700\u8981\u81ea\u5b9a\u4e49\u4e86\u3002Flink \u4e0d\u4f1a\u5bf9\u72b6\u6001\u8fdb\u884c\u4efb\u4f55\u81ea\u52a8\u64cd\u4f5c\uff0c\u4e5f\u4e0d\u77e5\u9053\u72b6\u6001\u7684\u5177\u4f53\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u4f1a\u628a\u5b83\u5f53\u4f5c\u6700\u539f\u59cb\u7684\u5b57\u8282\uff08Byte\uff09\u6570\u7ec4\u6765\u5b58\u50a8\u3002</p>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#_6","title":"\u7b97\u5b50\u72b6\u6001\u548c\u6309\u952e\u5206\u533a\u72b6\u6001","text":"<p>Flink \u4e2d\u7684\u6258\u7ba1\u72b6\u6001\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a\u7b97\u5b50\u72b6\u6001\u548c\u6309\u952e\u5206\u533a\u72b6\u6001\u3002</p> \u7b97\u5b50\u72b6\u6001 <p>\u72b6\u6001\u4f5c\u7528\u8303\u56f4\u9650\u5b9a\u4e3a\u5f53\u524d\u7684\u7b97\u5b50\u4efb\u52a1\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u53ea\u5bf9\u5f53\u524d\u5e76\u884c\u5b50\u4efb\u52a1\u5b9e\u4f8b\u6709\u6548\u3002\u8fd9\u5c31\u610f\u5473\u7740\u5bf9\u4e8e\u4e00\u4e2a\u5e76\u884c\u5b50\u4efb\u52a1\uff0c\u5360\u636e\u4e86\u4e00\u4e2a\u201c\u5206\u533a\u201d\uff0c\u5b83\u6240\u5904\u7406\u7684\u6240\u6709\u6570\u636e\u90fd\u4f1a\u8bbf\u95ee\u5230\u76f8\u540c\u7684\u72b6\u6001\uff0c\u72b6\u6001\u5bf9\u4e8e\u540c\u4e00\u4efb\u52a1\u800c\u8a00\u662f\u5171\u4eab\u7684\u3002</p> <p></p> \u6309\u952e\u5206\u533a\u72b6\u6001 <p>\u6309\u952e\u5206\u533a\u72b6\u6001\u662f\u6839\u636e\u8f93\u5165\u6d41\u4e2d\u5b9a\u4e49\u7684\u952e\uff08key\uff09\u6765\u7ef4\u62a4\u548c\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u5b9a\u4e49\u5728\u6309\u952e\u5206\u533a\u6d41\uff08KeyedStream\uff09\u4e2d\uff0c\u4e5f\u5c31 keyBy \u4e4b\u540e\u624d\u53ef\u4ee5\u4f7f\u7528\u3002</p> <p></p> <p>\u6309\u952e\u5206\u533a\u72b6\u6001\u7684\u6570\u636e\u7ed3\u6784\uff1a</p> <ul> <li>ValueState\uff1a\u5373\u7c7b\u578b\u4e3a T \u7684\u5355\u503c\u72b6\u6001\u3002\u8fd9\u4e2a\u72b6\u6001\u4e0e\u5bf9\u5e94\u7684 key \u7ed1\u5b9a\uff0c\u662f\u6700\u7b80\u5355\u7684\u72b6\u6001\u4e86\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7 <code>update()</code> \u66f4\u65b0\u72b6\u6001\u503c\uff0c\u901a\u8fc7 <code>value()</code> \u83b7\u53d6\u72b6\u6001\u503c\u3002</li> <li>ListState\uff1a\u5373 key \u4e0a\u7684\u72b6\u6001\u503c\u4e3a\u4e00\u4e2a\u5217\u8868\u3002\u53ef\u4ee5\u901a\u8fc7 <code>add()</code> \u5f80\u5217\u8868\u4e2d\u9644\u52a0\u503c\uff1b\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>get()</code> \u8fd4\u56de\u4e00\u4e2a Iterable \u6765\u904d\u5386\u72b6\u6001\u503c\u3002</li> <li>ReducingState\uff1a\u8fd9\u79cd\u72b6\u6001\u901a\u8fc7\u7528\u6237\u4f20\u5165\u7684 reduceFunction\uff0c\u6bcf\u6b21\u8c03\u7528 <code>add()</code> \u6dfb\u52a0\u503c\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528 reduceFunction\uff0c\u6700\u540e\u5408\u5e76\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u72b6\u6001\u503c\u3002</li> <li>MapState\uff1a\u5373\u72b6\u6001\u503c\u4e3a\u4e00\u4e2a map\u3002\u7528\u6237\u901a\u8fc7 <code>put()</code> \u6216 <code>putAll()</code> \u6dfb\u52a0\u5143\u7d20\u3002</li> </ul>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#_7","title":"\u72b6\u6001\u6301\u4e45\u5316\u548c\u72b6\u6001\u540e\u7aef","text":"<p>\u5728 Flink \u7684\u72b6\u6001\u7ba1\u7406\u673a\u5236\u4e2d\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u529f\u80fd\u5c31\u662f\u5bf9\u72b6\u6001\u8fdb\u884c\u6301\u4e45\u5316\u4fdd\u5b58\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u53d1\u751f\u6545\u969c\u540e\u8fdb\u884c\u91cd\u542f\u6062\u590d\u3002Flink \u5bf9\u72b6\u6001\u8fdb\u884c\u6301\u4e45\u5316\u7684\u65b9\u5f0f\uff0c\u5c31\u662f\u5c06\u5f53\u524d\u6240\u6709\u5206\u5e03\u5f0f\u72b6\u6001\u8fdb\u884c\u300c\u5feb\u7167\u300d\u4fdd\u5b58\uff0c\u5199\u5165\u4e00\u4e2a\u300c\u68c0\u67e5\u70b9\u300d\uff08checkpoint\uff09\u6216\u8005\u300c\u4fdd\u5b58\u70b9\u300d\uff08savepoint\uff09\u4fdd\u5b58\u5230\u5916\u90e8\u5b58\u50a8\u7cfb\u7edf\u4e2d\u3002</p> <p>\u72b6\u6001\u6301\u4e45\u5316:</p> <p>Flink \u4f1a\u5b9a\u671f\u4fdd\u5b58\u68c0\u67e5\u70b9\uff0c\u5728\u68c0\u67e5\u70b9\u4e2d\u4f1a\u8bb0\u5f55\u6bcf\u4e2a\u7b97\u5b50\u7684 id \u548c\u72b6\u6001\u3002\u5982\u679c\u53d1\u751f\u6545\u969c\uff0cFlink \u5c31\u4f1a\u7528\u6700\u8fd1\u4e00\u6b21\u6210\u529f\u4fdd\u5b58\u7684\u68c0\u67e5\u70b9\u6765\u6062\u590d\u5e94\u7528\u7684\u72b6\u6001\uff0c\u91cd\u65b0\u542f\u52a8\u5904\u7406\u6d41\u7a0b\uff0c\u5c31\u5982\u540c\u201c\u8bfb\u6863\u201d\u4e00\u6837\u3002</p> <p>\u72b6\u6001\u540e\u7aef\uff1a</p> <p>\u68c0\u67e5\u70b9\u7684\u4fdd\u5b58\u79bb\u4e0d\u5f00 JobManager \u548c TaskManager\uff0c\u4ee5\u53ca\u5916\u90e8\u5b58\u50a8\u7cfb\u7edf\u7684\u534f\u8c03\u3002\u5728\u5e94\u7528\u8fdb\u884c\u68c0\u67e5\u70b9\u4fdd\u5b58\u65f6\uff0c\u9996\u5148\u4f1a\u7531 JobManager \u5411\u6240\u6709 TaskManager \u53d1\u51fa\u89e6\u53d1\u68c0\u67e5\u70b9\u7684\u547d\u4ee4\uff1bTaskManger \u6536\u5230\u4e4b\u540e\uff0c\u5c06\u5f53\u524d\u4efb\u52a1\u7684\u6240\u6709\u72b6\u6001\u8fdb\u884c\u5feb\u7167\u4fdd\u5b58\uff0c\u6301\u4e45\u5316\u5230\u8fdc\u7a0b\u7684\u5b58\u50a8\u4ecb\u8d28\u4e2d\uff1b\u5b8c\u6210\u4e4b\u540e\u5411 JobManager \u8fd4\u56de\u786e\u8ba4\u4fe1\u606f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u5206\u5e03\u5f0f\u7684\uff0c\u5f53 JobManger \u6536\u5230\u6240\u6709 TaskManager \u7684\u8fd4\u56de\u4fe1\u606f\u540e\uff0c\u5c31\u4f1a\u786e\u8ba4\u5f53\u524d\u68c0\u67e5\u70b9\u6210\u529f\u4fdd\u5b58\uff0c\u5982\u56fe 9-5 \u6240\u793a\u3002\u800c\u8fd9\u4e00\u5207\u5de5\u4f5c\u7684\u534f\u8c03\uff0c\u5c31\u9700\u8981\u4e00\u4e2a\u201c\u4e13\u804c\u4eba\u5458\u201d\u6765\u5b8c\u6210\u3002</p> <p></p> <p>\u5728 Flink \u4e2d\uff0c\u72b6\u6001\u7684\u5b58\u50a8\u3001\u8bbf\u95ee\u4ee5\u53ca\u7ef4\u62a4\uff0c\u90fd\u662f\u7531\u4e00\u4e2a\u53ef\u63d2\u62d4\u7684\u7ec4\u4ef6\u51b3\u5b9a\u7684\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u5c31\u53eb\u4f5c\u72b6\u6001\u540e\u7aef\uff08state backend\uff09\u3002\u72b6\u6001\u540e\u7aef\u4e3b\u8981\u8d1f\u8d23\u4e24\u4ef6\u4e8b\uff1a\u4e00\u662f\u672c\u5730\u7684\u72b6\u6001\u7ba1\u7406\uff0c\u4e8c\u662f\u5c06\u68c0\u67e5\u70b9\uff08checkpoint\uff09\u5199\u5165\u8fdc\u7a0b\u7684\u6301\u4e45\u5316\u5b58\u50a8\u3002</p> <p>Flink \u4e2d\u63d0\u4f9b\u4e86\u4e24\u7c7b\u4e0d\u540c\u7684\u72b6\u6001\u540e\u7aef\uff0c\u4e00\u79cd\u662f\u201c\u54c8\u5e0c\u8868\u72b6\u6001\u540e\u7aef\u201d\uff08HashMapStateBackend\uff09\uff0c\u53e6\u4e00\u79cd\u662f\u201c\u5185\u5d4c RocksDB \u72b6\u6001\u540e\u7aef\u201d\uff08EmbeddedRocksDBStateBackend\uff09\u3002\u5982\u679c\u6ca1\u6709\u7279\u522b\u914d\u7f6e\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u72b6\u6001\u540e\u7aef\u662f HashMapStateBackend\u3002</p>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#_8","title":"\u4f7f\u7528\u72b6\u6001","text":""},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#key-selector","title":"Key Selector","text":"<p>\u5982\u679c\u4f60\u5e0c\u671b\u4f7f\u7528 keyed state\uff0c\u9996\u5148\u9700\u8981\u4e3a DataStream \u6307\u5b9a key\uff08\u4e3b\u952e\uff09\u3002\u8fd9\u4e2a\u4e3b\u952e\u7528\u4e8e\u72b6\u6001\u5206\u533a\uff08\u4e5f\u4f1a\u7ed9\u6570\u636e\u6d41\u4e2d\u7684\u8bb0\u5f55\u672c\u8eab\u5206\u533a\uff09\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 DataStream \u4e2d Java/Scala API \u7684 <code>keyBy(KeySelector)</code> \u6765\u6307\u5b9a key\u3002</p> <pre><code>// some ordinary POJO\npublic class WC {\n  public String word;\n  public int count;\n\n  public String getWord() { return word; }\n}\nDataStream&lt;WC&gt; words = // [...]\nKeyedStream&lt;WC&gt; keyed = words\n  .keyBy(WC::getWord);\n</code></pre>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#keyed-state","title":"\u4f7f\u7528 Keyed State","text":"<p>keyed state \u63a5\u53e3\u63d0\u4f9b\u4e0d\u540c\u7c7b\u578b\u72b6\u6001\u7684\u8bbf\u95ee\u63a5\u53e3\uff0c\u8fd9\u4e9b\u72b6\u6001\u90fd\u4f5c\u7528\u4e8e\u5f53\u524d\u8f93\u5165\u6570\u636e\u7684 key \u4e0b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e9b\u72b6\u6001\u4ec5\u53ef\u5728 KeyedStream \u4e0a\u4f7f\u7528\u3002</p> <ul> <li>ValueState\uff1a\u5373\u7c7b\u578b\u4e3a T \u7684\u5355\u503c\u72b6\u6001\u3002\u8fd9\u4e2a\u72b6\u6001\u4e0e\u5bf9\u5e94\u7684 key \u7ed1\u5b9a\uff0c\u662f\u6700\u7b80\u5355\u7684\u72b6\u6001\u4e86\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7 update \u65b9\u6cd5\u66f4\u65b0\u72b6\u6001\u503c\uff0c\u901a\u8fc7 value \u65b9\u6cd5\u83b7\u53d6\u72b6\u6001\u503c\u3002</li> <li>ListState\uff1a\u5373 key \u4e0a\u7684\u72b6\u6001\u503c\u4e3a\u4e00\u4e2a\u5217\u8868\u3002\u53ef\u4ee5\u901a\u8fc7 add \u65b9\u6cd5\u5f80\u5217\u8868\u4e2d\u9644\u52a0\u503c\uff1b\u4e5f\u53ef\u4ee5\u901a\u8fc7 get \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a Iterable \u6765\u904d\u5386\u72b6\u6001\u503c\u3002</li> <li>ReducingState:\u8fd9\u79cd\u72b6\u6001\u901a\u8fc7\u7528\u6237\u4f20\u5165\u7684 reduceFunction\uff0c\u6bcf\u6b21\u8c03\u7528 add \u65b9\u6cd5\u6dfb\u52a0\u503c\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528 reduceFunction\uff0c\u6700\u540e\u5408\u5e76\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u72b6\u6001\u503c\u3002</li> <li>AggregatingState&lt;IN, OUT&gt;\uff1a\u4fdd\u7559\u4e00\u4e2a\u5355\u503c\uff0c\u8868\u793a\u6dfb\u52a0\u5230\u72b6\u6001\u7684\u6240\u6709\u503c\u7684\u805a\u5408\u3002\u548c ReducingState \u76f8\u53cd\u7684\u662f, \u805a\u5408\u7c7b\u578b\u53ef\u80fd\u4e0e\u6dfb\u52a0\u5230\u72b6\u6001\u7684\u5143\u7d20\u7684\u7c7b\u578b\u4e0d\u540c\u3002 \u63a5\u53e3\u4e0e ListState \u7c7b\u4f3c\uff0c\u4f46\u4f7f\u7528 add(IN) \u6dfb\u52a0\u7684\u5143\u7d20\u4f1a\u7528\u6307\u5b9a\u7684 AggregateFunction \u8fdb\u884c\u805a\u5408\u3002</li> <li>MapState&lt;UK, UV&gt;\uff1a\u5373\u72b6\u6001\u503c\u4e3a\u4e00\u4e2a map\u3002\u7528\u6237\u901a\u8fc7 put \u6216 putAll \u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20\u3002\u4f7f\u7528 get(UK) \u68c0\u7d22\u7279\u5b9a key\u3002 \u4f7f\u7528 entries()\uff0ckeys() \u548c values() \u5206\u522b\u68c0\u7d22\u6620\u5c04\u3001\u952e\u548c\u503c\u7684\u53ef\u8fed\u4ee3\u89c6\u56fe\u3002</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4ee5\u4e0a\u6240\u8ff0\u7684 State \u5bf9\u8c61\uff0c\u4ec5\u4ec5\u7528\u4e8e\u4e0e\u72b6\u6001\u8fdb\u884c\u4ea4\u4e92\uff08\u66f4\u65b0\u3001\u5220\u9664\u3001\u6e05\u7a7a\u7b49\uff09\uff0c\u800c\u771f\u6b63\u7684\u72b6\u6001\u503c\uff0c\u6709\u53ef\u80fd\u662f\u5b58\u5728\u5185\u5b58\u3001\u78c1\u76d8\u3001\u6216\u8005\u5176\u4ed6\u5206\u5e03\u5f0f\u5b58\u50a8\u7cfb\u7edf\u4e2d\u3002\u76f8\u5f53\u4e8e\u6211\u4eec\u53ea\u662f\u6301\u6709\u4e86\u8fd9\u4e2a\u72b6\u6001\u7684\u53e5\u67c4\u3002</p> <p>\u4f60\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a StateDescriptor\uff0c\u624d\u80fd\u5f97\u5230\u5bf9\u5e94\u7684\u72b6\u6001\u53e5\u67c4\u3002 \u8fd9\u4fdd\u5b58\u4e86\u72b6\u6001\u540d\u79f0\uff08\u6b63\u5982\u6211\u4eec\u7a0d\u540e\u5c06\u770b\u5230\u7684\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u72b6\u6001\uff0c\u5e76\u4e14\u5b83\u4eec\u5fc5\u987b\u5177\u6709\u552f\u4e00\u7684\u540d\u79f0\u4ee5\u4fbf\u53ef\u4ee5\u5f15\u7528\u5b83\u4eec\uff09\uff0c \u72b6\u6001\u6240\u6301\u6709\u503c\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u53ef\u80fd\u5305\u542b\u7528\u6237\u6307\u5b9a\u7684\u51fd\u6570\uff0c\u4f8b\u5982 ReduceFunction\u3002 \u6839\u636e\u4e0d\u540c\u7684\u72b6\u6001\u7c7b\u578b\uff0c\u53ef\u4ee5\u521b\u5efa ValueStateDescriptor\uff0cListStateDescriptor\uff0c AggregatingStateDescriptor, ReducingStateDescriptor \u6216 MapStateDescriptor\u3002</p> <p>\u72b6\u6001\u901a\u8fc7 RuntimeContext \u8fdb\u884c\u8bbf\u95ee\uff0c\u56e0\u6b64\u53ea\u80fd\u5728 rich functions \u4e2d\u4f7f\u7528\u3002RichFunction \u4e2d RuntimeContext \u63d0\u4f9b\u5982\u4e0b\u65b9\u6cd5\uff1a</p> <pre><code>ValueState&lt;T&gt; getState(ValueStateDescriptor&lt;T&gt;)\nReducingState&lt;T&gt; getReducingState(ReducingStateDescriptor&lt;T&gt;)\nListState&lt;T&gt; getListState(ListStateDescriptor&lt;T&gt;)\nAggregatingState&lt;IN, OUT&gt; getAggregatingState(AggregatingStateDescriptor&lt;IN, ACC, OUT&gt;)\nMapState&lt;UK, UV&gt; getMapState(MapStateDescriptor&lt;UK, UV&gt;)\n</code></pre> <p>\u4e0b\u9762\u662f\u4e00\u4e2a FlatMapFunction \u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u8fd9\u4e9b\u90e8\u5206\u7ec4\u5408\u8d77\u6765\uff1a</p> <pre><code>public class CountWindowAverage extends RichFlatMapFunction&lt;Tuple2&lt;Long, Long&gt;, Tuple2&lt;Long, Long&gt;&gt; {\n\n    /**\n     * The ValueState handle. The first field is the count, the second field a running sum.\n     */\n    private transient ValueState&lt;Tuple2&lt;Long, Long&gt;&gt; sum;\n\n    @Override\n    public void flatMap(Tuple2&lt;Long, Long&gt; input, Collector&lt;Tuple2&lt;Long, Long&gt;&gt; out) throws Exception {\n\n        // access the state value\n        Tuple2&lt;Long, Long&gt; currentSum = sum.value();\n\n        // update the count\n        currentSum.f0 += 1;\n\n        // add the second field of the input value\n        currentSum.f1 += input.f1;\n\n        // update the state\n        sum.update(currentSum);\n\n        // if the count reaches 2, emit the average and clear the state\n        if (currentSum.f0 &gt;= 2) {\n            out.collect(new Tuple2&lt;&gt;(input.f0, currentSum.f1 / currentSum.f0));\n            sum.clear();\n        }\n    }\n\n    @Override\n    public void open(Configuration config) {\n        ValueStateDescriptor&lt;Tuple2&lt;Long, Long&gt;&gt; descriptor =\n                new ValueStateDescriptor&lt;&gt;(\n                        \"average\", // the state name\n                        TypeInformation.of(new TypeHint&lt;Tuple2&lt;Long, Long&gt;&gt;() {}), // type information\n                        Tuple2.of(0L, 0L)); // default value of the state, if nothing was set\n        sum = getRuntimeContext().getState(descriptor);\n    }\n}\n\n// this can be used in a streaming program like this (assuming we have a StreamExecutionEnvironment env)\nenv.fromElements(Tuple2.of(1L, 3L), Tuple2.of(1L, 5L), Tuple2.of(1L, 7L), Tuple2.of(1L, 4L), Tuple2.of(1L, 2L))\n        .keyBy(value -&gt; value.f0)\n        .flatMap(new CountWindowAverage())\n        .print();\n\n// the printed output will be (1,4) and (1,5)\n</code></pre> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u6570\u7a97\u53e3\u3002 \u6211\u4eec\u628a\u5143\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f53\u4f5c key\uff08\u5728\u793a\u4f8b\u4e2d\u90fd key \u90fd\u662f \u201c1\u201d\uff09\u3002 \u8be5\u51fd\u6570\u5c06\u51fa\u73b0\u7684\u6b21\u6570\u4ee5\u53ca\u603b\u548c\u5b58\u50a8\u5728 \u201cValueState\u201d \u4e2d\u3002 \u4e00\u65e6\u51fa\u73b0\u6b21\u6570\u8fbe\u5230 2\uff0c\u5219\u5c06\u5e73\u5747\u503c\u53d1\u9001\u5230\u4e0b\u6e38\uff0c\u5e76\u6e05\u9664\u72b6\u6001\u91cd\u65b0\u5f00\u59cb\u3002 \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4f1a\u4e3a\u6bcf\u4e2a\u4e0d\u540c\u7684 key\uff08\u5143\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09\u4fdd\u5b58\u4e00\u4e2a\u5355\u72ec\u7684\u503c\u3002</p>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#operator-state","title":"Operator State","text":"<p>\u7b97\u5b50\u72b6\u6001\uff08\u6216\u8005\u975e keyed \u72b6\u6001\uff09\u662f\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5e76\u884c\u7b97\u5b50\u5b9e\u4f8b\u7684\u72b6\u6001\u3002Kafka Connector \u662f Flink \u4e2d\u4f7f\u7528\u7b97\u5b50\u72b6\u6001\u4e00\u4e2a\u5f88\u5177\u6709\u542f\u53d1\u6027\u7684\u4f8b\u5b50\u3002Kafka consumer \u6bcf\u4e2a\u5e76\u884c\u5b9e\u4f8b\u7ef4\u62a4\u4e86 topic partitions \u548c\u504f\u79fb\u91cf\u7684 map \u4f5c\u4e3a\u5b83\u7684\u7b97\u5b50\u72b6\u6001\u3002</p> <p>\u5f53\u5e76\u884c\u5ea6\u6539\u53d8\u7684\u65f6\u5019\uff0c\u7b97\u5b50\u72b6\u6001\u652f\u6301\u5c06\u72b6\u6001\u91cd\u65b0\u5206\u53d1\u7ed9\u5404\u5e76\u884c\u7b97\u5b50\u5b9e\u4f8b\u3002\u5904\u7406\u91cd\u5206\u53d1\u8fc7\u7a0b\u6709\u591a\u79cd\u4e0d\u540c\u7684\u65b9\u6848\u3002</p> <p>\u5728\u5178\u578b\u7684\u6709\u72b6\u6001 Flink \u5e94\u7528\u4e2d\u4f60\u65e0\u9700\u4f7f\u7528\u7b97\u5b50\u72b6\u6001\u3002\u5b83\u5927\u90fd\u4f5c\u4e3a\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u72b6\u6001\u4f7f\u7528\u3002\u7528\u4e8e\u5b9e\u73b0 source/sink\uff0c\u4ee5\u53ca\u65e0\u6cd5\u5bf9 state \u8fdb\u884c\u5206\u533a\u800c\u6ca1\u6709\u4e3b\u952e\u7684\u8fd9\u7c7b\u573a\u666f\u4e2d\u3002</p>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#broadcast-state","title":"Broadcast State","text":"<p>\u5e7f\u64ad\u72b6\u6001\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7b97\u5b50\u72b6\u6001\u3002\u5f15\u5165\u5b83\u7684\u76ee\u7684\u5728\u4e8e\u652f\u6301\u4e00\u4e2a\u6d41\u4e2d\u7684\u5143\u7d20\u9700\u8981\u5e7f\u64ad\u5230\u6240\u6709\u4e0b\u6e38\u4efb\u52a1\u7684\u4f7f\u7528\u60c5\u5f62\u3002\u5728\u8fd9\u4e9b\u4efb\u52a1\u4e2d\u5e7f\u64ad\u72b6\u6001\u7528\u4e8e\u4fdd\u6301\u6240\u6709\u5b50\u4efb\u52a1\u72b6\u6001\u76f8\u540c\u3002\u8be5\u72b6\u6001\u63a5\u4e0b\u6765\u53ef\u5728\u7b2c\u4e8c\u4e2a\u5904\u7406\u8bb0\u5f55\u7684\u6570\u636e\u6d41\u4e2d\u8bbf\u95ee\u3002\u53ef\u4ee5\u8bbe\u60f3\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u7528\u4e8e\u5904\u7406\u5176\u4ed6\u6d41\u4e2d\u5143\u7d20\u89c4\u5219\u7684\u4f4e\u541e\u5410\u91cf\u6570\u636e\u6d41\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u81ea\u7136\u800c\u7136\u5730\u8fd0\u7528\u4e86\u5e7f\u64ad\u72b6\u6001\u3002\u8003\u8651\u5230\u4e0a\u8ff0\u8fd9\u7c7b\u4f7f\u7528\u60c5\u5f62\uff0c\u5e7f\u64ad\u72b6\u6001\u548c\u5176\u4ed6\u7b97\u5b50\u72b6\u6001\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a</p> <ul> <li>\u5b83\u5177\u6709 map \u683c\u5f0f</li> <li>\u5b83\u4ec5\u5728\u4e00\u4e9b\u7279\u6b8a\u7684\u7b97\u5b50\u4e2d\u53ef\u7528\u3002\u8fd9\u4e9b\u7b97\u5b50\u7684\u8f93\u5165\u4e3a\u4e00\u4e2a\u5e7f\u64ad\u6570\u636e\u6d41\u548c\u975e\u5e7f\u64ad\u6570\u636e\u6d41</li> <li>\u8fd9\u7c7b\u7b97\u5b50\u53ef\u4ee5\u62e5\u6709\u4e0d\u540c\u547d\u540d\u7684\u591a\u4e2a\u5e7f\u64ad\u72b6\u6001</li> </ul>"},{"location":"Flink/5.%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/#broadcast-state_1","title":"\u4f7f\u7528 Broadcast State","text":"<p>\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u5c55\u73b0 broadcast state \u63d0\u4f9b\u7684\u63a5\u53e3\u3002\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u5e8f\u5217\uff0c\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u662f\u5177\u6709\u4e0d\u540c\u989c\u8272\u4e0e\u5f62\u72b6\u7684\u56fe\u5f62\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u5e8f\u5217\u91cc\u76f8\u540c\u989c\u8272\u7684\u56fe\u5f62\u4e2d\u5bfb\u627e\u6ee1\u8db3\u4e00\u5b9a\u987a\u5e8f\u6a21\u5f0f\u7684\u56fe\u5f62\u5bf9\uff08\u6bd4\u5982\u5728\u7ea2\u8272\u7684\u56fe\u5f62\u91cc\uff0c\u6709\u4e00\u4e2a\u957f\u65b9\u5f62\u8ddf\u7740\u4e00\u4e2a\u4e09\u89d2\u5f62\uff09\u3002 \u540c\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u5bfb\u627e\u7684\u6a21\u5f0f\u4e5f\u4f1a\u968f\u7740\u65f6\u95f4\u800c\u6539\u53d8\u3002</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u6d41\uff0c\u4e00\u4e2a\u6d41\u5305\u542b\u56fe\u5f62\uff08Item\uff09\uff0c\u5177\u6709\u989c\u8272\u548c\u5f62\u72b6\u4e24\u4e2a\u5c5e\u6027\u3002\u53e6\u4e00\u4e2a\u6d41\u5305\u542b\u7279\u5b9a\u7684\u89c4\u5219\uff08Rule\uff09\uff0c\u4ee3\u8868\u5e0c\u671b\u5bfb\u627e\u7684\u6a21\u5f0f\u3002</p> <p>\u5728\u56fe\u5f62\u6d41\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u4f7f\u7528\u989c\u8272\u5c06\u6d41\u8fdb\u884c\u8fdb\u884c\u5206\u533a\uff08keyBy\uff09\uff0c\u8fd9\u80fd\u786e\u4fdd\u76f8\u540c\u989c\u8272\u7684\u56fe\u5f62\u4f1a\u6d41\u8f6c\u5230\u76f8\u540c\u7684\u7269\u7406\u673a\u4e0a\u3002</p> <pre><code>// \u5c06\u56fe\u5f62\u4f7f\u7528\u989c\u8272\u8fdb\u884c\u5212\u5206\nKeyedStream&lt;Item, Color&gt; colorPartitionedStream = itemStream\n                        .keyBy(new KeySelector&lt;Item, Color&gt;(){...});\n</code></pre> <p>\u5bf9\u4e8e\u89c4\u5219\u6d41\uff0c\u5b83\u5e94\u8be5\u88ab\u5e7f\u64ad\u5230\u6240\u6709\u7684\u4e0b\u6e38 task \u4e2d\uff0c\u4e0b\u6e38 task \u5e94\u5f53\u5b58\u50a8\u8fd9\u4e9b\u89c4\u5219\u5e76\u6839\u636e\u5b83\u5bfb\u627e\u6ee1\u8db3\u89c4\u5219\u7684\u56fe\u5f62\u5bf9\u3002\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5b8c\u6210\uff1a</p> <ol> <li>\u5c06\u89c4\u5219\u5e7f\u64ad\u7ed9\u6240\u6709\u4e0b\u6e38 task</li> <li>\u4f7f\u7528 MapStateDescriptor \u6765\u63cf\u8ff0\u5e76\u521b\u5efa broadcast state \u5728\u4e0b\u6e38\u7684\u5b58\u50a8\u7ed3\u6784</li> </ol> <pre><code>// \u4e00\u4e2a map descriptor\uff0c\u5b83\u63cf\u8ff0\u4e86\u7528\u4e8e\u5b58\u50a8\u89c4\u5219\u540d\u79f0\u4e0e\u89c4\u5219\u672c\u8eab\u7684 map \u5b58\u50a8\u7ed3\u6784\nMapStateDescriptor&lt;String, Rule&gt; ruleStateDescriptor = new MapStateDescriptor&lt;&gt;(\n            \"RulesBroadcastState\",\n            BasicTypeInfo.STRING_TYPE_INFO,\n            TypeInformation.of(new TypeHint&lt;Rule&gt;() {}));\n\n// \u5e7f\u64ad\u6d41\uff0c\u5e7f\u64ad\u89c4\u5219\u5e76\u4e14\u521b\u5efa broadcast state\nBroadcastStream&lt;Rule&gt; ruleBroadcastStream = ruleStream\n                        .broadcast(ruleStateDescriptor);\n</code></pre> <p>\u4e3a\u4e86\u5173\u8054\u4e00\u4e2a\u975e\u5e7f\u64ad\u6d41\uff08keyed \u6216\u8005 non-keyed\uff09\u4e0e\u4e00\u4e2a\u5e7f\u64ad\u6d41\uff08BroadcastStream\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u975e\u5e7f\u64ad\u6d41\u8c03\u7528 <code>connect()</code> \u65b9\u6cd5\uff0c\u5e76\u5c06 BroadcastStream \u5f53\u505a\u53c2\u6570\u4f20\u5165\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u53c2\u6570\u662f BroadcastConnectedStream\uff0c\u5177\u6709\u7c7b\u578b\u65b9\u6cd5 <code>process()</code>\uff0c\u4f20\u5165\u4e00\u4e2a\u7279\u6b8a\u7684 CoProcessFunction \u6765\u4e66\u5199\u6211\u4eec\u7684\u6a21\u5f0f\u8bc6\u522b\u903b\u8f91\u3002 \u5177\u4f53\u4f20\u5165 <code>process()</code> \u7684\u662f\u54ea\u4e2a\u7c7b\u578b\u53d6\u51b3\u4e8e\u975e\u5e7f\u64ad\u6d41\u7684\u7c7b\u578b\uff1a</p> <ul> <li>\u5982\u679c\u6d41\u662f\u4e00\u4e2a keyed \u6d41\uff0c\u90a3\u5c31\u662f KeyedBroadcastProcessFunction \u7c7b\u578b</li> <li>\u5982\u679c\u6d41\u662f\u4e00\u4e2a non-keyed \u6d41\uff0c\u90a3\u5c31\u662f BroadcastProcessFunction \u7c7b\u578b\u3002</li> </ul> <p>\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u56fe\u5f62\u6d41\u662f\u4e00\u4e2a keyed stream\uff0c\u6240\u4ee5\u6211\u4eec\u4e66\u5199\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>DataStream&lt;String&gt; output = colorPartitionedStream\n                 .connect(ruleBroadcastStream)\n                 .process(\n\n                     // KeyedBroadcastProcessFunction \u4e2d\u7684\u7c7b\u578b\u53c2\u6570\u8868\u793a\uff1a\n                     //   1. key stream \u4e2d\u7684 key \u7c7b\u578b\n                     //   2. \u975e\u5e7f\u64ad\u6d41\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\n                     //   3. \u5e7f\u64ad\u6d41\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\n                     //   4. \u7ed3\u679c\u7684\u7c7b\u578b\uff0c\u5728\u8fd9\u91cc\u662f string\n\n                     new KeyedBroadcastProcessFunction&lt;Color, Item, Rule, String&gt;() {\n                         // \u6a21\u5f0f\u5339\u914d\u903b\u8f91\n                     }\n                 );\n</code></pre> <p>\u66f4\u591a\u5173\u4e8e Broadcast State \u7684\u4fe1\u606f\u53ef\u4ee5\u5728 Broadcast State \u4e2d\u627e\u5230\u3002</p>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/","title":"\u5bb9\u9519\u673a\u5236","text":"<p>\u4e3a\u4e86\u4f7f\u72b6\u6001\u5177\u5907\u5bb9\u9519\u80fd\u529b\uff0cFlink \u9700\u8981\u5bf9\u72b6\u6001\u8fdb\u884c\u68c0\u67e5\u70b9\uff08checkpoint\uff09\u3002\u68c0\u67e5\u70b9\u4f7f Flink \u80fd\u591f\u6062\u590d\u72b6\u6001\u548c\u6d41\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e0e\u65e0\u6545\u969c\uff08failure-free\uff09\u6267\u884c\u76f8\u540c\u7684\u8bed\u4e49\u3002</p>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#_2","title":"\u672f\u8bed\u89e3\u91ca","text":"Snapshot Flink \u4f5c\u4e1a\u72b6\u6001\u5168\u5c40\u4e00\u81f4\u955c\u50cf\u7684\u901a\u7528\u672f\u8bed\u3002\u5feb\u7167\u5305\u62ec\u6307\u5411\u6bcf\u4e2a\u6570\u636e\u6e90\u7684\u6307\u9488\uff08\u4f8b\u5982\uff0c\u5230\u6587\u4ef6\u6216 Kafka \u5206\u533a\u7684\u504f\u79fb\u91cf\uff09\u4ee5\u53ca\u6bcf\u4e2a\u4f5c\u4e1a\u7684\u6709\u72b6\u6001\u8fd0\u7b97\u7b26\u7684\u72b6\u6001\u526f\u672c\uff0c\u8be5\u72b6\u6001\u526f\u672c\u662f\u5904\u7406\u4e86 sources \u504f\u79fb\u4f4d\u7f6e\u4e4b\u524d\u6240\u6709\u7684\u4e8b\u4ef6\u540e\u800c\u751f\u6210\u7684\u72b6\u6001\u3002 Checkpoint \u4e00\u79cd\u7531 Flink \u81ea\u52a8\u6267\u884c\u7684\u5feb\u7167\uff0c\u5176\u76ee\u7684\u662f\u80fd\u591f\u4ece\u6545\u969c\u4e2d\u6062\u590d\uff0c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e0e\u65e0\u6545\u969c\uff08failure-free\uff09\u6267\u884c\u76f8\u540c\u7684\u8bed\u4e49\u3002Checkpoint \u53ef\u4ee5\u662f\u589e\u91cf\u7684\uff0c\u5e76\u4e3a\u5feb\u901f\u6062\u590d\u8fdb\u884c\u4e86\u4f18\u5316\u3002 Savepoint \u7528\u6237\u51fa\u4e8e\u67d0\u79cd\u64cd\u4f5c\u76ee\u7684\uff08\u4f8b\u5982\u6709\u72b6\u6001\u7684\u91cd\u65b0\u90e8\u7f72/\u5347\u7ea7/\u7f29\u653e\u64cd\u4f5c\uff09\u624b\u52a8\uff08\u6216 API \u8c03\u7528\uff09\u89e6\u53d1\u7684\u5feb\u7167\u3002Savepoint \u59cb\u7ec8\u662f\u5b8c\u6574\u7684\uff0c\u5e76\u4e14\u5df2\u9488\u5bf9\u64cd\u4f5c\u7075\u6d3b\u6027\u8fdb\u884c\u4e86\u4f18\u5316\u3002"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#checkpoint","title":"Checkpoint","text":"<p>\u68c0\u67e5\u70b9\u662f Flink \u5bb9\u9519\u673a\u5236\u7684\u6838\u5fc3\u3002\u5728 Flink \u4e2d\uff0c\u68c0\u67e5\u70b9\u7684\u4fdd\u5b58\u662f\u5468\u671f\u6027\u89e6\u53d1\u7684\uff0c\u95f4\u9694\u65f6\u95f4\u53ef\u4ee5\u8fdb\u884c\u8bbe\u7f6e\u3002\u6240\u4ee5\u68c0\u67e5\u70b9\u4f5c\u4e3a\u5e94\u7528\u72b6\u6001\u7684\u4e00\u4efd\u201c\u5b58\u6863\u201d\uff0c\u5176\u5b9e\u5c31\u662f\u6240\u6709\u4efb\u52a1\u72b6\u6001\u5728\u540c\u4e00\u65f6\u95f4\u70b9\u7684\u4e00\u4e2a\u300c\u5feb\u7167\u300d\uff08snapshot\uff09\uff0c\u5b83\u7684\u89e6\u53d1\u662f\u5468\u671f\u6027\u7684\u3002</p> <p>\u5728 Flink \u4e2d\uff0c\u68c0\u67e5\u70b9\u4fdd\u5b58\u7684\u65f6\u95f4\u70b9\u662f\u5f53\u6240\u6709\u4efb\u52a1\u90fd\u6070\u597d\u5904\u7406\u5b8c\u4e00\u4e2a\u76f8\u540c\u7684\u8f93\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u5c06\u5b83\u4eec\u7684\u72b6\u6001\u4fdd\u5b58\u4e0b\u6765\u3002\u9996\u5148\uff0c\u8fd9\u6837\u907f\u514d\u4e86\u9664\u72b6\u6001\u4e4b\u5916\u5176\u4ed6\u989d\u5916\u4fe1\u606f\u7684\u5b58\u50a8\uff0c\u63d0\u9ad8\u4e86\u68c0\u67e5\u70b9\u4fdd\u5b58\u7684\u6548\u7387\u3002\u5176\u6b21\uff0c\u4e00\u4e2a\u6570\u636e\u8981\u4e48\u5c31\u662f\u88ab\u6240\u6709\u4efb\u52a1\u5b8c\u6574\u5730\u5904\u7406\u5b8c\uff0c\u72b6\u6001\u5f97\u5230\u4e86\u4fdd\u5b58\uff1b\u8981\u4e48\u5c31\u662f\u6ca1\u5904\u7406\u5b8c\uff0c\u72b6\u6001\u5168\u90e8\u6ca1\u4fdd\u5b58\uff1a\u8fd9\u5c31\u76f8\u5f53\u4e8e\u6784\u5efa\u4e86\u4e00\u4e2a\u300c\u4e8b\u52a1\u300d\uff08transaction\uff09\u3002</p> <p>\u4e0d\u8fc7\u4e0d\u540c\u7684\u4efb\u52a1\u600e\u4e48\u77e5\u9053\u5904\u7406\u7684\u662f\u201c\u540c\u4e00\u4e2a\u201d\u6570\u636e\u5462\uff1fFlink \u501f\u9274\u6c34\u4f4d\u7ebf\uff08watermark\uff09\u7684\u8bbe\u8ba1\uff0c\u5728\u6570\u636e\u6d41\u4e2d\u63d2\u5165\u4e00\u4e2a\u7279\u6b8a\u7684\u6570\u636e\u7ed3\u6784 Checkpoint Barrier\uff0c\u4e13\u95e8\u7528\u6765\u8868\u793a\u89e6\u53d1\u68c0\u67e5\u70b9\u4fdd\u5b58\u7684\u65f6\u95f4\u70b9\u3002</p> <p>Checkpoint Barrier \u7531 Source \u7b97\u5b50\u6ce8\u5165\u5230\u5e38\u89c4\u7684\u6570\u636e\u6d41\u4e2d\uff0c\u5b83\u7684\u4f4d\u7f6e\u662f\u9650\u5b9a\u597d\u7684\uff0c\u4e0d\u80fd\u8d85\u8fc7\u5176\u4ed6\u6570\u636e\uff0c\u4e5f\u4e0d\u80fd\u88ab\u540e\u9762\u7684\u6570\u636e\u8d85\u8fc7\u3002\u68c0\u67e5\u70b9\u5206\u754c\u7ebf\u4e2d\u5e26\u6709\u4e00\u4e2a\u68c0\u67e5\u70b9 ID\uff0c\u8fd9\u662f\u5f53\u524d\u8981\u4fdd\u5b58\u7684\u68c0\u67e5\u70b9\u7684\u552f\u4e00\u6807\u8bc6\u3002\u8fd9\u6837\uff0c\u5206\u754c\u7ebf\u5c31\u5c06\u4e00\u6761\u6d41\u903b\u8f91\u4e0a\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff1a\u5206\u754c\u7ebf\u4e4b\u524d\u5230\u6765\u7684\u6570\u636e\u5bfc\u81f4\u7684\u72b6\u6001\u66f4\u6539\uff0c\u90fd\u4f1a\u88ab\u5305\u542b\u5728\u5f53\u524d\u5206\u754c\u7ebf\u6240\u8868\u793a\u7684\u68c0\u67e5\u70b9\u4e2d\uff1b\u800c\u57fa\u4e8e\u5206\u754c\u7ebf\u4e4b\u540e\u7684\u6570\u636e\u5bfc\u81f4\u7684\u72b6\u6001\u66f4\u6539\uff0c\u5219\u4f1a\u88ab\u5305\u542b\u5728\u4e4b\u540e\u7684\u68c0\u67e5\u70b9\u4e2d\u3002</p> <p></p> <p>\u5728 JobManager \u4e2d\u6709\u4e00\u4e2a\u300c\u68c0\u67e5\u70b9\u534f\u8c03\u5668\u300d\uff08checkpoint coordinator\uff09\uff0c\u4e13\u95e8\u7528\u6765\u534f\u8c03\u5904\u7406\u68c0\u67e5\u70b9\u7684\u76f8\u5173\u5de5\u4f5c\u3002\u68c0\u67e5\u70b9\u534f\u8c03\u5668\u4f1a\u5b9a\u671f\u5411 TaskManager \u53d1\u51fa\u6307\u4ee4\uff0c\u8981\u6c42\u4fdd\u5b58\u68c0\u67e5\u70b9\uff08\u5e26\u7740\u68c0\u67e5\u70b9 ID\uff09\uff1bTaskManager \u4f1a\u8ba9\u6240\u6709\u7684 Source \u4efb\u52a1\u628a\u81ea\u5df1\u7684\u504f\u79fb\u91cf\uff08\u7b97\u5b50\u72b6\u6001\uff09\u4fdd\u5b58\u8d77\u6765\uff0c\u5e76\u5c06\u5e26\u6709\u68c0\u67e5\u70b9 ID \u7684\u5206\u754c\u7ebf\uff08barrier\uff09\u63d2\u5165\u5230\u5f53\u524d\u7684\u6570\u636e\u6d41\u4e2d\uff0c\u7136\u540e\u50cf\u6b63\u5e38\u7684\u6570\u636e\u4e00\u6837\u50cf\u4e0b\u6e38\u4f20\u9012\uff1b\u4e4b\u540e Source \u4efb\u52a1\u5c31\u53ef\u4ee5\u7ee7\u7eed\u8bfb\u5165\u65b0\u7684\u6570\u636e\u4e86\u3002</p> <p>\u7531\u4e8e\u6765\u81ea\u4e0d\u540c\u5feb\u7167\u7684\u591a\u4e2a Checkpoint Barrier \u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u4e8e\u6d41\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5404\u79cd\u5feb\u7167\u53ef\u80fd\u4f1a\u5e76\u53d1\u53d1\u751f\u3002\u56e0\u6b64 Flink \u4f7f\u7528\u4e86 Chandy-Lamport \u7b97\u6cd5\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u88ab\u79f0\u4e3a\u300c\u5f02\u6b65\u5206\u754c\u7ebf\u5feb\u7167\u300d\uff08asynchronous barrier snapshotting\uff09\u7b97\u6cd5\u3002\u7b97\u6cd5\u7684\u6838\u5fc3\u5c31\u662f\u4e24\u4e2a\u539f\u5219\uff1a</p> <ol> <li>\u5f53\u4e0a\u6e38\u4efb\u52a1\u5411\u591a\u4e2a\u5e76\u884c\u4e0b\u6e38\u4efb\u52a1\u53d1\u9001 barrier \u65f6\uff0c\u9700\u8981\u5e7f\u64ad\u51fa\u53bb</li> <li>\u800c\u5f53\u591a\u4e2a\u4e0a\u6e38\u4efb\u52a1\u5411\u540c\u4e00\u4e2a\u4e0b\u6e38\u4efb\u52a1\u4f20\u9012 barrier \u65f6\uff0c\u9700\u8981\u5728\u4e0b\u6e38\u4efb\u52a1\u6267\u884c\u300c\u5206\u754c\u7ebf\u5bf9\u9f50\u300d\uff08barrier alignment\uff09\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u7b49\u5230\u6240\u6709\u5e76\u884c\u5206\u533a\u7684 barrier \u90fd\u5230\u9f50\uff0c\u624d\u53ef\u4ee5\u5f00\u59cb\u72b6\u6001\u7684\u4fdd\u5b58</li> </ol> <p></p> <p>\u5206\u754c\u7ebf\u5bf9\u9f50\uff1a</p> <ul> <li>\u4e00\u65e6\u7b97\u5b50\u4ece\u4e00\u4e2a\u8f93\u5165\u6d41\u63a5\u6536\u5230\u5feb\u7167 barrier n\uff0c\u5b83\u5728\u63a5\u6536\u5230\u6765\u81ea\u5176\u4ed6\u8f93\u5165\u7684 barrier n \u4e4b\u524d\uff0c\u4e0d\u80fd\u5904\u7406\u8be5\u6d41\u7684\u4efb\u4f55\u540e\u7eed\u6570\u636e\uff0c\u800c\u662f\u4f1a\u7f13\u5b58\u8d77\u6765\u3002\u5426\u5219\uff0c\u5b83\u5c06\u6df7\u5408\u5c5e\u4e8e\u5feb\u7167 n \u7684\u8bb0\u5f55\u4e0e\u5c5e\u4e8e\u5feb\u7167 n+1 \u7684\u8bb0\u5f55\u3002</li> <li>\u5f53\u7b97\u5b50\u6536\u5230\u6240\u6709\u5206\u533a\u7684 barrier n \u65f6\uff0c\u5c31\u53ef\u4ee5\u5bf9\u5f53\u524d\u72b6\u6001\u505a\u5feb\u7167\uff0c\u4fdd\u5b58\u5230\u6301\u4e45\u5316\u5b58\u50a8\u4e2d\u3002\u5b58\u50a8\u5b8c\u6210\u4e4b\u540e\uff0c\u540c\u6837\u5c06 barrier n \u5411\u4e0b\u6e38\u7ee7\u7eed\u4f20\u9012\uff0c\u5e76\u901a\u77e5 JobManager \u4fdd\u5b58\u5b8c\u6bd5\u3002</li> <li>\u5b8c\u6210\u68c0\u67e5\u70b9\u4fdd\u5b58\u4e4b\u540e\uff0c\u4efb\u52a1\u5c31\u53ef\u4ee5\u7ee7\u7eed\u6b63\u5e38\u5904\u7406\u6570\u636e\u4e86\u3002\u8fd9\u65f6\u5982\u679c\u6709\u7b49\u5f85\u5206\u754c\u7ebf\u5bf9\u9f50\u65f6\u7f13\u5b58\u7684\u6570\u636e\uff0c\u9700\u8981\u5148\u505a\u5904\u7406\uff0c\u7136\u540e\u518d\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u5904\u7406\u65b0\u5230\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#checkpoint_1","title":"Checkpoint \u7b97\u6cd5\u6d41\u7a0b","text":"<p>STEP 1\uff1aJobManager \u53d1\u9001\u6307\u4ee4\uff0c\u89e6\u53d1\u68c0\u67e5\u70b9\u7684\u4fdd\u5b58\uff1bSource \u4efb\u52a1\u4fdd\u5b58\u72b6\u6001\uff0c\u63d2\u5165\u5206\u754c\u7ebf</p> <p>JobManager \u4f1a\u5468\u671f\u6027\u5730\u5411\u6bcf\u4e2a TaskManager \u53d1\u9001\u4e00\u6761\u5e26\u6709\u65b0\u68c0\u67e5\u70b9 ID \u7684\u6d88\u606f\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6765\u542f\u52a8\u68c0\u67e5\u70b9\u3002\u6536\u5230\u6307\u4ee4\u540e\uff0cTaskManger \u4f1a\u5728\u6240\u6709 Source \u4efb\u52a1\u4e2d\u63d2\u5165\u4e00\u4e2a\u5206\u754c\u7ebf\uff08barrier\uff09\uff0c\u5e76\u5c06\u504f\u79fb\u91cf\u4fdd\u5b58\u5230\u8fdc\u7a0b\u7684\u6301\u4e45\u5316\u5b58\u50a8\u4e2d\u3002</p> <p></p> <p>STEP 2\uff1a\u72b6\u6001\u5feb\u7167\u4fdd\u5b58\u5b8c\u6210\uff0c\u5206\u754c\u7ebf\u5411\u4e0b\u6e38\u4f20\u9012</p> <p>\u72b6\u6001\u5b58\u5165\u6301\u4e45\u5316\u5b58\u50a8\u4e4b\u540e\uff0c\u4f1a\u8fd4\u56de\u901a\u77e5\u7ed9 Source \u4efb\u52a1\uff1bSource \u4efb\u52a1\u5c31\u4f1a\u5411 JobManager \u786e\u8ba4\u68c0\u67e5\u70b9\u5b8c\u6210\uff0c\u7136\u540e\u50cf\u6570\u636e\u4e00\u6837\u628a barrier \u5411\u4e0b\u6e38\u4efb\u52a1\u4f20\u9012\u3002</p> <p></p> <p>STEP 3\uff1a\u5411\u4e0b\u6e38\u591a\u4e2a\u5e76\u884c\u5b50\u4efb\u52a1\u5e7f\u64ad\u5206\u754c\u7ebf\uff0c\u6267\u884c\u5206\u754c\u7ebf\u5bf9\u9f50</p> <p>Map \u4efb\u52a1\u6ca1\u6709\u72b6\u6001\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06 barrier \u7ee7\u7eed\u5411\u4e0b\u6e38\u4f20\u9012\u3002\u8fd9\u65f6\u7531\u4e8e\u8fdb\u884c\u4e86 keyBy \u5206\u533a\uff0c\u6240\u4ee5\u9700\u8981\u5c06 barrier \u5e7f\u64ad\u5230\u4e0b\u6e38\u5e76\u884c\u7684\u4e24\u4e2a Sum \u4efb\u52a1\u3002\u540c\u65f6\uff0cSum \u4efb\u52a1\u53ef\u80fd\u6536\u5230\u6765\u81ea\u4e0a\u6e38\u4e24\u4e2a\u5e76\u884c Map \u4efb\u52a1\u7684 barrier\uff0c\u6240\u4ee5\u9700\u8981\u6267\u884c\u300c\u5206\u754c\u7ebf\u5bf9\u9f50\u300d\u64cd\u4f5c\u3002</p> <p></p> <p>STEP 4\uff1a\u5206\u754c\u7ebf\u5bf9\u9f50\u540e\uff0c\u4fdd\u5b58\u72b6\u6001\u5230\u6301\u4e45\u5316\u5b58\u50a8</p> <p>\u5404\u4e2a\u5206\u533a\u7684\u5206\u754c\u7ebf\u90fd\u5bf9\u9f50\u540e\uff0c\u5c31\u53ef\u4ee5\u5bf9\u5f53\u524d\u72b6\u6001\u505a\u5feb\u7167\uff0c\u4fdd\u5b58\u5230\u6301\u4e45\u5316\u5b58\u50a8\u4e86\u3002\u5b58\u50a8\u5b8c\u6210\u4e4b\u540e\uff0c\u540c\u6837\u5c06 barrier \u5411\u4e0b\u6e38\u7ee7\u7eed\u4f20\u9012\uff0c\u5e76\u901a\u77e5 JobManager \u4fdd\u5b58\u5b8c\u6bd5\u3002</p> <p></p> <p>STEP 5\uff1a\u5148\u5904\u7406\u7f13\u5b58\u6570\u636e\uff0c\u7136\u540e\u6b63\u5e38\u7ee7\u7eed\u5904\u7406</p> <p>\u5b8c\u6210\u68c0\u67e5\u70b9\u4fdd\u5b58\u4e4b\u540e\uff0c\u4efb\u52a1\u5c31\u53ef\u4ee5\u7ee7\u7eed\u6b63\u5e38\u5904\u7406\u6570\u636e\u4e86\u3002\u8fd9\u65f6\u5982\u679c\u6709\u7b49\u5f85\u5206\u754c\u7ebf\u5bf9\u9f50\u65f6\u7f13\u5b58\u7684\u6570\u636e\uff0c\u9700\u8981\u5148\u505a\u5904\u7406\uff1b\u7136\u540e\u518d\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u5904\u7406\u65b0\u5230\u7684\u6570\u636e\u3002</p> <p>\u5f53 JobManager \u6536\u5230\u6240\u6709\u4efb\u52a1\u6210\u529f\u4fdd\u5b58\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u786e\u8ba4\u5f53\u524d\u68c0\u67e5\u70b9\u6210\u529f\u4fdd\u5b58\u3002\u4e4b\u540e\u9047\u5230\u6545\u969c\u5c31\u53ef\u4ee5\u4ece\u8fd9\u91cc\u6062\u590d\u4e86\u3002</p> <p>\u4e0d\u5bf9\u9f50\u7684\u68c0\u67e5\u70b9\u4fdd\u5b58</p> <p>\u7531\u4e8e\u5206\u754c\u7ebf\u5bf9\u9f50\u8981\u6c42\u5148\u5230\u8fbe\u7684\u5206\u533a\u505a\u7f13\u5b58\u7b49\u5f85\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f1a\u5f71\u54cd\u5904\u7406\u7684\u901f\u5ea6\uff0c\u5f53\u51fa\u73b0\u80cc\u538b\uff08backpressure\uff09\u65f6\uff0c\u4e0b\u6e38\u4efb\u52a1\u4f1a\u5806\u79ef\u5927\u91cf\u7684\u7f13\u51b2\u6570\u636e\uff0c\u68c0\u67e5\u70b9\u53ef\u80fd\u9700\u8981\u5f88\u4e45\u624d\u53ef\u4ee5\u4fdd\u5b58\u5b8c\u6bd5\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u573a\u666f\uff0cFlink 1.11 \u4e4b\u540e\u63d0\u4f9b\u4e86\u4e0d\u5bf9\u9f50\u7684\u68c0\u67e5\u70b9\u4fdd\u5b58\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u672a\u5904\u7406\u7684\u7f13\u51b2\u6570\u636e\uff08in-flight data\uff09\u4e5f\u4fdd\u5b58\u8fdb\u68c0\u67e5\u70b9\u3002\u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u5206\u533a barrier \u65f6\u5c31\u4e0d\u9700\u7b49\u5f85\u5bf9\u9f50\uff0c\u800c\u662f\u53ef\u4ee5\u76f4\u63a5\u542f\u52a8\u72b6\u6001\u7684\u4fdd\u5b58\u4e86\u3002</p>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#_3","title":"\u6301\u4e45\u5316\u5b58\u50a8","text":"<p>\u7531 Flink \u7ba1\u7406\u7684 keyed state \u662f\u4e00\u79cd\u5206\u7247\u7684\u952e/\u503c\u5b58\u50a8\uff0c\u6bcf\u4e2a keyed state \u7684\u5de5\u4f5c\u526f\u672c\u90fd\u4fdd\u5b58\u5728\u8d1f\u8d23\u8be5\u952e\u7684 TaskManager \u672c\u5730\u4e2d\u3002\u53e6\u5916\uff0cOperator state \u4e5f\u4fdd\u5b58\u5728\u673a\u5668\u8282\u70b9\u672c\u5730\u3002Flink \u5b9a\u671f\u83b7\u53d6\u6240\u6709\u72b6\u6001\u7684\u5feb\u7167\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5feb\u7167\u590d\u5236\u5230\u6301\u4e45\u5316\u7684\u4f4d\u7f6e\uff0c\u4f8b\u5982\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p>\u5982\u679c\u53d1\u751f\u6545\u969c\uff0cFlink \u53ef\u4ee5\u6062\u590d\u5e94\u7528\u7a0b\u5e8f\u7684\u5b8c\u6574\u72b6\u6001\u5e76\u7ee7\u7eed\u5904\u7406\uff0c\u5c31\u5982\u540c\u6ca1\u6709\u51fa\u73b0\u8fc7\u5f02\u5e38\u3002</p> <p>Flink \u7ba1\u7406\u7684\u72b6\u6001\u5b58\u50a8\u5728 state backend \u4e2d\u3002Flink \u6709\u4e24\u79cd state backend \u7684\u5b9e\u73b0\uff1a\u4e00\u79cd\u57fa\u4e8e RocksDB \u5185\u5d4c key/value \u5b58\u50a8\u5c06\u5176\u5de5\u4f5c\u72b6\u6001\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u7684\uff0c\u53e6\u4e00\u79cd\u57fa\u4e8e\u5806\u7684 state backend\uff0c\u5c06\u5176\u5de5\u4f5c\u72b6\u6001\u4fdd\u5b58\u5728 Java \u7684\u5806\u5185\u5b58\u4e2d\u3002\u8fd9\u79cd\u57fa\u4e8e\u5806\u7684 state backend \u6709\u4e24\u79cd\u7c7b\u578b\uff1aFsStateBackend\uff0c\u5c06\u5176\u72b6\u6001\u5feb\u7167\u6301\u4e45\u5316\u5230\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff1bMemoryStateBackend\uff0c\u5b83\u4f7f\u7528 JobManager \u7684\u5806\u4fdd\u5b58\u72b6\u6001\u5feb\u7167\u3002</p> \u540d\u79f0 Working State \u72b6\u6001\u5907\u4efd \u5feb\u7167 \u9002\u7528\u573a\u666f MemoryStateBackend JVM Heap JobManager JVM Heap \u5168\u91cf \u9002\u7528\u4e8e\u5c0f\u72b6\u6001\uff08\u672c\u5730\uff09\u7684\u6d4b\u8bd5\u548c\u5b9e\u9a8c FsStateBackend JVM Heap \u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf \u5168\u91cf \u5feb\u901f\uff0c\u9700\u8981\u5927\u7684\u5806\u5185\u5b58\u3002\u53d7\u9650\u5236\u4e8e GC RocksDBStateBackend \u672c\u5730\u78c1\u76d8 (tmp dir) \u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf \u5168\u91cf / \u589e\u91cf \u652f\u6301\u5927\u4e8e\u5185\u5b58\u5927\u5c0f\u7684\u72b6\u6001\u3002\u7ecf\u9a8c\u6cd5\u5219\uff1a\u6bd4\u57fa\u4e8e\u5806\u7684\u540e\u7aef\u6162 10 \u500d <p>\u5bf9\u4e8e\u4fdd\u5b58\u5728 RocksDBStateBackend \u4e2d\u7684\u5bf9\u8c61\uff0c\u8bbf\u95ee\u548c\u66f4\u65b0\u6d89\u53ca\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u6240\u4ee5\u4f1a\u6709\u66f4\u5927\u7684\u5f00\u9500\u3002\u4f46 RocksDB \u7684\u72b6\u6001\u91cf\u4ec5\u53d7\u672c\u5730\u78c1\u76d8\u5927\u5c0f\u7684\u9650\u5236\u3002\u8fd8\u8981\u6ce8\u610f\uff0c\u53ea\u6709 RocksDBStateBackend \u80fd\u591f\u8fdb\u884c\u589e\u91cf\u5feb\u7167\uff0c\u8fd9\u5bf9\u4e8e\u5177\u6709\u5927\u91cf\u53d8\u5316\u7f13\u6162\u72b6\u6001\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u662f\u5927\u6709\u88e8\u76ca\u7684\u3002</p> <p>\u6240\u6709\u8fd9\u4e9b state backends \u90fd\u80fd\u591f\u5f02\u6b65\u6267\u884c\u5feb\u7167\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u5728\u4e0d\u59a8\u788d\u6b63\u5728\u8fdb\u884c\u7684\u6d41\u5904\u7406\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u5feb\u7167\u3002</p>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#_4","title":"\u4e00\u81f4\u6027\u8bed\u4e49","text":"<p>Flink \u4e2d\u7684\u4e00\u81f4\u6027\u5176\u5b9e\u5c31\u662f\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002\u5bf9\u4e8e Flink \u6765\u8bf4\uff0c\u591a\u4e2a\u8282\u70b9\u5e76\u884c\u5904\u7406\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u8981\u4fdd\u8bc1\u8ba1\u7b97\u7ed3\u679c\u662f\u6b63\u786e\u7684\uff0c\u5c31\u5fc5\u987b\u4e0d\u6f0f\u6389\u4efb\u4f55\u4e00\u4e2a\u6570\u636e\uff0c\u800c\u4e14\u4e5f\u4e0d\u4f1a\u91cd\u590d\u5904\u7406\u540c\u4e00\u4e2a\u6570\u636e\u3002\u6d41\u5f0f\u8ba1\u7b97\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u6765\u7684\uff0c\u6240\u4ee5\u6b63\u5e38\u5904\u7406\u7684\u8fc7\u7a0b\u4e2d\u7ed3\u679c\u80af\u5b9a\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5728\u53d1\u751f\u6545\u969c\u3001\u9700\u8981\u6062\u590d\u72b6\u6001\u8fdb\u884c\u56de\u6eda\u65f6\u5c31\u9700\u8981\u66f4\u591a\u7684\u4fdd\u969c\u673a\u5236\u4e86\u3002\u6211\u4eec\u901a\u8fc7\u68c0\u67e5\u70b9\u7684\u4fdd\u5b58\u6765\u4fdd\u8bc1\u72b6\u6001\u6062\u590d\u540e\u7ed3\u679c\u7684\u6b63\u786e\uff0c\u6240\u4ee5\u4e3b\u8981\u8ba8\u8bba\u7684\u5c31\u662f\u300c\u72b6\u6001\u7684\u4e00\u81f4\u6027\u300d\u3002</p> <p>\u4e00\u822c\u8bf4\u6765\uff0c\u72b6\u6001\u4e00\u81f4\u6027\u6709\u4e09\u79cd\u7ea7\u522b\uff1a</p> \u6700\u591a\u4e00\u6b21\uff08AT-MOST-ONCE\uff09 <p>\u5f53\u4efb\u52a1\u53d1\u751f\u6545\u969c\u65f6\uff0c\u6700\u7b80\u5355\u7684\u505a\u6cd5\u5c31\u662f\u76f4\u63a5\u91cd\u542f\uff0c\u522b\u7684\u4ec0\u4e48\u90fd\u4e0d\u5e72\uff1b\u65e2\u4e0d\u6062\u590d\u4e22\u5931\u7684\u72b6\u6001\uff0c\u4e5f\u4e0d\u91cd\u653e\u4e22\u5931\u7684\u6570\u636e\u3002\u6bcf\u4e2a\u6570\u636e\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\u4f1a\u88ab\u5904\u7406\u4e00\u6b21\uff0c\u9047\u5230\u6545\u969c\u65f6\u5c31\u4f1a\u4e22\u6389\uff0c\u6240\u4ee5\u5c31\u662f\u201c\u6700\u591a\u5904\u7406\u4e00\u6b21\u201d\u3002\u8fd9\u79cd\u60c5\u51b5\u6570\u636e\u4f1a\u76f4\u63a5\u88ab\u4e22\u6389\uff0c\u5373\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u6765\u4fdd\u8bc1\u7ed3\u679c\u7684\u51c6\u786e\u6027\u3002\u6240\u4ee5\u8fd9\u79cd\u7c7b\u578b\u7684\u4fdd\u8bc1\u4e5f\u53eb\u201c\u6ca1\u6709\u4fdd\u8bc1\u201d\u3002</p> \u81f3\u5c11\u4e00\u6b21\uff08AT-LEAST-ONCE\uff09 <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u5e0c\u671b\u81f3\u5c11\u4e0d\u8981\u4e22\u6389\u6570\u636e\u3002\u8fd9\u79cd\u4e00\u81f4\u6027\u7ea7\u522b\u5c31\u53eb\u4f5c\u300c\u81f3\u5c11\u4e00\u6b21\u300d\uff08at-least-once\uff09\uff0c\u5c31\u662f\u8bf4\u662f\u6240\u6709\u6570\u636e\u90fd\u4e0d\u4f1a\u4e22\uff0c\u80af\u5b9a\u88ab\u5904\u7406\u4e86\uff0c\u4e0d\u8fc7\u4e0d\u80fd\u4fdd\u8bc1\u53ea\u5904\u7406\u4e00\u6b21\uff0c\u6709\u4e9b\u6570\u636e\u4f1a\u88ab\u91cd\u590d\u5904\u7406\u3002</p> <p>\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u91cd\u590d\u5904\u7406\u6570\u636e\u662f\u4e0d\u5f71\u54cd\u7ed3\u679c\u7684\u6b63\u786e\u6027\u7684\uff0c\u8fd9\u79cd\u64cd\u4f5c\u5177\u6709\u201c\u5e42\u7b49\u6027\u201d\u3002\u6bd4\u5982\uff0c\u5982\u679c\u6211\u4eec\u7edf\u8ba1 UV\uff0c\u9700\u8981\u5bf9\u6bcf\u4e2a\u7528\u6237\u7684\u8bbf\u95ee\u6570\u636e\u8fdb\u884c\u53bb\u91cd\u5904\u7406\uff0c\u6240\u4ee5\u5373\u4f7f\u540c\u4e00\u4e2a\u6570\u636e\u88ab\u5904\u7406\u591a\u6b21\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u7ed3\u679c\u3002</p> <p>\u4e3a\u4e86\u4fdd\u8bc1\u8fbe\u5230 at-least-once \u7684\u72b6\u6001\u4e00\u81f4\u6027\uff0c\u6211\u4eec\u9700\u8981\u5728\u53d1\u751f\u6545\u969c\u65f6\u80fd\u591f\u91cd\u653e\u6570\u636e\u3002\u6700\u5e38\u89c1\u7684\u505a\u6cd5\u662f\uff0c\u53ef\u4ee5\u7528\u6301\u4e45\u5316\u7684\u4e8b\u4ef6\u65e5\u5fd7\u7cfb\u7edf\uff0c\u628a\u6240\u6709\u7684\u4e8b\u4ef6\u5199\u5165\u5230\u6301\u4e45\u5316\u5b58\u50a8\u4e2d\u3002\u8fd9\u65f6\u53ea\u8981\u8bb0\u5f55\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u5f53\u4efb\u52a1\u53d1\u751f\u6545\u969c\u91cd\u542f\u540e\uff0c\u91cd\u7f6e\u504f\u79fb\u91cf\u5c31\u53ef\u4ee5\u91cd\u653e\u68c0\u67e5\u70b9\u4e4b\u540e\u7684\u6570\u636e\u4e86\u3002</p> \u7cbe\u786e\u4e00\u6b21\uff08EXACTLY-ONCE\uff09 <p>\u6700\u4e25\u683c\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1\uff0c\u5c31\u662f\u6240\u8c13\u7684\u300c\u7cbe\u786e\u4e00\u6b21\u300d\uff08exactly-once\uff09\u3002\u8fd9\u4e5f\u662f\u6700\u96be\u5b9e\u73b0\u7684\u72b6\u6001\u4e00\u81f4\u6027\u8bed\u4e49\u3002exactly-once \u610f\u5473\u7740\u6240\u6709\u6570\u636e\u4e0d\u4ec5\u4e0d\u4f1a\u4e22\u5931\uff0c\u800c\u4e14\u53ea\u88ab\u5904\u7406\u4e00\u6b21\uff0c\u4e0d\u4f1a\u91cd\u590d\u5904\u7406\u3002\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u636e\uff0c\u6700\u7ec8\u4f53\u73b0\u5728\u72b6\u6001\u548c\u8f93\u51fa\u7ed3\u679c\u4e0a\uff0c\u53ea\u80fd\u6709\u4e00\u6b21\u7edf\u8ba1\u3002exactly-once \u53ef\u4ee5\u771f\u6b63\u610f\u4e49\u4e0a\u4fdd\u8bc1\u7ed3\u679c\u7684\u7edd\u5bf9\u6b63\u786e\uff0c\u5728\u53d1\u751f\u6545\u969c\u6062\u590d\u540e\uff0c\u5c31\u597d\u50cf\u4ece\u672a\u53d1\u751f\u8fc7\u6545\u969c\u4e00\u6837\u3002</p> <p>\u8981\u505a\u5230 exactly-once\uff0c\u9996\u5148\u5fc5\u987b\u80fd\u8fbe\u5230 at-least-once \u7684\u8981\u6c42\uff0c\u5c31\u662f\u6570\u636e\u4e0d\u4e22\u3002\u6240\u4ee5\u540c\u6837\u9700\u8981\u6709\u6570\u636e\u91cd\u653e\u673a\u5236\u6765\u4fdd\u8bc1\u8fd9\u4e00\u70b9\u3002\u53e6\u5916\uff0c\u8fd8\u9700\u8981\u6709\u4e13\u95e8\u7684\u8bbe\u8ba1\u4fdd\u8bc1\u6bcf\u4e2a\u6570\u636e\u53ea\u88ab\u5904\u7406\u4e00\u6b21\u3002Flink \u4e2d\u4f7f\u7528\u7684\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u5feb\u7167\u673a\u5236\u68c0\u67e5\u70b9\uff08checkpoint\uff09\u6765\u4fdd\u8bc1 exactly-once \u8bed\u4e49\u3002</p>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#_5","title":"\u7aef\u5230\u7aef\u7cbe\u786e\u4e00\u6b21","text":"<p>\u4e3a\u4e86\u5b9e\u73b0\u7aef\u5230\u7aef\u7684\u7cbe\u786e\u4e00\u6b21\uff0c\u4ee5\u4fbf sources \u4e2d\u7684\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4ec5\u7cbe\u786e\u4e00\u6b21\u5bf9 sinks \u751f\u6548\uff0c\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\u4f60\u7684 sources \u5fc5\u987b\u662f\u53ef\u91cd\u653e\u7684\uff0c\u5e76\u4e14</li> <li>\u4f60\u7684 sinks \u5fc5\u987b\u662f\u4e8b\u52a1\u6027\u7684\uff08\u6216\u5e42\u7b49\u7684\uff09</li> </ul> \u8f93\u5165\u7aef <p>\u60f3\u8981\u5728\u6545\u969c\u6062\u590d\u540e\u4e0d\u4e22\u6570\u636e\uff0c\u5916\u90e8\u6570\u636e\u6e90\u5c31\u5fc5\u987b\u62e5\u6709\u91cd\u653e\u6570\u636e\u7684\u80fd\u529b\u3002\u5e38\u89c1\u7684\u505a\u6cd5\u5c31\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u6301\u4e45\u5316\u4fdd\u5b58\uff0c\u5e76\u4e14\u53ef\u4ee5\u91cd\u8bbe\u6570\u636e\u7684\u8bfb\u53d6\u4f4d\u7f6e\u3002\u4e00\u4e2a\u6700\u7ecf\u5178\u7684\u5e94\u7528\u5c31\u662f Kafka\u3002\u5728 Flink \u7684 Source \u4efb\u52a1\u4e2d\u5c06\u6570\u636e\u8bfb\u53d6\u7684\u504f\u79fb\u91cf\u4fdd\u5b58\u4e3a\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u6545\u969c\u6062\u590d\u65f6\u4ece\u68c0\u67e5\u70b9\u4e2d\u8bfb\u53d6\u51fa\u6765\uff0c\u5bf9\u6570\u636e\u6e90\u91cd\u7f6e\u504f\u79fb\u91cf\uff0c\u91cd\u65b0\u83b7\u53d6\u6570\u636e\u3002</p> Flink \u5e94\u7528\u7aef <p>Flink \u901a\u8fc7 Checkpoint \u673a\u5236\uff0c\u628a\u72b6\u6001\u5b58\u76d8\uff0c\u53d1\u751f\u6545\u969c\u7684\u65f6\u5019\u53ef\u4ee5\u6062\u590d\uff0c\u4fdd\u8bc1\u5185\u90e8\u7684\u72b6\u6001\u4e00\u81f4\u6027\u3002</p> \u8f93\u51fa\u7aef <p>Sink \u7aef\u662f\u6700\u590d\u6742\u7684\uff0c\u56e0\u4e3a\u6570\u636e\u662f\u843d\u5730\u5230\u5176\u4ed6\u7cfb\u7edf\u4e0a\u7684\uff0c\u6570\u636e\u4e00\u65e6\u79bb\u5f00 Flink \u4e4b\u540e\uff0cFlink \u5c31\u76d1\u63a7\u4e0d\u5230\u8fd9\u4e9b\u6570\u636e\u4e86\uff0c\u6240\u4ee5\u7cbe\u51c6\u4e00\u6b21\u5904\u7406\u8bed\u4e49\u5fc5\u987b\u4e5f\u8981\u5e94\u7528\u4e8e Flink \u5199\u5165\u6570\u636e\u7684\u5916\u90e8\u7cfb\u7edf\uff0c\u6545\u8fd9\u4e9b\u5916\u90e8\u7cfb\u7edf\u5fc5\u987b\u63d0\u4f9b\u4e00\u79cd\u624b\u6bb5\u5141\u8bb8\u63d0\u4ea4\u6216\u56de\u6eda\u8fd9\u4e9b\u5199\u5165\u64cd\u4f5c\uff0c\u540c\u65f6\u8fd8\u8981\u4fdd\u8bc1\u4e0e Flink Checkpoint \u80fd\u591f\u534f\u8c03\u4f7f\u7528\uff08Kafka 0.11 \u7248\u672c\u5df2\u7ecf\u5b9e\u73b0\u7cbe\u786e\u4e00\u6b21\u5904\u7406\u8bed\u4e49\uff09\u3002</p> <p>\u82e5\u8981 Sink \u652f\u6301\u7cbe\u51c6\u4e00\u6b21\u5904\u7406\u8bed\u4e49(EOS)\uff0c\u5b83\u5fc5\u987b\u4ee5\u4e8b\u52a1\u7684\u65b9\u5f0f\u5199\u6570\u636e\u5230 Kafka\uff0c\u8fd9\u6837\u5f53\u63d0\u4ea4\u4e8b\u52a1\u65f6\u4e24\u6b21 Checkpoint \u95f4\u7684\u6240\u6709\u5199\u5165\u64cd\u4f5c\u5f53\u4f5c\u4e3a\u4e00\u4e2a\u4e8b\u52a1\u88ab\u63d0\u4ea4\u3002\u8fd9\u786e\u4fdd\u4e86\u51fa\u73b0\u6545\u969c\u6216\u5d29\u6e83\u65f6\u8fd9\u4e9b\u5199\u5165\u64cd\u4f5c\u80fd\u591f\u88ab\u56de\u6eda\u3002</p> <p>\u5f53\u7136\uff0c\u5728\u4e00\u4e2a\u5206\u5e03\u5f0f\u4e14\u542b\u6709\u591a\u4e2a\u5e76\u53d1\u6267\u884c Sink \u7684\u5e94\u7528\u4e2d\uff0c\u4ec5\u4ec5\u6267\u884c\u5355\u6b21\u63d0\u4ea4\u6216\u56de\u6eda\u662f\u4e0d\u591f\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u7ec4\u4ef6\u90fd\u5fc5\u987b\u5bf9\u8fd9\u4e9b\u63d0\u4ea4\u6216\u56de\u6eda\u8fbe\u6210\u5171\u8bc6\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u5f97\u5230\u4e00\u4e2a\u4e00\u81f4\u6027\u7684\u7ed3\u679c\u3002Flink \u4f7f\u7528\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\u4ee5\u53ca\u9884\u63d0\u4ea4(Pre-commit)\u9636\u6bb5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#2pc","title":"\u4e24\u9636\u6bb5\u63d0\u4ea4\uff082PC\uff09","text":"<p>\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\uff08Two-Phase Commit\uff0c2PC\uff09\u662f\u5f88\u5e38\u7528\u7684\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u7684\u65b9\u5f0f\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e2d\uff0c\u8981\u4e48\u6240\u6709\u53c2\u4e0e\u8fdb\u7a0b\u90fd\u63d0\u4ea4\u4e8b\u52a1\uff0c\u8981\u4e48\u90fd\u53d6\u6d88\uff0c\u5373\u5b9e\u73b0 ACID \u4e2d\u7684 A \uff08\u539f\u5b50\u6027\uff09\u3002</p> <p>\u5728\u6570\u636e\u4e00\u81f4\u6027\u7684\u73af\u5883\u4e0b\uff0c\u5176\u4ee3\u8868\u7684\u542b\u4e49\u662f\uff1a\u8981\u4e48\u6240\u6709\u5907\u4efd\u6570\u636e\u540c\u65f6\u66f4\u6539\u67d0\u4e2a\u6570\u503c\uff0c\u8981\u4e48\u90fd\u4e0d\u6539\uff0c\u4ee5\u6b64\u6765\u8fbe\u5230\u6570\u636e\u7684\u5f3a\u4e00\u81f4\u6027\u3002</p> <p>\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\u4e2d\u6709\u4e24\u4e2a\u91cd\u8981\u89d2\u8272\uff0c\u534f\u8c03\u8005\uff08Coordinator\uff09\u548c\u53c2\u4e0e\u8005\uff08Participant\uff09\uff0c\u5176\u4e2d\u534f\u8c03\u8005\u53ea\u6709\u4e00\u4e2a\uff0c\u8d77\u5230\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u534f\u8c03\u7ba1\u7406\u4f5c\u7528\uff0c\u53c2\u4e0e\u8005\u6709\u591a\u4e2a\u3002</p> <p>\u987e\u540d\u601d\u4e49\uff0c\u4e24\u9636\u6bb5\u63d0\u4ea4\u5c06\u63d0\u4ea4\u8fc7\u7a0b\u5212\u5206\u4e3a\u8fde\u7eed\u7684\u4e24\u4e2a\u9636\u6bb5\uff1a\u8868\u51b3\u9636\u6bb5\uff08Voting\uff09\u548c\u63d0\u4ea4\u9636\u6bb5\uff08Commit\uff09\u3002</p> <p>\u4e24\u9636\u6bb5\u63d0\u4ea4\u6d41\u7a0b</p> \u7b2c\u4e00\u9636\u6bb5\uff1a\u8868\u51b3\u9636\u6bb5 <p>\u534f\u8c03\u8005\u5411\u6240\u6709\u53c2\u4e0e\u8005\u53d1\u9001\u4e00\u4e2a VOTE_REQUEST \u6d88\u606f\u3002</p> <p>\u5f53\u53c2\u4e0e\u8005\u63a5\u6536\u5230 VOTE_REQUEST \u6d88\u606f\uff0c\u5411\u534f\u8c03\u8005\u53d1\u9001 VOTE_COMMIT \u6d88\u606f\u4f5c\u4e3a\u56de\u5e94\uff0c\u544a\u8bc9\u534f\u8c03\u8005\u81ea\u5df1\u5df2\u7ecf\u505a\u597d\u51c6\u5907\u63d0\u4ea4\u51c6\u5907\uff0c\u5982\u679c\u53c2\u4e0e\u8005\u6ca1\u6709\u51c6\u5907\u597d\u6216\u9047\u5230\u5176\u4ed6\u6545\u969c\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a VOTE_ABORT \u6d88\u606f\uff0c\u544a\u8bc9\u534f\u8c03\u8005\u76ee\u524d\u65e0\u6cd5\u63d0\u4ea4\u4e8b\u52a1\u3002</p> \u7b2c\u4e8c\u9636\u6bb5\uff1a\u63d0\u4ea4\u9636\u6bb5 <p>\u534f\u8c03\u8005\u6536\u96c6\u6765\u81ea\u5404\u4e2a\u53c2\u4e0e\u8005\u7684\u8868\u51b3\u6d88\u606f\u3002\u5982\u679c\u6240\u6709\u53c2\u4e0e\u8005\u4e00\u81f4\u8ba4\u4e3a\u53ef\u4ee5\u63d0\u4ea4\u4e8b\u52a1\uff0c\u90a3\u4e48\u534f\u8c03\u8005\u51b3\u5b9a\u4e8b\u52a1\u7684\u6700\u7ec8\u63d0\u4ea4\uff0c\u5728\u6b64\u60c5\u5f62\u4e0b\u534f\u8c03\u8005\u5411\u6240\u6709\u53c2\u4e0e\u8005\u53d1\u9001\u4e00\u4e2a GLOBAL_COMMIT \u6d88\u606f\uff0c\u901a\u77e5\u53c2\u4e0e\u8005\u8fdb\u884c\u672c\u5730\u63d0\u4ea4\uff1b\u5982\u679c\u6240\u6709\u53c2\u4e0e\u8005\u4e2d\u6709\u4efb\u610f\u4e00\u4e2a\u8fd4\u56de\u6d88\u606f\u662f VOTE_ABORT\uff0c\u534f\u8c03\u8005\u5c31\u4f1a\u53d6\u6d88\u4e8b\u52a1\uff0c\u5411\u6240\u6709\u53c2\u4e0e\u8005\u5e7f\u64ad\u4e00\u6761 GLOBAL_ABORT \u6d88\u606f\u901a\u77e5\u6240\u6709\u7684\u53c2\u4e0e\u8005\u53d6\u6d88\u4e8b\u52a1\u3002</p> <p>\u6bcf\u4e2a\u63d0\u4ea4\u4e86\u8868\u51b3\u4fe1\u606f\u7684\u53c2\u4e0e\u8005\u7b49\u5019\u534f\u8c03\u8005\u8fd4\u56de\u6d88\u606f\uff0c\u5982\u679c\u53c2\u4e0e\u8005\u63a5\u6536\u5230\u4e00\u4e2a GLOBAL_COMMIT \u6d88\u606f\uff0c\u90a3\u4e48\u53c2\u4e0e\u8005\u63d0\u4ea4\u672c\u5730\u4e8b\u52a1\uff0c\u5426\u5219\u5982\u679c\u63a5\u6536\u5230 GLOBAL_ABORT \u6d88\u606f\uff0c\u5219\u53c2\u4e0e\u8005\u53d6\u6d88\u672c\u5730\u4e8b\u52a1\u3002</p>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#flink-kafka","title":"Flink &amp; Kafka \u6570\u636e\u7ba1\u9053\u5b9e\u73b0\u7cbe\u786e\u4e00\u6b21","text":"STEP 1\uff1a\u542f\u52a8\u68c0\u67e5\u70b9\u4fdd\u5b58 <p>\u5f53 Checkpoint \u542f\u52a8\u65f6\uff0cJobManager \u4f1a\u5c06\u68c0\u67e5\u70b9\u5206\u754c\u7ebf\uff08checkpoint barrier\uff09\u6ce8\u5165\u6570\u636e\u6d41\uff0ccheckpoint barrier \u4f1a\u5728\u7b97\u5b50\u95f4\u4f20\u9012\u4e0b\u53bb\u3002</p> <p></p> STEP 2\uff1a\u7b97\u5b50\u4efb\u52a1\u5bf9\u72b6\u6001\u505a\u5feb\u7167 <p>\u5206\u754c\u7ebf\uff08barrier\uff09\u4f1a\u5728\u7b97\u5b50\u95f4\u4f20\u9012\u4e0b\u53bb\u3002\u6bcf\u4e2a\u7b97\u5b50\u6536\u5230 barrier \u65f6\uff0c\u4f1a\u5c06\u5f53\u524d\u7684\u72b6\u6001\u505a\u4e2a\u5feb\u7167\uff0c\u4fdd\u5b58\u5230\u72b6\u6001\u540e\u7aef\u3002</p> <p>Source \u4efb\u52a1\u5c06 barrier \u63d2\u5165\u6570\u636e\u6d41\u540e\uff0c\u4e5f\u4f1a\u5c06\u5f53\u524d\u8bfb\u53d6\u6570\u636e\u7684\u504f\u79fb\u91cf\u4f5c\u4e3a\u72b6\u6001\u5199\u5165\u68c0\u67e5\u70b9\uff0c\u5b58\u5165\u72b6\u6001\u540e\u7aef\uff0c\u7136\u540e\u628a barrier \u5411\u4e0b\u6e38\u4f20\u9012\uff0c\u81ea\u5df1\u5c31\u53ef\u4ee5\u7ee7\u7eed\u8bfb\u53d6\u6570\u636e\u4e86\u3002\u63a5\u4e0b\u6765 barrier \u4f20\u9012\u5230\u4e86\u5185\u90e8\u7684 Window \u7b97\u5b50\uff0c\u5b83\u540c\u6837\u4f1a\u5bf9\u81ea\u5df1\u7684\u72b6\u6001\u8fdb\u884c\u5feb\u7167\u4fdd\u5b58\uff0c\u5199\u5165\u8fdc\u7a0b\u7684\u6301\u4e45\u5316\u5b58\u50a8\u3002</p> <p></p> STEP 3\uff1aSink \u4efb\u52a1\u5f00\u542f\u4e8b\u52a1\uff0c\u8fdb\u884c\u9884\u63d0\u4ea4 <p>\u5206\u754c\u7ebf\uff08barrier\uff09\u7ec8\u4e8e\u4f20\u5230\u4e86 Sink \u4efb\u52a1\uff0c\u8fd9\u65f6 Sink \u4efb\u52a1\u4f1a\u5f00\u542f\u4e00\u4e2a\u4e8b\u52a1\u3002\u63a5\u4e0b\u6765\u5230\u6765\u7684\u6240\u6709\u6570\u636e\uff0cSink \u4efb\u52a1\u90fd\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u4e8b\u52a1\u6765\u5199\u5165 Kafka\u3002\u8fd9\u91cc barrier \u662f\u68c0\u67e5\u70b9\u7684\u5206\u754c\u7ebf\uff0c\u4e5f\u662f\u4e8b\u52a1\u7684\u5206\u754c\u7ebf\u3002\u7531\u4e8e\u4e4b\u524d\u7684\u68c0\u67e5\u70b9\u53ef\u80fd\u5c1a\u672a\u5b8c\u6210\uff0c\u56e0\u6b64\u4e0a\u4e00\u4e2a\u4e8b\u52a1\u4e5f\u53ef\u80fd\u5c1a\u672a\u63d0\u4ea4\uff1b\u6b64\u65f6 barrier \u7684\u5230\u6765\u5f00\u542f\u4e86\u65b0\u7684\u4e8b\u52a1\uff0c\u4e0a\u4e00\u4e2a\u4e8b\u52a1\u5c3d\u7ba1\u53ef\u80fd\u6ca1\u6709\u88ab\u63d0\u4ea4\uff0c\u4f46\u4e5f\u4e0d\u518d\u63a5\u6536\u65b0\u7684\u6570\u636e\u4e86\u3002</p> <p>\u5bf9\u4e8e Kafka \u800c\u8a00\uff0c\u63d0\u4ea4\u7684\u6570\u636e\u4f1a\u88ab\u6807\u8bb0\u4e3a\u201c\u672a\u786e\u8ba4\u201d\uff08uncommitted\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6240\u8c13\u7684\u201c\u9884\u63d0\u4ea4\u201d\uff08pre-commit\uff09\u3002</p> <p></p> STEP 4\uff1a\u68c0\u67e5\u70b9\u4fdd\u5b58\u5b8c\u6210\uff0c\u63d0\u4ea4\u4e8b\u52a1 <p>\u5f53\u6240\u6709\u7b97\u5b50\u7684\u5feb\u7167\u90fd\u5b8c\u6210\uff0c\u4e5f\u5c31\u662f\u8fd9\u6b21\u7684\u68c0\u67e5\u70b9\u4fdd\u5b58\u6700\u7ec8\u5b8c\u6210\u65f6\uff0cJobManager \u4f1a\u5411\u6240\u6709\u4efb\u52a1\u53d1\u786e\u8ba4\u901a\u77e5\uff0c\u544a\u8bc9\u5927\u5bb6\u5f53\u524d\u68c0\u67e5\u70b9\u5df2\u6210\u529f\u4fdd\u5b58\u3002</p> <p>\u5f53 Sink \u4efb\u52a1\u6536\u5230\u786e\u8ba4\u901a\u77e5\u540e\uff0c\u5c31\u4f1a\u6b63\u5f0f\u63d0\u4ea4\u4e4b\u524d\u7684\u4e8b\u52a1\uff0c\u628a\u4e4b\u524d\u201c\u672a\u786e\u8ba4\u201d\u7684\u6570\u636e\u6807\u4e3a\u201c\u5df2\u786e\u8ba4\u201d \uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6b63\u5e38\u6d88\u8d39\u4e86\u3002</p> <p>\u5728\u4efb\u52a1\u8fd0\u884c\u4e2d\u7684\u4efb\u4f55\u9636\u6bb5\u5931\u8d25\uff0c\u90fd\u4f1a\u4ece\u4e0a\u4e00\u6b21\u7684\u72b6\u6001\u6062\u590d\uff0c\u6240\u6709\u6ca1\u6709\u6b63\u5f0f\u63d0\u4ea4\u7684\u6570\u636e\u4e5f\u4f1a\u56de\u6eda\u3002\u8fd9\u6837\uff0cFlink \u548c Kafka \u8fde\u63a5\u6784\u6210\u7684\u6d41\u5904\u7406\u7cfb\u7edf\uff0c\u5c31\u5b9e\u73b0\u4e86\u7aef\u5230\u7aef\u7684 exactly-once \u72b6\u6001\u4e00\u81f4\u6027\u3002</p> <p></p> <p>Flink \u7aef\u5230\u7aef\u7cbe\u786e\u4e00\u6b21\u6d41\u7a0b\u603b\u7ed3\uff1a</p> <ol> <li>Flink \u6d88\u8d39\u5230 Kafka \u6570\u636e\u4e4b\u540e\uff0c\u5c31\u4f1a\u5f00\u542f\u4e00\u4e2a Kafka \u7684\u4e8b\u52a1\uff0c\u6b63\u5e38\u5199\u5165 Kafka \u5206\u533a\u65e5\u5fd7\u4f46\u6807\u8bb0\u4e3a\u672a\u63d0\u4ea4\uff0c\u8fd9\u5c31\u662f pre-commit</li> <li>\u4e00\u65e6\u6240\u6709\u7684\u7b97\u5b50\u5b8c\u6210\u5404\u81ea\u7684 pre-commit\uff0c\u5b83\u4eec\u4f1a\u53d1\u8d77\u4e00\u4e2a commit \u64cd\u4f5c</li> <li>\u5982\u679c\u6709\u4efb\u610f\u4e00\u4e2a pre-commit \u5931\u8d25\uff0c\u6240\u6709\u5176\u4ed6\u7684 pre-commit \u5fc5\u987b\u505c\u6b62\uff0c\u5e76\u4e14 Flink \u4f1a\u56de\u6eda\u5230\u6700\u8fd1\u6210\u529f\u5b8c\u6210\u7684 checkpoint</li> <li>\u5f53\u6240\u6709\u7684\u7b97\u5b50\u5b8c\u6210\u4efb\u52a1\u65f6\uff0cSink \u7aef\u4fdd\u5b58\u5f53\u524d\u72b6\u6001\uff0c\u5b58\u5165 checkpoint\uff0c\u901a\u77e5 JobManager\uff0c\u5e76\u63d0\u4ea4\u5916\u90e8\u4e8b\u52a1</li> <li>JobManager \u6536\u5230\u6240\u6709\u4efb\u52a1\u7684\u901a\u77e5\uff0c\u53d1\u51fa\u786e\u8ba4\u4fe1\u606f\uff0c\u8868\u793a checkpoint \u5df2\u5b8c\u6210\uff0cSink \u6536\u5230 JobManager \u7684\u786e\u8ba4\u4fe1\u606f\uff0c\u6b63\u5f0f commit \u8fd9\u6bb5\u65f6\u95f4\u7684\u6570\u636e</li> <li>Kafka \u4e8b\u52a1\u6267\u884c\u5b8c\u6bd5\uff0c\u63d0\u4ea4\u7684\u6570\u636e\u53ef\u4ee5\u6b63\u5e38\u6d88\u8d39</li> </ol>"},{"location":"Flink/6.%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/#checkpoint_2","title":"Checkpoint \u914d\u7f6e","text":"<p>Checkpoint \u7684\u524d\u63d0\u6761\u4ef6</p> <p>Flink \u7684 checkpoint \u673a\u5236\u4f1a\u548c\u6301\u4e45\u5316\u5b58\u50a8\u8fdb\u884c\u4ea4\u4e92\uff0c\u8bfb\u5199\u6d41\u4e0e\u72b6\u6001\u3002\u4e00\u822c\u9700\u8981\uff1a</p> <ul> <li>\u4e00\u4e2a\u80fd\u591f\u56de\u653e\u4e00\u6bb5\u65f6\u95f4\u5185\u6570\u636e\u7684\u6301\u4e45\u5316\u6570\u636e\u6e90\uff0c\u4f8b\u5982\u6301\u4e45\u5316\u6d88\u606f\u961f\u5217\uff08\u4f8b\u5982 Apache Kafka\u3001RabbitMQ\u3001 Amazon Kinesis\u3001 Google PubSub \u7b49\uff09\u6216\u6587\u4ef6\u7cfb\u7edf\uff08\u4f8b\u5982 HDFS\u3001 S3\u3001 GFS\u3001 NFS\u3001 Ceph \u7b49\uff09\u3002</li> <li>\u5b58\u653e\u72b6\u6001\u7684\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u901a\u5e38\u4e3a\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff08\u6bd4\u5982 HDFS\u3001 S3\u3001 GFS\u3001 NFS\u3001 Ceph \u7b49\uff09\u3002</li> </ul> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b checkpoint \u662f\u7981\u7528\u7684\u3002\u901a\u8fc7\u8c03\u7528 StreamExecutionEnvironment \u7684 <code>enableCheckpointing(n)</code> \u6765\u542f\u7528 checkpoint\uff0c\u91cc\u9762\u7684 n \u662f\u8fdb\u884c checkpoint \u7684\u95f4\u9694\uff0c\u5355\u4f4d\u6beb\u79d2\u3002</p> <p>\u5176\u4ed6\u914d\u7f6e\uff1a</p> <pre><code>StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n// \u6bcf 1000ms \u5f00\u59cb\u4e00\u6b21 checkpoint\nenv.enableCheckpointing(1000);\n\n// \u9ad8\u7ea7\u9009\u9879\uff1a\n\n// \u8bbe\u7f6e\u6a21\u5f0f\u4e3a\u7cbe\u786e\u4e00\u6b21 (\u8fd9\u662f\u9ed8\u8ba4\u503c)\nenv.getCheckpointConfig().setCheckpointingMode(CheckpointingMode.EXACTLY_ONCE);\n\n// \u786e\u8ba4 checkpoints \u4e4b\u95f4\u7684\u65f6\u95f4\u4f1a\u8fdb\u884c 500 ms\nenv.getCheckpointConfig().setMinPauseBetweenCheckpoints(500);\n\n// Checkpoint \u5fc5\u987b\u5728\u4e00\u5206\u949f\u5185\u5b8c\u6210\uff0c\u5426\u5219\u5c31\u4f1a\u88ab\u629b\u5f03\nenv.getCheckpointConfig().setCheckpointTimeout(60000);\n\n// \u5141\u8bb8\u4e24\u4e2a\u8fde\u7eed\u7684 checkpoint \u9519\u8bef\nenv.getCheckpointConfig().setTolerableCheckpointFailureNumber(2);\n\n// \u540c\u4e00\u65f6\u95f4\u53ea\u5141\u8bb8\u4e00\u4e2a checkpoint \u8fdb\u884c\nenv.getCheckpointConfig().setMaxConcurrentCheckpoints(1);\n\n// \u4f7f\u7528 externalized checkpoints\uff0c\u8fd9\u6837 checkpoint \u5728\u4f5c\u4e1a\u53d6\u6d88\u540e\u4ecd\u5c31\u4f1a\u88ab\u4fdd\u7559\nenv.getCheckpointConfig().setExternalizedCheckpointRetention(\n        ExternalizedCheckpointRetention.RETAIN_ON_CANCELLATION);\n\n// \u5f00\u542f\u5b9e\u9a8c\u6027\u7684 unaligned checkpoints\nenv.getCheckpointConfig().enableUnalignedCheckpoints();\n</code></pre>"},{"location":"Flink/7.Process%20Function/","title":"Process Function","text":""},{"location":"Flink/7.Process%20Function/#processfunction","title":"ProcessFunction \u7b80\u4ecb","text":"<p><code>ProcessFunction</code> \u662f\u4e00\u79cd\u4f4e\u7ea7\u522b\u7684\u6d41\u5904\u7406\u64cd\u4f5c\uff0c\u5b83\u80fd\u591f\u8bbf\u95ee\u6240\u6709\uff08\u65e0\u73af\uff09\u6d41\u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u672c\u6784\u5efa\u6a21\u5757\uff1a</p> <ul> <li>\u4e8b\u4ef6\uff08\u6d41\u5143\u7d20\uff09\uff1a\u5373\u6d41\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u3002</li> <li>\u72b6\u6001\uff08\u5177\u5907\u5bb9\u9519\u6027\u3001\u4e00\u81f4\u6027\uff0c\u4ec5\u5728 keyed stream \u4e2d\u53ef\u7528\uff09\uff1a\u7528\u4e8e\u5b58\u50a8\u548c\u7ba1\u7406\u76f8\u5173\u6570\u636e\u72b6\u6001\u3002</li> <li>\u5b9a\u65f6\u5668\uff08\u4e8b\u4ef6\u65f6\u95f4\u548c\u5904\u7406\u65f6\u95f4\uff0c\u4ec5\u5728 keyed stream \u4e2d\u53ef\u7528\uff09\uff1a\u53ef\u57fa\u4e8e\u4e0d\u540c\u65f6\u95f4\u7ef4\u5ea6\u89e6\u53d1\u76f8\u5e94\u64cd\u4f5c\u3002</li> </ul> <p><code>ProcessFunction</code> \u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u80fd\u591f\u8bbf\u95ee keyed state \u548c\u5b9a\u65f6\u5668\u7684 <code>FlatMapFunction</code>\u3002\u5b83\u901a\u8fc7\u5bf9\u8f93\u5165\u6d41\u4e2d\u63a5\u6536\u5230\u7684\u6bcf\u4e2a\u4e8b\u4ef6\u8fdb\u884c\u8c03\u7528\u6765\u5904\u7406\u8fd9\u4e9b\u4e8b\u4ef6\u3002</p> <p>\u5173\u4e8e\u5bb9\u9519\u72b6\u6001</p> <p>\u5bf9\u4e8e\u5bb9\u9519\u72b6\u6001\u800c\u8a00\uff0c<code>ProcessFunction</code>\u53ef\u4ee5\u8bbf\u95ee Flink \u7684 keyed state\uff0c\u901a\u8fc7<code>RuntimeContext</code>\u8fdb\u884c\u8bbf\u95ee\uff0c\u8fd9\u4e0e\u5176\u4ed6\u6709\u72b6\u6001\u51fd\u6570\u8bbf\u95ee keyed state \u7684\u65b9\u5f0f\u7c7b\u4f3c\u3002</p> <p>\u5173\u4e8e\u5b9a\u65f6\u5668\u7684\u4f5c\u7528\u53ca\u4f7f\u7528\u65b9\u5f0f</p> <p>\u5b9a\u65f6\u5668\u80fd\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5bf9\u5904\u7406\u65f6\u95f4\u548c\u4e8b\u4ef6\u65f6\u95f4\u7684\u53d8\u5316\u505a\u51fa\u54cd\u5e94\u3002\u6bcf\u6b21\u5bf9\u51fd\u6570 <code>processElement(...)</code> \u7684\u8c03\u7528\u90fd\u4f1a\u83b7\u5f97\u4e00\u4e2a <code>Context</code> \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u53ef\u7528\u4e8e\u8bbf\u95ee\u5143\u7d20\u7684\u4e8b\u4ef6\u65f6\u95f4\u6233\u4ee5\u53ca <code>TimerService</code>\u3002<code>TimerService</code> \u53ef\u7528\u4e8e\u4e3a\u672a\u6765\u7684\u4e8b\u4ef6\u65f6\u95f4\u6216\u5904\u7406\u65f6\u95f4\u77ac\u95f4\u6ce8\u518c\u56de\u8c03\u3002\u5bf9\u4e8e\u4e8b\u4ef6\u65f6\u95f4\u5b9a\u65f6\u5668\uff0c\u5f53\u5f53\u524d\u6c34\u5370\u63a8\u8fdb\u5230\u7b49\u4e8e\u6216\u8d85\u8fc7\u5b9a\u65f6\u5668\u7684\u65f6\u95f4\u6233\u65f6\uff0c\u4f1a\u8c03\u7528 <code>onTimer(...)</code> \u65b9\u6cd5\uff1b\u800c\u5bf9\u4e8e\u5904\u7406\u65f6\u95f4\u5b9a\u65f6\u5668\uff0c\u5f53\u65f6\u949f\u65f6\u95f4\u8fbe\u5230\u6307\u5b9a\u65f6\u95f4\u65f6\uff0c\u4f1a\u8c03\u7528 <code>onTimer(...)</code> \u65b9\u6cd5\u3002\u5728\u8c03\u7528 <code>onTimer(...)</code> \u65b9\u6cd5\u671f\u95f4\uff0c\u6240\u6709\u72b6\u6001\u540c\u6837\u4f1a\u9650\u5b9a\u5728\u521b\u5efa\u5b9a\u65f6\u5668\u65f6\u6240\u5bf9\u5e94\u7684\u952e\u7684\u8303\u56f4\u5185\uff0c\u8fd9\u6837\u5b9a\u65f6\u5668\u5c31\u53ef\u4ee5\u5bf9 keyed state \u8fdb\u884c\u64cd\u4f5c\u4e86\u3002</p> <p>\u5982\u679c\u8981\u8bbf\u95ee\u952e\u63a7\u72b6\u6001\u548c\u8ba1\u65f6\u5668\uff0c\u5219\u5fc5\u987b\u5728\u952e\u63a7\u6d41\u4e0a\u5e94\u7528 ProcessFunction\uff1a</p> <pre><code>stream.keyBy(...).process(new MyProcessFunction());\n</code></pre>"},{"location":"Flink/7.Process%20Function/#low-level-joins","title":"Low-level Joins","text":"<p>\u4e3a\u4e86\u5728\u4e24\u4e2a\u8f93\u5165\u4e0a\u5b9e\u73b0\u4f4e\u7ea7\u522b\u7684\u64cd\u4f5c\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528 <code>CoProcessFunction</code> \u6216 <code>KeyedCoProcessFunction</code>\u3002\u8be5\u51fd\u6570\u4e0e\u4e24\u4e2a\u4e0d\u540c\u7684\u8f93\u5165\u76f8\u5173\u8054\uff0c\u5e76\u4e14\u9488\u5bf9\u6765\u81ea\u8fd9\u4e24\u4e2a\u4e0d\u540c\u8f93\u5165\u7684\u8bb0\u5f55\uff0c\u4f1a\u5206\u522b\u8c03\u7528 <code>processElement1(...)</code> \u548c <code>processElement2(...)</code> \u65b9\u6cd5\u3002</p> <p>\u5b9e\u73b0\u4e00\u4e2a\u4f4e\u7ea7\u522b\u7684 join \u64cd\u4f5c\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u6a21\u5f0f\uff1a</p> <ul> <li>\u4e3a\u5176\u4e2d\u4e00\u4e2a\u8f93\u5165\uff08\u6216\u8005\u4e24\u4e2a\u8f93\u5165\uff09\u521b\u5efa\u4e00\u4e2a\u72b6\u6001\u5bf9\u8c61\u3002</li> <li>\u5728\u63a5\u6536\u5230\u6765\u81ea\u5176\u5bf9\u5e94\u8f93\u5165\u7684\u5143\u7d20\u65f6\u66f4\u65b0\u8be5\u72b6\u6001\u3002</li> <li>\u5f53\u63a5\u6536\u5230\u6765\u81ea\u53e6\u4e00\u4e2a\u8f93\u5165\u7684\u5143\u7d20\u65f6\uff0c\u63a2\u67e5\u8be5\u72b6\u6001\u5e76\u751f\u6210 join \u7ed3\u679c\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u8981\u5c06\u5ba2\u6237\u6570\u636e\u4e0e\u91d1\u878d\u4ea4\u6613\u6570\u636e\u8fdb\u884c join\uff0c\u540c\u65f6\u4e3a\u5ba2\u6237\u6570\u636e\u4fdd\u7559\u72b6\u6001\u3002\u5982\u679c\u4f60\u5e0c\u671b\u5728\u9762\u5bf9\u4e71\u5e8f\u4e8b\u4ef6\u65f6\u80fd\u5b9e\u73b0\u5b8c\u6574\u4e14\u786e\u5b9a\u6027\u7684 join\uff0c\u90a3\u4e48\u5f53\u5ba2\u6237\u6570\u636e\u6d41\u7684\u6c34\u5370\u5df2\u7ecf\u8d85\u8fc7\u67d0\u7b14\u4ea4\u6613\u7684\u65f6\u95f4\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5b9a\u65f6\u5668\u6765\u8bc4\u4f30\u5e76\u8f93\u51fa\u8be5\u4ea4\u6613\u5bf9\u5e94\u7684 join \u7ed3\u679c\u3002</p>"},{"location":"Flink/7.Process%20Function/#_1","title":"\u5e94\u7528\u6848\u4f8b","text":"<p>\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c<code>KeyedProcessFunction</code> \u4f1a\u9488\u5bf9\u6bcf\u4e2a\u952e\u7ef4\u62a4\u8ba1\u6570\uff0c\u5e76\u4e14\u6bcf\u5f53\u67d0\u4e2a\u952e\u5728\uff08\u4e8b\u4ef6\u65f6\u95f4\u7684\uff09\u4e00\u5206\u949f\u5185\u90fd\u6ca1\u6709\u66f4\u65b0\u65f6\uff0c\u5c31\u4f1a\u8f93\u51fa\u4e00\u4e2a\u952e/\u8ba1\u6570\u5bf9\u3002</p> <p>\u8ba1\u6570\u3001\u952e\u4ee5\u53ca\u6700\u540e\u4fee\u6539\u65f6\u95f4\u6233\u4f1a\u5b58\u50a8\u5728\u4e00\u4e2a <code>ValueState</code>\uff08\u503c\u72b6\u6001\uff09\u4e2d\uff0c\u8be5\u72b6\u6001\u4f1a\u4f9d\u636e\u952e\u9690\u5f0f\u5730\u786e\u5b9a\u8303\u56f4\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u6761\u8bb0\u5f55\uff0c<code>KeyedProcessFunction</code> \u4f1a\u589e\u52a0\u8ba1\u6570\u5668\u7684\u503c\uff0c\u5e76\u8bbe\u7f6e\u6700\u540e\u4fee\u6539\u65f6\u95f4\u6233\u3002</p> <p>\u8be5\u51fd\u6570\u8fd8\u4f1a\uff08\u5728\u4e8b\u4ef6\u65f6\u95f4\u4e0b\uff09\u5b89\u6392\u4e00\u4e2a\u4e00\u5206\u949f\u4e4b\u540e\u7684\u56de\u8c03\u3002</p> <p>\u6bcf\u6b21\u56de\u8c03\u65f6\uff0c\u5b83\u4f1a\u5c06\u56de\u8c03\u7684\u4e8b\u4ef6\u65f6\u95f4\u6233\u4e0e\u5b58\u50a8\u7684\u8ba1\u6570\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5982\u679c\u4e8c\u8005\u5339\u914d\uff08\u5373\uff0c\u5728\u90a3\u4e00\u5206\u949f\u5185\u6ca1\u6709\u8fdb\u4e00\u6b65\u7684\u66f4\u65b0\u53d1\u751f\uff09\uff0c\u5c31\u4f1a\u8f93\u51fa\u952e/\u8ba1\u6570\u5bf9\u3002</p> <p>Note</p> <p>\u8fd9\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u539f\u672c\u53ef\u4ee5\u7528\u4f1a\u8bdd\u7a97\u53e3\u6765\u5b9e\u73b0\u3002\u6211\u4eec\u5728\u6b64\u4f7f\u7528 <code>KeyedProcessFunction</code> \u662f\u4e3a\u4e86\u9610\u91ca\u5b83\u6240\u63d0\u4f9b\u7684\u57fa\u672c\u6a21\u5f0f\u3002</p> <pre><code>// the source data stream\nDataStream&lt;Tuple2&lt;String, String&gt;&gt; stream = ...;\n\n// apply the process function onto a keyed stream\nDataStream&lt;Tuple2&lt;String, Long&gt;&gt; result = stream\n    .keyBy(value -&gt; value.f0)\n    .process(new CountWithTimeoutFunction());\n\n/**\n * The data type stored in the state\n */\npublic class CountWithTimestamp {\n    public String key;\n    public long count;\n    public long lastModified;\n}\n\n/**\n * The implementation of the ProcessFunction that maintains the count and timeouts\n */\npublic class CountWithTimeoutFunction\n        extends KeyedProcessFunction&lt;Tuple, Tuple2&lt;String, String&gt;, Tuple2&lt;String, Long&gt;&gt; {\n\n    /** The state that is maintained by this process function */\n    private ValueState&lt;CountWithTimestamp&gt; state;\n\n    @Override\n    public void open(OpenContext openContext) throws Exception {\n        state = getRuntimeContext().getState(new ValueStateDescriptor&lt;&gt;(\"myState\", CountWithTimestamp.class));\n    }\n\n    @Override\n    public void processElement(\n            Tuple2&lt;String, String&gt; value,\n            Context ctx,\n            Collector&lt;Tuple2&lt;String, Long&gt;&gt; out) throws Exception {\n\n        // retrieve the current count\n        CountWithTimestamp current = state.value();\n        if (current == null) {\n            current = new CountWithTimestamp();\n            current.key = value.f0;\n        }\n\n        // update the state's count\n        current.count++;\n\n        // set the state's timestamp to the record's assigned event time timestamp\n        current.lastModified = ctx.timestamp();\n\n        // write the state back\n        state.update(current);\n\n        // schedule the next timer 60 seconds from the current event time\n        ctx.timerService().registerEventTimeTimer(current.lastModified + 60000);\n    }\n\n    @Override\n    public void onTimer(\n            long timestamp,\n            OnTimerContext ctx,\n            Collector&lt;Tuple2&lt;String, Long&gt;&gt; out) throws Exception {\n\n        // get the state for the key that scheduled the timer\n        CountWithTimestamp result = state.value();\n\n        // check if this is an outdated timer or the latest timer\n        if (timestamp == result.lastModified + 60000) {\n            // emit the state on timeout\n            out.collect(new Tuple2&lt;String, Long&gt;(result.key, result.count));\n        }\n    }\n}\n</code></pre>"},{"location":"Flink/8.%E5%BC%82%E6%AD%A5%20IO/","title":"\u5f02\u6b65 I/O","text":""},{"location":"Flink/8.%E5%BC%82%E6%AD%A5%20IO/#io_1","title":"\u540c\u6b65 I/O \u5904\u7406\u5bfc\u81f4\u4f5c\u4e1a\u4f4e\u541e\u5410","text":"<p>I/O \u64cd\u4f5c\u5e38\u7528\u4e14\u7b80\u5355\uff0c\u6211\u4eec\u76f4\u63a5\u5728 Map\u3001FlatMap \u8fd9\u7c7b\u7b97\u5b50\u91cc\u8bbf\u95ee\u5916\u90e8\u7684\u6570\u636e\u5e93\u5c31\u53ef\u4ee5\uff0c\u4f46\u662f\u5f53\u541e\u5410\u91cf\u9010\u6e10\u53d8\u5927\u65f6\uff0c\u95ee\u9898\u5c31\u6d6e\u73b0\u51fa\u6765\u4e86\uff0c\u539f\u56e0\u5728\u4e8e\u5bf9\u5916\u90e8\u6570\u636e\u5e93\u6216 K-V \u5f15\u64ce\u7684 I/O \u8bbf\u95ee\u64cd\u4f5c\u662f\u4e00\u4e2a\u975e\u5e38\u8017\u65f6\u7684\u8fc7\u7a0b\u3002</p> <p></p> <p>\u4ee5 Map \u7b97\u5b50\u4e3a\u4f8b\uff0c\u5728\u4e0d\u8bbf\u95ee\u5916\u90e8\u5b58\u50a8\u7684\u60c5\u51b5\u4e0b\uff0cMap \u7b97\u5b50\u7684\u4e00\u4e2a SubTask \u5cf0\u503c\u541e\u5410\u91cf\u5927\u7ea6\u4e3a 10000QPS\uff08\u6bcf 0.1ms \u5904\u7406\u4e00\u6761\u6570\u636e\uff09\u3002\u5982\u679c Map \u7b97\u5b50\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u5c31\u9700\u8981\u7ecf\u8fc7\u7f51\u7edc\u8bf7\u6c42\uff0c\u90a3\u4e48 Map \u7b97\u5b50\u7684\u4e00\u4e2a SubTask \u4ece\u63a5\u6536\u4e00\u6761\u6570\u636e\uff0c\u5230\u901a\u8fc7\u7f51\u7edc\u8bf7\u6c42\u8bbf\u95ee\u6570\u636e\u5e93\u5e76\u83b7\u53d6\u6570\u636e\uff08\u4e00\u822c\u9700\u8981\u82b1\u8d39 10ms\uff09\uff0c\u518d\u5230\u5904\u7406\u6570\u636e\uff080.1ms\uff09\uff0c\u6240\u82b1\u7684\u65f6\u95f4\u5c31\u4f1a\u53d8\u4e3a 10.1ms\uff0c\u8fd9\u65f6 Map \u7b97\u5b50\u7684\u4e00\u4e2a SubTask \u5cf0\u503c\u541e\u5410\u91cf\u5c31\u53d8\u4e3a 100QPS\uff0810ms \u5904\u7406\u4e00\u6761\u6570\u636e\uff09\u4e86\u3002\u4e0d\u8bbf\u95ee\u5916\u90e8\u5b58\u50a8\u548c\u8bbf\u95ee\u5916\u90e8\u5b58\u50a8\u76f8\u6bd4\uff0cMap \u7b97\u5b50\u4e00\u4e2a SubTask \u7684\u5cf0\u503c\u541e\u5410\u91cf\u4e0b\u964d\u4e86 100 \u500d\u3002</p> <p>\u4e0a\u8ff0 Map \u7b97\u5b50\u8bbf\u95ee\u5916\u90e8\u5b58\u50a8\u5f15\u64ce\u7684\u5904\u7406\u8fc7\u7a0b\u88ab\u79f0\u4f5c\u540c\u6b65 I/O \u5904\u7406\u3002\u5982\u56fe\u6240\u793a\uff0c\u540c\u6b65 I/O \u5904\u7406\u541e\u5410\u91cf\u4f4e\u7684\u539f\u56e0\u5728\u4e8e\u6bcf\u5904\u7406 1 \u6761\u6570\u636e\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709 0.1ms \u7528\u4e8e\u5904\u7406\u6570\u636e\uff0c\u5269\u4e0b\u7684 10ms \u90fd\u5728\u7b49\u5f85\u6570\u636e\u5e93\u8fd4\u56de\u7ed3\u679c\uff0c\u8fd9 10ms \u7684\u65f6\u95f4\u91cc\u4ec0\u4e48\u4e5f\u4e0d\u80fd\u505a\uff0c\u8d44\u6e90\u88ab\u767d\u767d\u6d6a\u8d39\u4e86\u3002</p> <p></p>"},{"location":"Flink/8.%E5%BC%82%E6%AD%A5%20IO/#io-4","title":"\u540c\u6b65 I/O \u5904\u7406\u4f4e\u541e\u5410\u7684 4 \u79cd\u89e3\u51b3\u65b9\u6848","text":""},{"location":"Flink/8.%E5%BC%82%E6%AD%A5%20IO/#map","title":"\u65b9\u6848\u4e00\uff1a\u63d0\u9ad8 Map \u7b97\u5b50\u7684\u5e76\u884c\u5ea6","text":"<p>\u901a\u8fc7\u63d0\u9ad8 Map \u7b97\u5b50\u5e76\u884c\u5ea6\uff0c\u589e\u52a0 SubTask \u7684\u4e2a\u6570\u6765\u589e\u52a0\u541e\u5410\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5f53 Map \u7b97\u5b50\u7684\u5e76\u884c\u5ea6\u4e3a 10 \u65f6\uff0cMap \u7b97\u5b50\u7684\u6bcf\u4e2a SubTask \u7684\u5cf0\u503c\u541e\u5410\u4e3a 100QPS\uff0c\u90a3\u4e48\u6574\u4e2a Map \u7b97\u5b50\u7684\u5cf0\u503c\u541e\u5410\u4e3a 1000QPS\u3002\u5982\u679c\u8fd9\u65f6\u6570\u636e\u6e90\u7684\u5cf0\u503c\u4e3a 10000QPS\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8981\u5c06 Map \u7b97\u5b50\u7684\u5e76\u884c\u5ea6\u6700\u5c11\u63d0\u9ad8\u5230 100 \u624d\u80fd\u5904\u7406 10000QPS \u7684\u6570\u636e\u3002</p> <p>\u63d0\u9ad8\u7b97\u5b50\u5e76\u884c\u5ea6\u662f\u89e3\u51b3\u4f4e\u541e\u5410\u95ee\u9898\u6700\u7b80\u5355\u7684\u4e00\u79cd\u65b9\u6848\uff0c\u8be5\u65b9\u6848\u7684\u7f3a\u70b9\u5728\u4e8e\u7b97\u5b50\u5e76\u884c\u5ea6\u8d8a\u5927\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a Flink \u4f5c\u4e1a\u5206\u914d\u7684\u8d44\u6e90\u5c31\u8d8a\u591a\uff0c\u9700\u8981\u90e8\u7f72\u66f4\u591a\u7684 TaskManager\uff0c\u5206\u914d\u66f4\u591a\u7684 TaskSlot\uff0c\u800c\u540c\u6b65 I/O \u5904\u7406\u4e0d\u662f CPU \u5bc6\u96c6\u578b\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u5206\u914d\u7684\u8fd9\u4e9b\u8d44\u6e90\u5f88\u591a\u90fd\u662f\u95f2\u7f6e\u72b6\u6001\uff0c\u5b58\u5728\u8d44\u6e90\u6d6a\u8d39\u3002</p>"},{"location":"Flink/8.%E5%BC%82%E6%AD%A5%20IO/#io_2","title":"\u65b9\u6848\u4e8c\uff1a\u4f7f\u7528\u4f7f\u7528\u672c\u5730\u7f13\u5b58\u6765\u51cf\u5c11 I/O \u8bf7\u6c42","text":"<p>\u5927\u591a\u6570\u573a\u666f\u4e2d\uff0cI/O \u5904\u7406\u8bbf\u95ee\u7684\u5916\u90e8\u7ef4\u8868\u4e2d\u7684\u6570\u636e\u53d8\u5316\u9891\u7387\u5f88\u4f4e\uff0c\u6bd4\u5982\u7528\u6237\u753b\u50cf\u6570\u636e\uff0c\u56e0\u6b64\u7b2c\u4e00\u6b21\u8bbf\u95ee\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5c06\u7ed3\u679c\u7f13\u5b58\u5728 SubTask \u7684\u672c\u5730\u7f13\u5b58\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11 I/O \u8bf7\u6c42\u3002</p> <p>\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06 I/O \u5904\u7406\u7684\u8bf7\u6c42\u53c2\u6570\u4f5c\u4e3a KeyBy \u64cd\u4f5c\u7684 key\uff0c\u5c06\u76f8\u540c key \u7684\u6570\u636e\u53d1\u9001\u5230 I/O \u5904\u7406\u7b97\u5b50\u7684\u540c\u4e00\u4e2a SubTask \u4e2d\uff0c\u4ece\u800c\u63d0\u9ad8\u672c\u5730\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u3002</p>"},{"location":"Flink/8.%E5%BC%82%E6%AD%A5%20IO/#_1","title":"\u65b9\u6848\u4e09\uff1a\u6279\u91cf\u8bbf\u95ee\u5916\u90e8\u5b58\u50a8","text":"<p>\u5bf9\u5916\u90e8\u6570\u636e\u5e93\u8fdb\u884c\u6279\u91cf\u8bbf\u95ee\u53ef\u4ee5\u5747\u644a\u8bf7\u6c42\u7ed3\u679c\u7684\u8fd4\u56de\u65f6\u95f4\uff0c\u63d0\u9ad8\u541e\u5410\u91cf\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u5982\u6211\u4eec\u8bbf\u95ee\u7684\u6570\u636e\u5e93\u662f Redis\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728 Flink \u4f5c\u4e1a\u4e2d\u5b9e\u73b0\u6bcf\u6512\u591f 20 \u6761\u6570\u636e\uff0c\u4f7f\u7528 Redis \u63d0\u4f9b\u7684\u5de5\u5177 RedisPipeline \u6279\u91cf\u8bbf\u95ee\u4e00\u6b21 Redis\uff0c\u6bcf\u6b21\u8bbf\u95ee\u53ea\u9700\u8981\u82b1\u8d39 10ms\uff0c\u5728\u8fd9 10ms \u5185\u5c31\u53ef\u4ee5\u5904\u7406 20 \u6761\u6570\u636e\u3002\u76f8\u6bd4\u539f\u672c\u4e00\u4e2a SubTask \u6bcf 10ms \u53ea\u80fd\u5904\u7406 1 \u6761\u6570\u636e\uff0c\u5cf0\u503c\u541e\u5410\u91cf\u63d0\u9ad8\u4e86 20 \u500d\u3002</p>"},{"location":"Flink/8.%E5%BC%82%E6%AD%A5%20IO/#io_3","title":"\u65b9\u6848\u56db\uff1a\u4f7f\u7528\u5f02\u6b65 I/O \u5904\u7406","text":"<p>\u5728\u540c\u6b65 I/O \u5904\u7406\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf 10ms \u53ea\u80fd\u53d1\u9001\u5e76\u63a5\u6536 1 \u4e2a\u6570\u636e\u5e93\u8bf7\u6c42\uff0c\u5f53\u6211\u4eec\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u8f6c\u53d8\u4e3a\u5f02\u6b65 I/O \u5904\u7406\u540e\uff0c\u7b2c\u4e00\u4e2a\u6570\u636e\u5e93\u8bf7\u6c42\u53d1\u51fa\u4e4b\u540e\uff0c\u7b97\u5b50\u4e0d\u9700\u8981\u4e00\u76f4\u7b49\u5f85\u7ed3\u679c\u8fd4\u56de\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u540e\u7eed\u7684\u6570\u636e\uff0c\u63a5\u7740\u5bf9\u6570\u636e\u5e93\u53d1\u51fa\u8bf7\u6c42\u3002\u53ea\u6709\u5f53\u6570\u636e\u5e93\u8bf7\u6c42\u8fd4\u56de\u4e4b\u540e\uff0c\u7b97\u5b50\u624d\u63a5\u7740\u5904\u7406\u6570\u636e\uff0c\u4ea7\u51fa\u7ed3\u679c\u3002\u539f\u672c\u53ea\u80fd\u7528\u4e8e\u7b49\u5f85\u7684 10ms \u65f6\u95f4\u88ab\u5145\u5206\u5229\u7528\u4e86\u8d77\u6765\uff0c\u4ece\u800c\u63d0\u5347\u4e86 SubTask \u7684\u5cf0\u503c\u541e\u5410\u91cf\u3002</p> <p></p>"},{"location":"Flink/8.%E5%BC%82%E6%AD%A5%20IO/#io_4","title":"\u5bf9\u4e8e\u5f02\u6b65 I/O \u64cd\u4f5c\u7684\u9700\u6c42","text":"<p>\u5728\u4e0e\u5916\u90e8\u7cfb\u7edf\u4ea4\u4e92\uff08\u7528\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u6269\u5145\u6d41\u6570\u636e\uff09\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651\u4e0e\u5916\u90e8\u7cfb\u7edf\u7684\u901a\u4fe1\u5ef6\u8fdf\u5bf9\u6574\u4e2a\u6d41\u5904\u7406\u5e94\u7528\u7684\u5f71\u54cd\u3002</p> <p>\u7b80\u5355\u5730\u8bbf\u95ee\u5916\u90e8\u6570\u636e\u5e93\u7684\u6570\u636e\uff0c\u6bd4\u5982\u4f7f\u7528 MapFunction\uff0c\u901a\u5e38\u610f\u5473\u7740\u540c\u6b65\u4ea4\u4e92\uff1aMapFunction \u5411\u6570\u636e\u5e93\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u7136\u540e\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u6536\u5230\u54cd\u5e94\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u7b49\u5f85\u5360\u636e\u4e86\u51fd\u6570\u8fd0\u884c\u7684\u5927\u90e8\u5206\u65f6\u95f4\u3002</p> <p>\u4e0e\u6570\u636e\u5e93\u5f02\u6b65\u4ea4\u4e92\u662f\u6307\u4e00\u4e2a\u5e76\u884c\u51fd\u6570\u5b9e\u4f8b\u53ef\u4ee5\u5e76\u53d1\u5730\u5904\u7406\u591a\u4e2a\u8bf7\u6c42\u548c\u63a5\u6536\u591a\u4e2a\u54cd\u5e94\u3002\u8fd9\u6837\uff0c\u51fd\u6570\u5728\u7b49\u5f85\u7684\u65f6\u95f4\u53ef\u4ee5\u53d1\u9001\u5176\u4ed6\u8bf7\u6c42\u548c\u63a5\u6536\u5176\u4ed6\u54cd\u5e94\u3002\u81f3\u5c11\uff0c\u7b49\u5f85\u7684\u65f6\u95f4\u53ef\u4ee5\u88ab\u591a\u4e2a\u8bf7\u6c42\u644a\u5206\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5f02\u6b65\u4ea4\u4e92\u53ef\u4ee5\u5927\u5e45\u5ea6\u63d0\u9ad8\u6d41\u5904\u7406\u7684\u541e\u5410\u91cf\u3002</p> <p></p> <p>Note</p> <p>\u4ec5\u4ec5\u63d0\u9ad8 MapFunction \u7684\u5e76\u884c\u5ea6\uff08parallelism\uff09\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u63d0\u5347\u541e\u5410\u91cf\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u901a\u5e38\u4f1a\u5bfc\u81f4\u975e\u5e38\u9ad8\u7684\u8d44\u6e90\u6d88\u8017\uff1a\u66f4\u591a\u7684\u5e76\u884c MapFunction \u5b9e\u4f8b\u610f\u5473\u7740\u66f4\u591a\u7684 Task\u3001\u66f4\u591a\u7684\u7ebf\u7a0b\u3001\u66f4\u591a\u7684 Flink \u5185\u90e8\u7f51\u7edc\u8fde\u63a5\u3001 \u66f4\u591a\u7684\u4e0e\u6570\u636e\u5e93\u7684\u7f51\u7edc\u8fde\u63a5\u3001\u66f4\u591a\u7684\u7f13\u51b2\u548c\u66f4\u591a\u7a0b\u5e8f\u5185\u90e8\u534f\u8c03\u7684\u5f00\u9500\u3002</p> <p>https://nightlies.apache.org/flink/flink-docs-release-1.20/zh/docs/dev/datastream/operators/asyncio/</p>"},{"location":"Flink/Flink%20CDC/","title":"Flink CDC","text":""},{"location":"Flink/Flink%20CDC/#_1","title":"\u4ecb\u7ecd","text":"<p>Flink CDC \u662f\u4e00\u4e2a\u57fa\u4e8e\u6d41\u7684\u6570\u636e\u96c6\u6210\u5de5\u5177\uff0c\u65e8\u5728\u4e3a\u7528\u6237\u63d0\u4f9b\u4e00\u5957\u529f\u80fd\u66f4\u52a0\u5168\u9762\u7684\u7f16\u7a0b\u63a5\u53e3\uff08API\uff09\u3002 \u8be5\u5de5\u5177\u4f7f\u5f97\u7528\u6237\u80fd\u591f\u4ee5 YAML \u914d\u7f6e\u6587\u4ef6\u7684\u5f62\u5f0f\uff0c\u4f18\u96c5\u5730\u5b9a\u4e49\u5176 ETL\uff08Extract, Transform, Load\uff09\u6d41\u7a0b\uff0c\u5e76\u534f\u52a9\u7528\u6237\u81ea\u52a8\u5316\u751f\u6210\u5b9a\u5236\u5316\u7684 Flink \u7b97\u5b50\u5e76\u4e14\u63d0\u4ea4 Flink \u4f5c\u4e1a\u3002 Flink CDC \u5728\u4efb\u52a1\u63d0\u4ea4\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5e76\u4e14\u589e\u52a0\u4e86\u4e00\u4e9b\u9ad8\u7ea7\u7279\u6027\uff0c\u5982\u8868\u7ed3\u6784\u53d8\u66f4\u81ea\u52a8\u540c\u6b65\uff08Schema Evolution\uff09\u3001\u6570\u636e\u8f6c\u6362\uff08Data Transformation\uff09\u3001\u6574\u5e93\u540c\u6b65\uff08Full Database Synchronization\uff09\u4ee5\u53ca \u7cbe\u786e\u4e00\u6b21\uff08Exactly-once\uff09\u8bed\u4e49\u3002</p> <p>Flink CDC \u6df1\u5ea6\u96c6\u6210\u5e76\u7531 Apache Flink \u9a71\u52a8\uff0c\u63d0\u4f9b\u4ee5\u4e0b\u6838\u5fc3\u529f\u80fd\uff1a</p> <ul> <li>\u7aef\u5230\u7aef\u7684\u6570\u636e\u96c6\u6210\u6846\u67b6</li> <li>\u4e3a\u6570\u636e\u96c6\u6210\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u6613\u4e8e\u6784\u5efa\u4f5c\u4e1a\u7684 API</li> <li>\u652f\u6301\u5728 Source \u548c Sink \u4e2d\u5904\u7406\u591a\u4e2a\u8868</li> <li>\u6574\u5e93\u540c\u6b65</li> <li>\u5177\u5907\u8868\u7ed3\u6784\u53d8\u66f4\u81ea\u52a8\u540c\u6b65\u7684\u80fd\u529b\uff08Schema Evolution\uff09</li> </ul> <p>https://developer.aliyun.com/article/1399426</p> <p>Flink \u6574\u5e93\u540c\u6b65\u4f9d\u8d56\u7684 Netflix \u7684 DBlog \u7b97\u6cd5\uff0c\u53c2\u8003\uff1aA Generic Change-Data-Capture Framework</p>"},{"location":"Flink/Flink%20CDC/#_2","title":"\u4f9d\u8d56\u914d\u7f6e","text":"<p>${flink.version} = 1.18.0</p> pom.xml<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n    &lt;artifactId&gt;flink-java&lt;/artifactId&gt;\n    &lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n    &lt;artifactId&gt;flink-streaming-java&lt;/artifactId&gt;\n    &lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n    &lt;artifactId&gt;flink-clients&lt;/artifactId&gt;\n    &lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n    &lt;artifactId&gt;flink-table-planner_2.12&lt;/artifactId&gt;\n    &lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n    &lt;artifactId&gt;flink-table-runtime&lt;/artifactId&gt;\n    &lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n    &lt;artifactId&gt;flink-table-api-java-bridge&lt;/artifactId&gt;\n    &lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n    &lt;artifactId&gt;flink-connector-base&lt;/artifactId&gt;\n    &lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n    &lt;artifactId&gt;flink-connector-mysql-cdc&lt;/artifactId&gt;\n    &lt;version&gt;3.2.0&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;mysql&lt;/groupId&gt;\n    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n    &lt;version&gt;8.0.33&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"Flink/Flink%20CDC/#mysql","title":"MySQL \u5e93\u8868\u6570\u636e\u51c6\u5907","text":"<pre><code>-- create database\nCREATE DATABASE app_db;\n\nUSE app_db;\n\n-- create orders table\nCREATE TABLE `orders` (\n`id` INT NOT NULL,\n`price` DECIMAL(10,2) NOT NULL,\nPRIMARY KEY (`id`)\n);\n\n-- insert records\nINSERT INTO `orders` (`id`, `price`) VALUES (1, 4.00);\nINSERT INTO `orders` (`id`, `price`) VALUES (2, 100.00);\n\n-- create shipments table\nCREATE TABLE `shipments` (\n`id` INT NOT NULL,\n`city` VARCHAR(255) NOT NULL,\nPRIMARY KEY (`id`)\n);\n\n-- insert records\nINSERT INTO `shipments` (`id`, `city`) VALUES (1, 'beijing');\nINSERT INTO `shipments` (`id`, `city`) VALUES (2, 'xian');\n\n-- create products table\nCREATE TABLE `products` (\n`id` INT NOT NULL,\n`product` VARCHAR(255) NOT NULL,\nPRIMARY KEY (`id`)\n);\n\n-- insert records\nINSERT INTO `products` (`id`, `product`) VALUES (1, 'Beer');\nINSERT INTO `products` (`id`, `product`) VALUES (2, 'Cap');\nINSERT INTO `products` (`id`, `product`) VALUES (3, 'Peanut');\n</code></pre>"},{"location":"Flink/Flink%20CDC/#datastream-api","title":"DataStream API","text":"<pre><code>public class FlinkCDC_Datastream {\n    public static void main(String[] args) throws Exception {\n        // 1. \u521b\u5efa\u6d41\u5904\u7406\u73af\u5883\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setParallelism(1);\n        // 2. \u5f00\u542f checkpoint \uff08\u672c\u5730\u6d4b\u8bd5\u53ef\u7701\u7565\uff09\n        env.enableCheckpointing(5000L);\n        env.getCheckpointConfig().setCheckpointTimeout(10000L);\n        env.getCheckpointConfig().setCheckpointStorage(\"file:///Users/lihao/Desktop/Flink-CDC/src/main/resources/ck\");\n        env.getCheckpointConfig().setCheckpointingMode(CheckpointingMode.EXACTLY_ONCE);\n        env.getCheckpointConfig().setMaxConcurrentCheckpoints(1);\n\n        // 3. \u521b\u5efa MySQLSource\n        MySqlSource&lt;String&gt; mySqlSource = MySqlSource.&lt;String&gt;builder()\n                .hostname(\"localhost\")\n                .port(3306)\n                .username(\"root\")\n                .password(\"\")\n                .databaseList(\"app_db\")\n                .tableList(\"app_db.orders\")\n                // initial() : \u521d\u59cb\u5316\u8bfb\u4e00\u6b21\u5168\u91cf\u6570\u636e\uff0c\u4e4b\u540e\u53ea\u8bfb\u589e\u91cf\u6570\u636e\n                // latest() : \u4ece\u6700\u65b0\u7684\u6570\u636e\u5f00\u59cb\u8bfb\n                // earliest() : \u4ece\u6700\u65e9\u7684\u6570\u636e\u5f00\u59cb\u8bfb\n                .startupOptions(StartupOptions.initial())\n                .deserializer(new JsonDebeziumDeserializationSchema())\n                .build();\n        // 4. \u8bfb\u53d6\u6570\u636e\n        DataStreamSource&lt;String&gt; mysqlDS = env.fromSource(mySqlSource, WatermarkStrategy.noWatermarks(), \"MySQLSource\");\n        // 5. \u6253\u5370\u8f93\u51fa\n        mysqlDS.print();\n        // 6. \u6267\u884c\u4efb\u52a1\n        env.execute();\n    }\n}\n</code></pre> <pre><code>{\"before\":null,\"after\":{\"id\":1,\"price\":\"AZA=\"},\"source\":{\"version\":\"1.9.8.Final\",\"connector\":\"mysql\",\"name\":\"mysql_binlog_source\",\"ts_ms\":0,\"snapshot\":\"false\",\"db\":\"app_db\",\"sequence\":null,\"table\":\"orders\",\"server_id\":0,\"gtid\":null,\"file\":\"\",\"pos\":0,\"row\":0,\"thread\":null,\"query\":null},\"op\":\"r\",\"ts_ms\":1733062090009,\"transaction\":null}\n{\"before\":null,\"after\":{\"id\":2,\"price\":\"JxA=\"},\"source\":{\"version\":\"1.9.8.Final\",\"connector\":\"mysql\",\"name\":\"mysql_binlog_source\",\"ts_ms\":0,\"snapshot\":\"false\",\"db\":\"app_db\",\"sequence\":null,\"table\":\"orders\",\"server_id\":0,\"gtid\":null,\"file\":\"\",\"pos\":0,\"row\":0,\"thread\":null,\"query\":null},\"op\":\"r\",\"ts_ms\":1733062090010,\"transaction\":null}\n\u4fe1\u606f: Connected to localhost:3306 at binlog.000002/4045 (sid:6194, cid:51)\n</code></pre>"},{"location":"Flink/Flink%20CDC/#sql-api","title":"SQL API","text":"<pre><code>public class FlinkCDC_SQL {\n    public static void main(String[] args) {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setParallelism(1);\n        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);\n        tableEnv.executeSql(\"create table orders (\\n\" +\n                \"    id int primary key not enforced,\\n\" +\n                \"    price double\\n\" +\n                \") with (\\n\" +\n                \"    'connector' = 'mysql-cdc',\\n\" +\n                \"    'hostname' = 'localhost',\\n\" +\n                \"    'port' = '3306',\\n\" +\n                \"    'username' = 'root',\\n\" +\n                \"    'password' = '',\\n\" +\n                \"    'database-name' = 'app_db',\\n\" +\n                \"    'table-name' = 'orders'\\n\" +\n                \")\");\n        tableEnv.executeSql(\"select * from orders\").print();\n    }\n}\n</code></pre> <pre><code>+----+-------------+--------------------------------+\n| op |          id |                          price |\n+----+-------------+--------------------------------+\n| +I |           2 |                          100.0 |\n| +I |           1 |                            4.0 |\n</code></pre>"},{"location":"Flink/Flink%20SQL/Examples/","title":"Examples","text":""},{"location":"Flink/Flink%20SQL/Examples/#_1","title":"\u7edf\u8ba1\u6bcf\u79cd\u5546\u54c1\u7684\u5386\u53f2\u7d2f\u8ba1\u9500\u552e\u989d","text":"<pre><code>create table source_table (\n    productId string,\n    income bigint\n) with (\n    'connector' = 'datagen',\n    'rows-per-second' = '1',\n    'fields.income.min' = '1',\n    'fields.income.max' = '5'\n)\n\ncreate table sink_table (\n    productId string,\n    countResult bigint,\n    incomeResult bigint,\n    avgIncomeResult bigint,\n    maxIncomeResult bigint,\n    minIncomeResult bigint\n) with (\n    'connector' = 'print'\n)\n\ninsert into sink_table\nselect\n    productId,\n    count(1) as countResult,\n    sum(income) as incomeResult,\n    avg(income) as avgIncomeResult,\n    max(income) as maxIncomeResult,\n    min(income) as minIncomeResult\nfrom source_table\ngroup by productId\n</code></pre>"},{"location":"Flink/Flink%20SQL/Examples/#1min","title":"\u7edf\u8ba1\u6bcf\u79cd\u5546\u54c1\u6bcf 1min \u7684\u7d2f\u8ba1\u9500\u552e\u989d","text":"<pre><code>create table source_table (\n    pid bigint,\n    income bigint,\n    time bigint,\n    -- \u7528\u4e8e\u5b9a\u4e49\u6570\u636e\u7684\u4e8b\u4ef6\u65f6\u95f4\u6233\n    row_timeas to_timestamp_ltz(time, 3),\n    -- \u7528\u4e8e\u6307\u5b9a\u6570\u636e\u7684 watermark\uff0c\u6700\u5927\u4e71\u5e8f\u65f6\u95f4\u4e3a 5 \u79d2\n    watermark for row_time as row_time - interval '5' second\n) with (\n    ...\n);\n\ncreate table sink_table (\n    pid bigint,\n    all bigint,\n    minutes string\n) with (\n    ...\n);\n\ninsert into sink_table\nselect\n    pid,\n    sum(income) as all,\n    TUMBLE_START(row_time, INTERVAL '1' MINUTE) as minutes\nfrom source_table\ngroup by pid,\n    TUMBLE(row_time, INTERVAL '1' MINUTE)\n</code></pre>"},{"location":"Flink/Flink%20SQL/Examples/#1min_1","title":"\u7edf\u8ba1\u6bcf\u79cd\u5546\u54c1\u6bcf 1min \u7684\u7d2f\u8ba1\u9500\u552e\u989d\uff08\u6eda\u52a8\u7a97\u53e3\u8868\u503c\u51fd\u6570\uff09","text":"<pre><code>create table source_table (\n    productId string,\n    income bigint,\n    userId bigint,\n    eventTime bigint,\n    -- \u6beb\u79d2\u7ea7\u522b\u7684 Unix \u65f6\u95f4\u6233\n    -- \u5b9a\u4e49\u4e8b\u4ef6\u65f6\u95f4\u5b57\u6bb5\uff0c\u5728\u672c\u5730 IDE \u6d4b\u8bd5\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u751f\u6210\u5408\u7406\u7684 rowTime\n    -- row_time as cast(current_timestamp as timestamp_ltz(3)),\n    row_time as to_timestamp_ltz(eventTime, 3),\n    -- \u7528\u4e8e\u6307\u5b9a\u6570\u636e\u7684 watermark\uff0c\u6700\u5927\u4e71\u5e8f\u65f6\u95f4\u4e3a 5 \u79d2\n    watermark for row_time as row_time - interval '5' second,\n    -- \u5b9a\u4e49\u5904\u7406\u65f6\u95f4\u5b57\u6bb5\n    proctime as proctime()\n) with ('connector' = 'datagen');\n\nwith tmp as (\n    -- \u7b2c\u4e00\u5c42\u6309\u7167 userId \u53d6\u6a21\uff0c\u5b9e\u73b0\u5206\u6876\u8ba1\u7b97\uff0c\u907f\u514d\u6570\u636e\u503e\u659c\n    select\n        productId,\n        sum(income) as bucketAll,\n        window_time as rtime\n    from\n        table(\n            TUMBLE(\n                TABLE source_table,\n                DESCRIPTOR(row_time),\n                INTERVAL '1' MINUTE\n            )\n        )\n    group by\n        window_start,\n        window_end,\n        window_time,\n        productId,\n        mod(userId, 100)\n)\n-- \u7b2c\u4e8c\u5c42\u7528\u4e8e\u5408\u6876\u8ba1\u7b97\nselect\n    productId,\n    sum(bucketAll) as allIncome,\n    window_start\nfrom\n    table (\n        TUMBLE(\n            TABLE tmp,\n            DESCRIPTOR(rtime),\n            INTERVAL '1' MINUTE\n        )\n    )\ngroup by\n    window_start,\n    window_end,\n    window_time,\n    productId\n</code></pre>"},{"location":"Flink/Flink%20SQL/Joins/","title":"Joins","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cjoins \u7684\u987a\u5e8f\u662f\u6ca1\u6709\u4f18\u5316\u7684\u3002\u8868\u7684 join \u987a\u5e8f\u662f\u5728 FROM \u4ece\u53e5\u6307\u5b9a\u7684\u3002\u53ef\u4ee5\u901a\u8fc7\u628a\u66f4\u65b0\u9891\u7387\u6700\u4f4e\u7684\u8868\u653e\u5728\u7b2c\u4e00\u4e2a\u3001\u9891\u7387\u6700\u9ad8\u7684\u653e\u5728\u6700\u540e\u8fd9\u79cd\u65b9\u5f0f\u6765\u5fae\u8c03 join \u67e5\u8be2\u7684\u6027\u80fd\u3002\u9700\u8981\u786e\u4fdd\u8868\u7684\u987a\u5e8f\u4e0d\u4f1a\u4ea7\u751f\u7b1b\u5361\u5c14\u79ef\uff0c\u56e0\u4e3a\u4e0d\u652f\u6301\u8fd9\u6837\u7684\u64cd\u4f5c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u67e5\u8be2\u5931\u8d25\u3002</p>"},{"location":"Flink/Flink%20SQL/Joins/#regular-joins","title":"Regular Joins","text":"<p>Regular join \u662f\u6700\u901a\u7528\u7684 join \u7c7b\u578b\u3002\u5728\u8fd9\u79cd join \u4e0b\uff0cjoin \u4e24\u4fa7\u8868\u7684\u4efb\u4f55\u65b0\u8bb0\u5f55\u6216\u53d8\u66f4\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u5e76\u4f1a\u5f71\u54cd\u6574\u4e2a join \u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff1a\u5982\u679c\u5de6\u8fb9\u6709\u4e00\u6761\u65b0\u7eaa\u5f55\uff0c\u5728 <code>Product.id</code> \u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u548c\u53f3\u8fb9\u8868\u7684\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u6240\u6709\u8bb0\u5f55\u8fdb\u884c join\u3002</p> <pre><code>SELECT *\nFROM Orders\nINNER JOIN Product\nON Orders.productId = Product.id\n</code></pre> <p>\u5bf9\u4e8e\u6d41\u5f0f\u67e5\u8be2\uff0cregular join \u7684\u8bed\u6cd5\u662f\u6700\u7075\u6d3b\u7684\uff0c\u5141\u8bb8\u4efb\u4f55\u7c7b\u578b\u7684\u66f4\u65b0\uff08\u63d2\u5165\u3001\u66f4\u65b0\u3001\u5220\u9664\uff09\u8f93\u5165\u8868\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u64cd\u4f5c\u5177\u6709\u91cd\u8981\u7684\u64cd\u4f5c\u610f\u4e49\uff1aFlink \u9700\u8981\u5c06 Join \u8f93\u5165\u7684\u4e24\u8fb9\u6570\u636e\u6c38\u8fdc\u4fdd\u6301\u5728\u72b6\u6001\u4e2d\u3002\u56e0\u6b64\uff0c\u8ba1\u7b97\u67e5\u8be2\u7ed3\u679c\u6240\u9700\u7684\u72b6\u6001\u53ef\u80fd\u4f1a\u65e0\u9650\u589e\u957f\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6240\u6709\u8f93\u5165\u8868\u7684\u8f93\u5165\u6570\u636e\u91cf\u3002\u4f60\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u5408\u9002\u7684\u72b6\u6001 time-to-live (TTL) \u914d\u7f6e\u6765\u9632\u6b62\u72b6\u6001\u8fc7\u5927\u3002\u6ce8\u610f\uff1a\u8fd9\u6837\u505a\u53ef\u80fd\u4f1a\u5f71\u54cd\u67e5\u8be2\u7684\u6b63\u786e\u6027\u3002</p> <pre><code>SELECT *\nFROM Orders\nLEFT JOIN Product\nON Orders.product_id = Product.id\n\nSELECT *\nFROM Orders\nRIGHT JOIN Product\nON Orders.product_id = Product.id\n\nSELECT *\nFROM Orders\nFULL OUTER JOIN Product\nON Orders.product_id = Product.id\n</code></pre>"},{"location":"Flink/Flink%20SQL/Joins/#interval-joins","title":"Interval Joins","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u7b26\u5408 join \u6761\u4ef6\u548c\u65f6\u95f4\u9650\u5236\u7684\u7b80\u5355\u7b1b\u5361\u5c14\u79ef\u3002Interval join \u9700\u8981\u81f3\u5c11\u4e00\u4e2a equi-join \u6761\u4ef6\u548c\u4e00\u4e2a join \u4e24\u8fb9\u90fd\u5305\u542b\u7684\u65f6\u95f4\u9650\u5b9a join \u6761\u4ef6\u3002\u8303\u56f4\u5224\u65ad\u53ef\u4ee5\u5b9a\u4e49\u6210\u5c31\u50cf\u4e00\u4e2a\u6761\u4ef6\uff08&lt;, &lt;=, &gt;=, &gt;\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a BETWEEN \u6761\u4ef6\uff0c\u6216\u8005\u4e24\u8fb9\u8868\u7684\u4e00\u4e2a\u76f8\u540c\u7c7b\u578b\uff08\u5373\uff1a\u5904\u7406\u65f6\u95f4 \u6216 \u4e8b\u4ef6\u65f6\u95f4\uff09\u7684\u65f6\u95f4\u5c5e\u6027\u7684\u7b49\u5f0f\u5224\u65ad\u3002</p> <p>\u4f8b\u5982\uff1a\u5982\u679c\u8ba2\u5355\u662f\u5728\u88ab\u63a5\u6536\u5230 4 \u5c0f\u65f6\u540e\u53d1\u8d27\uff0c\u8fd9\u4e2a\u67e5\u8be2\u4f1a\u628a\u6240\u6709\u8ba2\u5355\u548c\u5b83\u4eec\u76f8\u5e94\u7684 shipments join \u8d77\u6765\u3002</p> <pre><code>SELECT *\nFROM Orders o, Shipments s\nWHERE o.id = s.order_id\nAND o.order_time BETWEEN s.ship_time - INTERVAL '4' HOUR AND s.ship_time\n</code></pre> <p>\u4e0b\u9762\u5217\u4e3e\u4e86\u4e00\u4e9b\u6709\u6548\u7684 interval join \u65f6\u95f4\u6761\u4ef6\uff1a</p> <ul> <li><code>ltime = rtime</code></li> <li><code>ltime &gt;= rtime AND ltime &lt; rtime + INTERVAL '10' MINUTE</code></li> <li><code>ltime BETWEEN rtime - INTERVAL '10' SECOND AND rtime + INTERVAL '5' SECOND</code></li> </ul> <p>\u5bf9\u4e8e\u6d41\u5f0f\u67e5\u8be2\uff0c\u5bf9\u6bd4 regular join\uff0cinterval join \u53ea\u652f\u6301\u6709\u65f6\u95f4\u5c5e\u6027\u7684\u975e\u66f4\u65b0\u8868\u3002\u7531\u4e8e\u65f6\u95f4\u5c5e\u6027\u662f\u9012\u589e\u7684\uff0cFlink \u4ece\u72b6\u6001\u4e2d\u79fb\u9664\u65e7\u503c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002</p>"},{"location":"Flink/Flink%20SQL/Joins/#temporal-joins","title":"Temporal Joins","text":"<p>\u65f6\u6001\u8868\uff08Temporal table\uff09\u662f\u4e00\u4e2a\u968f\u65f6\u95f4\u53d8\u5316\u7684\u8868\uff1a\u5728 Flink \u4e2d\u88ab\u79f0\u4e3a\u52a8\u6001\u8868\u3002\u65f6\u6001\u8868\u4e2d\u7684\u884c\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u6bb5\u76f8\u5173\u8054\uff0c\u6240\u6709 Flink \u4e2d\u7684\u8868\u90fd\u662f\u65f6\u6001\u7684\uff08Temporal\uff09\u3002 \u65f6\u6001\u8868\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u7248\u672c\u7684\u8868\u5feb\u7167\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u53d8\u5316\u7684\u5386\u53f2\u8868\uff0c\u8ddf\u8e2a\u53d8\u5316\uff08\u4f8b\u5982\uff0c\u6570\u636e\u5e93\u53d8\u5316\u65e5\u5fd7\uff0c\u5305\u542b\u6240\u6709\u5feb\u7167\uff09\u6216\u4e00\u4e2a\u53d8\u5316\u7684\u7ef4\u5ea6\u8868\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5c06\u53d8\u66f4\u7269\u5316\u7684\u7ef4\u8868\uff08\u4f8b\u5982\uff0c\u5b58\u653e\u6700\u7ec8\u5feb\u7167\u7684\u6570\u636e\u8868\uff09\u3002</p>"},{"location":"Flink/Flink%20SQL/Joins/#temporal-join","title":"\u4e8b\u4ef6\u65f6\u95f4 Temporal Join","text":"<p>\u57fa\u4e8e\u4e8b\u4ef6\u65f6\u95f4\u7684 Temporal join \u5141\u8bb8\u5bf9\u7248\u672c\u8868\u8fdb\u884c join\u3002 \u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u8868\u53ef\u4ee5\u4f7f\u7528\u53d8\u5316\u7684\u5143\u6570\u636e\u6765\u4e30\u5bcc\uff0c\u5e76\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u68c0\u7d22\u5176\u5177\u4f53\u503c\u3002</p> <p>Temporal Joins \u4f7f\u7528\u4efb\u610f\u8868\uff08\u5de6\u4fa7\u8f93\u5165/\u63a2\u6d4b\u7aef\uff09\u7684\u6bcf\u4e00\u884c\u4e0e\u7248\u672c\u8868\u4e2d\u5bf9\u5e94\u7684\u884c\u8fdb\u884c\u5173\u8054\uff08\u53f3\u4fa7\u8f93\u5165/\u6784\u5efa\u7aef\uff09\u3002 Flink \u4f7f\u7528 SQL:2011 \u6807\u51c6 \u4e2d\u7684 FOR SYSTEM_TIME AS OF \u8bed\u6cd5\u53bb\u6267\u884c\u64cd\u4f5c\u3002 Temporal join \u7684\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>SELECT [column_list]\nFROM table1 [AS &lt;alias1&gt;]\n[LEFT] JOIN table2 FOR SYSTEM_TIME AS OF table1.{ proctime | rowtime } [AS &lt;alias2&gt;]\nON table1.column-name1 = table2.column-name1\n</code></pre> <p>\u6709\u4e86\u4e8b\u4ef6\u65f6\u95f4\u5c5e\u6027\uff08\u5373\uff1arowtime \u5c5e\u6027\uff09\uff0c\u5c31\u80fd\u68c0\u7d22\u5230\u8fc7\u53bb\u67d0\u4e2a\u65f6\u95f4\u70b9\u7684\u503c\u3002\u8fd9\u5141\u8bb8\u5728\u4e00\u4e2a\u5171\u540c\u7684\u65f6\u95f4\u70b9\u4e0a\u8fde\u63a5\u8fd9\u4e24\u4e2a\u8868\u3002\u7248\u672c\u8868\u5c06\u5b58\u50a8\u81ea\u6700\u540e\u4e00\u4e2a watermark \u4ee5\u6765\u7684\u6240\u6709\u7248\u672c\uff08\u6309\u65f6\u95f4\u6807\u8bc6\uff09\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u8ba2\u5355\u8868\uff0c\u6bcf\u4e2a\u8ba2\u5355\u90fd\u6709\u4e0d\u540c\u8d27\u5e01\u7684\u4ef7\u683c\u3002\u4e3a\u4e86\u6b63\u786e\u5730\u5c06\u8be5\u8868\u7edf\u4e00\u4e3a\u5355\u4e00\u8d27\u5e01\uff08\u5982\u7f8e\u5143\uff09\uff0c\u6bcf\u4e2a\u8ba2\u5355\u90fd\u9700\u8981\u4e0e\u4e0b\u5355\u65f6\u76f8\u5e94\u7684\u6c47\u7387\u76f8\u5173\u8054\u3002</p> <pre><code>-- Create a table of orders. This is a standard\n-- append-only dynamic table.\nCREATE TABLE orders (\n    order_id    STRING,\n    price       DECIMAL(32,2),\n    currency    STRING,\n    order_time  TIMESTAMP(3),\n    WATERMARK FOR order_time AS order_time - INTERVAL '15' SECOND\n) WITH (/* ... */);\n\n-- Define a versioned table of currency rates.\n-- This could be from a change-data-capture\n-- such as Debezium, a compacted Kafka topic, or any other\n-- way of defining a versioned table.\nCREATE TABLE currency_rates (\n    currency STRING,\n    conversion_rate DECIMAL(32, 2),\n    update_time TIMESTAMP(3) METADATA FROM `values.source.timestamp` VIRTUAL,\n    WATERMARK FOR update_time AS update_time - INTERVAL '15' SECOND,\n    PRIMARY KEY(currency) NOT ENFORCED\n) WITH (\n    'connector' = 'kafka',\n    'value.format' = 'debezium-json',\n   /* ... */\n);\n\nSELECT\n     order_id,\n     price,\n     orders.currency,\n     conversion_rate,\n     order_time\nFROM orders\nLEFT JOIN currency_rates FOR SYSTEM_TIME AS OF orders.order_time\nON orders.currency = currency_rates.currency;\n\norder_id  price  currency  conversion_rate  order_time\n========  =====  ========  ===============  =========\no_001     11.11  EUR       1.14             12:00:00\no_002     12.51  EUR       1.10             12:06:00\n</code></pre> <p>\u6ce8\u610f\uff1a\u4e8b\u4ef6\u65f6\u95f4 temporal join \u662f\u901a\u8fc7\u5de6\u548c\u53f3\u4e24\u4fa7\u7684 watermark \u89e6\u53d1\u7684\uff1b\u8fd9\u91cc\u7684 INTERVAL \u65f6\u95f4\u51cf\u6cd5\u7528\u4e8e\u7b49\u5f85\u540e\u7eed\u4e8b\u4ef6\uff0c\u4ee5\u786e\u4fdd join \u6ee1\u8db3\u9884\u671f\u3002\u8bf7\u786e\u4fdd join \u4e24\u8fb9\u8bbe\u7f6e\u4e86\u6b63\u786e\u7684 watermark\u3002</p> <p>\u6ce8\u610f\uff1a\u4e8b\u4ef6\u65f6\u95f4 temporal join \u9700\u8981\u5305\u542b\u4e3b\u952e\u76f8\u7b49\u7684\u6761\u4ef6\uff0c\u5373\uff1acurrency_rates \u8868\u7684\u4e3b\u952e <code>currency_rates.currency</code> \u5305\u542b\u5728\u6761\u4ef6 <code>orders.currency = currency_rates.currency</code> \u4e2d\u3002</p> <p>\u4e0e regular joins \u76f8\u6bd4\uff0c\u5c31\u7b97 build side\uff08\u4f8b\u5b50\u4e2d\u7684 currency_rates \u8868\uff09\u53d1\u751f\u53d8\u66f4\u4e86\uff0c\u4e4b\u524d\u7684 temporal table \u7684\u7ed3\u679c\u4e5f\u4e0d\u4f1a\u88ab\u5f71\u54cd\u3002\u4e0e interval joins \u5bf9\u6bd4\uff0ctemporal join \u6ca1\u6709\u5b9a\u4e49 join \u7684\u65f6\u95f4\u7a97\u53e3\u3002Probe side \uff08\u4f8b\u5b50\u4e2d\u7684 orders \u8868\uff09\u7684\u8bb0\u5f55\u603b\u662f\u5728 time \u5c5e\u6027\u6307\u5b9a\u7684\u65f6\u95f4\u4e0e build side \u7684\u7248\u672c\u884c\u8fdb\u884c\u8fde\u63a5\u3002\u56e0\u6b64\uff0cbuild side \u8868\u7684\u884c\u53ef\u80fd\u5df2\u7ecf\u8fc7\u65f6\u4e86\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4e0d\u518d\u88ab\u9700\u8981\u7684\u8bb0\u5f55\u7248\u672c\uff08\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e3b\u952e\uff09\u5c06\u4ece\u72b6\u6001\u4e2d\u5220\u9664\u3002</p>"},{"location":"Flink/Flink%20SQL/Joins/#temporal-join_1","title":"\u5904\u7406\u65f6\u95f4 Temporal Join","text":"<p>\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u7684 temporal join \u4f7f\u7528\u5904\u7406\u65f6\u95f4\u5c5e\u6027\u5c06\u6570\u636e\u4e0e\u5916\u90e8\u7248\u672c\u8868\uff08\u4f8b\u5982 mysql\u3001hbase\uff09\u7684\u6700\u65b0\u7248\u672c\u76f8\u5173\u8054\u3002</p> <p>\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u5904\u7406\u65f6\u95f4\u5c5e\u6027\uff0c\u8fd9\u4e2a join \u603b\u662f\u8fd4\u56de\u6700\u65b0\u7684\u503c\u3002\u53ef\u4ee5\u5c06 build side \u4e2d\u88ab\u67e5\u627e\u7684\u8868\u60f3\u8c61\u6210\u4e00\u4e2a\u5b58\u50a8\u6240\u6709\u8bb0\u5f55\u7b80\u5355\u7684 HashMap&lt;K,V&gt;\u3002\u8fd9\u79cd join \u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\uff0c\u5f53\u65e0\u6cd5\u5728 Flink \u4e2d\u5c06\u8868\u5177\u4f53\u5316\u4e3a\u52a8\u6001\u8868\u65f6\uff0c\u5b83\u5141\u8bb8 Flink \u76f4\u63a5\u9488\u5bf9\u5916\u90e8\u7cfb\u7edf\u5de5\u4f5c\u3002</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u5904\u7406\u65f6\u95f4 temporal join \u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u4e2a\u8ffd\u52a0\u8868 orders \u4e0e LatestRates \u8868\u8fdb\u884c join\u3002LatestRates \u662f\u4e00\u4e2a\u6700\u65b0\u6c47\u7387\u7684\u7ef4\u8868\uff0c\u6bd4\u5982 HBase \u8868\uff0c\u5728 10:15\uff0c10:30\uff0c10:52 \u8fd9\u4e9b\u65f6\u95f4\uff0cLatestRates \u8868\u7684\u6570\u636e\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>10:15&gt; SELECT * FROM LatestRates;\n\ncurrency   rate\n======== ======\nUS Dollar   102\nEuro        114\nYen           1\n\n10:30&gt; SELECT * FROM LatestRates;\n\ncurrency   rate\n======== ======\nUS Dollar   102\nEuro        114\nYen           1\n\n10:52&gt; SELECT * FROM LatestRates;\n\ncurrency   rate\n======== ======\nUS Dollar   102\nEuro        116     &lt;==== changed from 114 to 116\nYen           1\n</code></pre> <p>Orders \u8868\u793a\u652f\u4ed8\u91d1\u989d\u7684 amount \u548c currency \u7684\u8ffd\u52a0\u8868\u3002\u4f8b\u5982\uff1a\u5728 10:15\uff0c\u6709\u4e00\u4e2a\u91d1\u989d\u4e3a 2 Euro \u7684 order\u3002</p> <pre><code>SELECT * FROM Orders;\n\namount currency\n====== =========\n     2 Euro             &lt;== arrived at time 10:15\n     1 US Dollar        &lt;== arrived at time 10:30\n     2 Euro             &lt;== arrived at time 10:52\n</code></pre> <p>\u7ed9\u51fa\u4e0b\u9762\u8fd9\u4e9b\u8868\uff0c\u6211\u4eec\u5e0c\u671b\u6240\u6709 Orders \u8868\u7684\u8bb0\u5f55\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7edf\u4e00\u7684\u8d27\u5e01\u3002</p> <pre><code>amount currency     rate   amount*rate\n====== ========= ======= ============\n     2 Euro          114          228    &lt;== arrived at time 10:15\n     1 US Dollar     102          102    &lt;== arrived at time 10:30\n     2 Euro          116          232    &lt;== arrived at time 10:52\n</code></pre> <p>\u76ee\u524d\uff0ctemporal join \u8fd8\u4e0d\u652f\u6301\u4e0e\u4efb\u610f view/table \u7684\u6700\u65b0\u7248\u672c join \u65f6\u4f7f\u7528 FOR SYSTEM_TIME AS OF \u8bed\u6cd5\u3002\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528 temporal table function \u8bed\u6cd5\u6765\u5b9e\u73b0\uff08\u65f6\u6001\u8868\u51fd\u6570\uff09:</p> <pre><code>SELECT\n    o_amount, r_rate\nFROM\n    Orders,\n    LATERAL TABLE (Rates(o_proctime))\nWHERE\n    r_currency = o_currency\n</code></pre> <p>processing-time \u7684\u7ed3\u679c\u662f\u4e0d\u786e\u5b9a\u7684\u3002processing-time temporal join \u5e38\u5e38\u7528\u5728\u4f7f\u7528\u5916\u90e8\u7cfb\u7edf\u6765\u4e30\u5bcc\u6d41\u7684\u6570\u636e\u3002\uff08\u4f8b\u5982\u7ef4\u8868\uff09</p> <p>\u4e0e regular joins \u7684\u5dee\u5f02\uff1a\u5c31\u7b97 build side\uff08\u4f8b\u5b50\u4e2d\u7684 currency_rates \u8868\uff09\u53d1\u751f\u53d8\u66f4\u4e86\uff0c\u4e4b\u524d\u7684 temporal table \u7ed3\u679c\u4e5f\u4e0d\u4f1a\u88ab\u5f71\u54cd\u3002</p> <p>\u4e0e interval joins \u7684\u5dee\u5f02\uff1atemporal join \u6ca1\u6709\u5b9a\u4e49\u6570\u636e\u8fde\u63a5\u7684\u65f6\u95f4\u7a97\u53e3\uff0c\u5373\uff1a\u65e7\u6570\u636e\u6ca1\u5b58\u50a8\u5728\u72b6\u6001\u4e2d\u3002</p>"},{"location":"Flink/Flink%20SQL/Joins/#lookup-join","title":"Lookup Join","text":"<p>lookup join \u901a\u5e38\u7528\u4e8e\u4f7f\u7528\u4ece\u5916\u90e8\u7cfb\u7edf\u67e5\u8be2\u7684\u6570\u636e\u6765\u4e30\u5bcc\u8868\u3002join \u8981\u6c42\u4e00\u4e2a\u8868\u5177\u6709\u5904\u7406\u65f6\u95f4\u5c5e\u6027\uff0c\u53e6\u4e00\u4e2a\u8868\u7531\u67e5\u627e\u6e90\u8fde\u63a5\u5668\uff08lookup source connnector\uff09\u652f\u6301\u3002</p> <p>lookup join \u548c\u4e0a\u9762\u7684 \u5904\u7406\u65f6\u95f4 Temporal Join \u8bed\u6cd5\u76f8\u540c\uff0c\u53f3\u8868\u4f7f\u7528\u67e5\u627e\u6e90\u8fde\u63a5\u5668\u652f\u6301\u3002</p> <pre><code>-- Customers is backed by the JDBC connector and can be used for lookup joins\nCREATE TEMPORARY TABLE Customers (\n  id INT,\n  name STRING,\n  country STRING,\n  zip STRING\n) WITH (\n  'connector' = 'jdbc',\n  'url' = 'jdbc:mysql://mysqlhost:3306/customerdb',\n  'table-name' = 'customers'\n);\n\n-- enrich each order with customer information\nSELECT o.order_id, o.total, c.country, c.zip\nFROM Orders AS o\n  JOIN Customers FOR SYSTEM_TIME AS OF o.proc_time AS c\n    ON o.customer_id = c.id;\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cOrders \u8868\u7531\u4fdd\u5b58\u5728 MySQL \u6570\u636e\u5e93\u4e2d\u7684 Customers \u8868\u6570\u636e\u6765\u4e30\u5bcc\u3002\u5e26\u6709\u540e\u7eed process time \u5c5e\u6027\u7684 FOR SYSTEM_TIME AS OF \u5b50\u53e5\u786e\u4fdd\u5728\u8054\u63a5\u8fd0\u7b97\u7b26\u5904\u7406 Orders \u884c\u65f6\uff0cOrders \u7684\u6bcf\u4e00\u884c\u90fd\u4e0e join \u6761\u4ef6\u5339\u914d\u7684 Customer \u884c\u8fde\u63a5\u3002\u5b83\u8fd8\u9632\u6b62\u8fde\u63a5\u7684 Customer \u8868\u5728\u672a\u6765\u53d1\u751f\u66f4\u65b0\u65f6\u53d8\u66f4\u8fde\u63a5\u7ed3\u679c\u3002lookup join \u8fd8\u9700\u8981\u4e00\u4e2a\u5f3a\u5236\u7684\u76f8\u7b49\u8fde\u63a5\u6761\u4ef6\uff0c\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\u662f <code>o.customer_id = c.id</code>\u3002</p>"},{"location":"Flink/Flink%20SQL/Top-N/","title":"Top-N \u4e0e \u7a97\u53e3 Top-N","text":""},{"location":"Flink/Flink%20SQL/Top-N/#top-n","title":"Top-N","text":"<p>Top-N \u67e5\u8be2\u53ef\u4ee5\u6839\u636e\u6307\u5b9a\u5217\u6392\u5e8f\u540e\u83b7\u5f97\u524d N \u4e2a\u6700\u5c0f\u6216\u6700\u5927\u503c\u3002\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u96c6\u90fd\u88ab\u8ba4\u4e3a\u662f Top-N \u67e5\u8be2\u3002\u5728\u9700\u8981\u4ece\u6279\u8868\u6216\u6d41\u8868\u4e2d\u4ec5\u663e\u793a N \u4e2a\u5e95\u90e8\u6216 N \u4e2a\u9876\u90e8\u8bb0\u5f55\u65f6\uff0cTop-N \u67e5\u8be2\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u5e76\u4e14\u8be5\u7ed3\u679c\u96c6\u8fd8\u53ef\u7528\u4e8e\u8fdb\u4e00\u6b65\u5206\u6790\u3002</p> <p>Flink \u4f7f\u7528 OVER \u7a97\u53e3\u5b50\u53e5\u548c\u8fc7\u6ee4\u6761\u4ef6\u7684\u7ec4\u5408\u6765\u8868\u8fbe\u4e00\u4e2a Top-N \u67e5\u8be2\u3002\u501f\u52a9 OVER \u7a97\u53e3\u7684 PARTITION BY \u5b50\u53e5\u80fd\u529b\uff0cFlink \u4e5f\u80fd\u652f\u6301\u5206\u7ec4 Top-N\u3002\u4f8b\u5982\uff1a\u5b9e\u65f6\u663e\u793a\u6bcf\u4e2a\u5206\u7c7b\u4e0b\u9500\u552e\u989d\u6700\u9ad8\u7684\u4e94\u4e2a\u4ea7\u54c1\u3002\u5bf9\u4e8e\u6279\u5904\u7406\u548c\u6d41\u5904\u7406\u6a21\u5f0f\u7684 SQL\uff0c\u90fd\u652f\u6301 Top-N \u67e5\u8be2\u3002</p> <p>\u4e0b\u9762\u5c55\u793a\u4e86 Top-N \u7684\u8bed\u6cd5\uff1a</p> <pre><code>SELECT [column_list]\nFROM (\n   SELECT [column_list],\n     ROW_NUMBER() OVER ([PARTITION BY col1[, col2...]]\n       ORDER BY col1 [asc|desc][, col2 [asc|desc]...]) AS rownum\n   FROM table_name)\nWHERE rownum &lt;= N [AND conditions]\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>ROW_NUMBER()</code>\uff1a\u6839\u636e\u5206\u533a\u6570\u636e\u7684\u6392\u5e8f\uff0c\u4e3a\u6bcf\u4e00\u884c\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u4e14\u8fde\u7eed\u7684\u5e8f\u53f7\uff0c\u4ece 1 \u5f00\u59cb\u3002\u76ee\u524d\uff0c\u53ea\u652f\u6301 ROW_NUMBER \u4f5c\u4e3a OVER \u7a97\u53e3\u51fd\u6570\u3002\u672a\u6765\u4f1a\u652f\u6301 <code>RANK()</code> \u548c <code>DENSE_RANK()</code>\u3002</li> <li><code>PARTITION BY col1[, col2...]</code>\uff1a\u6307\u5b9a\u5206\u533a\u5b57\u6bb5\u3002\u6bcf\u4e2a\u5206\u533a\u90fd\u4f1a\u6709\u4e00\u4e2a Top-N \u7684\u7ed3\u679c\u3002</li> <li><code>ORDER BY col1 [asc|desc][, col2 [asc|desc]...]</code>\uff1a \u6307\u5b9a\u6392\u5e8f\u5217\u3002 \u6bcf\u4e2a\u5217\u7684\u6392\u5e8f\u7c7b\u578b\uff08ASC/DESC\uff09\u53ef\u4ee5\u4e0d\u540c\u3002</li> <li><code>WHERE rownum &lt;= N</code>: Flink \u9700\u8981 rownum &lt;= N \u624d\u80fd\u8bc6\u522b\u6b64\u67e5\u8be2\u662f Top-N \u67e5\u8be2\u3002 N \u8868\u793a\u5c06\u8981\u4fdd\u7559 N \u4e2a\u6700\u5927\u6216\u6700\u5c0f\u6570\u636e\u3002</li> <li><code>[AND conditions]</code>: \u53ef\u4ee5\u5728 WHERE \u5b50\u53e5\u4e2d\u6dfb\u52a0\u5176\u4ed6\u6761\u4ef6\uff0c\u4f46\u662f\u8fd9\u4e9b\u5176\u4ed6\u6761\u4ef6\u548c rownum &lt;= N \u9700\u8981\u4f7f\u7528 AND \u7ed3\u5408\u3002</li> </ul> <p>Note</p> <p>Top-N \u67e5\u8be2\u662f\u7ed3\u679c\u66f4\u65b0\u7684\u3002Flink SQL \u4f1a\u6839\u636e ORDER BY \u7684\u5b57\u6bb5\u5bf9\u8f93\u5165\u7684\u6570\u636e\u6d41\u8fdb\u884c\u6392\u5e8f\uff0c\u6240\u4ee5\u5982\u679c\u524d N \u6761\u8bb0\u5f55\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u90a3\u4e48\u53d8\u5316\u540e\u7684\u8bb0\u5f55\u5c06\u4f5c\u4e3a\u56de\u64a4/\u66f4\u65b0\u8bb0\u5f55\u53d1\u9001\u5230\u4e0b\u6e38\u3002\u5efa\u8bae\u4f7f\u7528\u4e00\u4e2a\u652f\u6301\u66f4\u65b0\u7684\u5b58\u50a8\u4f5c\u4e3a Top-N \u67e5\u8be2\u7684\u7ed3\u679c\u8868\u3002\u6b64\u5916\uff0c\u5982\u679c Top-N \u6761\u8bb0\u5f55\u9700\u8981\u5b58\u50a8\u5728\u5916\u90e8\u5b58\u50a8\u4e2d\uff0c\u7ed3\u679c\u8868\u5e94\u8be5\u4e0e Top-N \u67e5\u8be2\u7684\u552f\u4e00\u952e\u4fdd\u6301\u4e00\u81f4\u3002</p> <p>\u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5728\u6d41\u5f0f\u8868\u4e0a\u6307\u5b9a Top-N SQL \u67e5\u8be2 \u300c\u5b9e\u65f6\u663e\u793a\u6bcf\u4e2a\u5206\u7c7b\u4e0b\u9500\u552e\u989d\u6700\u9ad8\u7684\u4e94\u4e2a\u4ea7\u54c1\u300d\u3002</p> <pre><code>CREATE TABLE ShopSales (\n  product_id   STRING,\n  category     STRING,\n  product_name STRING,\n  sales        BIGINT\n) WITH (...);\n\nSELECT *\nFROM (\n  SELECT *,\n    ROW_NUMBER() OVER (PARTITION BY category ORDER BY sales DESC) AS row_num\n  FROM ShopSales)\nWHERE row_num &lt;= 5\n</code></pre>"},{"location":"Flink/Flink%20SQL/Top-N/#_1","title":"\u65e0\u6392\u540d\u8f93\u51fa\u4f18\u5316","text":"<p>\u5982\u4e0a\u6240\u8ff0\uff0crownum \u5c06\u4f5c\u4e3a\u552f\u4e00\u952e\u7684\u4e00\u4e2a\u5b57\u6bb5\u5199\u5165\u5230\u7ed3\u679c\u8868\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5927\u91cf\u6570\u636e\u5199\u5165\u5230\u7ed3\u679c\u8868\u3002\u4f8b\u5982\uff0c\u6392\u540d\u7b2c\u4e5d\uff08\u6bd4\u5982 product-1001\uff09\u7684\u8bb0\u5f55\u66f4\u65b0\u4e3a 1\uff0c\u6392\u540d 1 \u5230 9 \u7684\u6240\u6709\u8bb0\u5f55\u90fd\u4f1a\u4f5c\u4e3a\u66f4\u65b0\u4fe1\u606f\u9010\u6761\u5199\u5165\u5230\u7ed3\u679c\u8868\u3002\u5982\u679c\u7ed3\u679c\u8868\u6536\u5230\u592a\u591a\u7684\u6570\u636e\uff0c\u5b83\u5c06\u4f1a\u6210\u4e3a\u8fd9\u4e2a SQL \u4efb\u52a1\u7684\u74f6\u9888\u3002</p> <p>\u4f18\u5316\u7684\u65b9\u6cd5\u662f\u5728 Top-N \u67e5\u8be2\u7684\u5916\u5c42 SELECT \u5b50\u53e5\u4e2d\u7701\u7565 rownum \u5b57\u6bb5\u3002\u56e0\u4e3a\u901a\u5e38 Top-N \u7684\u6570\u636e\u91cf\u4e0d\u5927\uff0c\u6d88\u8d39\u7aef\u5c31\u53ef\u4ee5\u5feb\u901f\u5730\u6392\u5e8f\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\u5c31\u6ca1\u6709 rownum \u5b57\u6bb5\uff0c\u53ea\u9700\u8981\u53d1\u9001\u53d8\u66f4\u6570\u636e\uff08product-1001\uff09\u5230\u4e0b\u6e38\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u7ed3\u679c\u8868\u5f88\u591a IO\u3002</p> <p>\u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u7528\u8fd9\u79cd\u65b9\u6cd5\u600e\u6837\u53bb\u4f18\u5316\u4e0a\u9762\u7684 Top-N\uff1a</p> <pre><code>-- omit row_num field from the output\nSELECT product_id, category, product_name, sales\nFROM (\n  SELECT *,\n    ROW_NUMBER() OVER (PARTITION BY category ORDER BY sales DESC) AS row_num\n  FROM ShopSales)\nWHERE row_num &lt;= 5\n</code></pre>"},{"location":"Flink/Flink%20SQL/Top-N/#top-n_1","title":"\u7a97\u53e3 Top-N","text":"<p>\u7a97\u53e3 Top-N \u662f\u7279\u6b8a\u7684 Top-N\uff0c\u5b83\u8fd4\u56de\u6bcf\u4e2a\u5206\u533a\u952e\u7684\u6bcf\u4e2a\u7a97\u53e3\u7684 N \u4e2a\u6700\u5c0f\u6216\u6700\u5927\u503c\u3002</p> <p>\u4e0e\u666e\u901a Top-N \u4e0d\u540c\uff0c\u7a97\u53e3 Top-N \u53ea\u5728\u7a97\u53e3\u6700\u540e\u8fd4\u56de\u6c47\u603b\u7684 Top-N \u6570\u636e\uff0c\u4e0d\u4f1a\u4ea7\u751f\u4e2d\u95f4\u7ed3\u679c\u3002\u7a97\u53e3 Top-N \u4f1a\u5728\u7a97\u53e3\u7ed3\u675f\u540e\u6e05\u9664\u4e0d\u9700\u8981\u7684\u4e2d\u95f4\u72b6\u6001\u3002</p> <p>\u56e0\u6b64\uff0c\u7a97\u53e3 Top-N \u9002\u7528\u4e8e\u7528\u6237\u4e0d\u9700\u8981\u6bcf\u6761\u6570\u636e\u90fd\u66f4\u65b0 Top-N \u7ed3\u679c\u7684\u573a\u666f\uff0c\u76f8\u5bf9\u666e\u901a Top-N \u6765\u8bf4\u6027\u80fd\u66f4\u597d\u3002\u901a\u5e38\uff0c\u7a97\u53e3 Top-N \u76f4\u63a5\u7528\u4e8e \u7a97\u53e3\u8868\u503c\u51fd\u6570\u4e0a\u3002\u53e6\u5916\uff0c\u7a97\u53e3 Top-N \u53ef\u4ee5\u7528\u4e8e\u57fa\u4e8e \u7a97\u53e3\u8868\u503c\u51fd\u6570 \u7684\u64cd\u4f5c\u4e4b\u4e0a\uff0c\u6bd4\u5982\u7a97\u53e3\u805a\u5408\uff0c\u7a97\u53e3 Top-N \u548c\u7a97\u53e3\u5173\u8054\u3002</p> <p>\u7a97\u53e3 Top-N \u7684\u8bed\u6cd5\u548c\u666e\u901a\u7684 Top-N \u76f8\u540c\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u7a97\u53e3 Top-N \u9700\u8981 PARTITION BY \u5b50\u53e5\u5305\u542b\u7a97\u53e3\u8868\u503c\u51fd\u6570\u6216\u7a97\u53e3\u805a\u5408\u4ea7\u751f\u7684 <code>window_start</code> \u548c <code>window_end</code>\u3002\u5426\u5219\u4f18\u5316\u5668\u65e0\u6cd5\u7ffb\u8bd1\u3002</p> <p>\u4e0b\u9762\u5c55\u793a\u4e86\u7a97\u53e3 Top-N \u7684\u8bed\u6cd5\uff1a</p> <pre><code>SELECT [column_list]\nFROM (\n   SELECT [column_list],\n     ROW_NUMBER() OVER (PARTITION BY window_start, window_end [, col_key1...]\n       ORDER BY col1 [asc|desc][, col2 [asc|desc]...]) AS rownum\n   FROM table_name) -- relation applied windowing TVF\nWHERE rownum &lt;= N [AND conditions]\n</code></pre> <p>\u793a\u4f8b\u4e00\uff1a\u5728\u7a97\u53e3\u805a\u5408\u540e\u8fdb\u884c\u7a97\u53e3 Top-N</p> <p>\u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5728 10 \u5206\u949f\u7684\u6eda\u52a8\u7a97\u53e3\u4e0a\u8ba1\u7b97\u9500\u552e\u989d\u4f4d\u5217\u524d\u4e09\u7684\u4f9b\u5e94\u5546\u3002</p> <pre><code>-- tables must have time attribute, e.g. `bidtime` in this table\nFlink SQL&gt; desc Bid;\n+-------------+------------------------+------+-----+--------+---------------------------------+\n|        name |                   type | null | key | extras |                       watermark |\n+-------------+------------------------+------+-----+--------+---------------------------------+\n|     bidtime | TIMESTAMP(3) *ROWTIME* | true |     |        | `bidtime` - INTERVAL '1' SECOND |\n|       price |         DECIMAL(10, 2) | true |     |        |                                 |\n|        item |                 STRING | true |     |        |                                 |\n| supplier_id |                 STRING | true |     |        |                                 |\n+-------------+------------------------+------+-----+--------+---------------------------------+\n\nFlink SQL&gt; SELECT * FROM Bid;\n+------------------+-------+------+-------------+\n|          bidtime | price | item | supplier_id |\n+------------------+-------+------+-------------+\n| 2020-04-15 08:05 |  4.00 |    A |   supplier1 |\n| 2020-04-15 08:06 |  4.00 |    C |   supplier2 |\n| 2020-04-15 08:07 |  2.00 |    G |   supplier1 |\n| 2020-04-15 08:08 |  2.00 |    B |   supplier3 |\n| 2020-04-15 08:09 |  5.00 |    D |   supplier4 |\n| 2020-04-15 08:11 |  2.00 |    B |   supplier3 |\n| 2020-04-15 08:13 |  1.00 |    E |   supplier1 |\n| 2020-04-15 08:15 |  3.00 |    H |   supplier2 |\n| 2020-04-15 08:17 |  6.00 |    F |   supplier5 |\n+------------------+-------+------+-------------+\n\nFlink SQL&gt; SELECT *\n  FROM (\n    SELECT *, ROW_NUMBER() OVER (PARTITION BY window_start, window_end ORDER BY price DESC) as rownum\n    FROM (\n      SELECT window_start, window_end, supplier_id, SUM(price) as price, COUNT(*) as cnt\n      FROM TABLE(\n        TUMBLE(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '10' MINUTES))\n      GROUP BY window_start, window_end, supplier_id\n    )\n  ) WHERE rownum &lt;= 3;\n+------------------+------------------+-------------+-------+-----+--------+\n|     window_start |       window_end | supplier_id | price | cnt | rownum |\n+------------------+------------------+-------------+-------+-----+--------+\n| 2020-04-15 08:00 | 2020-04-15 08:10 |   supplier1 |  6.00 |   2 |      1 |\n| 2020-04-15 08:00 | 2020-04-15 08:10 |   supplier4 |  5.00 |   1 |      2 |\n| 2020-04-15 08:00 | 2020-04-15 08:10 |   supplier2 |  4.00 |   1 |      3 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |   supplier5 |  6.00 |   1 |      1 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |   supplier2 |  3.00 |   1 |      2 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |   supplier3 |  2.00 |   1 |      3 |\n+------------------+------------------+-------------+-------+-----+--------+\n</code></pre> <p>\u793a\u4f8b\u4e8c\uff1a\u5728\u7a97\u53e3\u8868\u503c\u51fd\u6570\u540e\u8fdb\u884c\u7a97\u53e3 Top-N</p> <p>\u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5728 10 \u5206\u949f\u7684\u6eda\u52a8\u7a97\u53e3\u4e0a\u8ba1\u7b97\u4ef7\u683c\u4f4d\u5217\u524d\u4e09\u7684\u6570\u636e\u3002</p> <pre><code>Flink SQL&gt; SELECT *\n  FROM (\n    SELECT *, ROW_NUMBER() OVER (PARTITION BY window_start, window_end ORDER BY price DESC) as rownum\n    FROM TABLE(\n               TUMBLE(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '10' MINUTES))\n  ) WHERE rownum &lt;= 3;\n+------------------+-------+------+-------------+------------------+------------------+--------+\n|          bidtime | price | item | supplier_id |     window_start |       window_end | rownum |\n+------------------+-------+------+-------------+------------------+------------------+--------+\n| 2020-04-15 08:05 |  4.00 |    A |   supplier1 | 2020-04-15 08:00 | 2020-04-15 08:10 |      2 |\n| 2020-04-15 08:06 |  4.00 |    C |   supplier2 | 2020-04-15 08:00 | 2020-04-15 08:10 |      3 |\n| 2020-04-15 08:09 |  5.00 |    D |   supplier4 | 2020-04-15 08:00 | 2020-04-15 08:10 |      1 |\n| 2020-04-15 08:11 |  2.00 |    B |   supplier3 | 2020-04-15 08:10 | 2020-04-15 08:20 |      3 |\n| 2020-04-15 08:15 |  3.00 |    H |   supplier2 | 2020-04-15 08:10 | 2020-04-15 08:20 |      2 |\n| 2020-04-15 08:17 |  6.00 |    F |   supplier5 | 2020-04-15 08:10 | 2020-04-15 08:20 |      1 |\n+------------------+-------+------+-------------+------------------+------------------+--------+\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E6%A8%A1%E5%BC%8F%E6%A3%80%E6%B5%8B/","title":"\u6a21\u5f0f\u68c0\u6d4b","text":"<p>\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u60c5\u666f\u4e2d\u3002Flink \u63d0\u4f9b\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u5927\u91cf\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002</p> <p>\u6a21\u5f0f\u68c0\u6d4b</p>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/","title":"\u6d41\u5f0f\u6982\u5ff5","text":"<p>Apache Flink \u6709\u4e24\u79cd\u5173\u7cfb\u578b API \u6765\u505a\u6d41\u6279\u7edf\u4e00\u5904\u7406\uff1aTable API \u548c SQL\u3002Table API \u662f\u7528\u4e8e Scala \u548c Java \u8bed\u8a00\u7684\u67e5\u8be2 API\uff0c\u5b83\u53ef\u4ee5\u7528\u4e00\u79cd\u975e\u5e38\u76f4\u89c2\u7684\u65b9\u5f0f\u6765\u7ec4\u5408\u4f7f\u7528\u9009\u53d6\u3001\u8fc7\u6ee4\u3001join \u7b49\u5173\u7cfb\u578b\u7b97\u5b50\u3002Flink SQL \u662f\u57fa\u4e8e Apache Calcite \u6765\u5b9e\u73b0\u7684\u6807\u51c6 SQL\u3002\u65e0\u8bba\u8f93\u5165\u662f\u8fde\u7eed\u7684\uff08\u6d41\u5f0f\uff09\u8fd8\u662f\u6709\u754c\u7684\uff08\u6279\u5904\u7406\uff09\uff0c\u5728\u4e24\u4e2a\u63a5\u53e3\u4e2d\u6307\u5b9a\u7684\u67e5\u8be2\u90fd\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\uff0c\u5e76\u6307\u5b9a\u76f8\u540c\u7684\u7ed3\u679c\u3002</p>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#tableenvironment","title":"TableEnvironment","text":"<p>TableEnvironment \u662f Table API \u548c SQL \u7684\u6838\u5fc3\u6982\u5ff5\u3002\u5b83\u627f\u62c5\u7740\u4ee5\u4e0b\u804c\u8d23\uff1a</p> <ul> <li>\u5728\u5185\u90e8\u7684 catalog \u4e2d\u6ce8\u518c Table</li> <li>\u6ce8\u518c\u5916\u90e8\u7684 catalog</li> <li>\u52a0\u8f7d\u53ef\u63d2\u62d4\u6a21\u5757</li> <li>\u6267\u884c SQL \u67e5\u8be2</li> <li>\u6ce8\u518c\u81ea\u5b9a\u4e49\u51fd\u6570\uff08scalar\u3001table \u6216 aggregation\uff09</li> <li>\u8d1f\u8d23 DataStream \u548c Table \u4e4b\u95f4\u7684\u8f6c\u6362\uff08\u9762\u5411 StreamTableEnvironment\uff09</li> </ul> <p>Table \u603b\u662f\u4e0e\u7279\u5b9a\u7684 TableEnvironment \u7ed1\u5b9a\u3002\u4e0d\u80fd\u5728\u540c\u4e00\u6761\u67e5\u8be2\u4e2d\u4f7f\u7528\u4e0d\u540c TableEnvironment \u4e2d\u7684\u8868\uff0c\u4f8b\u5982\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c join \u6216 union \u64cd\u4f5c\u3002</p> <p>TableEnvironment \u53ef\u4ee5\u901a\u8fc7\u9759\u6001\u65b9\u6cd5 <code>TableEnvironment.create()</code> \u521b\u5efa\uff1a</p> <pre><code>import org.apache.flink.table.api.EnvironmentSettings;\nimport org.apache.flink.table.api.TableEnvironment;\n\nEnvironmentSettings settings = EnvironmentSettings\n    .newInstance()\n    .inStreamingMode()\n    //.inBatchMode()\n    .build();\n\nTableEnvironment tEnv = TableEnvironment.create(settings);\n</code></pre> <p>\u6216\u8005\uff0c\u7528\u6237\u53ef\u4ee5\u4ece\u73b0\u6709\u7684 StreamExecutionEnvironment \u521b\u5efa\u4e00\u4e2a StreamTableEnvironment \u4e0e DataStream API \u4e92\u64cd\u4f5c\uff1a</p> <pre><code>import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.table.api.EnvironmentSettings;\nimport org.apache.flink.table.api.bridge.java.StreamTableEnvironment;\n\nStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\nStreamTableEnvironment tEnv = StreamTableEnvironment.create(env);\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#sql","title":"\u7ffb\u8bd1 SQL \u4e0e\u67e5\u8be2\u4f18\u5316","text":"<p>\u4e0d\u8bba\u8f93\u5165\u6570\u636e\u6e90\u662f\u6d41\u5f0f\u7684\u8fd8\u662f\u6279\u5f0f\u7684\uff0cTable API \u548c SQL \u67e5\u8be2\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210 DataStream \u7a0b\u5e8f\u3002\u67e5\u8be2\u5728\u5185\u90e8\u8868\u793a\u4e3a\u903b\u8f91\u67e5\u8be2\u8ba1\u5212\uff0c\u5e76\u88ab\u7ffb\u8bd1\u6210\u4e24\u4e2a\u9636\u6bb5\uff1a</p> <ul> <li>\u4f18\u5316\u903b\u8f91\u6267\u884c\u8ba1\u5212</li> <li>\u7ffb\u8bd1\u6210 DataStream \u7a0b\u5e8f</li> </ul> <p>Apache Flink \u4f7f\u7528\u5e76\u6269\u5c55\u4e86 Apache Calcite \u6765\u6267\u884c\u590d\u6742\u7684\u67e5\u8be2\u4f18\u5316\uff0c\u6db5\u76d6\u4e86\u4e00\u7cfb\u5217\u57fa\u4e8e\u89c4\u5219\u548c\u6210\u672c\u7684\u4f18\u5316\uff0c\u5177\u4f53\u5982\u4e0b\uff1a</p> <ul> <li>\u57fa\u4e8e Apache Calcite \u7684\u5b50\u67e5\u8be2\u89e3\u76f8\u5173\uff1a\u7528\u4e8e\u7279\u5b9a\u7684\u5b50\u67e5\u8be2\u5904\u7406\u4f18\u5316\u3002</li> <li>\u6295\u5f71\u526a\u88c1\uff1a\u5bf9\u6295\u5f71\u76f8\u5173\u64cd\u4f5c\u8fdb\u884c\u4f18\u5316\u526a\u88c1\u3002</li> <li>\u5206\u533a\u526a\u88c1\uff1a\u9488\u5bf9\u5206\u533a\u76f8\u5173\u5185\u5bb9\u5b9e\u65bd\u4f18\u5316\u5904\u7406\u3002</li> <li>\u8fc7\u6ee4\u5668\u4e0b\u63a8\uff1a\u5c06\u8fc7\u6ee4\u5668\u8fdb\u884c\u5408\u7406\u4e0b\u63a8\u4ee5\u4f18\u5316\u6574\u4f53\u6d41\u7a0b\u3002</li> <li> <p>\u5b50\u8ba1\u5212\u6d88\u9664\u91cd\u590d\u6570\u636e\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff1a\u901a\u8fc7\u6d88\u9664\u5b50\u8ba1\u5212\u4e2d\u7684\u91cd\u590d\u6570\u636e\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u91cd\u590d\u8fd0\u7b97\u3002</p> </li> <li> <p>\u7279\u6b8a\u5b50\u67e5\u8be2\u91cd\u5199\uff1a\u5305\u542b\u4e24\u90e8\u5206\u5185\u5bb9\uff0c</p> </li> </ul> <ul> <li>\u5c06 IN \u548c EXISTS \u8f6c\u6362\u4e3a left semi-joins\uff1a\u5b9e\u73b0\u7279\u5b9a\u903b\u8f91\u4e0b\u7684\u8f6c\u6362\u4f18\u5316\u3002</li> </ul> <ul> <li>\u5c06 NOT IN \u548c NOT EXISTS \u8f6c\u6362\u4e3a left anti-join\uff1a\u5b8c\u6210\u5bf9\u5e94\u903b\u8f91\u7684\u8f6c\u6362\uff0c\u63d0\u5347\u67e5\u8be2\u6548\u7387\u3002</li> </ul> <ul> <li>\u53ef\u9009 join \u91cd\u65b0\u6392\u5e8f\uff1a\u901a\u8fc7 <code>table.optimizer.join-reorder-enabled</code> \u542f\u7528\uff0c\u53ef\u5bf9 join \u64cd\u4f5c\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\u4f18\u5316\u3002</li> </ul> <p>\u6ce8\u610f\uff1a\u5f53\u524d\u4ec5\u5728\u5b50\u67e5\u8be2\u91cd\u5199\u7684\u7ed3\u5408\u6761\u4ef6\u4e0b\u652f\u6301 IN / EXISTS / NOT IN / NOT EXISTS\u3002</p> <p>\u4f18\u5316\u5668\u4e0d\u4ec5\u57fa\u4e8e\u8ba1\u5212\uff0c\u800c\u4e14\u8fd8\u57fa\u4e8e\u53ef\u4ece\u6570\u636e\u6e90\u83b7\u5f97\u7684\u4e30\u5bcc\u7edf\u8ba1\u4fe1\u606f\u4ee5\u53ca\u6bcf\u4e2a\u7b97\u5b50\uff08\u4f8b\u5982 io\uff0ccpu\uff0c\u7f51\u7edc\u548c\u5185\u5b58\uff09\u7684\u7ec6\u7c92\u5ea6\u6210\u672c\u6765\u505a\u51fa\u660e\u667a\u7684\u51b3\u7b56\u3002</p> <p>\u9ad8\u7ea7\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 CalciteConfig \u5bf9\u8c61\u63d0\u4f9b\u81ea\u5b9a\u4e49\u4f18\u5316\uff0c\u901a\u8fc7\u8c03\u7528 TableEnvironment\uff03getConfig\uff03setPlannerConfig \u5c06\u5176\u63d0\u4f9b\u7ed9 TableEnvironment\u3002</p>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#_2","title":"\u52a8\u6001\u8868","text":"<ul> <li>\u6570\u636e\u5e93\u8868\u662f INSERT\u3001UPDATE \u548c DELETE DML \u8bed\u53e5\u7684 stream \u7684\u7ed3\u679c\uff0c\u901a\u5e38\u79f0\u4e3a changelog stream\u3002</li> <li>\u7269\u5316\u89c6\u56fe\u88ab\u5b9a\u4e49\u4e3a\u4e00\u6761 SQL \u67e5\u8be2\u3002\u4e3a\u4e86\u66f4\u65b0\u89c6\u56fe\uff0c\u67e5\u8be2\u4e0d\u65ad\u5730\u5904\u7406\u89c6\u56fe\u7684\u57fa\u672c\u5173\u7cfb\u7684 changelog \u6d41\u3002</li> <li>\u7269\u5316\u89c6\u56fe\u662f\u6d41\u5f0f SQL \u67e5\u8be2\u7684\u7ed3\u679c\u3002</li> </ul> <p>\u52a8\u6001\u8868\u662f Flink \u7684\u652f\u6301\u6d41\u6570\u636e\u7684 Table API \u548c SQL \u7684\u6838\u5fc3\u6982\u5ff5\u3002\u4e0e\u8868\u793a\u6279\u5904\u7406\u6570\u636e\u7684\u9759\u6001\u8868\u4e0d\u540c\uff0c\u52a8\u6001\u8868\u662f\u968f\u65f6\u95f4\u53d8\u5316\u7684\u3002\u53ef\u4ee5\u50cf\u67e5\u8be2\u9759\u6001\u6279\u5904\u7406\u8868\u4e00\u6837\u67e5\u8be2\u5b83\u4eec\u3002\u67e5\u8be2\u52a8\u6001\u8868\u5c06\u751f\u6210\u4e00\u4e2a\u8fde\u7eed\u67e5\u8be2\u3002 \u4e00\u4e2a\u8fde\u7eed\u67e5\u8be2\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u6b62\uff0c\u7ed3\u679c\u4f1a\u751f\u6210\u4e00\u4e2a\u52a8\u6001\u8868\u3002\u67e5\u8be2\u4e0d\u65ad\u66f4\u65b0\u5176(\u52a8\u6001)\u7ed3\u679c\u8868\uff0c\u4ee5\u53cd\u6620\u5176(\u52a8\u6001)\u8f93\u5165\u8868\u4e0a\u7684\u66f4\u6539\u3002\u672c\u8d28\u4e0a\uff0c\u52a8\u6001\u8868\u4e0a\u7684\u8fde\u7eed\u67e5\u8be2\u975e\u5e38\u7c7b\u4f3c\u4e8e\u5b9a\u4e49\u7269\u5316\u89c6\u56fe\u7684\u67e5\u8be2\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fde\u7eed\u67e5\u8be2\u7684\u7ed3\u679c\u5728\u8bed\u4e49\u4e0a\u603b\u662f\u7b49\u4ef7\u4e8e\u4ee5\u6279\u5904\u7406\u6a21\u5f0f\u5728\u8f93\u5165\u8868\u5feb\u7167\u4e0a\u6267\u884c\u7684\u76f8\u540c\u67e5\u8be2\u7684\u7ed3\u679c\u3002</p>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#_3","title":"\u8fde\u7eed\u67e5\u8be2","text":"<p>\u5728\u52a8\u6001\u8868\u4e0a\u8ba1\u7b97\u4e00\u4e2a\u8fde\u7eed\u67e5\u8be2\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u52a8\u6001\u8868\u3002\u4e0e\u6279\u5904\u7406\u67e5\u8be2\u4e0d\u540c\uff0c\u8fde\u7eed\u67e5\u8be2\u4ece\u4e0d\u7ec8\u6b62\uff0c\u5e76\u6839\u636e\u5176\u8f93\u5165\u8868\u4e0a\u7684\u66f4\u65b0\u66f4\u65b0\u5176\u7ed3\u679c\u8868\u3002\u5728\u4efb\u4f55\u65f6\u5019\uff0c\u8fde\u7eed\u67e5\u8be2\u7684\u7ed3\u679c\u5728\u8bed\u4e49\u4e0a\u4e0e\u4ee5\u6279\u5904\u7406\u6a21\u5f0f\u5728\u8f93\u5165\u8868\u5feb\u7167\u4e0a\u6267\u884c\u7684\u76f8\u540c\u67e5\u8be2\u7684\u7ed3\u679c\u76f8\u540c\u3002</p> <p>\u7b2c\u4e00\u4e2a\u67e5\u8be2\u662f\u4e00\u4e2a\u7b80\u5355\u7684 GROUP-BY COUNT \u805a\u5408\u67e5\u8be2\u3002\u5b83\u57fa\u4e8e user \u5b57\u6bb5\u5bf9 clicks \u8868\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u7edf\u8ba1\u8bbf\u95ee\u7684 URL \u7684\u6570\u91cf\u3002\u4e0b\u9762\u7684\u56fe\u663e\u793a\u4e86\u5f53 clicks \u8868\u88ab\u9644\u52a0\u7684\u884c\u66f4\u65b0\u65f6\uff0c\u67e5\u8be2\u662f\u5982\u4f55\u88ab\u8bc4\u4f30\u7684\u3002</p> <p></p> <p>\u7b2c\u4e8c\u6761\u67e5\u8be2\u4e0e\u7b2c\u4e00\u6761\u7c7b\u4f3c\uff0c\u4f46\u662f\u9664\u4e86\u7528\u6237\u5c5e\u6027\u4e4b\u5916\uff0c\u8fd8\u5c06 clicks \u5206\u7ec4\u81f3\u6bcf\u5c0f\u65f6\u6eda\u52a8\u7a97\u53e3\u4e2d\uff0c\u7136\u540e\u8ba1\u7b97 url \u6570\u91cf(\u57fa\u4e8e\u65f6\u95f4\u7684\u8ba1\u7b97\uff0c\u4f8b\u5982\u57fa\u4e8e\u7279\u5b9a\u65f6\u95f4\u5c5e\u6027\u7684\u7a97\u53e3\uff0c\u540e\u9762\u4f1a\u8ba8\u8bba)\u3002\u540c\u6837\uff0c\u8be5\u56fe\u663e\u793a\u4e86\u4e0d\u540c\u65f6\u95f4\u70b9\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u4ee5\u53ef\u89c6\u5316\u52a8\u6001\u8868\u7684\u53d8\u5316\u7279\u6027\u3002</p> <p></p>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#_4","title":"\u9650\u5236\u67e5\u8be2","text":"<p>\u8bb8\u591a(\u4f46\u4e0d\u662f\u5168\u90e8)\u8bed\u4e49\u4e0a\u6709\u6548\u7684\u67e5\u8be2\u53ef\u4ee5\u4f5c\u4e3a\u6d41\u4e0a\u7684\u8fde\u7eed\u67e5\u8be2\u8fdb\u884c\u8bc4\u4f30\u3002\u6709\u4e9b\u67e5\u8be2\u4ee3\u4ef7\u592a\u9ad8\u800c\u65e0\u6cd5\u8ba1\u7b97\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u5b83\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u72b6\u6001\u5927\u5c0f\uff0c\u4e5f\u53ef\u80fd\u662f\u7531\u4e8e\u8ba1\u7b97\u66f4\u65b0\u4ee3\u4ef7\u592a\u9ad8\u3002</p> <p>\u72b6\u6001\u5927\u5c0f\uff1a\u8fde\u7eed\u67e5\u8be2\u5728\u65e0\u754c\u6d41\u4e0a\u8ba1\u7b97\uff0c\u901a\u5e38\u5e94\u8be5\u8fd0\u884c\u6570\u5468\u6216\u6570\u6708\u3002\u56e0\u6b64\uff0c\u8fde\u7eed\u67e5\u8be2\u5904\u7406\u7684\u6570\u636e\u603b\u91cf\u53ef\u80fd\u975e\u5e38\u5927\u3002\u5fc5\u987b\u66f4\u65b0\u5148\u524d\u8f93\u51fa\u7684\u7ed3\u679c\u7684\u67e5\u8be2\u9700\u8981\u7ef4\u62a4\u6240\u6709\u8f93\u51fa\u7684\u884c\uff0c\u4ee5\u4fbf\u80fd\u591f\u66f4\u65b0\u5b83\u4eec\u3002\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u67e5\u8be2\u793a\u4f8b\u9700\u8981\u5b58\u50a8\u6bcf\u4e2a\u7528\u6237\u7684 URL \u8ba1\u6570\uff0c\u4ee5\u4fbf\u80fd\u591f\u589e\u52a0\u8be5\u8ba1\u6570\u5e76\u5728\u8f93\u5165\u8868\u63a5\u6536\u65b0\u884c\u65f6\u53d1\u9001\u65b0\u7ed3\u679c\u3002\u5982\u679c\u53ea\u8ddf\u8e2a\u6ce8\u518c\u7528\u6237\uff0c\u5219\u8981\u7ef4\u62a4\u7684\u8ba1\u6570\u6570\u91cf\u53ef\u80fd\u4e0d\u4f1a\u592a\u9ad8\u3002\u4f46\u662f\uff0c\u5982\u679c\u672a\u6ce8\u518c\u7684\u7528\u6237\u5206\u914d\u4e86\u4e00\u4e2a\u60df\u4e00\u7684\u7528\u6237\u540d\uff0c\u90a3\u4e48\u8981\u7ef4\u62a4\u7684\u8ba1\u6570\u6570\u91cf\u5c06\u968f\u7740\u65f6\u95f4\u589e\u957f\uff0c\u5e76\u53ef\u80fd\u6700\u7ec8\u5bfc\u81f4\u67e5\u8be2\u5931\u8d25\u3002</p> <p>\u8ba1\u7b97\u66f4\u65b0\uff1a\u6709\u4e9b\u67e5\u8be2\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u548c\u66f4\u65b0\u5927\u91cf\u5df2\u8f93\u51fa\u7684\u7ed3\u679c\u884c\uff0c\u5373\u4f7f\u53ea\u6dfb\u52a0\u6216\u66f4\u65b0\u4e00\u6761\u8f93\u5165\u8bb0\u5f55\u3002\u663e\u7136\uff0c\u8fd9\u6837\u7684\u67e5\u8be2\u4e0d\u9002\u5408\u4f5c\u4e3a\u8fde\u7eed\u67e5\u8be2\u6267\u884c\u3002\u4e0b\u9762\u7684\u67e5\u8be2\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b83\u6839\u636e\u6700\u540e\u4e00\u6b21\u5355\u51fb\u7684\u65f6\u95f4\u4e3a\u6bcf\u4e2a\u7528\u6237\u8ba1\u7b97\u4e00\u4e2a RANK\u3002\u4e00\u65e6 click \u8868\u63a5\u6536\u5230\u4e00\u4e2a\u65b0\u884c\uff0c\u7528\u6237\u7684 lastAction \u5c31\u4f1a\u66f4\u65b0\uff0c\u5e76\u5fc5\u987b\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6392\u540d\u3002\u7136\u800c\uff0c\u7531\u4e8e\u4e24\u884c\u4e0d\u80fd\u5177\u6709\u76f8\u540c\u7684\u6392\u540d\uff0c\u6240\u4ee5\u6240\u6709\u8f83\u4f4e\u6392\u540d\u7684\u884c\u4e5f\u9700\u8981\u66f4\u65b0\u3002</p>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#_5","title":"\u8868\u5230\u6d41\u7684\u8f6c\u6362","text":"<p>\u52a8\u6001\u8868\u53ef\u4ee5\u50cf\u666e\u901a\u6570\u636e\u5e93\u8868\u4e00\u6837\u901a\u8fc7 INSERT\u3001UPDATE \u548c DELETE \u6765\u4e0d\u65ad\u4fee\u6539\u3002\u5b83\u53ef\u80fd\u662f\u4e00\u4e2a\u53ea\u6709\u4e00\u884c\u3001\u4e0d\u65ad\u66f4\u65b0\u7684\u8868\uff0c\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a insert-only \u7684\u8868\uff0c\u6ca1\u6709 UPDATE \u548c DELETE \u4fee\u6539\uff0c\u6216\u8005\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u5176\u4ed6\u8868\u3002</p> <p>\u5728\u5c06\u52a8\u6001\u8868\u8f6c\u6362\u4e3a\u6d41\u6216\u5c06\u5176\u5199\u5165\u5916\u90e8\u7cfb\u7edf\u65f6\uff0c\u9700\u8981\u5bf9\u8fd9\u4e9b\u66f4\u6539\u8fdb\u884c\u7f16\u7801\u3002Flink \u7684 Table API \u548c SQL \u652f\u6301\u4e09\u79cd\u65b9\u5f0f\u6765\u7f16\u7801\u4e00\u4e2a\u52a8\u6001\u8868\u7684\u53d8\u5316:</p> <ul> <li> <p>Append-only \u6d41\uff1a \u4ec5\u901a\u8fc7 INSERT \u64cd\u4f5c\u4fee\u6539\u7684\u52a8\u6001\u8868\u53ef\u4ee5\u901a\u8fc7\u8f93\u51fa\u63d2\u5165\u7684\u884c\u8f6c\u6362\u4e3a\u6d41\u3002</p> </li> <li> <p>Retract \u6d41\uff1a retract \u6d41\u5305\u542b\u4e24\u79cd\u7c7b\u578b\u7684 message\uff1aadd messages \u548c retract messages \u3002\u901a\u8fc7\u5c06 INSERT \u64cd\u4f5c\u7f16\u7801\u4e3a add message\u3001\u5c06 DELETE \u64cd\u4f5c\u7f16\u7801\u4e3a retract message\u3001\u5c06 UPDATE \u64cd\u4f5c\u7f16\u7801\u4e3a\u66f4\u65b0(\u5148\u524d)\u884c\u7684 retract message \u548c\u66f4\u65b0(\u65b0)\u884c\u7684 add message\uff0c\u5c06\u52a8\u6001\u8868\u8f6c\u6362\u4e3a retract \u6d41\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u5c06\u52a8\u6001\u8868\u8f6c\u6362\u4e3a retract \u6d41\u7684\u8fc7\u7a0b\u3002</p> </li> <li> <p>Upsert \u6d41: upsert \u6d41\u5305\u542b\u4e24\u79cd\u7c7b\u578b\u7684 message\uff1aupsert messages \u548c delete messages\u3002\u8f6c\u6362\u4e3a upsert \u6d41\u7684\u52a8\u6001\u8868\u9700\u8981(\u53ef\u80fd\u662f\u7ec4\u5408\u7684)\u552f\u4e00\u952e\u3002\u901a\u8fc7\u5c06 INSERT \u548c UPDATE \u64cd\u4f5c\u7f16\u7801\u4e3a upsert message\uff0c\u5c06 DELETE \u64cd\u4f5c\u7f16\u7801\u4e3a delete message \uff0c\u5c06\u5177\u6709\u552f\u4e00\u952e\u7684\u52a8\u6001\u8868\u8f6c\u6362\u4e3a\u6d41\u3002\u6d88\u8d39\u6d41\u7684\u7b97\u5b50\u9700\u8981\u77e5\u9053\u552f\u4e00\u952e\u7684\u5c5e\u6027\uff0c\u4ee5\u4fbf\u6b63\u786e\u5730\u5e94\u7528 message\u3002\u4e0e retract \u6d41\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e UPDATE \u64cd\u4f5c\u662f\u7528\u5355\u4e2a message \u7f16\u7801\u7684\uff0c\u56e0\u6b64\u6548\u7387\u66f4\u9ad8\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u5c06\u52a8\u6001\u8868\u8f6c\u6362\u4e3a upsert \u6d41\u7684\u8fc7\u7a0b\u3002</p> </li> </ul>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#temporal-tables","title":"\u65f6\u6001\u8868\uff08Temporal Tables\uff09","text":"<p>\u65f6\u6001\u8868\uff08Temporal Table\uff09\u662f\u4e00\u5f20\u968f\u65f6\u95f4\u53d8\u5316\u7684\u8868\uff0c\u5728 Flink \u4e2d\u79f0\u4e3a\u52a8\u6001\u8868\u3002\u65f6\u6001\u8868\u4e2d\u7684\u6bcf\u6761\u8bb0\u5f55\u90fd\u5173\u8054\u4e86\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u6bb5\uff0c\u6240\u6709\u7684 Flink \u8868\u90fd\u662f\u65f6\u6001\u7684\uff08\u52a8\u6001\u7684\uff09\u3002</p> <p>\u65f6\u6001\u8868\u5305\u542b\u8868\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6709\u7248\u672c\u7684\u8868\u5feb\u7167\uff0c\u65f6\u6001\u8868\u53ef\u4ee5\u662f\u4e00\u5f20\u8ddf\u8e2a\u6240\u6709\u53d8\u66f4\u8bb0\u5f55\u7684\u8868\uff08\u4f8b\u5982\u6570\u636e\u5e93\u8868\u7684 changelog\uff0c\u5305\u542b\u591a\u4e2a\u8868\u5feb\u7167\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u7269\u5316\u6240\u6709\u53d8\u66f4\u4e4b\u540e\u7684\u8868\uff08\u4f8b\u5982\u6570\u636e\u5e93\u8868\uff0c\u53ea\u6709\u6700\u65b0\u8868\u5feb\u7167\uff09\u3002</p> <p>\u65f6\u6001\u8868\u53ef\u4ee5\u5212\u5206\u6210\u4e00\u7cfb\u5217\u5e26\u7248\u672c\u7684\u8868\u5feb\u7167\u96c6\u5408\uff0c\u8868\u5feb\u7167\u4e2d\u7684\u7248\u672c\u4ee3\u8868\u4e86\u5feb\u7167\u4e2d\u6240\u6709\u8bb0\u5f55\u7684\u6709\u6548\u533a\u95f4\uff0c\u6709\u6548\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u53ef\u7531\u7528\u6237\u6307\u5b9a\u3002\u6839\u636e\u65f6\u6001\u8868\u662f\u5426\u80fd\u8ffd\u8e2a\u81ea\u8eab\u7684\u5386\u53f2\u7248\u672c\uff0c\u65f6\u6001\u8868\u5206\u4e3a\u7248\u672c\u8868\u548c\u666e\u901a\u8868\u3002</p> <ul> <li>\u7248\u672c\u8868\uff1a\u82e5\u65f6\u6001\u8868\u4e2d\u7684\u8bb0\u5f55\u80fd\u591f\u8ffd\u8e2a\u5e76\u8bbf\u95ee\u5b83\u7684\u5386\u53f2\u7248\u672c\uff0c\u8be5\u8868\u5c31\u88ab\u79f0\u4e3a\u7248\u672c\u8868\uff0c\u6765\u81ea\u6570\u636e\u5e93\u7684 changelog \u53ef\u5b9a\u4e49\u4e3a\u7248\u672c\u8868\u3002</li> <li>\u666e\u901a\u8868\uff1a\u8981\u662f\u65f6\u6001\u8868\u4e2d\u7684\u8bb0\u5f55\u4ec5\u4ec5\u53ef\u4ee5\u8ffd\u8e2a\u5e76\u8bbf\u95ee\u5b83\u7684\u6700\u65b0\u7248\u672c\uff0c\u8fd9\u79cd\u8868\u88ab\u79f0\u4e4b\u4e3a\u666e\u901a\u8868\uff0c\u6765\u81ea\u6570\u636e\u5e93\u6216 HBase \u7684\u8868\u53ef\u5b9a\u4e49\u6210\u666e\u901a\u8868\u3002</li> </ul> <p>\u7248\u672c\u8868\u793a\u4f8b\uff1a</p> <pre><code>SELECT * FROM product_changelog;\n\n(changelog kind)  update_time  product_id product_name price\n================= ===========  ========== ============ =====\n+(INSERT)         00:01:00     p_001      scooter      11.11\n+(INSERT)         00:02:00     p_002      basketball   23.11\n-(UPDATE_BEFORE)  12:00:00     p_001      scooter      11.11\n+(UPDATE_AFTER)   12:00:00     p_001      scooter      12.99\n-(UPDATE_BEFORE)  12:00:00     p_002      basketball   23.11\n+(UPDATE_AFTER)   12:00:00     p_002      basketball   19.99\n-(DELETE)         18:00:00     p_001      scooter      12.99\n</code></pre> <p>\u666e\u901a\u8868\u5b9e\u4f8b\uff1a</p> <pre><code>10:15:00 &gt; SELECT * FROM LatestRates;\n\ncurrency  rate\n========= ====\nUS Dollar 102\nEuro      114\nYen       1\n\n11:00:00 &gt; SELECT * FROM LatestRates;\n\ncurrency  rate\n========= ====\nUS Dollar 102\nEuro      116\nYen       1\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#_6","title":"\u58f0\u660e\u7248\u672c\u8868","text":"<p>\u5728 Flink \u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e3b\u952e\u7ea6\u675f\u548c\u4e8b\u4ef6\u65f6\u95f4\u5c5e\u6027\u7684\u8868\u5c31\u662f\u7248\u672c\u8868\u3002</p> <pre><code>-- \u5b9a\u4e49\u4e00\u5f20\u7248\u672c\u8868\nCREATE TABLE product_changelog (\n  product_id STRING,\n  product_name STRING,\n  product_price DECIMAL(10, 4),\n  update_time TIMESTAMP(3) METADATA FROM 'value.source.timestamp' VIRTUAL,\n  PRIMARY KEY(product_id) NOT ENFORCED,      -- (1) \u5b9a\u4e49\u4e3b\u952e\u7ea6\u675f\n  WATERMARK FOR update_time AS update_time   -- (2) \u901a\u8fc7 watermark \u5b9a\u4e49\u4e8b\u4ef6\u65f6\u95f4\n) WITH (\n  'connector' = 'kafka',\n  'topic' = 'products',\n  'scan.startup.mode' = 'earliest-offset',\n  'properties.bootstrap.servers' = 'localhost:9092',\n  'value.format' = 'debezium-json'\n);\n</code></pre> <p>\u884c (1) \u4e3a\u8868 product_changelog \u5b9a\u4e49\u4e86\u4e3b\u952e, \u884c (2) \u628a update_time \u5b9a\u4e49\u4e3a\u8868 product_changelog \u7684\u4e8b\u4ef6\u65f6\u95f4\uff0c\u56e0\u6b64 product_changelog \u662f\u4e00\u5f20\u7248\u672c\u8868\u3002</p>"},{"location":"Flink/Flink%20SQL/%E6%B5%81%E5%BC%8F%E6%A6%82%E5%BF%B5/#_7","title":"\u58f0\u660e\u7248\u672c\u89c6\u56fe","text":"<p>\u53ea\u8981\u4e00\u4e2a\u89c6\u56fe\u5305\u542b\u4e3b\u952e\u548c\u4e8b\u4ef6\u65f6\u95f4\u4fbf\u662f\u4e00\u4e2a\u7248\u672c\u89c6\u56fe\u3002</p> <pre><code>-- \u5b9a\u4e49\u4e00\u5f20 append-only \u8868\nCREATE TABLE RatesHistory (\n    currency_time TIMESTAMP(3),\n    currency STRING,\n    rate DECIMAL(38, 10),\n    WATERMARK FOR currency_time AS currency_time   -- \u5b9a\u4e49\u4e8b\u4ef6\u65f6\u95f4\n) WITH (\n  'connector' = 'kafka',\n  'topic' = 'rates',\n  'scan.startup.mode' = 'earliest-offset',\n  'properties.bootstrap.servers' = 'localhost:9092',\n  'format' = 'json'                                -- \u666e\u901a\u7684 append-only \u6d41\n)\n</code></pre> <pre><code>SELECT * FROM RatesHistory;\n\ncurrency_time currency  rate\n============= ========= ====\n09:00:00      US Dollar 102\n09:00:00      Euro      114\n09:00:00      Yen       1\n10:45:00      Euro      116\n11:15:00      Euro      119\n11:49:00      Pounds    108\n</code></pre> <p>\u4e3a\u4e86\u5728 RatesHistory \u4e0a\u5b9a\u4e49\u7248\u672c\u8868\uff0cFlink \u652f\u6301\u901a\u8fc7\u53bb\u91cd\u67e5\u8be2\u5b9a\u4e49\u7248\u672c\u89c6\u56fe\uff0c\u53bb\u91cd\u67e5\u8be2\u53ef\u4ee5\u4ea7\u51fa\u4e00\u4e2a\u6709\u5e8f\u7684 changelog \u6d41\uff0c\u53bb\u91cd\u67e5\u8be2\u80fd\u591f\u63a8\u65ad\u4e3b\u952e\u5e76\u4fdd\u7559\u539f\u59cb\u6570\u636e\u6d41\u7684\u4e8b\u4ef6\u65f6\u95f4\u5c5e\u6027\u3002</p> <pre><code>CREATE VIEW versioned_rates AS\nSELECT currency, rate, currency_time            -- (1) `currency_time` \u4fdd\u7559\u4e86\u4e8b\u4ef6\u65f6\u95f4\n  FROM (\n      SELECT *,\n      ROW_NUMBER() OVER (PARTITION BY currency  -- (2) `currency` \u662f\u53bb\u91cd query \u7684 unique key\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u952e\n         ORDER BY currency_time DESC) AS rowNum\n      FROM RatesHistory )\nWHERE rowNum = 1;\n\n-- \u89c6\u56fe `versioned_rates` \u5c06\u4f1a\u4ea7\u51fa\u5982\u4e0b\u7684 changelog:\n\n(changelog kind) currency_time currency   rate\n================ ============= =========  ====\n+(INSERT)        09:00:00      US Dollar  102\n+(INSERT)        09:00:00      Euro       114\n+(INSERT)        09:00:00      Yen        1\n+(UPDATE_AFTER)  10:45:00      Euro       116\n+(UPDATE_AFTER)  11:15:00      Euro       119\n+(INSERT)        11:49:00      Pounds     108\n</code></pre> <p>\u884c (1) \u4fdd\u7559\u4e86\u4e8b\u4ef6\u65f6\u95f4\u4f5c\u4e3a\u89c6\u56fe versioned_rates \u7684\u4e8b\u4ef6\u65f6\u95f4\uff0c\u884c (2) \u4f7f\u5f97\u89c6\u56fe versioned_rates \u6709\u4e86\u4e3b\u952e, \u56e0\u6b64\u89c6\u56fe versioned_rates \u662f\u4e00\u4e2a\u7248\u672c\u89c6\u56fe\u3002</p> <p>\u89c6\u56fe\u4e2d\u7684\u53bb\u91cd query \u4f1a\u88ab Flink \u4f18\u5316\u5e76\u9ad8\u6548\u5730\u4ea7\u51fa changelog stream, \u4ea7\u51fa\u7684 changelog \u4fdd\u7559\u4e86\u4e3b\u952e\u7ea6\u675f\u548c\u4e8b\u4ef6\u65f6\u95f4\u3002</p>"},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/","title":"\u7a97\u53e3\u51fd\u6570","text":""},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#windowing-tvfs","title":"\u7a97\u53e3\u8868\u503c\u51fd\u6570\uff08Windowing TVFs\uff09","text":"<p>\u7a97\u53e3\u662f\u5904\u7406\u65e0\u9650\u6d41\u7684\u6838\u5fc3\uff0c\u7a97\u53e3\u628a\u6d41\u5206\u5272\u4e3a\u6709\u9650\u5927\u5c0f\u7684 \u201c\u6876\u201d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u5176\u4e4b\u4e0a\u8fdb\u884c\u8ba1\u7b97\u3002</p> <p>Flink \u63d0\u4f9b\u4e86\u5982\u4e0b\u7a97\u53e3\u8868\u503c\u51fd\u6570\uff08table-valued function, \u7f29\u5199 TVF\uff09\u628a\u8868\u7684\u6570\u636e\u5212\u5206\u5230\u7a97\u53e3\u4e2d\uff1a</p> <ul> <li>\u6eda\u52a8\u7a97\u53e3</li> <li>\u6ed1\u52a8\u7a97\u53e3</li> <li>\u7d2f\u79ef\u7a97\u53e3</li> <li>\u4f1a\u8bdd\u7a97\u53e3 (\u76ee\u524d\u4ec5\u652f\u6301\u6d41\u6a21\u5f0f)</li> </ul> <p>\u7a97\u53e3\u8868\u503c\u51fd\u6570\u662f\u5206\u7ec4\u7a97\u53e3\u51fd\u6570\uff08\u5df2\u8fc7\u65f6\uff09\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u5b83\u66f4\u7b26\u5408 SQL \u6807\u51c6\uff0c\u5728\u652f\u6301\u57fa\u4e8e\u7a97\u53e3\u7684\u590d\u6742\u8ba1\u7b97\u65b9\u9762\u4e5f\u66f4\u4e3a\u5f3a\u5927\uff0c\u4f8b\u5982\u53ef\u7528\u4e8e\u7a97\u53e3 TopN\u3001\u7a97\u53e3 Join \u7b49\u8ba1\u7b97\uff0c\u800c\u5206\u7ec4\u7a97\u53e3\u51fd\u6570\u4ec5\u652f\u6301\u7a97\u53e3\u805a\u5408\u3002</p> <ul> <li>\u7a97\u53e3\u805a\u5408</li> <li>\u7a97\u53e3 TopN</li> <li>\u7a97\u53e3 Join</li> <li>\u7a97\u53e3\u53bb\u91cd</li> </ul> <p>Flink \u63d0\u4f9b\u4e86 4 \u4e2a\u5185\u7f6e\u7684\u7a97\u53e3\u8868\u503c\u51fd\u6570\uff0c\u5206\u522b\u4e3a\uff1aTUMBLE\uff0cHOP\uff0cCUMULATE \u548c SESSION\u3002</p> <p>\u7a97\u53e3\u8868\u503c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5305\u542b\u539f\u751f\u5217\u4ee5\u53ca\u9644\u52a0\u7684\u4e09\u4e2a\u6307\u5b9a\u7a97\u53e3\u7684\u5217\uff0c\u5206\u522b\u662f\uff1awindow_start\uff0cwindow_end \u548c window_time\u3002</p> <p>\u5728\u6d41\u8ba1\u7b97\u6a21\u5f0f\u4e2d\uff0cwindow_time \u662f TIMESTAMP \u6216\u8005 TIMESTAMP_LTZ \u7c7b\u578b\uff08\u5177\u4f53\u5c5e\u4e8e\u54ea\u79cd\u7c7b\u578b\u53d6\u51b3\u4e8e\u8f93\u5165\u7684\u65f6\u95f4\u5b57\u6bb5\u7c7b\u578b\uff09\u7684\u5b57\u6bb5\u3002window_time \u5b57\u6bb5\u53ef\u7528\u4e8e\u540e\u7eed\u57fa\u4e8e\u65f6\u95f4\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5176\u4ed6\u7684\u7a97\u53e3\u8868\u503c\u51fd\u6570\uff0c\u6216\u8005 interval joins\u3001over aggregations \u7b49\u64cd\u4f5c\uff0c\u5e76\u4e14\u5176\u503c\u603b\u662f\u7b49\u4e8e window_end - 1ms\u3002</p>"},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#tumble","title":"\u6eda\u52a8\u7a97\u53e3\uff08TUMBLE\uff09","text":"<p>TUMBLE \u51fd\u6570\u901a\u8fc7\u65f6\u95f4\u5c5e\u6027\u5b57\u6bb5\u4e3a\u6bcf\u884c\u6570\u636e\u5206\u914d\u4e00\u4e2a\u7a97\u53e3\u3002 \u5728\u6d41\u8ba1\u7b97\u6a21\u5f0f\uff0c\u65f6\u95f4\u5c5e\u6027\u5b57\u6bb5\u5fc5\u987b\u88ab\u6307\u5b9a\u4e3a \u4e8b\u4ef6\u6216\u5904\u7406\u65f6\u95f4\u5c5e\u6027\u3002 \u5728\u6279\u8ba1\u7b97\u6a21\u5f0f\uff0c\u7a97\u53e3\u8868\u51fd\u6570\u7684\u65f6\u95f4\u5c5e\u6027\u5b57\u6bb5\u5fc5\u987b\u662f TIMESTAMP \u6216 TIMESTAMP_LTZ \u7684\u7c7b\u578b\u3002\u51fd\u6570\u8fd0\u884c\u540e\uff0c\u539f\u6709\u7684\u65f6\u95f4\u5c5e\u6027 \u201ctimecol\u201d \u5c06\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5e38\u89c4\u7684 timestamp \u5217\u3002</p> <p>TUMBLE \u51fd\u6570\u6709\u4e09\u4e2a\u5fc5\u4f20\u53c2\u6570\uff0c\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff1a</p> <pre><code>TUMBLE(TABLE data, DESCRIPTOR(timecol), size [, offset ])\n</code></pre> <ul> <li>data\uff1a\u62e5\u6709\u65f6\u95f4\u5c5e\u6027\u5217\u7684\u8868\u3002</li> <li>timecol\uff1a\u5217\u63cf\u8ff0\u7b26\uff0c\u51b3\u5b9a\u6570\u636e\u7684\u54ea\u4e2a\u65f6\u95f4\u5c5e\u6027\u5217\u5e94\u8be5\u6620\u5c04\u5230\u7a97\u53e3\u3002</li> <li>size\uff1a\u7a97\u53e3\u7684\u5927\u5c0f\uff08\u65f6\u957f\uff09\u3002</li> <li>offset\uff1a\u7a97\u53e3\u7684\u504f\u79fb\u91cf\u3002</li> </ul> <pre><code>-- tables must have time attribute, e.g. `bidtime` in this table\nFlink SQL&gt; desc Bid;\n+-------------+------------------------+------+-----+--------+---------------------------------+\n|        name |                   type | null | key | extras |                       watermark |\n+-------------+------------------------+------+-----+--------+---------------------------------+\n|     bidtime | TIMESTAMP(3) *ROWTIME* | true |     |        | `bidtime` - INTERVAL '1' SECOND |\n|       price |         DECIMAL(10, 2) | true |     |        |                                 |\n|        item |                 STRING | true |     |        |                                 |\n+-------------+------------------------+------+-----+--------+---------------------------------+\n\nFlink SQL&gt; SELECT * FROM Bid;\n+------------------+-------+------+\n|          bidtime | price | item |\n+------------------+-------+------+\n| 2020-04-15 08:05 |  4.00 | C    |\n| 2020-04-15 08:07 |  2.00 | A    |\n| 2020-04-15 08:09 |  5.00 | D    |\n| 2020-04-15 08:11 |  3.00 | B    |\n| 2020-04-15 08:13 |  1.00 | E    |\n| 2020-04-15 08:17 |  6.00 | F    |\n+------------------+-------+------+\n\nFlink SQL&gt; SELECT * FROM TABLE(\n   TUMBLE(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '10' MINUTES));\n\n+------------------+-------+------+------------------+------------------+-------------------------+\n|          bidtime | price | item |     window_start |       window_end |            window_time  |\n+------------------+-------+------+------------------+------------------+-------------------------+\n| 2020-04-15 08:05 |  4.00 | C    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:07 |  2.00 | A    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:09 |  5.00 | D    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:11 |  3.00 | B    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n| 2020-04-15 08:13 |  1.00 | E    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n| 2020-04-15 08:17 |  6.00 | F    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n+------------------+-------+------+------------------+------------------+-------------------------+\n\n-- apply aggregation on the tumbling windowed table\nFlink SQL&gt; SELECT window_start, window_end, SUM(price) AS total_price\n  FROM TABLE(\n    TUMBLE(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '10' MINUTES))\n  GROUP BY window_start, window_end;\n+------------------+------------------+-------------+\n|     window_start |       window_end | total_price |\n+------------------+------------------+-------------+\n| 2020-04-15 08:00 | 2020-04-15 08:10 |       11.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |       10.00 |\n+------------------+------------------+-------------+\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#hop","title":"\u6ed1\u52a8\u7a97\u53e3\uff08HOP\uff09","text":"<p>HOP \u6709\u56db\u4e2a\u5fc5\u586b\u53c2\u6570\u548c\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff1a</p> <pre><code>HOP(TABLE data, DESCRIPTOR(timecol), slide, size [, offset ])\n</code></pre> <ul> <li>data\uff1a\u62e5\u6709\u65f6\u95f4\u5c5e\u6027\u5217\u7684\u8868\u3002</li> <li>timecol\uff1a\u5217\u63cf\u8ff0\u7b26\uff0c\u51b3\u5b9a\u6570\u636e\u7684\u54ea\u4e2a\u65f6\u95f4\u5c5e\u6027\u5217\u5e94\u8be5\u6620\u5c04\u5230\u7a97\u53e3\u3002</li> <li>slide\uff1a\u7a97\u53e3\u7684\u6ed1\u52a8\u6b65\u957f\u3002</li> <li>size\uff1a\u7a97\u53e3\u7684\u5927\u5c0f(\u65f6\u957f)\u3002</li> <li>offset\uff1a\u7a97\u53e3\u7684\u504f\u79fb\u91cf [\u975e\u5fc5\u586b]\u3002</li> </ul> <pre><code>&gt; SELECT * FROM TABLE(\n    HOP(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '5' MINUTES, INTERVAL '10' MINUTES));\n-- or with the named params\n-- note: the DATA param must be the first\n&gt; SELECT * FROM TABLE(\n    HOP(\n      DATA =&gt; TABLE Bid,\n      TIMECOL =&gt; DESCRIPTOR(bidtime),\n      SLIDE =&gt; INTERVAL '5' MINUTES,\n      SIZE =&gt; INTERVAL '10' MINUTES));\n+------------------+-------+------+------------------+------------------+-------------------------+\n|          bidtime | price | item |     window_start |       window_end |           window_time   |\n+------------------+-------+------+------------------+------------------+-------------------------+\n| 2020-04-15 08:05 |  4.00 | C    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:05 |  4.00 | C    | 2020-04-15 08:05 | 2020-04-15 08:15 | 2020-04-15 08:14:59.999 |\n| 2020-04-15 08:07 |  2.00 | A    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:07 |  2.00 | A    | 2020-04-15 08:05 | 2020-04-15 08:15 | 2020-04-15 08:14:59.999 |\n| 2020-04-15 08:09 |  5.00 | D    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:09 |  5.00 | D    | 2020-04-15 08:05 | 2020-04-15 08:15 | 2020-04-15 08:14:59.999 |\n| 2020-04-15 08:11 |  3.00 | B    | 2020-04-15 08:05 | 2020-04-15 08:15 | 2020-04-15 08:14:59.999 |\n| 2020-04-15 08:11 |  3.00 | B    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n| 2020-04-15 08:13 |  1.00 | E    | 2020-04-15 08:05 | 2020-04-15 08:15 | 2020-04-15 08:14:59.999 |\n| 2020-04-15 08:13 |  1.00 | E    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n| 2020-04-15 08:17 |  6.00 | F    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n| 2020-04-15 08:17 |  6.00 | F    | 2020-04-15 08:15 | 2020-04-15 08:25 | 2020-04-15 08:24:59.999 |\n+------------------+-------+------+------------------+------------------+-------------------------+\n\n-- apply aggregation on the hopping windowed table\n&gt; SELECT window_start, window_end, SUM(price) AS total_price\n  FROM TABLE(\n    HOP(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '5' MINUTES, INTERVAL '10' MINUTES))\n  GROUP BY window_start, window_end;\n+------------------+------------------+-------------+\n|     window_start |       window_end | total_price |\n+------------------+------------------+-------------+\n| 2020-04-15 08:00 | 2020-04-15 08:10 |       11.00 |\n| 2020-04-15 08:05 | 2020-04-15 08:15 |       15.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |       10.00 |\n| 2020-04-15 08:15 | 2020-04-15 08:25 |        6.00 |\n+------------------+------------------+-------------+\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#cumulate","title":"\u7d2f\u79ef\u7a97\u53e3\uff08CUMULATE\uff09","text":"<p>\u7d2f\u79ef\u7a97\u53e3\u5728\u67d0\u4e9b\u573a\u666f\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u6bd4\u5982\u8bf4\u63d0\u524d\u89e6\u53d1\u7684\u6eda\u52a8\u7a97\u53e3\u3002\u4f8b\u5982\uff1a\u6bcf\u65e5\u4eea\u8868\u76d8\u4ece 00:00 \u5f00\u59cb\u6bcf\u5206\u949f\u7ed8\u5236\u7d2f\u79ef UV\uff0c10:00 \u65f6 UV \u5c31\u662f\u4ece 00:00 \u5230 10:00 \u7684 UV \u603b\u6570\u3002\u7d2f\u79ef\u7a97\u53e3\u53ef\u4ee5\u7b80\u5355\u4e14\u6709\u6548\u5730\u5b9e\u73b0\u5b83\u3002</p> <p>CUMULATE \u51fd\u6570\u6307\u5b9a\u5143\u7d20\u5230\u591a\u4e2a\u7a97\u53e3\uff0c\u4ece\u521d\u59cb\u7684\u7a97\u53e3\u5f00\u59cb\uff0c\u76f4\u5230\u8fbe\u5230\u6700\u5927\u7684\u7a97\u53e3\u5927\u5c0f\u7684\u7a97\u53e3\uff0c\u6240\u6709\u7684\u7a97\u53e3\u90fd\u5305\u542b\u5176\u533a\u95f4\u5185\u7684\u5143\u7d20\uff0c\u53e6\u5916\uff0c\u7a97\u53e3\u7684\u5f00\u59cb\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\u3002\u4f60\u53ef\u4ee5\u5c06 CUMULATE \u51fd\u6570\u89c6\u4e3a\u9996\u5148\u5e94\u7528\u5177\u6709\u6700\u5927\u7a97\u53e3\u5927\u5c0f\u7684 TUMBLE \u7a97\u53e3\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u6eda\u52a8\u7a97\u53e3\u62c6\u5206\u4e3a\u5177\u6709\u76f8\u540c\u7a97\u53e3\u5f00\u59cb\u4f46\u7a97\u53e3\u7ed3\u675f\u6b65\u957f\u4e0d\u540c\u7684\u51e0\u4e2a\u7a97\u53e3\u3002\u6240\u4ee5\u7d2f\u79ef\u7a97\u53e3\u4f1a\u4ea7\u751f\u91cd\u53e0\u5e76\u4e14\u6ca1\u6709\u56fa\u5b9a\u5927\u5c0f\u3002</p> <p>\u4f8b\u5982\uff1a1 \u5c0f\u65f6\u6b65\u957f\uff0c24 \u5c0f\u65f6\u5927\u5c0f\u7684\u7d2f\u8ba1\u7a97\u53e3\uff0c\u6bcf\u5929\u53ef\u4ee5\u83b7\u5f97\u5982\u4e0b\u8fd9\u4e9b\u7a97\u53e3\uff1a<code>[00:00, 01:00)\uff0c[00:00, 02:00)\uff0c[00:00, 03:00)\uff0c \u2026\uff0c [00:00, 24:00)</code></p> <p></p> <p>CUMULATE \u6709\u56db\u4e2a\u5fc5\u586b\u53c2\u6570\u548c\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff1a</p> <pre><code>CUMULATE(TABLE data, DESCRIPTOR(timecol), step, size)\n</code></pre> <ul> <li>data\uff1a\u62e5\u6709\u65f6\u95f4\u5c5e\u6027\u5217\u7684\u8868\u3002</li> <li>timecol\uff1a\u5217\u63cf\u8ff0\u7b26\uff0c\u51b3\u5b9a\u6570\u636e\u7684\u54ea\u4e2a\u65f6\u95f4\u5c5e\u6027\u5217\u5e94\u8be5\u6620\u5c04\u5230\u7a97\u53e3\u3002</li> <li>step\uff1a\u6307\u5b9a\u8fde\u7eed\u7684\u7d2f\u79ef\u7a97\u53e3\u4e4b\u95f4\u589e\u52a0\u7684\u7a97\u53e3\u5927\u5c0f\u3002</li> <li>size\uff1a\u6307\u5b9a\u7d2f\u79ef\u7a97\u53e3\u7684\u6700\u5927\u5bbd\u5ea6\u7684\u7a97\u53e3\u65f6\u95f4\u3002size \u5fc5\u987b\u662f step \u7684\u6574\u6570\u500d\u3002</li> <li>offset\uff1a\u7a97\u53e3\u7684\u504f\u79fb\u91cf [\u975e\u5fc5\u586b]\u3002</li> </ul> <pre><code>&gt; SELECT * FROM TABLE(\n    CUMULATE(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '2' MINUTES, INTERVAL '10' MINUTES));\n-- or with the named params\n-- note: the DATA param must be the first\n&gt; SELECT * FROM TABLE(\n    CUMULATE(\n      DATA =&gt; TABLE Bid,\n      TIMECOL =&gt; DESCRIPTOR(bidtime),\n      STEP =&gt; INTERVAL '2' MINUTES,\n      SIZE =&gt; INTERVAL '10' MINUTES));\n+------------------+-------+------+------------------+------------------+-------------------------+\n|          bidtime | price | item |     window_start |       window_end |            window_time  |\n+------------------+-------+------+------------------+------------------+-------------------------+\n| 2020-04-15 08:05 |  4.00 | C    | 2020-04-15 08:00 | 2020-04-15 08:06 | 2020-04-15 08:05:59.999 |\n| 2020-04-15 08:05 |  4.00 | C    | 2020-04-15 08:00 | 2020-04-15 08:08 | 2020-04-15 08:07:59.999 |\n| 2020-04-15 08:05 |  4.00 | C    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:07 |  2.00 | A    | 2020-04-15 08:00 | 2020-04-15 08:08 | 2020-04-15 08:07:59.999 |\n| 2020-04-15 08:07 |  2.00 | A    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:09 |  5.00 | D    | 2020-04-15 08:00 | 2020-04-15 08:10 | 2020-04-15 08:09:59.999 |\n| 2020-04-15 08:11 |  3.00 | B    | 2020-04-15 08:10 | 2020-04-15 08:12 | 2020-04-15 08:11:59.999 |\n| 2020-04-15 08:11 |  3.00 | B    | 2020-04-15 08:10 | 2020-04-15 08:14 | 2020-04-15 08:13:59.999 |\n| 2020-04-15 08:11 |  3.00 | B    | 2020-04-15 08:10 | 2020-04-15 08:16 | 2020-04-15 08:15:59.999 |\n| 2020-04-15 08:11 |  3.00 | B    | 2020-04-15 08:10 | 2020-04-15 08:18 | 2020-04-15 08:17:59.999 |\n| 2020-04-15 08:11 |  3.00 | B    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n| 2020-04-15 08:13 |  1.00 | E    | 2020-04-15 08:10 | 2020-04-15 08:14 | 2020-04-15 08:13:59.999 |\n| 2020-04-15 08:13 |  1.00 | E    | 2020-04-15 08:10 | 2020-04-15 08:16 | 2020-04-15 08:15:59.999 |\n| 2020-04-15 08:13 |  1.00 | E    | 2020-04-15 08:10 | 2020-04-15 08:18 | 2020-04-15 08:17:59.999 |\n| 2020-04-15 08:13 |  1.00 | E    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n| 2020-04-15 08:17 |  6.00 | F    | 2020-04-15 08:10 | 2020-04-15 08:18 | 2020-04-15 08:17:59.999 |\n| 2020-04-15 08:17 |  6.00 | F    | 2020-04-15 08:10 | 2020-04-15 08:20 | 2020-04-15 08:19:59.999 |\n+------------------+-------+------+------------------+------------------+-------------------------+\n\n-- apply aggregation on the cumulating windowed table\n&gt; SELECT window_start, window_end, SUM(price) AS total_price\n  FROM TABLE(\n    CUMULATE(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '2' MINUTES, INTERVAL '10' MINUTES))\n  GROUP BY window_start, window_end;\n+------------------+------------------+-------------+\n|     window_start |       window_end | total_price |\n+------------------+------------------+-------------+\n| 2020-04-15 08:00 | 2020-04-15 08:06 |        4.00 |\n| 2020-04-15 08:00 | 2020-04-15 08:08 |        6.00 |\n| 2020-04-15 08:00 | 2020-04-15 08:10 |       11.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:12 |        3.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:14 |        4.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:16 |        4.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:18 |       10.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |       10.00 |\n+------------------+------------------+-------------+\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#session","title":"\u4f1a\u8bdd\u7a97\u53e3\uff08SESSION\uff09","text":""},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#_2","title":"\u7a97\u53e3\u805a\u5408","text":""},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#_3","title":"\u7a97\u53e3\u8868\u503c\u51fd\u6570","text":"<p>\u7a97\u53e3\u805a\u5408\u662f\u901a\u8fc7 GROUP BY \u5b50\u53e5\u5b9a\u4e49\u7684\uff0c\u5176\u7279\u5f81\u662f\u5305\u542b\u7a97\u53e3\u8868\u503c\u51fd\u6570(TVF)\u4ea7\u751f\u7684 \u201cwindow_start\u201d \u548c \u201cwindow_end\u201d \u5217\u3002\u548c\u666e\u901a\u7684 GROUP BY \u5b50\u53e5\u4e00\u6837\uff0c\u7a97\u53e3\u805a\u5408\u5bf9\u4e8e\u6bcf\u4e2a\u7ec4\u4f1a\u8ba1\u7b97\u51fa\u4e00\u884c\u6570\u636e\u3002</p> <pre><code>SELECT ...\nFROM &lt;windowed_table&gt; -- relation applied windowing TVF\nGROUP BY window_start, window_end, ...\n</code></pre> <p>\u548c\u5176\u4ed6\u8fde\u7eed\u8868\u4e0a\u7684\u805a\u5408\u4e0d\u540c\uff0c\u7a97\u53e3\u805a\u5408\u4e0d\u4ea7\u751f\u4e2d\u95f4\u7ed3\u679c\uff0c\u53ea\u5728\u7a97\u53e3\u7ed3\u675f\u4ea7\u751f\u4e00\u4e2a\u603b\u7684\u805a\u5408\u7ed3\u679c\uff0c\u53e6\u5916\uff0c\u7a97\u53e3\u805a\u5408\u4f1a\u6e05\u9664\u4e0d\u9700\u8981\u7684\u4e2d\u95f4\u72b6\u6001\u3002</p> <p>Flink \u652f\u6301\u5728 TUMBLE\uff0cHOP\uff0cCUMULATE \u548c SESSION \u4e0a\u8fdb\u884c\u7a97\u53e3\u805a\u5408\u3002\u5728\u6d41\u6a21\u5f0f\u4e0b\uff0c\u7a97\u53e3\u8868\u503c\u51fd\u6570\u7684\u65f6\u95f4\u5c5e\u6027\u5b57\u6bb5\u5fc5\u987b\u662f\u4e8b\u4ef6\u65f6\u95f4\u6216\u5904\u7406\u65f6\u95f4\u3002\u5728\u6279\u6a21\u5f0f\u4e0b\uff0c\u7a97\u53e3\u8868\u503c\u51fd\u6570\u7684\u65f6\u95f4\u5c5e\u6027\u5b57\u6bb5\u5fc5\u987b\u662f TIMESTAMP \u6216 TIMESTAMP_LTZ \u7c7b\u578b\u7684\u3002</p> <pre><code>-- tables must have time attribute, e.g. `bidtime` in this table\nFlink SQL&gt; desc Bid;\n+-------------+------------------------+------+-----+--------+---------------------------------+\n|        name |                   type | null | key | extras |                       watermark |\n+-------------+------------------------+------+-----+--------+---------------------------------+\n|     bidtime | TIMESTAMP(3) *ROWTIME* | true |     |        | `bidtime` - INTERVAL '1' SECOND |\n|       price |         DECIMAL(10, 2) | true |     |        |                                 |\n|        item |                 STRING | true |     |        |                                 |\n| supplier_id |                 STRING | true |     |        |                                 |\n+-------------+------------------------+------+-----+--------+---------------------------------+\n\nFlink SQL&gt; SELECT * FROM Bid;\n+------------------+-------+------+-------------+\n|          bidtime | price | item | supplier_id |\n+------------------+-------+------+-------------+\n| 2020-04-15 08:05 | 4.00  | C    | supplier1   |\n| 2020-04-15 08:07 | 2.00  | A    | supplier1   |\n| 2020-04-15 08:09 | 5.00  | D    | supplier2   |\n| 2020-04-15 08:11 | 3.00  | B    | supplier2   |\n| 2020-04-15 08:13 | 1.00  | E    | supplier1   |\n| 2020-04-15 08:17 | 6.00  | F    | supplier2   |\n+------------------+-------+------+-------------+\n\n-- tumbling window aggregation\nFlink SQL&gt; SELECT window_start, window_end, SUM(price) AS total_price\n  FROM TABLE(\n    TUMBLE(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '10' MINUTES))\n  GROUP BY window_start, window_end;\n+------------------+------------------+-------------+\n|     window_start |       window_end | total_price |\n+------------------+------------------+-------------+\n| 2020-04-15 08:00 | 2020-04-15 08:10 |       11.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |       10.00 |\n+------------------+------------------+-------------+\n\n-- hopping window aggregation\nFlink SQL&gt; SELECT window_start, window_end, SUM(price) AS total_price\n  FROM TABLE(\n    HOP(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '5' MINUTES, INTERVAL '10' MINUTES))\n  GROUP BY window_start, window_end;\n+------------------+------------------+-------------+\n|     window_start |       window_end | total_price |\n+------------------+------------------+-------------+\n| 2020-04-15 08:00 | 2020-04-15 08:10 |       11.00 |\n| 2020-04-15 08:05 | 2020-04-15 08:15 |       15.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |       10.00 |\n| 2020-04-15 08:15 | 2020-04-15 08:25 |        6.00 |\n+------------------+------------------+-------------+\n\n-- cumulative window aggregation\nFlink SQL&gt; SELECT window_start, window_end, SUM(price) AS total_price\n  FROM TABLE(\n    CUMULATE(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '2' MINUTES, INTERVAL '10' MINUTES))\n  GROUP BY window_start, window_end;\n+------------------+------------------+-------------+\n|     window_start |       window_end | total_price |\n+------------------+------------------+-------------+\n| 2020-04-15 08:00 | 2020-04-15 08:06 |        4.00 |\n| 2020-04-15 08:00 | 2020-04-15 08:08 |        6.00 |\n| 2020-04-15 08:00 | 2020-04-15 08:10 |       11.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:12 |        3.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:14 |        4.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:16 |        4.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:18 |       10.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |       10.00 |\n+------------------+------------------+-------------+\n\n-- session window aggregation with partition keys\nFlink SQL&gt; SELECT window_start, window_end, supplier_id, SUM(price) AS total_price\n           FROM TABLE(\n               SESSION(TABLE Bid PARTITION BY supplier_id, DESCRIPTOR(bidtime), INTERVAL '2' MINUTES))\n           GROUP BY window_start, window_end, supplier_id;\n+------------------+------------------+-------------+-------------+\n|     window_start |       window_end | supplier_id | total_price |\n+------------------+------------------+-------------+-------------+\n| 2020-04-15 08:05 | 2020-04-15 08:09 | supplier1   |        6.00 |\n| 2020-04-15 08:09 | 2020-04-15 08:13 | supplier2   |        8.00 |\n| 2020-04-15 08:13 | 2020-04-15 08:15 | supplier1   |        1.00 |\n| 2020-04-15 08:17 | 2020-04-15 08:19 | supplier2   |        6.00 |\n+------------------+------------------+-------------+-------------+\n\n-- session window aggregation without partition keys\nFlink SQL&gt; SELECT window_start, window_end, SUM(price) AS total_price\n           FROM TABLE(\n               SESSION(TABLE Bid, DESCRIPTOR(bidtime), INTERVAL '2' MINUTES))\n           GROUP BY window_start, window_end;\n+------------------+------------------+-------------+\n|     window_start |       window_end | total_price |\n+------------------+------------------+-------------+\n| 2020-04-15 08:05 | 2020-04-15 08:15 |       15.00 |\n| 2020-04-15 08:17 | 2020-04-15 08:19 |        6.00 |\n+------------------+------------------+-------------+\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#_4","title":"\u591a\u7ef4\u805a\u5408","text":"<p>\u7a97\u53e3\u805a\u5408\u4e5f\u652f\u6301\u591a\u7ef4\u805a\u5408\u8bed\u6cd5\u3002Grouping Sets \u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u6807\u51c6\u7684 GROUP BY \u8bed\u53e5\u6765\u63cf\u8ff0\u66f4\u590d\u6742\u7684\u5206\u7ec4\u64cd\u4f5c\u3002\u6570\u636e\u6309\u6bcf\u4e2a\u6307\u5b9a\u7684 Grouping Sets \u5206\u522b\u5206\u7ec4\uff0c\u5e76\u50cf\u7b80\u5355\u7684 GROUP BY \u5b50\u53e5\u4e00\u6837\u4e3a\u6bcf\u4e2a\u7ec4\u8fdb\u884c\u805a\u5408\u3002</p> <p>GROUPING SETS \u7a97\u53e3\u805a\u5408\u4e2d GROUP BY \u5b50\u53e5\u5fc5\u987b\u5305\u542b window_start \u548c window_end \u5217\uff0c\u4f46 GROUPING SETS \u5b50\u53e5\u4e2d\u4e0d\u80fd\u5305\u542b\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u3002</p> <pre><code>SELECT   window_start,\n         window_end,\n         supplier_id,\n         sum(price) AS total_price\nFROM     table(tumble(table bid, descriptor(bidtime), interval '10' minutes))\nGROUP BY window_start,\n         window_end,\n         grouping sets ((supplier_id), ());\n+------------------+------------------+-------------+-------------+\n|     window_start |       window_end | supplier_id | total_price |\n+------------------+------------------+-------------+-------------+\n| 2020-04-15 08:00 | 2020-04-15 08:10 |      (NULL) |       11.00 |\n| 2020-04-15 08:00 | 2020-04-15 08:10 |   supplier2 |        5.00 |\n| 2020-04-15 08:00 | 2020-04-15 08:10 |   supplier1 |        6.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |      (NULL) |       10.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |   supplier2 |        9.00 |\n| 2020-04-15 08:10 | 2020-04-15 08:20 |   supplier1 |        1.00 |\n+------------------+------------------+-------------+-------------+\n</code></pre> <p>ROLLUP \u662f\u4e00\u79cd\u7279\u5b9a\u901a\u7528\u7c7b\u578b Grouping Sets \u7684\u7b80\u5199\u3002\u4ee3\u8868\u7740\u6307\u5b9a\u8868\u8fbe\u5f0f\u548c\u6240\u6709\u524d\u7f00\u7684\u5217\u8868\uff0c\u5305\u62ec\u7a7a\u5217\u8868\u3002\u4f8b\u5982\uff1a<code>ROLLUP (one,two)</code> \u7b49\u6548\u4e8e <code>GROUPING SET((one,two),(one),())</code>\u3002</p> <pre><code>SELECT   window_start,\n         window_end,\n         supplier_id,\n         sum(price) AS total_price\nFROM     table(tumble(table bid, descriptor(bidtime), interval '10' minutes))\nGROUP BY window_start,\n         window_end,\n         rollup (supplier_id);\n</code></pre> <p>CUBE \u662f\u4e00\u79cd\u7279\u5b9a\u901a\u7528\u7c7b\u578b Grouping Sets \u7684\u7b80\u5199\u3002\u4ee3\u8868\u7740\u6307\u5b9a\u5217\u8868\u4ee5\u53ca\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\u548c\u5e42\u96c6\u3002</p> <p>CUBE \u7a97\u53e3\u805a\u5408\u4e2d GROUP BY \u5b50\u53e5\u5fc5\u987b\u5305\u542b window_start \u548c window_end \u5217\uff0c\u4f46 CUBE \u5b50\u53e5\u4e2d\u4e0d\u80fd\u5305\u542b\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u3002</p> <p>\u4f8b\u5982\uff1a\u4e0b\u9762\u4e24\u4e2a\u67e5\u8be2\u662f\u7b49\u6548\u7684\u3002</p> <pre><code>SELECT   window_start,\n         window_end,\n         item,\n         supplier_id,\n         sum(price) AS total_price\nFROM     table(tumble(table bid, descriptor(bidtime), interval '10' minutes))\nGROUP BY window_start,\n         window_end,\n         cube (supplier_id, item);\n\nSELECT   window_start,\n         window_end,\n         item,\n         supplier_id,\n         sum(price) AS total_price\nFROM     table(tumble(table bid, descriptor(bidtime), interval '10' minutes))\nGROUP BY window_start,\n         window_end,\n         grouping sets ( (supplier_id, item), (supplier_id ), ( item), ( ) )\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#_5","title":"\u591a\u7ea7\u7a97\u53e3\u805a\u5408","text":"<p>window_start \u548c window_end \u5217\u662f\u666e\u901a\u7684\u65f6\u95f4\u6233\u5b57\u6bb5\uff0c\u5e76\u4e0d\u662f\u65f6\u95f4\u5c5e\u6027\u3002\u56e0\u6b64\u5b83\u4eec\u4e0d\u80fd\u5728\u540e\u7eed\u7684\u64cd\u4f5c\u4e2d\u5f53\u505a\u65f6\u95f4\u5c5e\u6027\u8fdb\u884c\u57fa\u4e8e\u65f6\u95f4\u7684\u64cd\u4f5c\u3002\u4e3a\u4e86\u4f20\u9012\u65f6\u95f4\u5c5e\u6027\uff0c\u9700\u8981\u5728 GROUP BY \u5b50\u53e5\u4e2d\u6dfb\u52a0 window_time \u5217\u3002window_time \u662f Windowing TVFs \u4ea7\u751f\u7684\u4e09\u5217\u4e4b\u4e00\uff0c\u5b83\u662f\u7a97\u53e3\u7684\u65f6\u95f4\u5c5e\u6027\u3002window_time \u6dfb\u52a0\u5230 GROUP BY \u5b50\u53e5\u540e\u5c31\u80fd\u88ab\u9009\u5b9a\u4e86\u3002\u4e0b\u9762\u7684\u67e5\u8be2\u53ef\u4ee5\u628a\u5b83\u7528\u4e8e\u540e\u7eed\u57fa\u4e8e\u65f6\u95f4\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\uff1a\u591a\u7ea7\u7a97\u53e3\u805a\u5408 \u548c Window TopN\u3002</p> <p>\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u591a\u7ea7\u7a97\u53e3\u805a\u5408\uff1a\u7b2c\u4e00\u4e2a\u7a97\u53e3\u805a\u5408\u540e\u628a\u65f6\u95f4\u5c5e\u6027\u4f20\u9012\u7ed9\u7b2c\u4e8c\u4e2a\u7a97\u53e3\u805a\u5408\u3002</p> <pre><code>-- tumbling 5 minutes for each supplier_id\nCREATE VIEW window1 AS\n-- Note: The window start and window end fields of inner Window TVF are optional in the select clause. However, if they appear in the clause, they need to be aliased to prevent name conflicting with the window start and window end of the outer Window TVF.\nSELECT   window_start AS window_5mintumble_start,\n         window_end   AS window_5mintumble_end,\n         window_time  AS rowtime,\n         sum(price)   AS partial_price\nFROM     table(tumble(table bid, descriptor(bidtime), interval '5' minutes))\nGROUP BY supplier_id,\n         window_start,\n         window_end,\n         window_time;\n\n-- tumbling 10 minutes on the first window\nSELECT   window_start,\n         window_end,\n         sum(partial_price) AS total_price\nFROM     table(tumble(table window1, descriptor(rowtime), interval '10' minutes))\nGROUP BY window_start,\n         window_end;\n</code></pre>"},{"location":"Flink/Flink%20SQL/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/#over","title":"Over \u805a\u5408","text":"<p>OVER \u805a\u5408\u901a\u8fc7\u6392\u5e8f\u540e\u7684\u8303\u56f4\u6570\u636e\u4e3a\u6bcf\u884c\u8f93\u5165\u8ba1\u7b97\u51fa\u805a\u5408\u503c\u3002\u548c GROUP BY \u805a\u5408\u4e0d\u540c\uff0cOVER \u805a\u5408\u4e0d\u4f1a\u628a\u7ed3\u679c\u901a\u8fc7\u5206\u7ec4\u51cf\u5c11\u5230\u4e00\u884c\uff0c\u5b83\u4f1a\u4e3a\u6bcf\u884c\u8f93\u5165\u589e\u52a0\u4e00\u4e2a\u805a\u5408\u503c\u3002</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u67e5\u8be2\u4e3a\u6bcf\u4e2a\u8ba2\u5355\u8ba1\u7b97\u524d\u4e00\u4e2a\u5c0f\u65f6\u4e4b\u5185\u63a5\u6536\u5230\u7684\u540c\u4e00\u4ea7\u54c1\u6240\u6709\u8ba2\u5355\u7684\u603b\u91d1\u989d\u3002</p> <pre><code>select   order_id,\n         order_time,\n         amount,\n         sum(amount) over (partition by product order by order_time range between interval '1' hour preceding and current row ) as one_hour_prod_amount_sum\nfrom     orders\n</code></pre> <p>\u4f60\u53ef\u4ee5\u5728\u4e00\u4e2a SELECT \u5b50\u53e5\u4e2d\u5b9a\u4e49\u591a\u4e2a OVER \u7a97\u53e3\u805a\u5408\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u6d41\u5f0f\u67e5\u8be2\uff0c\u7531\u4e8e\u76ee\u524d\u7684\u9650\u5236\uff0c\u6240\u6709\u805a\u5408\u7684 OVER \u7a97\u53e3\u5fc5\u987b\u662f\u76f8\u540c\u7684\u3002</p> <p>WINDOW \u5b50\u53e5\u53ef\u7528\u4e8e\u5728 SELECT \u5b50\u53e5\u4e4b\u5916\u5b9a\u4e49 OVER \u7a97\u53e3\u3002\u5b83\u8ba9\u67e5\u8be2\u53ef\u8bfb\u6027\u66f4\u597d\uff0c\u4e5f\u5141\u8bb8\u591a\u4e2a\u805a\u5408\u5171\u7528\u4e00\u4e2a\u7a97\u53e3\u5b9a\u4e49\u3002</p> <pre><code>SELECT order_id, order_time, amount,\n    SUM(amount) OVER w AS sum_amount,\n    AVG(amount) OVER w AS avg_amount\nFROM Orders\nWINDOW w AS (\n    PARTITION BY product\n    ORDER BY order_time\n    RANGE BETWEEN INTERVAL '1' HOUR PRECEDING AND CURRENT ROW)\n</code></pre>"},{"location":"Flink/%E8%AE%BA%E6%96%87%20%26%20FLIP/98.Flink%20%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/","title":"Flink \u8bba\u6587\u7cbe\u8bfb","text":"<p>Apache Flink\u2122: Stream and Batch Processing in a Single Engine</p> <p>\u8bba\u6587\u7cbe\u8bfb\u6587\u6863</p> <p>\u8bba\u6587\u7cbe\u8bfb\u89c6\u9891</p>"},{"location":"Flink/%E8%AE%BA%E6%96%87%20%26%20FLIP/98.Flink%20%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/#memory-management","title":"Memory Management","text":"<p>\u200bFlink \u57fa\u4e8e\u6570\u636e\u5e93\u6280\u672f\u5c06\u6570\u636e\u5e8f\u5217\u5316\u4e3a\u5185\u5b58\u6bb5\uff0c\u800c\u4e0d\u662f\u5728 JVM \u7684\u5806\u4e2d\u5206\u914d\u5bf9\u8c61\u6765\u8868\u793a\u7f13\u51b2\u7684\u4f20\u8f93\u4e2d\u7684\u6570\u636e\u8bb0\u5f55\u3002\u6392\u5e8f\u548c\u8fde\u63a5\u7b49\u64cd\u4f5c\u5c3d\u53ef\u80fd\u76f4\u63a5\u5728\u4e8c\u8fdb\u5236\u6570\u636e\u4e0a\u64cd\u4f5c\uff0c\u5c06\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u5f00\u9500\u964d\u5230\u6700\u4f4e\u5e76\u5728\u9700\u8981\u65f6\u90e8\u5206\u5c06\u6570\u636e\u6ea2\u5199\u5230\u78c1\u76d8\u4e0a\u3002\u4e3a\u4e86\u5904\u7406\u4efb\u610f\u5bf9\u8c61\uff0cFlink \u4f7f\u7528\u7c7b\u578b\u63a8\u65ad\u548c\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u673a\u5236\u3002\u901a\u8fc7\u5c06\u6570\u636e\u5904\u7406\u4fdd\u6301\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u5e76\u5728\u5806\u5916\u5904\u7406\uff0cFlink \u6210\u529f\u5730\u51cf\u5c11\u4e86\u5783\u573e\u6536\u96c6\u7684\u5f00\u9500\uff0c\u5e76\u4f7f\u7528\u9ad8\u6548\u7684\u7f13\u5b58\u548c\u53ef\u9760\u7684\u7b97\u6cd5\u5728\u5185\u5b58\u538b\u529b\u4e0b\u826f\u597d\u6269\u5c55\u3002</p> <p>\u5728 Flink \u4e2d\uff0c\u5185\u5b58\u7ba1\u7406\u662f\u901a\u8fc7 JVM \u7684\u5783\u573e\u56de\u6536\u673a\u5236\u6765\u8fdb\u884c\u7684\u3002Flink \u4f1a\u6839\u636e\u4efb\u52a1\u7684\u9700\u6c42\u548c\u53ef\u7528\u7684\u5185\u5b58\u8d44\u6e90\u8fdb\u884c\u5185\u5b58\u7684\u5206\u914d\u548c\u91ca\u653e\u3002Flink \u4f7f\u7528\u4e86\u4e00\u4e9b\u5185\u5b58\u4f18\u5316\u6280\u672f\uff0c\u5305\u62ec\uff1a</p> <ol> <li> \u5185\u5b58\u7ba1\u7406\u7b56\u7565\uff1a Flink \u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u5185\u5b58\u7ba1\u7406\u7b56\u7565\uff0c\u4f8b\u5982\u5806\u5185\u5b58\u7ba1\u7406\u548c\u5806\u5916\u5185\u5b58\u7ba1\u7406\u3002\u5806\u5185\u5b58\u7ba1\u7406\u4f7f\u7528 JVM \u7684\u5806\u5185\u5b58\u6765\u5b58\u50a8\u6570\u636e\u548c\u8fd0\u884c\u65f6\u5bf9\u8c61\uff0c\u800c\u5806\u5916\u5185\u5b58\u7ba1\u7406\u5c06\u5927\u89c4\u6a21\u6570\u636e\u5b58\u50a8\u5728 JVM \u5806\u4e4b\u5916\uff0c\u4ee5\u51cf\u5c11\u5783\u573e\u56de\u6536\u7684\u538b\u529b\u3002 </li> <li> \u57fa\u4e8e\u5185\u5b58\u7684\u6392\u5e8f\uff1a \u5bf9\u4e8e\u6392\u5e8f\u7b49\u64cd\u4f5c\uff0cFlink \u4f7f\u7528\u5185\u5b58\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u51cf\u5c11\u78c1\u76d8\u8bbf\u95ee\u548c\u63d0\u9ad8\u6570\u636e\u5904\u7406\u901f\u5ea6\u3002Flink \u4f7f\u7528\u5916\u90e8\u6392\u5e8f\u7b97\u6cd5\u548c\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\u6765\u5b9e\u73b0\u57fa\u4e8e\u5185\u5b58\u7684\u6392\u5e8f\uff0c\u5bf9\u6570\u636e\u7684\u5904\u7406\u5c3d\u53ef\u80fd\u7684\u4f7f\u7528\u539f\u59cb\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884c\uff0c\u5c3d\u53ef\u80fd\u7684\u51cf\u5c11\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316\u7684\u5f00\u9500\u3002 </li> <li> \u538b\u7f29\u7b97\u6cd5\uff1a Flink \u652f\u6301\u5bf9\u5185\u5b58\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\uff0c\u4ee5\u51cf\u5c11\u6570\u636e\u5728\u5185\u5b58\u4e2d\u7684\u5360\u7528\u7a7a\u95f4\u3002\u538b\u7f29\u7b97\u6cd5\u53ef\u4ee5\u6839\u636e\u6570\u636e\u7c7b\u578b\u548c\u538b\u7f29\u6bd4\u4f8b\u8fdb\u884c\u9009\u62e9\uff0c\u4ece\u800c\u51cf\u5c11\u5185\u5b58\u4f7f\u7528\u548c\u7f51\u7edc\u4f20\u8f93\u5f00\u9500\u3002 </li> <li> \u5185\u5b58\u7ba1\u7406\u5668\uff1a Flink \u63d0\u4f9b\u4e86\u5185\u5b58\u7ba1\u7406\u5668\u6765\u7ba1\u7406\u5185\u5b58\u7684\u5206\u914d\u548c\u91ca\u653e\u3002\u5185\u5b58\u7ba1\u7406\u5668\u8d1f\u8d23\u52a8\u6001\u7ba1\u7406\u5185\u5b58\u533a\u57df\uff0c\u5e76\u5c06\u5185\u5b58\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u4efb\u52a1\u548c\u6570\u636e\u7ed3\u6784\u3002\u6b64\u5916\uff0c\u5185\u5b58\u7ba1\u7406\u5668\u8fd8\u63d0\u4f9b\u4e86\u5185\u5b58\u91cd\u7528\u673a\u5236\uff0c\u4ee5\u51cf\u5c11\u5185\u5b58\u5206\u914d\u548c\u5783\u573e\u56de\u6536\u7684\u5f00\u9500\u3002 </li> </ol> <p>\u8fd9\u4e9b\u5185\u5b58\u4f18\u5316\u6280\u672f\u5e2e\u52a9 Flink \u5728\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u65f6\u51cf\u5c11\u5185\u5b58\u5f00\u9500\uff0c\u63d0\u9ad8\u5904\u7406\u6027\u80fd\u548c\u6548\u7387\u3002</p>"},{"location":"Flink/%E8%AE%BA%E6%96%87%20%26%20FLIP/99.Dataflow%20%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/","title":"Dataflow \u8bba\u6587\u7cbe\u8bfb","text":"<p>\u8bba\u6587\u5730\u5740</p> <p>\u89c6\u9891</p> <p>\u6587\u6863</p>"},{"location":"Flink/%E8%AE%BA%E6%96%87%20%26%20FLIP/99.Dataflow%20%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/#_1","title":"\u89e6\u53d1\u5668\u6a21\u578b","text":"<p>\u5f88\u591a\u73b0\u6709\u7684\u8ba1\u7b97\u6846\u67b6\u91c7\u7528\u4e86 Watermark \u4f5c\u4e3a\u7a97\u53e3\u8ba1\u7b97\u7684\u89e6\u53d1\u5668\u3002\u4f46\u662f Watermark \u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u6709\u65f6 Watermark \u4e0a\u5347\u592a\u5feb\u3002\u8fd9\u610f\u5473\u7740\u53ef\u80fd\u6709 Watermark \u4ee5\u4e0b\u7684\u6570\u636e\u665a\u5230\u3002\u5bf9\u4e8e\u5f88\u591a\u5206\u5e03\u5f0f\u6570\u636e\u6e90\uff0c\u8981\u5f97\u5230\u4e00\u4e2a\u5b8c\u7f8e\u7684\u4e8b\u4ef6\u65f6\u95f4 Watermark \u662f\u5f88\u96be\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u53ef\u80fd\u4f9d\u9760\u5b83\u5f97\u5230 100% \u7684\u6b63\u786e\u6027\u3002\u200b</li> <li>\u6709\u65f6 Watermark \u4e0a\u5347\u592a\u6162\u3002\u56e0\u4e3a Watermark \u662f\u5168\u5c40\u8fdb\u5ea6\u7684\u5ea6\u91cf\uff0c\u6574\u4e2a\u6570\u636e\u7ba1\u9053\u7684 Watermark \u53ef\u80fd\u88ab\u5355\u6761\u6570\u636e\u62d6\u6162\u3002\u5c31\u7b97\u662f\u4e00\u4e2a\u4e8b\u4ef6\u65f6\u95f4\u504f\u5dee\u4fdd\u6301\u7a33\u5b9a\u7684\u5065\u5eb7\u6570\u636e\u7ba1\u9053\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6570\u636e\u6e90\uff0c\u57fa\u672c\u7684\u504f\u5dee\u4ecd\u4f1a\u8fbe\u5230\u51e0\u5206\u949f\u751a\u81f3\u66f4\u591a\u3002\u56e0\u6b64\uff0c\u5355\u5355\u4f7f\u7528 Watermark \u6765\u5224\u65ad\u7a97\u53e3\u8ba1\u7b97\u7ed3\u679c\u662f\u5426\u53ef\u4ee5\u53d1\u5f80\u4e0b\u6e38\u5927\u6982\u7387\u4f1a\u4ea7\u751f\u6bd4 Lambda \u67b6\u6784\u66f4\u5927\u7684\u5ef6\u8fdf\u3002</li> </ul> <p>\u200bLambda \u67b6\u6784\u5728\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u7684\u65b9\u5f0f\u4e0a\u7ed9\u4e86\u6211\u4eec\u542f\u793a\uff0c\u5b83\u89c4\u907f\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a\u5b83\u4e0d\u8ffd\u6c42\u66f4\u5feb\u5730\u7ed9\u51fa\u6b63\u786e\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u5b83\u53ea\u662f\u7b80\u5355\u5730\u7528\u6d41\u5904\u7406\u5c3d\u5feb\u63d0\u4f9b\u6b63\u786e\u8ba1\u7b97\u7ed3\u679c\u7684\u4f30\u8ba1\u503c\uff0c\u800c\u6279\u5904\u7406\u6700\u7ec8\u4f1a\u4fdd\u8bc1\u8fd9\u4e2a\u503c\u7684\u4e00\u81f4\u6027\u4e0e\u6b63\u786e\u6027\u3002\u56e0\u6b64\u89e6\u53d1\u5668\u57fa\u4e8e\u8fd9\u79cd\u601d\u60f3\uff0c\u901a\u8fc7\u5c3d\u53ef\u80fd\u5feb\u5730\u5148\u7ed9\u51fa\u4e00\u4e2a\u8ba1\u7b97\u7ed3\u679c\uff0c\u6765\u8ffd\u6c42\u5b9e\u65f6\u6027\uff1b\u901a\u8fc7\u591a\u6b21\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u4e4b\u540e\u7684\u6bcf\u4e00\u6b21\u90fd\u6bd4\u4e4b\u524d\u7684\u8ba1\u7b97\u7ed3\u679c\u8981\u66f4\u51c6\u786e\uff0c\u6765\u8ffd\u6c42\u51c6\u786e\u6027\u3002\u6211\u4eec\u79f0\u8fd9\u4e2a\u7279\u6027\u4e3a\u89e6\u53d1\u5668\uff0c\u56e0\u4e3a\u5b83\u89c4\u5b9a\u4e86\u4e00\u4e2a\u7a97\u53e3\u4f55\u65f6\u89e6\u53d1\u8ba1\u7b97\u5f97\u5230\u8f93\u51fa\u7ed3\u679c\u3002</p>"},{"location":"Flink/%E8%AE%BA%E6%96%87%20%26%20FLIP/99.Dataflow%20%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/#_2","title":"\u589e\u91cf\u8ba1\u7b97\u6a21\u578b","text":"<p>\u589e\u91cf\u8ba1\u7b97\u6a21\u578b\u662f\u5bf9\u89e6\u53d1\u5668\u6a21\u578b\u7684\u4e00\u4e2a\u8865\u5145\uff0c\u63cf\u8ff0\u4e86\u89e6\u53d1\u5668\u6a21\u578b\u7684\u591a\u6b21\u8ba1\u7b97\u7ed3\u679c\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>\u200b \u4e09\u79cd\u7b56\u7565\uff1a\u200b</p> <ul> <li>\u4e22\u5f03\uff1a\u89e6\u53d1\u8ba1\u7b97\u540e\uff0c\u7a97\u53e3\u5185\u5bb9\u88ab\u4e22\u5f03\uff0c\u540e\u7eed\u7684\u8ba1\u7b97\u7ed3\u679c\u4e0e\u5148\u524d\u7684\u8ba1\u7b97\u7ed3\u679c\u6ca1\u6709\u5173\u7cfb\u3002\u200b</li> <li>\u7d2f\u79ef\uff1a\u89e6\u53d1\u8ba1\u7b97\u540e\uff0c\u7a97\u53e3\u5185\u5bb9\u88ab\u5b8c\u6574\u4fdd\u7559\u5728\u6301\u4e45\u5316\u72b6\u6001\u4e2d\uff0c\u540e\u7eed\u7684\u8ba1\u7b97\u7ed3\u679c\u4f1a\u4fee\u6b63\u5148\u524d\u7684\u7ed3\u679c\u3002\u200b</li> <li>\u7d2f\u79ef\u5e76\u64a4\u56de\uff1a\u89e6\u53d1\u8ba1\u7b97\u540e\uff0c\u5728\u7d2f\u79ef\u8bed\u4e49\u7684\u57fa\u7840\u4e0a\uff0c\u8f93\u51fa\u7ed3\u679c\u7684\u62f7\u8d1d\u4e5f\u88ab\u5b58\u50a8\u5728\u4e86\u6301\u4e45\u5316\u72b6\u6001\u4e2d\u3002\u5f53\u4e4b\u540e\u7a97\u53e3\u518d\u6b21\u89e6\u53d1\u8ba1\u7b97\u65f6\uff0c\u4f1a\u5148\u5f15\u53d1\u5148\u524d\u7ed3\u679c\u7684\u64a4\u56de\uff0c\u7136\u540e\u65b0\u7684\u8ba1\u7b97\u7ed3\u679c\u518d\u53d1\u5f80\u4e0b\u6e38\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <p></p> <p>\u4e22\u5f03\u7b56\u7565\uff1a</p> <pre><code>First trigger firing:  [5, 8, 3]\nSecond trigger firing:           [15, 19, 23]\nThird trigger firing:                         [9, 13, 10]\n</code></pre> <p>\u7d2f\u8ba1\u7b56\u7565\uff1a</p> <pre><code>First trigger firing:  [5, 8, 3]\nSecond trigger firing: [5, 8, 3, 15, 19, 23]\nThird trigger firing:  [5, 8, 3, 15, 19, 23, 9, 13, 10]\n</code></pre>"},{"location":"Hadoop/1.%20Hadoop/","title":"Hadoop","text":""},{"location":"Hadoop/1.%20Hadoop/#hadoop_1","title":"Hadoop \u662f\u4ec0\u4e48\uff1f","text":"<p>Hadoop \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u6846\u67b6\uff0c\u4e3b\u8981\u89e3\u51b3\u6d77\u91cf\u6570\u636e\u7684\u5b58\u50a8\u548c\u8ba1\u7b97\u95ee\u9898\u3002</p> <p>Hadoop \u4e3b\u8981\u7531\u4e09\u4e2a\u6a21\u5757\u7ec4\u6210\uff1a</p> <ul> <li>HDFS\uff1a\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf</li> <li>MapReduce\uff1a\u5206\u5e03\u5f0f\u8ba1\u7b97\u6846\u67b6\uff0c\u6216\u8005\u8bf4\u5206\u5e03\u5f0f\u7f16\u7a0b\u6a21\u578b\uff0c\u7528\u6237\u53ef\u4ee5\u57fa\u4e8e\u6b64\u8fdb\u884c\u5206\u5e03\u5f0f\u6279\u5904\u7406</li> <li>Yarn\uff1a\u901a\u7528\u7684\u8d44\u6e90\u7ba1\u7406\u7cfb\u7edf\uff0c\u8fdb\u884c\u96c6\u7fa4\u8d44\u6e90\u7684\u7edf\u4e00\u7ba1\u7406\u4e0e\u5206\u914d\uff0c\u4e3b\u8981\u7ed9\u5206\u5e03\u5f0f\u8ba1\u7b97\u5f15\u64ce\u534f\u8c03\u7ba1\u7406\u96c6\u7fa4\u8d44\u6e90</li> </ul> <p>\u603b\u7684\u6765\u8bf4\uff0cHDFS \u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684\u5b58\u50a8\u80fd\u529b\uff0cMapReduce \u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u8ba1\u7b97\u80fd\u529b\uff0cYarn \u63d0\u4f9b\u4e86\u96c6\u7fa4\u8ba1\u7b97\u8d44\u6e90\u7684\u7ba1\u7406\u548c\u8c03\u5ea6\u80fd\u529b\u3002</p>"},{"location":"Hadoop/1.%20Hadoop/#hadoop_2","title":"Hadoop \u7684\u7279\u70b9\uff1f","text":"<ul> <li>\u9ad8\u53ef\u9760\u6027\uff1aHadoop \u5e95\u5c42\u7ef4\u62a4\u591a\u4e2a\u6570\u636e\u526f\u672c\uff0c\u5373\u4f7f Hadoop \u67d0\u4e2a\u8ba1\u7b97\u5143\u7d20\u6216\u5b58\u50a8\u51fa\u73b0\u6545\u969c\u65f6\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u6570\u636e\u7684\u4e22\u5931</li> <li>\u9ad8\u6269\u5c55\u6027\uff1a\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u589e\u52a0\u673a\u5668\u7684\u65b9\u5f0f\uff0c\u65b9\u4fbf\u7684\u6269\u5c55\u6570\u4ee5\u5343\u8ba1\u7684\u8282\u70b9</li> <li>\u9ad8\u6548\u6027\uff1a\u5728 MapReduce \u7684\u601d\u60f3\u4e0b\uff0cHadoop \u662f\u5206\u5e03\u5f0f\u5e76\u884c\u8ba1\u7b97\uff0c\u52a0\u5feb\u4efb\u52a1\u5904\u7406\u901f\u5ea6</li> <li>\u9ad8\u5bb9\u9519\u6027\uff1a\u80fd\u591f\u81ea\u52a8\u5c06\u5931\u8d25\u7684\u4efb\u52a1\u91cd\u65b0\u5206\u914d</li> </ul>"},{"location":"Hadoop/1.%20Hadoop/#hadoop-102030","title":"Hadoop 1.0/2.0/3.0 \u7684\u533a\u522b\uff1f","text":"<p>Hadoop1.0 \u5347\u7ea7\u5230 2.0 \u67b6\u6784\u53d1\u751f\u4e86\u6bd4\u8f83\u5927\u7684\u53d8\u5316\uff0c\u65b0\u589e\u4e86 YARN \u6a21\u5757\uff0c2.0 \u5230 3.0 \u5728\u67b6\u6784\u4e0a\u6ca1\u6709\u6539\u53d8\uff0c\u4f46\u5404\u7248\u672c\u4e4b\u95f4\u5728\u7ec6\u8282\u4e0a\u5747\u505a\u4e86\u5f88\u591a\u4f18\u5316\u3002</p> <p>1.0 \u4e0e 2.0 \u7684\u533a\u522b\uff1a</p> <p>\u4ece HDFS \u6765\u8bf4\uff1a</p> <ol> <li>Hadoop2.0 \u65b0\u589e\u4e86 HDFS\u00a0HA \u673a\u5236\uff0cHA \u589e\u52a0\u4e86 standby namenode \u8fdb\u884c\u70ed\u5907\u4efd\uff0c\u89e3\u51b3\u4e86 1.0 \u7684\u5355\u70b9\u6545\u969c\u95ee\u9898\u3002</li> <li>Hadoop2.0 \u65b0\u589e\u4e86 HDFS federation\uff0c\u89e3\u51b3\u4e86 HDFS \u6c34\u5e73\u53ef\u6269\u5c55\u80fd\u529b\u3002</li> </ol> <p>HDFS federation \u5141\u8bb8\u6709\u591a\u4e2a namenode \u72ec\u7acb\u8fd0\u884c\u7ec4\u6210\u8054\u90a6\u3002\u6bcf\u4e2a datanode \u5411\u6240\u6709 namenode \u8fdb\u884c\u6ce8\u518c\u3002\u6bcf\u4e2a namenode \u7ef4\u62a4\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u5377\uff08\u4e92\u76f8\u72ec\u7acb\uff09\u4e0a\u5c42\u901a\u8fc7\u4e00\u4e2a\u6302\u8f7d\u8868\u7ec4\u7ec7\u6765\u8bbf\u95ee\u6570\u636e\u3002</p> <p>\u4ece MapReduce \u6765\u8bf4\uff1a</p> <ul> <li>1.0 \u4e2d MapReduce \u540c\u65f6\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u8fd0\u7b97\u548c\u8d44\u6e90\u7684\u8c03\u5ea6\uff0c\u8026\u5408\u6027\u8f83\u5927\uff1b2.0 \u4e2d\u589e\u52a0\u4e86 Yarn\u3002Yarn \u53ea\u8d1f\u8d23\u8d44\u6e90\u7684\u8c03\u5ea6\uff0cMapReduce \u53ea\u8d1f\u8d23\u8fd0\u7b97\u3002</li> </ul> <p>2.0 \u4e0e 3.0 \u7684\u533a\u522b\uff1a</p> <ol> <li>Java \u8fd0\u884c\u73af\u5883\u5347\u7ea7\u4e3a 1.8</li> <li>HDFS \u652f\u6301\u7ea0\u5220\u7801\uff1a\u7ea0\u5220\u7801\u76f8\u6bd4\u4e8e\u526f\u672c\u673a\u5236\u8282\u7701\u4e86\u4e00\u534a\u4ee5\u4e0a\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u666e\u901a\u526f\u672c\u673a\u5236\u9700\u8981 3 \u500d\u5b58\u50a8\u7a7a\u95f4\u800c\u7ea0\u5220\u7801\u53ef\u4ee5\u8282\u7701\u8fd1\u4e00\u534a\u7684\u5b58\u50a8\u7a7a\u95f4\u3002</li> <li>YARN \u65f6\u95f4\u7ebf\u670d\u52a1</li> <li>\u652f\u6301\u591a\u4f59 2 \u4e2a\u4ee5\u4e0a\u7684 NameNode\uff1a3.0 \u652f\u6301\u5355 active namenode + \u591a standby namenode \u90e8\u7f72\u65b9\u5f0f\u8fdb\u4e00\u6b65\u63d0\u5347\u4e86\u53ef\u7528\u6027\u3002</li> <li>MapReduce \u672c\u5730\u4f18\u5316\uff0c\u6027\u80fd\u63d0\u5347\u4e86 30%\u3002</li> </ol>"},{"location":"Hadoop/1.%20Hadoop/#hadoop_3","title":"Hadoop \u96c6\u7fa4\u5de5\u4f5c\u65f6\u542f\u52a8\u4e86\u54ea\u4e9b\u8fdb\u7a0b\uff1f","text":"<ul> <li>NameNode</li> <li>DataNode</li> <li>Secondary NameNode</li> <li>ResourceManager</li> <li>NodeManager</li> </ul> <p>\u5728 HA \u6a21\u5f0f\u4e0b\uff1a</p> <ul> <li>ZKFC\uff1a\u76d1\u63a7 NameNode \u7684\u5065\u5eb7\u72b6\u6001\uff0c\u5e76\u7ef4\u6301\u548c ZK \u96c6\u7fa4\u7684\u8054\u7cfb\uff0c\u5728\u8282\u70b9\u5931\u6548\u65f6\u81ea\u52a8\u8fdb\u884c\u6545\u969c\u8f6c\u79fb</li> <li>JournalNode\uff1a\u5b58\u50a8\u5171\u4eab NameNode \u7684 editlog</li> </ul>"},{"location":"Hadoop/2.%20HDFS/","title":"HDFS","text":""},{"location":"Hadoop/2.%20HDFS/#_1","title":"\u6a21\u62df\u4e00\u4e2a\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf","text":"<ul> <li>\u5982\u4f55\u89e3\u51b3\u6d77\u91cf\u6570\u636e\u5b58\u7684\u4e0b\u7684\u95ee\u9898\uff1f-- \u5206\u5e03\u5f0f\u5b58\u50a8</li> <li>\u5982\u4f55\u89e3\u51b3\u5927\u6587\u4ef6\u4f20\u8f93\u6548\u7387\u6162\u7684\u95ee\u9898\uff1f-- \u5206\u5757\u5b58\u50a8</li> <li>\u5982\u4f55\u89e3\u51b3\u6d77\u91cf\u6570\u636e\u6587\u4ef6\u67e5\u8be2\u7684\u95ee\u9898\uff1f-- \u5143\u6570\u636e\u8bb0\u5f55</li> <li>\u5982\u4f55\u89e3\u51b3\u786c\u4ef6\u6545\u969c\u6570\u636e\u4e22\u5931\u7684\u95ee\u9898\uff1f-- \u526f\u672c\u673a\u5236</li> <li>\u5982\u4f55\u89e3\u51b3\u7528\u6237\u67e5\u8be2\u89c6\u89d2\u7edf\u4e00\u7684\u95ee\u9898\uff1f-- \u62bd\u8c61\u76ee\u5f55\u6811\u7ed3\u6784\uff08Namespace\uff09</li> </ul>"},{"location":"Hadoop/2.%20HDFS/#hdfs_1","title":"HDFS \u4f18\u7f3a\u70b9","text":"<p>HDFS\uff0c\u5168\u79f0 Hadoop Distributed File System\uff0c\u610f\u4e3a Hadoop \u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002HDFS \u662f\u4e00\u4e2a\u4e3b\u4ece\u67b6\u6784\uff0c\u7531\u4e00\u4e2a\u4e3b\u8282\u70b9 NameNode \u548c\u82e5\u5e72\u4ece\u8282\u70b9 DataNode \u6784\u6210\u3002\u5728\u5b9e\u9645\u7684\u6587\u4ef6\u8bfb\u5199\u8fc7\u7a0b\u4e2d\uff0c\u8fd8\u5b58\u5728\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u5728\u7528\u6237\u4e0e HDFS \u4e4b\u95f4\u8fdb\u884c\u4ea4\u4e92\u3002</p> <p>HDFS \u7684\u4f7f\u7528\u573a\u666f\uff1a\u9002\u5408\u4e00\u6b21\u5199\u5165\uff0c\u591a\u6b21\u8bfb\u51fa\u7684\u573a\u666f\u3002</p> <p>HDFS \u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u9ad8\u5bb9\u9519\u6027\uff1a\u6570\u636e\u81ea\u52a8\u4fdd\u5b58\u591a\u4e2a\u526f\u672c\u3002\u63d0\u9ad8\u6570\u636e\u53ef\u9760\u6027\u3002</li> <li>\u5206\u5e03\u5f0f\u5b58\u50a8 + \u5206\u5757\u5b58\u50a8\uff1a\u89e3\u51b3\u5b58\u7684\u4e0b\u548c\u4f20\u8f93\u6548\u7387\u7684\u95ee\u9898</li> <li>\u6c34\u5e73\u6269\u5c55\u6027\uff1a\u53ef\u6784\u5efa\u5728\u5ec9\u4ef7\u673a\u5668\u4e0a\uff0c\u589e\u52a0\u8282\u70b9\u63d0\u9ad8\u5b58\u50a8\u80fd\u529b\u3002</li> </ul> <p>HDFS \u7684\u7f3a\u70b9\uff1a</p> <ul> <li>\u4e0d\u9002\u5408\u4f4e\u5ef6\u8fdf\u6570\u636e\u8bbf\u95ee</li> <li>\u65e0\u6cd5\u9ad8\u6548\u5730\u5bf9\u5927\u91cf\u5c0f\u6587\u4ef6\u8fdb\u884c\u5b58\u50a8</li> <li>\u5b58\u50a8\u5927\u91cf\u5c0f\u6587\u4ef6\u7684\u8bdd\uff0c\u5b83\u4f1a\u5360\u7528 NameNode \u5927\u91cf\u7684\u5185\u5b58\u6765\u5b58\u50a8\u6587\u4ef6\u76ee\u5f55\u548c\u5757\u4fe1\u606f</li> <li>\u5c0f\u6587\u4ef6\u7684\u5bfb\u5740\u65f6\u95f4\u4f1a\u8d85\u8fc7\u8bfb\u53d6\u65f6\u95f4\uff0c\u5b83\u8fdd\u53cd\u4e86 HDFS \u7684\u8bbe\u8ba1\u76ee\u6807</li> <li>\u4e0d\u652f\u6301\u5e76\u53d1\u5199\u5165\u3001\u6587\u4ef6\u968f\u673a\u4fee\u6539</li> <li>\u4e00\u4e2a\u6587\u4ef6\u53ea\u80fd\u6709\u4e00\u4e2a\u5199\uff0c\u4e0d\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5199</li> <li>\u4ec5\u652f\u6301\u6570\u636e append\uff08\u8ffd\u52a0\uff09\uff0c\u4e0d\u652f\u6301\u6587\u4ef6\u7684\u968f\u673a\u4fee\u6539</li> </ul>"},{"location":"Hadoop/2.%20HDFS/#hdfs_2","title":"HDFS \u7684\u7ec4\u6210\u67b6\u6784","text":"<p>HDFS \u662f\u7ecf\u5178\u7684\u4e3b\u4ece\u67b6\u6784\u3002</p> <p>NameNode\uff1a</p> <ul> <li>\u7ef4\u62a4 HDFS \u7684\u547d\u540d\u7a7a\u95f4\uff08\u8bb0\u5f55\u4e86 HDFS \u4e2d\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u5c42\u6b21\u7ed3\u6784\uff09</li> <li>\u5b58\u50a8\u6587\u4ef6\u7684\u5143\u6570\u636e\u4fe1\u606f\uff08\u6587\u4ef6\u540d\u3001\u76ee\u5f55\u3001\u4f4d\u7f6e\u4fe1\u606f\u3001\u526f\u672c\u6570\u91cf\u7b49\uff09</li> <li>\u5904\u7406\u5ba2\u6237\u7aef\u8bfb\u5199\u8bf7\u6c42</li> </ul> <p>DataNode\uff1a</p> <ul> <li>\u5b58\u50a8\u5b9e\u9645\u7684\u6570\u636e\u5757\uff08\u548c\u4e00\u4e9b\u5143\u6570\u636e\uff1a\u6570\u636e\u5757\u957f\u5ea6\u3001\u6821\u9a8c\u548c\u3001\u65f6\u95f4\u6233\u7b49\uff09</li> <li>\u6267\u884c\u6570\u636e\u5757\u7684\u8bfb\u5199\u64cd\u4f5c</li> </ul> <p>SecondaryNameNode\uff1a</p> <ul> <li>\u7528\u4e8e\u652f\u6301 HDFS \u7684\u9ad8\u53ef\u7528\u548c\u6570\u636e\u6062\u590d</li> <li>\u5e76\u975e NameNode \u7684\u70ed\u5907\uff0c\u5f53 NameNode \u6302\u6389\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u80fd\u9a6c\u4e0a\u66ff\u6362 NameNode \u63d0\u4f9b\u670d\u52a1</li> <li>\u8f85\u52a9 NameNode\uff0c\u5206\u62c5\u5176\u5de5\u4f5c\u91cf\uff0c\u5982\u5b9a\u671f\u5408\u5e76 Fsimage \u548c EditLog\uff0c\u5e76\u63a8\u9001\u7ed9 NameNode</li> <li>\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\uff0c\u53ef\u8f85\u52a9\u6062\u590d NameNode</li> <li>\u4e00\u822c\u751f\u4ea7\u73af\u5883\u4e0d\u4f1a\u4f7f\u7528 2NN\uff0c\u800c\u4f7f\u7528 JournalNode</li> </ul> <p>\u6ce8\uff1aeditlog \u5373 NameNode \u589e\u91cf\u7f16\u8f91\u65e5\u5fd7\uff0c\u8bb0\u5f55\u4e86\u5ba2\u6237\u7aef\u5bf9 HDFS \u7684\u6240\u6709\u5199\u64cd\u4f5c\uff0c\u4e00\u65e6\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\uff0cNameNode \u53ef\u4ee5\u4ece editlog \u4e2d\u6062\u590d\u5143\u6570\u636e\u3002\u4f46\u662f\u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff0ceditlog \u5185\u5bb9\u4f1a\u8d8a\u6765\u8d8a\u591a\uff0c\u6062\u590d\u65f6\u95f4\u4e5f\u4f1a\u8d8a\u6765\u8d8a\u6162\uff0c\u56e0\u6b64 Haoop \u5f15\u5165 Secondary NameNode \u8f85\u52a9 NameNode\uff0c\u5b9a\u671f\u5408\u5e76 fsimage \u548c editlog\u3002</p> <p>Client\uff1a</p> <ul> <li>\u4e0e NameNode \u4ea4\u4e92\uff0c\u83b7\u53d6\u6587\u4ef6\u7684\u4f4d\u7f6e\u4fe1\u606f</li> <li>\u4e0e DataNode \u4ea4\u4e92\uff0c\u8bfb\u5199\u6570\u636e</li> <li>\u901a\u8fc7\u547d\u4ee4\u8bbf\u95ee HDFS\uff0c\u8fdb\u884c\u589e\u5220\u6539\u67e5</li> </ul> <p>ZKFC\uff08ZooKeeper Failover Controller\uff09\uff1a</p> <ul> <li>\u76d1\u63a7 NameNode \u8282\u70b9\u7684\u72b6\u6001\uff0c\u5728\u8282\u70b9\u5931\u6548\u65f6\u81ea\u52a8\u8fdb\u884c\u6545\u969c\u8f6c\u79fb</li> </ul>"},{"location":"Hadoop/2.%20HDFS/#hdfs_3","title":"HDFS \u5143\u6570\u636e","text":"<p>\u5143\u6570\u636e\uff1a\u63cf\u8ff0\u6570\u636e\u7684\u6570\u636e\u3002</p> <p>HDFS \u5143\u6570\u636e\uff1a</p> <ul> <li>\u547d\u540d\u7a7a\u95f4\uff1aHDFS \u4e2d\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u5c42\u6b21\u7ed3\u6784</li> <li>\u6587\u4ef6\u540d\u79f0\u3001\u7c7b\u578b\u3001\u4f4d\u7f6e\u3001\u526f\u672c\u4fe1\u606f\u3001\u6743\u9650\u7b49</li> <li>\u6bcf\u4e2a\u6587\u4ef6\u3001\u76ee\u5f55\u3001Block \u5927\u7ea6\u5360\u7528 150 \u5b57\u8282</li> <li>\u5143\u6570\u636e\u5b58\u50a8\u5728 NameNode \u5185\u5b58\u4e2d\uff0c\u4e5f\u4f1a\u901a\u8fc7\u4ee5 fsimage \u548c editlog \u6301\u4e45\u5316\u7684\u65b9\u5f0f\u4fdd\u8bc1\u53ef\u9760\u6027\u3002</li> </ul> <p>\u5b58\u5728\u5f62\u5f0f\uff1a</p> <ul> <li>editlog\uff1aHDFS \u7684\u589e\u91cf\u7f16\u8f91\u65e5\u5fd7\u6587\u4ef6\uff0c\u4fdd\u5b58\u5ba2\u6237\u7aef\u5bf9 HDFS \u7684\u6240\u6709\u66f4\u6539\u8bb0\u5f55\uff0c\u4e00\u65e6\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\uff0c\u53ef\u4ee5\u4ece editlog \u8fdb\u884c\u6062\u590d\u3002\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u3001\u8ffd\u52a0\u5199\u5165\u7684\u65e5\u5fd7\u6587\u4ef6\u3002</li> <li>fsimage\uff1aHDFS \u5143\u6570\u636e\u955c\u50cf\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u5143\u6570\u636e\u4fe1\u606f\uff0c\u5305\u62ec\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u5c42\u6b21\u7ed3\u6784\u3001\u6743\u9650\u3001\u6240\u6709\u8005\u7b49\u3002\u5b83\u5468\u671f\u6027\u5730\u5c06\u5143\u6570\u636e\u7684\u5feb\u7167\u5199\u5165\u672c\u5730\u78c1\u76d8\u3002</li> </ul> <p>\u5143\u6570\u636e\u5b58\u653e\u8def\u5f84\uff1a</p> <ul> <li>\u5728 hadoop \u6839\u76ee\u5f55\u4e0b\u7684 <code>/etc/hadoop/hdfs-site.xml</code> \u4e2d\u53ef\u4ee5\u8bbe\u7f6e <code>dfs.namenode.name.dir</code></li> </ul> <p>\u5143\u6570\u636e\u7684\u751f\u6210\u6761\u4ef6\uff1a</p> <ul> <li>\u65f6\u95f4\uff1a\u9ed8\u8ba4 1 \u5c0f\u65f6\u5199\u5165\u4e00\u6b21 fsimage</li> <li>\u7a7a\u95f4\uff1a\u9ed8\u8ba4 1 \u767e\u4e07\u6b21\u4e8b\u52a1\u64cd\u4f5c</li> <li>\u4eba\u5de5\u89e6\u53d1\uff1a\u8fdb\u5165 safemode \u4e3b\u52a8\u89e6\u53d1</li> </ul> <p>\u5728\u9ad8\u53ef\u7528\u90e8\u7f72\u6a21\u5f0f\u4e0b\uff0c\u5171\u4eab\u5b58\u50a8\u7cfb\u7edf\u7531\u591a\u4e2a JournalNode \u8282\u70b9\u7ec4\u6210\u3002\u5f53 Active NameNode \u4e2d\u6709\u4e8b\u52a1\u63d0\u4ea4\uff0c Active NameNode \u4f1a\u5c06 editlog \u53d1\u7ed9 JournalNode \u96c6\u7fa4\u3002JournalNode \u96c6\u7fa4\u901a\u8fc7 Paxos \u534f\u8bae\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\u3002Standby NameNode \u5b9a\u671f\u4ece JournalNode \u8bfb\u53d6 editlog\uff0c\u5408\u5e76\u5230\u81ea\u5df1\u7684 fsimage \u4e0a\u3002</p> <p>DataNode \u6c47\u62a5\u5143\u6570\u636e\u4fe1\u606f\uff08Block Report\uff09\uff1a</p> <ul> <li>\u5168\u91cf\u5757\u6c47\u62a5\uff08Full Block Report\uff09\uff1a\u5c06 DN \u4e2d\u5b58\u50a8\u7684 Block \u4fe1\u606f\u90fd\u6c47\u62a5\u7ed9 NN\uff0c\u9ed8\u8ba4\u95f4\u9694\u65f6\u95f4\u4e3a 6 \u5c0f\u65f6\u3002\u96c6\u7fa4\u542f\u52a8\u65f6\u4f1a\u89e6\u53d1\u3002</li> <li>\u589e\u91cf\u5757\u6c47\u62a5\uff08Incremental Block Report\uff09\uff1a\u4e00\u65e6\u89e6\u53d1\u589e\u91cf\u5757\u6c47\u62a5\uff0c\u5c31\u7acb\u5373\u53d1\u9001\u3002\u548c\u5fc3\u8df3\u68c0\u6d4b\u4e00\u8d77\u6c47\u62a5\u3002</li> </ul>"},{"location":"Hadoop/2.%20HDFS/#hdfs_4","title":"HDFS \u7684\u5e38\u7528\u547d\u4ee4","text":"<p>\u901a\u7528\u683c\u5f0f\uff1a</p> <pre><code>hdfs dfs -command\nhadoop fs -command\n</code></pre> <p>\u5217\u51fa\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\uff1a</p> <pre><code>hdfs dfs -ls &lt;path&gt;\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\uff1a</p> <pre><code>hdfs dfs -mkdir &lt;path&gt;\n</code></pre> <p>\u590d\u5236\u672c\u5730\u6587\u4ef6\u5230 HDFS\uff1a</p> <pre><code>hdfs dfs -put &lt;local_path&gt; &lt;hdfs_path&gt;\n</code></pre> <p>\u590d\u5236 HDFS \u6587\u4ef6\u5230\u672c\u5730\uff1a</p> <pre><code>hdfs dfs -get &lt;hdfs_path&gt; &lt;local_path&gt;\n</code></pre> <p>\u4ece HDFS \u4e2d\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55\uff1a</p> <pre><code>hdfs dfs -rm [-r] &lt;path&gt;\n</code></pre> <p>\u4ece HDFS \u4e2d\u9012\u5f52\u5730\u5220\u9664\u76ee\u5f55\uff1a</p> <pre><code>hdfs dfs -rm -r &lt;path&gt;\n</code></pre> <p>\u67e5\u770b\u6587\u4ef6\u7684\u5185\u5bb9\uff1a</p> <pre><code>hdfs dfs -cat &lt;path&gt;\n</code></pre> <p>\u5c06 HDFS \u4e2d\u7684\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\u4e2d\uff1a</p> <pre><code>hdfs dfs -getmerge &lt;hdfs_path&gt; &lt;local_file&gt;\n</code></pre> <p>\u67e5\u770b HDFS \u4e2d\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u5143\u6570\u636e\u4fe1\u606f\uff1a</p> <pre><code>hdfs dfs -stat &lt;path&gt;\n</code></pre>"},{"location":"Hadoop/2.%20HDFS/#hdfs-block","title":"HDFS \u6587\u4ef6\u5757/Block","text":"<p>HDFS \u4e2d\u7684\u6587\u4ef6\u5728\u7269\u7406\u4e0a\u662f\u5206\u5757\u5b58\u50a8\uff08Block\uff09\uff0c\u5757\u7684\u5927\u5c0f\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u53c2\u6570 (<code>dfs.blocksize</code>) \u6765\u89c4\u5b9a\uff0c\u9ed8\u8ba4\u5927\u5c0f\u5728 Hadoop2.x/3.x \u7248\u672c\u4e2d\u662f 128M/256M\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5757\u6765\u8fdb\u884c\u5b58\u50a8\uff1f</p> <ul> <li>\u652f\u6301\u5927\u6587\u4ef6\u5b58\u50a8\uff1a   \u53ef\u4ee5\u5c06\u5927\u6587\u4ef6\u5206\u6210\u82e5\u5e72\u5757\uff0c\u5e76\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\uff0c\u56e0\u6b64\u4e00\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f\u4e0d\u4f1a\u53d7\u5230\u5355\u4e2a\u8282\u70b9\u7684\u5b58\u50a8\u5bb9\u91cf\u7684\u9650\u5236</li> <li>\u7b80\u5316\u7cfb\u7edf\u8bbe\u8ba1\uff1a   \u56e0\u4e3a\u5757\u5927\u5c0f\u56fa\u5b9a\uff0c\u56e0\u6b64\u80fd\u5f88\u65b9\u4fbf\u5730\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u80fd\u591f\u5b58\u50a8\u591a\u5c11\u6587\u4ef6\u5757\uff1b\u5176\u6b21\uff0c\u65b9\u4fbf\u4e86\u5143\u6570\u636e\u7ba1\u7406\uff0c\u5143\u6570\u636e\u4e0d\u9700\u8981\u548c\u6570\u636e\u5757\u4e00\u8d77\u5b58\u50a8</li> <li>\u9002\u5408\u6570\u636e\u5907\u4efd\uff1a   \u6bcf\u4e2a\u6587\u4ef6\u5757\u90fd\u53ef\u4ee5\u5197\u4f59\u5b58\u50a8\u5230\u591a\u4e2a\u8282\u70b9\u4e0a\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u5bb9\u9519\u6027\u548c\u53ef\u7528\u6027</li> </ul> <p>\u6587\u4ef6\u5757\u5927\u5c0f\u4e3a\u4ec0\u4e48\u662f 128M\uff1f\u589e\u5927\u6216\u51cf\u5c0f\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f</p> <p>\u6700\u7ec8\u76ee\u7684\u662f\u6700\u5c0f\u5316\u5bfb\u5740\u5f00\u9500\u3002 \u78c1\u76d8\u4f20\u8f93\u901f\u7387\u666e\u904d\u5728 100MB/s \u8fd9\u4e2a\u7ea7\u522b\uff0c\u901a\u5e38\u6765\u8bf4\u5bfb\u5740\u65f6\u95f4\u5360\u6587\u4ef6\u4f20\u8f93\u65f6\u95f4\u7684 1% \u662f\u6700\u4f73\u7684\uff0c\u56e0\u6b64\u5982\u679c\u5bfb\u5740\u65f6\u95f4\u4e3a 10ms\uff0c\u90a3\u4e48\u4f20\u8f93\u65f6\u95f4\u5e94\u8be5\u5728 1s \u5de6\u53f3\uff0c\u56e0\u6b64 1s * 100MB/s = 100 MB\uff0c\u53d6\u6700\u63a5\u8fd1\u7684 2 \u7684\u6b21\u5e42 128MB\u3002</p> <p>\u5982\u679c\u6587\u4ef6\u5757\u7684\u5927\u5c0f\u592a\u5c0f\uff0c\u4f1a\u5bfb\u5740\u65f6\u95f4\u5360\u6bd4\u592a\u5927\uff0c\u8fdd\u80cc\u4e86 HDFS \u7684\u8bbe\u8ba1\u7406\u5ff5\u3002\u5982\u679c\u6587\u4ef6\u5757\u7684\u5927\u5c0f\u592a\u5927\uff0c\u4f1a\u5927\u5927\u589e\u52a0\u6587\u4ef6\u7684\u4f20\u8f93\u65f6\u95f4\u3002\u56e0\u6b64 HDFS \u6587\u4ef6\u5757\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3b\u8981\u53d6\u51b3\u4e8e\u78c1\u76d8\u7684\u4f20\u8f93\u901f\u7387\u3002</p> <p>\u603b\u7ed3\uff1a\u6587\u4ef6\u5757\u8d8a\u5927\uff0c\u5bfb\u5740\u65f6\u95f4\u5360\u6bd4\u5c31\u8d8a\u5c0f\uff0c\u4f46\u4f20\u8f93\u65f6\u95f4\u8d8a\u957f\uff1b\u6587\u4ef6\u5757\u8d8a\u5c0f\uff0c\u5bfb\u5740\u65f6\u95f4\u5360\u6bd4\u5c31\u8d8a\u5927\uff0c\u4f46\u4f20\u8f93\u65f6\u95f4\u8d8a\u77ed\u3002</p> <p>\u5982\u679c\u5757\u5927\u5c0f\u8bbe\u7f6e\u8fc7\u5927\uff0c\u5757\u7684\u4f20\u8f93\u65f6\u95f4\u5c31\u4f1a\u592a\u957f\uff0c\u540c\u65f6 MapReduce \u7a0b\u5e8f\u4e2d\u4e00\u4e2a MapTask \u901a\u5e38\u53ea\u5904\u7406\u4e00\u4e2a\u5757\uff0c\u5982\u679c\u5757\u592a\u5927\u4e5f\u4f1a\u5f71\u54cd\u8fd0\u884c\u901f\u5ea6\u3002\u5982\u679c\u5757\u5927\u5c0f\u8bbe\u7f6e\u8fc7\u5c0f\uff0c\u4e00\u65b9\u9762\u5b58\u653e\u5927\u91cf\u5c0f\u6587\u4ef6\u4f1a\u5360\u7528 NameNode \u7684\u5927\u91cf\u5185\u5b58\u5b58\u50a8\u5143\u6570\u636e\uff0c\u53e6\u4e00\u65b9\u9762\u5bfb\u5740\u65f6\u95f4\u5360\u6bd4\u592a\u9ad8\uff0c\u8fdd\u80cc\u4e86 HDFS \u7684\u8bbe\u8ba1\u539f\u5219\u3002</p> <p>1 \u4e2a 10MB \u7684\u6587\u4ef6\uff0c\u5b9e\u9645\u5360\u7528\u591a\u5c11\u7a7a\u95f4\uff1f</p> <p>1 \u4e2a 10MB \u7684\u6587\u4ef6\uff0c\u4f1a\u5360\u7528\u4e00\u6574\u4e2a Block \u5757\u5730\u5740\uff0c\u5b9e\u9645\u78c1\u76d8\u7684\u5360\u7528\u4e3a 10MB * 3 = 30MB\u3002</p>"},{"location":"Hadoop/2.%20HDFS/#hdfs_5","title":"HDFS \u5fc3\u8df3\u673a\u5236","text":"<ul> <li>DataNode \u542f\u52a8\u540e\u5411 NameNode \u6ce8\u518c\uff0c\u6bcf\u9694 3 \u79d2\u949f\u5411 NameNode \u53d1\u9001\u4e00\u4e2a\u5fc3\u8df3 heartbeat</li> <li>\u5fc3\u8df3\u8fd4\u56de\u7ed3\u679c\u5e26\u6709 NameNode \u7ed9\u8be5 DataNode \u7684\u547d\u4ee4\uff0c\u5982\u590d\u5236\u5757\u6570\u636e\u5230\u53e6\u4e00 DataNode\uff0c\u6216\u5220\u9664\u67d0\u4e2a\u6570\u636e\u5757</li> <li>\u5982\u679c\u8d85\u8fc7 10 \u5206\u949f NameNode \u6ca1\u6709\u6536\u5230\u67d0\u4e2a DataNode \u7684\u5fc3\u8df3\uff0c\u5219\u8ba4\u4e3a\u8be5 DataNode \u8282\u70b9\u4e0d\u53ef\u7528</li> <li>DataNode \u5468\u671f\u6027\uff086 \u5c0f\u65f6\uff09\u7684\u5411 NameNode \u4e0a\u62a5\u5f53\u524d DataNode \u4e0a\u7684\u5757\u72b6\u6001\u62a5\u544a BlockReport\u3002BlockReport \u5305\u542b\u4e86\u8be5 Datanode \u4e0a\u6240\u6709\u7684 Block \u4fe1\u606f\u3002</li> </ul> <p>\u5fc3\u8df3\u7684\u4f5c\u7528\uff1a</p> <ul> <li>\u53ef\u4ee5\u5224\u65ad DataNode \u662f\u5426\u5b58\u6d3b</li> <li>\u901a\u8fc7\u5468\u671f\u5fc3\u8df3\uff0cNameNode \u53ef\u4ee5\u5411 DataNode \u8fd4\u56de\u6307\u4ee4</li> <li>\u901a\u8fc7 BlockReport\uff0cNameNode \u80fd\u591f\u77e5\u9053\u5404 DataNode \u7684\u5b58\u50a8\u60c5\u51b5\uff0c\u5982\u78c1\u76d8\u5229\u7528\u7387\u3001\u5757\u5217\u8868</li> <li>Hadoop \u96c6\u7fa4\u521a\u5f00\u59cb\u542f\u52a8\u65f6\uff0c99.9%\u7684 block \u6ca1\u6709\u8fbe\u5230\u6700\u5c0f\u526f\u672c\u6570(<code>dfs.namenode.replication.min</code> \u9ed8\u8ba4\u503c\u4e3a 1)\uff0c\u96c6\u7fa4\u5904\u4e8e\u5b89\u5168\u6a21\u5f0f\uff0c\u6d89\u53ca BlockReport</li> </ul>"},{"location":"Hadoop/2.%20HDFS/#hdfs_6","title":"HDFS \u5b89\u5168\u6a21\u5f0f","text":"<p>\u5b89\u5168\u6a21\u5f0f\u662f HDFS \u6240\u5904\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u53ea\u8bfb\u6a21\u5f0f\u72b6\u6001\uff0c\u5728\u8fd9\u79cd\u72b6\u6001\u4e0b\uff0c\u6587\u4ef6\u7cfb\u7edf\u53ea\u63a5\u53d7\u8bfb\u6570\u636e\u8bf7\u6c42\uff0c\u800c\u4e0d\u63a5\u53d7\u5220\u9664\u3001\u4fee\u6539\u7b49\u53d8\u66f4\u8bf7\u6c42\uff0c\u662f\u4e00\u79cd\u4fdd\u62a4\u673a\u5236\uff0c\u7528\u4e8e\u4fdd\u8bc1\u6587\u4ef6\u7cfb\u7edf\u7684\u4e00\u81f4\u6027\u548c\u5b8c\u6574\u6027\u3002</p> <p>\u5728 NameNode \u4e3b\u8282\u70b9\u542f\u52a8\u65f6\uff0cHDFS \u9996\u5148\u8fdb\u5165\u5b89\u5168\u6a21\u5f0f\uff0c\u96c6\u7fa4\u4f1a\u5f00\u59cb\u68c0\u67e5\u6570\u636e\u5757\u7684\u5b8c\u6574\u6027\u3002DataNode \u5728\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u5411 NameNode \u6c47\u62a5\u53ef\u7528\u7684 block \u4fe1\u606f\uff0c\u5f53\u6574\u4e2a\u7cfb\u7edf\u8fbe\u5230\u5b89\u5168\u6807\u51c6\u65f6\uff0cHDFS \u81ea\u52a8\u79bb\u5f00\u5b89\u5168\u6a21\u5f0f\u3002</p> <p>\u5b89\u5168\u6807\u51c6\u6307\u7684\u662f HDFS \u4e2d\u526f\u672c\u4e2a\u6570\u8fbe\u5230\u9608\u503c\u7684\u6587\u4ef6\u7684\u6bd4\u4f8b\uff0899.9%\uff09\u3002</p>"},{"location":"Hadoop/2.%20HDFS/#hdfs_7","title":"HDFS \u5199\u6570\u636e\u6d41\u7a0b","text":"<p>\u6838\u5fc3\u6982\u5ff5\uff1aPipeline</p> <p>Pipeline \u6307 HDFS \u5728\u5199\u6570\u636e\u8fc7\u7a0b\u4e2d\u91c7\u7528\u7684\u4e00\u79cd\u6570\u636e\u4f20\u8f93\u65b9\u5f0f\u3002\u5ba2\u6237\u7aef\u5c06\u6570\u636e\u5757\u5199\u5165\u7b2c\u4e00\u4e2a DataNode\uff0c\u7b2c\u4e00\u4e2a DataNode \u4fdd\u5b58\u6570\u636e\u4e4b\u540e\u518d\u5c06\u5757\u590d\u5236\u5230\u7b2c\u4e8c\u4e2a DataNode\uff0c\u540e\u8005\u4fdd\u5b58\u540e\u518d\u590d\u5236\u7ed9\u7b2c\u4e09\u4e2a DataNode\u3002</p> <p>\u4e3a\u4ec0\u4e48\u91c7\u7528 Pipeline \u4f20\u8f93\u6570\u636e\uff1f</p> <ul> <li>\u6700\u5927\u5316\u7f51\u7edc\u51fa\u53e3\u5e26\u5bbd\uff1a\u6cbf\u7740\u4e00\u4e2a\u7ba1\u9053\u4f20\u8f93\uff0c\u5ba2\u6237\u7aef\u4e0d\u7528\u5728\u591a\u4e2a\u63a5\u53d7\u8005\u95f4\u5206\u914d\u5e26\u5bbd</li> <li>\u5e76\u884c\u4f20\u8f93\uff1aPipeline \u5141\u8bb8\u591a\u4e2a\u6570\u636e\u5305\u540c\u65f6\u5728\u4e0d\u540c\u7684\u6570\u636e\u8282\u70b9\u4e0a\u8fdb\u884c\u4f20\u8f93\u3002\u591a\u4e2a\u6570\u636e\u5305\u53ef\u4ee5\u540c\u65f6\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u4f20\u8f93\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u4f20\u8f93\u5ef6\u8fdf\uff0c\u63d0\u9ad8\u4e86\u5199\u5165\u6027\u80fd\u3002</li> <li>\u5bb9\u9519\u673a\u5236\uff1aPipeline \u63d0\u4f9b\u4e86\u5bb9\u9519\u673a\u5236\uff0c\u786e\u4fdd\u5728\u67d0\u4e2a\u6570\u636e\u8282\u70b9\u53d1\u751f\u6545\u969c\u65f6\uff0c\u6570\u636e\u4f20\u8f93\u53ef\u4ee5\u5207\u6362\u5230\u5176\u4ed6\u53ef\u7528\u7684\u6570\u636e\u8282\u70b9\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u56e0\u5355\u70b9\u6545\u969c\u800c\u5bfc\u81f4\u7684\u5199\u5165\u4e2d\u65ad\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u9760\u6027\u548c\u5199\u5165\u7684\u8fde\u7eed\u6027\u3002</li> </ul> <p>\u6838\u5fc3\u6982\u5ff5\uff1aACK \u5e94\u7b54</p> <p>\u5728 HDFS Pipeline \u7ba1\u9053\u4f20\u8f93\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f20\u8f93\u7684\u53cd\u65b9\u5411\u4f1a\u8fdb\u884c ACK \u6821\u9a8c\uff0c\u786e\u4fdd\u6570\u636e\u4f20\u8f93\u5b89\u5168\u3002</p> <p>HDFS \u5199\u6570\u636e\u6d41\u7a0b</p> <p></p> <ul> <li>\u5ba2\u6237\u7aef\u521b\u5efa Distributed FileSystem \u6a21\u5757\u5411 NameNode \u8bf7\u6c42\u4e0a\u4f20\u6587\u4ef6</li> <li>NameNode \u68c0\u67e5\uff1a\u6743\u9650\u3001\u76ee\u5f55\u662f\u5426\u5b58\u5728\u7b49</li> <li>\u5ba2\u6237\u7aef\u8be2\u95ee\u7b2c\u4e00\u4e2a Block \u4e0a\u4f20\u5230\u54ea\u51e0\u4e2a DataNode \u670d\u52a1\u5668\u4e0a</li> <li>NameNode \u8fd4\u56de 3 \u4e2a DataNode \u8282\u70b9\uff0c\u5206\u522b\u4e3a dn1\u3001dn2\u3001dn3\uff08\u673a\u67b6\u611f\u77e5\uff1a\u8003\u8651\u8282\u70b9\u6700\u8fd1\u548c\u8d1f\u8f7d\u5747\u8861\uff09</li> <li>\u5ba2\u6237\u7aef\u901a\u8fc7 FSDataOutputStream \u6a21\u5757\u8bf7\u6c42 dn1 \u4e0a\u4f20\u6570\u636e\uff0cdn1 \u6536\u5230\u8bf7\u6c42\u4f1a\u7ee7\u7eed\u8c03\u7528 dn2\uff0c\u7136\u540e dn2 \u8c03\u7528 dn3\uff0c\u5efa\u7acb\u7ba1\u9053</li> <li>dn1\u3001dn2\u3001dn3 \u9010\u7ea7\u5e94\u7b54\u5ba2\u6237\u7aef</li> <li>\u5ba2\u6237\u7aef\u5f00\u59cb\u5f80 dn1 \u4e0a\u4f20\u7b2c\u4e00\u4e2a Block\uff08\u5148\u4ece\u78c1\u76d8\u8bfb\u53d6\u6570\u636e\u653e\u5230\u4e00\u4e2a\u672c\u5730\u5185\u5b58\u7f13\u5b58\uff09\uff0c\u4ee5 Packet \u4e3a\u5355\u4f4d\uff0cdn1 \u6536\u5230\u4e00\u4e2a Packet \u5c31\u4f1a\u4f20\u7ed9 dn2\uff0cdn2 \u4f20\u7ed9 dn3\uff1bdn1 \u6bcf\u4f20\u4e00\u4e2a packet \u4f1a\u653e\u5165\u4e00\u4e2a\u5e94\u7b54\u961f\u5217\u7b49\u5f85\u5e94\u7b54</li> <li>\u5f53\u4e00\u4e2a Block \u4f20\u8f93\u5b8c\u6210\u4e4b\u540e\uff0c\u5ba2\u6237\u7aef\u518d\u6b21\u8bf7\u6c42 NameNode \u4e0a\u4f20\u7b2c\u4e8c\u4e2a Block \u7684\u670d\u52a1\u5668</li> </ul> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u6587\u4ef6\u5206\u5757 Block\uff08128M\uff09</li> <li>\u5ba2\u6237\u7aef\u5411 NN \u53d1\u9001\u5199\u8bf7\u6c42</li> <li>NN \u8fdb\u884c\u68c0\u67e5\uff0c\u8bb0\u5f55 Block \u4fe1\u606f\uff0c\u8fd4\u56de 3 \u4e2a DN</li> <li>\u5efa\u7acb\u901a\u4fe1\u7ba1\u9053</li> <li>\u5ba2\u6237\u7aef\u5411 DN \u53d1\u9001 Block\uff0c\u4ee5\u6d41\u5f0f\u5199\u5165\u7684\u65b9\u5f0f\uff1a</li> <li>\u5c06 Block \u5212\u5206\u4e3a\u591a\u4e2a packet</li> <li>\u5ba2\u6237\u7aef\u4ee5 packet \u4e3a\u5355\u4f4d\u4f20\u8f93\u6570\u636e</li> <li>\u53d1\u9001\u6570\u636e\u7684\u540c\u65f6\u8fd8\u4f1a\u5c06 packet \u653e\u5165\u4e00\u4e2a\u5e94\u7b54\u961f\u5217\u7b49\u5f85\u5e94\u7b54</li> <li>\u4e00\u4e2a Block \u4f20\u8f93\u5b8c\u6bd5\u4e4b\u540e\uff0c\u7ee7\u7eed\u4e0b\u4e00\u4e2a Block</li> </ul> <p>\u4f20\u8f93\u6570\u636e\u7684\u5355\u4f4d\u662f\u4ec0\u4e48\uff1f</p> <p>\u4ee5 packet\uff0864K\uff09\u4e3a\u5355\u4f4d\uff0c\u4e00\u4e2a packet \u5185\u5305\u542b\u591a\u4e2a chunk(512byte) + checksum(4byte)\u3002</p> <p>\u5ba2\u6237\u7aef\u5728\u521b\u5efa\u8f93\u51fa\u6d41\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u961f\u5217\uff0c\u7f13\u51b2\u961f\u5217\u4e2d\u5b58\u50a8\u7684\u662f chunk + checksum = 516 bytes\u3002\u6512\u591f\u5230 64K \u65f6\uff0c\u5f62\u6210\u4e00\u4e2a packet\uff0c\u653e\u5165 ack \u5e94\u7b54\u961f\u5217\uff0c\u518d\u53d1\u9001\u3002</p> <p>\u5ba2\u6237\u7aef\u7ef4\u62a4\u4e00\u4e2a ack \u5e94\u7b54\u961f\u5217\uff0c\u6bcf\u6b21 packet \u53d1\u9001\u6210\u529f\uff0c\u5ba2\u6237\u7aef\u90fd\u4f1a\u6536\u5230\u4e00\u4e2a ack \u5e94\u7b54\u6d88\u606f\uff0c\u5220\u9664 ack \u961f\u5217\u4e2d\u5bf9\u5e94\u7684 packet\u3002\u5bf9\u4e8e\u6ca1\u6536\u5230 ack \u5e94\u7b54\u6d88\u606f\u7684 packet\uff0cack \u961f\u5217\u4f1a\u628a\u8fd9\u4e2a packet \u518d\u52a0\u5165\u53d1\u9001\u7f13\u51b2\u961f\u5217\uff0c\u518d\u6b21\u5c1d\u8bd5\u53d1\u9001\u3002</p> <p>\u5199\u6570\u636e\u65f6 NameNode \u662f\u5982\u4f55\u9009\u62e9 DataNode \u8282\u70b9\u7684\uff1f</p> <p>\u57fa\u4e8e\u526f\u672c\u653e\u7f6e\u7b56\u7565/\u673a\u67b6\u611f\u77e5\u673a\u5236\u3002\u7b2c\u4e00\u4e2a\u526f\u672c\u5728\u5ba2\u6237\u7aef\u6240\u5728\u8282\u70b9\uff0c\u5982\u679c\u5ba2\u6237\u7aef\u5728\u96c6\u7fa4\u5916\uff0c\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u3002\u7b2c\u4e8c\u4e2a\u526f\u672c\u5728\u53e6\u4e00\u4e2a\u673a\u67b6\u7684\u968f\u673a\u4e00\u4e2a\u8282\u70b9\u3002\u7b2c\u4e09\u4e2a\u526f\u672c\u5728\u7b2c\u4e8c\u4e2a\u526f\u672c\u6240\u5728\u673a\u67b6\u7684\u968f\u673a\u8282\u70b9\u3002</p> <p>\u8fd9\u79cd\u7b56\u7565\u51cf\u5c11\u4e86\u673a\u67b6\u95f4\u7684\u6570\u636e\u4f20\u8f93\uff0c\u63d0\u9ad8\u4e86\u5199\u64cd\u4f5c\u7684\u6548\u7387\u3002\u540c\u65f6\uff0c\u7531\u4e8e\u673a\u67b6\u9519\u8bef\u7684\u6982\u7387\u8fdc\u6bd4\u8282\u70b9\u9519\u8bef\u7684\u6982\u7387\u4f4e\uff0c\u8fd9\u79cd\u7b56\u7565\u4e5f\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u9760\u6027\u3002</p> <p>\u5199\u6570\u636e\u65f6 DataNode \u7a81\u7136\u5b95\u673a\u600e\u4e48\u529e\uff1f</p> <p>\u5ba2\u6237\u7aef\u5199\u6570\u636e\u65f6\u4e0e DN \u5efa\u7acb pipeline \u7ba1\u9053\uff0c\u7ba1\u9053\u6b63\u5411\u662f\u5ba2\u6237\u7aef\u5411 DN \u4f20\u8f93\u6570\u636e\uff0c\u53cd\u5411\u662f\u63a5\u6536 DN \u7684 ack \u786e\u8ba4\u3002</p> <ul> <li>\u5982\u679c DN \u5b95\u673a\uff0c\u5ba2\u6237\u7aef\u63a5\u6536\u4e0d\u5230 ack \u786e\u8ba4\uff0c\u4e3a\u4e86\u786e\u4fdd\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\uff0cack \u961f\u5217\u4e2d\u7684\u6240\u6709 packet \u4f1a\u88ab\u91cd\u65b0\u6dfb\u52a0\u5230 data queue\uff08\u7f13\u51b2\u961f\u5217\uff09 \u672b\u5c3e</li> <li>\u5ba2\u6237\u7aef\u4f1a\u901a\u77e5 NameNode \u4e3a\u5f53\u524d\u4f20\u8f93\u7684 Block \u751f\u6210\u65b0\u7684\u7248\u672c\uff0c\u5728\u6b63\u5e38\u7684 DataNode \u8282\u70b9\u4e0a\u5df2\u7ecf\u4fdd\u5b58\u597d\u7684 block \u7684 ID \u7248\u672c\u4f1a\u5347\u7ea7\uff0c\u8fd9\u6837\u53d1\u751f\u6545\u969c\u7684 DataNode \u8282\u70b9\u4e0a\u7684 Block \u5728\u8282\u70b9\u6062\u590d\u540e\u4f1a\u88ab\u5220\u9664</li> <li>\u5931\u6548\u8282\u70b9\u4f1a\u4ece pipeline \u4e2d\u88ab\u5220\u9664\uff0c\u5269\u4e0b\u7684\u6570\u636e\u5199\u5165\u5230 pipeline \u4e2d\u7684\u5176\u4ed6 2 \u4e2a\u8282\u70b9\u4e2d</li> <li>NameNode \u5206\u914d\u4e00\u4e2a\u65b0\u7684 DataNode</li> <li>\u628a\u66f4\u65b0\u540e\u7684 Block \u590d\u5236\u4e00\u4efd\u5230\u65b0\u7684 DataNode \u4e2d</li> </ul>"},{"location":"Hadoop/2.%20HDFS/#hdfs_8","title":"HDFS \u8bfb\u6570\u636e\u6d41\u7a0b","text":"<ul> <li>\u5ba2\u6237\u7aef\u901a\u8fc7 DistributedFileSystem \u5411 NameNode \u8bf7\u6c42\u8bfb\u53d6\u6587\u4ef6</li> <li>NameNode \u901a\u8fc7\u67e5\u8be2\u5143\u6570\u636e\uff0c\u627e\u5230\u6587\u4ef6\u5757\u6240\u5728\u7684 DataNode \u5730\u5740</li> <li>\u6311\u9009\u4e00\u53f0 DataNode\uff08\u5148\u8003\u8651\u5c31\u8fd1\u539f\u5219\uff0c\u7136\u540e\u968f\u673a\uff09\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u8bfb\u53d6\u6570\u636e</li> <li>DataNode \u5f00\u59cb\u4f20\u8f93\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\uff08\u4ece\u78c1\u76d8\u91cc\u9762\u8bfb\u53d6\u6570\u636e\u8f93\u5165\u6d41\uff0c\u4ee5 Packet \u4e3a\u5355\u4f4d\u6765\u505a\u6821\u9a8c\uff09</li> <li>\u5ba2\u6237\u7aef\u4ee5 Packet \u4e3a\u5355\u4f4d\u63a5\u6536\uff0c\u5148\u5728\u672c\u5730\u7f13\u5b58\uff0c\u7136\u540e\u5199\u5165\u76ee\u6807\u6587\u4ef6</li> </ul>"},{"location":"Hadoop/2.%20HDFS/#hdfs_9","title":"HDFS \u8bfb\u5199\u6d41\u7a0b\u4e2d\u7684\u5bb9\u9519\u673a\u5236","text":"<p>Case 1\uff1a\u5199\u6570\u636e\u65f6 DataNode \u6302\u4e86</p> <ul> <li>\u5982\u679c DN \u5b95\u673a\uff0c\u5ba2\u6237\u7aef\u63a5\u6536\u4e0d\u5230 ack \u786e\u8ba4\uff0c\u4e3a\u4e86\u786e\u4fdd\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\uff0cack \u961f\u5217\u4e2d\u7684\u6240\u6709 packet \u4f1a\u88ab\u91cd\u65b0\u6dfb\u52a0\u5230 data queue\uff08\u7f13\u51b2\u961f\u5217\uff09 \u672b\u5c3e</li> <li>\u5ba2\u6237\u7aef\u4f1a\u901a\u77e5 NameNode \u4e3a\u5f53\u524d\u4f20\u8f93\u7684 Block \u751f\u6210\u65b0\u7684\u7248\u672c\uff0c\u5728\u6b63\u5e38\u7684 DataNode \u8282\u70b9\u4e0a\u5df2\u7ecf\u4fdd\u5b58\u597d\u7684 block \u7684 ID \u7248\u672c\u4f1a\u5347\u7ea7\uff0c\u8fd9\u6837\u53d1\u751f\u6545\u969c\u7684 DataNode \u8282\u70b9\u4e0a\u7684 Block \u5728\u8282\u70b9\u6062\u590d\u540e\u4f1a\u88ab\u5220\u9664</li> <li>\u5931\u6548\u8282\u70b9\u4f1a\u4ece pipeline \u4e2d\u88ab\u5220\u9664\uff0c\u5269\u4e0b\u7684\u6570\u636e\u5199\u5165\u5230 pipeline \u4e2d\u7684\u5176\u4ed6 2 \u4e2a\u8282\u70b9\u4e2d</li> <li>NameNode \u5206\u914d\u4e00\u4e2a\u65b0\u7684 DataNode</li> <li>\u628a\u66f4\u65b0\u540e\u7684 Block \u590d\u5236\u4e00\u4efd\u5230\u65b0\u7684 DataNode \u4e2d</li> </ul> <p>Case 2\uff1a\u8bfb\u6570\u636e\u65f6 DataNode \u6302\u4e86</p> <ul> <li>Client \u4f1a\u4ece NameNode \u7ed9\u7684 Block \u5730\u5740\u4e2d\u9009\u62e9\u4e0b\u4e00\u4e2a DataNode \u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u4e14\u8bb0\u5f55\u6b64\u6709\u95ee\u9898\u7684 DataNode\uff0c\u4e0d\u4f1a\u518d\u4ece\u5b83\u4e0a\u9762\u8bfb\u53d6\u6570\u636e</li> </ul> <p>Case 3\uff1a\u8bfb\u6570\u636e\u65f6\u53d1\u73b0 Block \u6570\u636e\u51fa\u9519\u4e86</p> <ul> <li> <p>client \u8bfb\u53d6 block \u6570\u636e\u65f6\uff0c\u540c\u65f6\u4f1a\u8bfb\u53d6\u5230 block \u7684\u6821\u9a8c\u548c\uff0c\u82e5 client \u9488\u5bf9\u8bfb\u53d6\u8fc7\u6765\u7684 block \u6570\u636e\uff0c\u8ba1\u7b97\u68c0\u9a8c\u548c\uff0c\u5176\u503c\u4e0e\u8bfb\u53d6\u8fc7\u6765\u7684\u6821\u9a8c\u548c\u4e0d\u4e00\u6837\uff0c\u8bf4\u660e block \u6570\u636e\u635f\u574f\u3002</p> </li> <li> <p>\u7136\u540e client \u4ece\u5b58\u50a8\u6b64 block \u526f\u672c\u7684\u5176\u5b83 DataNode \u4e0a\u8bfb\u53d6 block \u6570\u636e\uff08\u4e5f\u4f1a\u8ba1\u7b97\u6821\u9a8c\u548c\uff09\u3002\u540c\u65f6\uff0cclient \u4f1a\u544a\u77e5 namenode \u6b64\u60c5\u51b5</p> </li> </ul>"},{"location":"Hadoop/2.%20HDFS/#hdfs_10","title":"HDFS \u5c0f\u6587\u4ef6\u95ee\u9898","text":"<ul> <li>\u5bf9\u4e8e NameNode \u6765\u8bf4\uff0cNameNode \u5b58\u50a8\u7740\u6587\u4ef6\u7cfb\u7edf\u7684\u5143\u6570\u636e\uff0c\u6bcf\u4e2a\u6587\u4ef6\u3001\u76ee\u5f55\u3001\u5757\u5927\u6982\u6709 150 \u5b57\u8282 \u7684\u5143\u6570\u636e\uff0c\u56e0\u6b64\u6587\u4ef6\u6570\u91cf\u7684\u9650\u5236\u4e5f\u7531 NN \u5185\u5b58\u5927\u5c0f\u51b3\u5b9a\uff0c\u5982\u679c\u5c0f\u6587\u4ef6\u8fc7\u591a\u5219\u4f1a\u9020\u6210 NN \u7684\u538b\u529b\u8fc7\u5927</li> <li>\u5bf9\u4e8e DataNode \u6765\u8bf4\uff0c\u6587\u4ef6\u7684 block \u662f\u5b58\u50a8\u5728 datanode \u672c\u5730\u7cfb\u7edf\u4e0a\uff0c\u5e95\u5c42\u7684\u78c1\u76d8\u4e0a\uff0c\u751a\u81f3\u4e0d\u540c\u7684\u6302\u8f7d\u76ee\u5f55\uff0c\u4e0d\u540c\u7684\u78c1\u76d8\u4e0a\u3002\u5927\u91cf\u7684\u5c0f\u6587\u4ef6\uff0c\u610f\u5473\u7740\u6570\u636e\u7740\u5bfb\u5740\u9700\u8981\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\uff0c\u5c24\u5176\u5bf9\u4e8e\u9ad8\u8d1f\u8f7d\u7684\u96c6\u7fa4\u6765\u8bf4\uff08\u78c1\u76d8\u4f7f\u7528\u7387 50% \u4ee5\u4e0a\u7684\u96c6\u7fa4\uff09\uff0c\u82b1\u8d39\u5728\u5bfb\u5740\u7684\u65f6\u95f4\u6bd4\u6587\u4ef6\u8bfb\u53d6\u5199\u5165\u7684\u65f6\u95f4\u66f4\u591a\u3002\u8fd9\u79cd\u5c31\u8fdd\u80cc\u4e86 blocksize \u5927\u5c0f\u8bbe\u8ba1\u7684\u521d\u8877\uff08\u5b9e\u8df5\u663e\u793a\u6700\u4f73\u6548\u679c\u662f\uff1a\u5bfb\u5740\u65f6\u95f4\u4ec5\u5360\u4f20\u8f93\u65f6\u95f4\u7684 1%\uff09\u3002\u8fd9\u6837\u4f1a\u9020\u6210\u78c1\u76d8\u7684\u8bfb\u5199\u5f88\u6162\uff0c\u62e5\u6709\u5927\u91cf\u5c0f\u6587\u4ef6\u4f1a\u5bfc\u81f4\u66f4\u591a\u7684\u78c1\u76d8\u641c\u7d22\u3002</li> <li>\u5bf9\u4e8e\u8ba1\u7b97\u6765\u8bf4\uff0c\u5c0f\u6587\u4ef6\u5bf9\u4e8e\u8ba1\u7b97\u7684\u5f71\u54cd\u5c31\u662f\u9700\u8981\u5927\u91cf\u8282\u70b9\u4e4b\u95f4\u9891\u7e41\u5efa\u7acb\u8054\u7cfb\uff0c\u6570\u636e\u4f20\u8f93\u7b49\uff0c\u6d6a\u8d39\u8d44\u6e90\uff0c\u6d88\u8017\u65f6\u95f4\u957f\u3002\u5176\u6b21\u5c0f\u6587\u4ef6\u76f8\u5173\u5927\u91cf\u7684\u4efb\u52a1\u521d\u59cb\u5316\u65f6\u95f4\u751a\u81f3\u6bd4\u8ba1\u7b97\u65f6\u95f4\u8fd8\u957f\uff0c\u9020\u6210\u8ba1\u7b97\u8d44\u6e90\u7684\u4f7f\u7528\u6d6a\u8d39\uff0c\u964d\u4f4e\u96c6\u7fa4\u7684\u541e\u5410\u91cf\u3002</li> </ul> <p>\u57fa\u4e8e HDFS \u6587\u4ef6\u7cfb\u7edf\u7684\u8ba1\u7b97\uff0cblock \u662f\u6700\u5c0f\u7c92\u5ea6\u7684\u6570\u636e\u5904\u7406\u5355\u5143\u3002\u5757\u7684\u591a\u5c11\u5f80\u5f80\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u7684\u541e\u5410\u91cf\u3002\u66f4\u591a\u7684\u6587\u4ef6\uff0c\u610f\u5473\u7740\u66f4\u591a\u7684\u5757\uff0c\u4ee5\u53ca\u66f4\u591a\u7684\u8282\u70b9\u5206\u5e03\u3002</p> <p>\u6bd4\u5982\u4ee5 MapReduce \u4efb\u52a1\u4e3a\u4f8b\uff08hive \u7b49\uff09\uff0c\u5728 MapReduce \u4e2d\uff0c\u4f1a\u4e3a\u6bcf\u4e2a\u8bfb\u53d6\u7684\u5757\u751f\u6210\u4e00\u4e2a\u5355\u72ec\u7684 Map \u4efb\u52a1\uff0c\u5982\u679c\u5927\u91cf\u5c0f\u6587\u4ef6\uff0c\u5927\u91cf\u7684\u5757\uff0c\u610f\u5473\u7740\u7740\u66f4\u591a\u4efb\u52a1\u8c03\u5ea6\uff0c\u4efb\u52a1\u521b\u5efa\u5f00\u9500\uff0c\u4ee5\u53ca\u66f4\u591a\u7684\u4efb\u52a1\u7ba1\u7406\u5f00\u9500\uff08MapReduce \u4f5c\u4e1a\u7684 application master \u662f\u4e00\u4e2a Java \u5e94\u7528\uff0c\u5b83\u7684\u4e3b\u7c7b\u662f MRAppMaster\u3002\u5b83\u901a\u8fc7\u521b\u5efa\u4e00\u5b9a\u6570\u91cf\u7684 bookkeeping object \u8ddf\u8e2a\u4f5c\u4e1a\u8fdb\u5ea6\u6765\u521d\u59cb\u5316\u4f5c\u4e1a\uff0c\u8be5\u5bf9\u8c61\u63a5\u53d7\u4efb\u52a1\u62a5\u544a\u7684\u8fdb\u5ea6\u548c\u5b8c\u6210\u60c5\u51b5\uff09\u3002\u867d\u7136\u53ef\u4ee5\u5f00\u542f map \u524d\u6587\u4ef6\u5408\u5e76\uff0c\u4f46\u662f\u8fd9\u4e5f\u9700\u8981\u4e0d\u505c\u5730\u4ece\u4e0d\u540c\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff0c\u6570\u636e\u8bfb\u53d6\uff0c\u7f51\u7edc\u4f20\u8f93\uff0c\u7136\u540e\u8fdb\u884c\u5408\u5e76\uff0c\u540c\u6837\u4f1a\u589e\u52a0\u6d88\u8017\u8d44\u6e90\u548c\u589e\u52a0\u8ba1\u7b97\u65f6\u95f4\uff0c\u6210\u672c\u4e5f\u5f88\u9ad8\u3002</p> <p> \u5c0f\u6587\u4ef6\u95ee\u9898\u89e3\u51b3\u65b9\u6848</p> <p>\u601d\u8def\u4e00\uff1a\u5408\u5e76\u5c0f\u6587\u4ef6</p> <ul> <li>Hadoop Archive \u6587\u4ef6\u5f52\u6863</li> </ul> <p>Hadoop \u63d0\u4f9b\u4e86\u5f52\u6863\u5de5\u5177\uff08\u5982 Hadoop Archives\uff0cHAR\uff09\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u5c0f\u6587\u4ef6\u6253\u5305\u4e3a\u4e00\u4e2a\u5f52\u6863\u6587\u4ef6\u3002\u5f52\u6863\u6587\u4ef6\u5728\u903b\u8f91\u4e0a\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u76ee\u5f55\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b58\u6863\u6587\u4ef6\uff0c\u53ef\u4ee5\u51cf\u5c11\u5143\u6570\u636e\u5f00\u9500\u5e76\u63d0\u9ad8\u8bfb\u53d6\u6027\u80fd\u3002</p> <p></p> <p></p> <p></p> <ul> <li>SequenceFile \u5e8f\u5217\u5316\u6587\u4ef6</li> </ul> <p>\u5bf9\u4e8e\u4e00\u4e9b\u5c0f\u6587\u4ef6\uff0c\u53ef\u4ee5\u5c06\u5b83\u4eec\u5e8f\u5217\u5316\u4e3a\u4e00\u4e2a\u6587\u4ef6\u6216\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\u3002\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6587\u4ef6\u6570\u91cf\uff0c\u8282\u7701\u5143\u6570\u636e\u7a7a\u95f4\uff0c\u5e76\u63d0\u9ad8\u8bfb\u53d6/\u5199\u5165\u6027\u80fd\u3002</p> <p></p> <p></p> <p></p> <p>**sync \u540c\u6b65\u6807\u8bb0\u7528\u4e8e\u6570\u636e\u7684\u5b9a\u4f4d\u548c\u5207\u5206\u3002</p> <p></p> <p></p> <p>block \u538b\u7f29\u6bd4 record \u538b\u7f29\u63d0\u4f9b\u66f4\u9ad8\u7684\u538b\u7f29\u7387\uff0c\u4f7f\u7528 Sequence File \u65f6\uff0c\u901a\u5e38\u9996\u9009 block \u538b\u7f29\u3002</p> <ul> <li> <p>SequenceFile \u6587\u4ef6\uff0c\u4e3b\u8981\u7531\u4e00\u6761\u6761 record \u8bb0\u5f55\u7ec4\u6210\uff1b\u6bcf\u4e2a record \u662f\u952e\u503c\u5bf9\u5f62\u5f0f\u7684</p> </li> <li> <p>SequenceFile \u6587\u4ef6\u53ef\u4ee5\u4f5c\u4e3a\u5c0f\u6587\u4ef6\u7684\u5b58\u50a8\u5bb9\u5668\uff1b</p> </li> <li> <p>\u6bcf\u6761 record \u4fdd\u5b58\u4e00\u4e2a\u5c0f\u6587\u4ef6\u7684\u5185\u5bb9</p> </li> <li>\u5c0f\u6587\u4ef6\u540d\u4f5c\u4e3a\u5f53\u524d record \u7684\u952e\uff1b</li> <li>\u5c0f\u6587\u4ef6\u7684\u5185\u5bb9\u4f5c\u4e3a\u5f53\u524d record \u7684\u503c\uff1b</li> <li> <p>\u5982 10000 \u4e2a 100KB \u7684\u5c0f\u6587\u4ef6\uff0c\u53ef\u4ee5\u7f16\u5199\u7a0b\u5e8f\u5c06\u8fd9\u4e9b\u6587\u4ef6\u653e\u5230\u4e00\u4e2a SequenceFile \u6587\u4ef6\u3002</p> </li> <li> <p>\u4e00\u4e2a SequenceFile \u662f\u53ef\u5206\u5272\u7684\uff0c\u6240\u4ee5 MapReduce \u53ef\u5c06\u6587\u4ef6\u5207\u5206\u6210\u5757\uff0c\u6bcf\u4e00\u5757\u72ec\u7acb\u64cd\u4f5c\u3002</p> </li> </ul> <p>\u6211\u4eec\u76f4\u63a5\u5c06\u6570\u636e\u5199\u5165\u4e00\u4e2a SequenceFile \u6587\u4ef6\uff0c\u7701\u53bb\u5c0f\u6587\u4ef6\u4f5c\u4e3a\u4e2d\u95f4\u5a92\u4ecb\u3002</p>"},{"location":"Hadoop/2.%20HDFS/#30","title":"3.0 \u65b0\u529f\u80fd","text":""},{"location":"Hadoop/2.%20HDFS/#disk-balancer","title":"Disk Balancer \u78c1\u76d8\u5747\u8861\u5668","text":"<p>\u76f8\u8f83\u4e8e\u4e2a\u4eba PC\uff0c\u670d\u52a1\u5668\u4e00\u822c\u53ef\u4ee5\u901a\u8fc7\u6302\u8f7d\u591a\u4e2a\u78c1\u76d8\u6765\u63d0\u5347\u5355\u673a\u7684\u5b58\u50a8\u80fd\u529b\u3002DataNode \u5728\u5199\u5165\u65b0 Block \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6839\u636e\u9009\u62e9\u7b56\u7565\uff08\u5faa\u73af\u7b56\u7565\u548c\u53ef\u7528\u7a7a\u95f4\u7b56\u7565\uff09\u6765\u9009\u62e9\u78c1\u76d8\u3002</p> <p></p> <p>\u5faa\u73af\u7b56\u7565\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u4e0d\u5747\u5300\u7684\u60c5\u51b5\uff0c\u53ef\u7528\u7a7a\u95f4\u7b56\u7565\u53ef\u80fd\u4f1a\u5c06\u65b0\u5199\u5165\u7684 Block \u5168\u5199\u5165\u65b0\u52a0\u5165\u7684\u78c1\u76d8\uff0c\u5176\u4ed6\u78c1\u76d8\u90fd\u7a7a\u95f2\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bfb\u5199\u7684\u74f6\u9888\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e00\u79cd Intra DataNode Balancing\uff08DataNode \u5185\u90e8\u6570\u636e\u5757\u7684\u5747\u5300\u5206\u5e03\uff09\u6765\u89e3\u51b3 Intra-DataNode \u504f\u659c\u95ee\u9898\u3002</p> <p>\u8fd9\u91cc\u6ce8\u610f\u533a\u5206 Disk Balancer \u548c HDFS Balancer\u3002</p> <p>Disk Balancer \u662f\u9488\u5bf9\u4e00\u4e2a DataNode \u8282\u70b9\u5185\u7684\u591a\u4e2a\u78c1\u76d8\u800c\u8a00\u7684\uff0c\u800c HDFS Balancer \u662f\u5e73\u8861\u591a\u4e2a DataNode \u8282\u70b9\u7684\u6570\u636e\u5206\u5e03\u3002</p>"},{"location":"Hadoop/2.%20HDFS/#erasure-coding","title":"Erasure Coding \u7ea0\u5220\u7801","text":"<p>HDFS Erasure Coding--\u7ea0\u5220\u7801\u67b6\u6784\u8c03\u6574_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>3 \u526f\u672c\u7b56\u7565\u5f0a\u7aef\uff1a\u9664\u539f\u59cb\u5757\u5916\u8fd8\u9700\u8981\u989d\u5916\u4fdd\u5b58 2 \u4e2a\u526f\u672c\uff0c\u6709\u989d\u5916\u7684 200% \u7684\u989d\u5916\u5b58\u50a8\u5f00\u9500\u3002</p> <p>\u7ea0\u5220\u7801\u6280\u672f\uff08Erasure Coding\uff09\u662f\u4e00\u79cd\u7f16\u7801\u5bb9\u9519\u6280\u672f\uff0c\u6700\u65e9\u7528\u4e8e\u6570\u636e\u4f20\u8f93\u4e2d\u7684\u6570\u636e\u6062\u590d\u3002\u5b83\u901a\u8fc7\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u5757\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u6821\u9a8c\u6570\u636e\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u90e8\u5206\u7684\u6570\u636e\u4ea7\u751f\u5173\u8054\u6027\u3002 \u5f53\u4e00\u90e8\u5206\u6570\u636e\u4e22\u5931\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5269\u4f59\u7684\u6570\u636e\u5757\u548c\u6821\u9a8c\u5757\u8ba1\u7b97\u51fa\u4e22\u5931\u7684\u6570\u636e\u5757\u3002</p> <p>\u7ea0\u5220\u7801\u6280\u672f\u53ef\u4ee5\u63d0\u9ad8 50% \u4ee5\u4e0a\u7684\u5b58\u50a8\u5229\u7528\u7387\uff0c\u5e76\u4e14\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u9760\u6027\u3002\u5728\u4fdd\u8bc1\u6570\u636e\u53ef\u9760\u6027\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u9ad8\u4e86\u6570\u636e\u7684\u5b58\u50a8\u5229\u7528\u7387\u3002</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Hadoop/2.%20HDFS/#hdfs-ha","title":"HDFS HA","text":"<p>\u9ad8\u53ef\u7528\u662f\u4e3a\u4e86\u89e3\u51b3\u4e00\u4e2a\u7cfb\u7edf\u7684\u5355\u70b9\u6545\u969c\u95ee\u9898\uff0c\u4f7f\u5f97\u96c6\u7fa4\u5728\u5355\u70b9\u6545\u969c\u65f6\u4ecd\u80fd\u6b63\u5e38\u5730\u5411\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u901a\u5e38\u662f\u901a\u8fc7\u4e3b\u5907\u5207\u6362\u7684\u65b9\u6cd5\u5b9e\u73b0\u3002</p> <p>\u5728 Hadoop 2.0 \u4ee5\u524d\u7684\u7248\u672c\uff0cNameNode \u9762\u4e34\u5355\u70b9\u6545\u969c (Single Point of Failure, SPOF) \u98ce\u9669\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6 NameNode \u8282\u70b9\u6302\u4e86\uff0c\u6574\u4e2a\u96c6\u7fa4\u5c31\u4e0d\u53ef\u7528\u4e86\uff0c\u800c\u4e14\u9700\u8981\u501f\u52a9\u8f85\u52a9 NameNode \u6765\u624b\u5de5\u5e72\u9884\u91cd\u542f\u96c6\u7fa4\uff0c\u8fd9\u5c06\u5ef6\u957f\u96c6\u7fa4\u7684\u505c\u673a\u65f6\u95f4\u3002</p> <p>Hadoop 2.0 \u7248\u672c\u652f\u6301\u4e00\u4e2a\u5907\u7528\u8282\u70b9\u7528\u4e8e\u81ea\u52a8\u6062\u590d NameNode \u6545\u969c\uff0cHadoop 3.0 \u5219\u652f\u6301\u591a\u4e2a\u5907\u7528 NameNode \u8282\u70b9\uff0c\u8fd9\u4f7f\u5f97\u6574\u4e2a\u96c6\u7fa4\u53d8\u5f97\u66f4\u52a0\u53ef\u9760\u3002</p> <p></p> <p></p> <p></p> <p>\u5f53\u7cfb\u7edf\u4e2d\u5176\u4e2d\u4e00\u9879\u8bbe\u5907\u5931\u6548\u800c\u65e0\u6cd5\u8fd0\u4f5c\u65f6\uff0c\u53e6\u4e00\u9879\u8bbe\u5907\u5373\u53ef\u81ea\u52a8\u63a5\u624b\u539f\u5931\u6548\u7cfb\u7edf\u6240\u6267\u884c\u7684\u5de5\u4f5c\uff0c\u8fd9\u5c31\u662f\u6545\u969c\u5207\u6362\u3002</p> <p>\u6545\u969c\u5207\u6362\uff1a</p> <ul> <li>\u624b\u52a8\u5207\u6362</li> <li>\u81ea\u52a8\u6545\u969c\u5207\u6362\uff1a\u7cfb\u7edf\u81ea\u52a8\u628a\u96c6\u7fa4\u63a7\u5236\u5668\u5207\u6362\u5230\u5907\u7528 NameNode\uff0c\u4e14\u5207\u6362\u8fc7\u7a0b\u4e0d\u9700\u8981\u4eba\u5de5\u5e72\u9884\u3002</li> </ul> <p>HDFS HA \u89e3\u51b3\u65b9\u6848\uff1aQJM</p> <p></p> <p></p> <p>\u4efb\u4f55\u4e00\u79cd HA \u89e3\u51b3\u65b9\u6848\uff0c\u90fd\u5fc5\u987b\u8003\u8651\u5982\u4f55\u89e3\u51b3 2 \u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u4e3b\u5907\u6570\u636e\u540c\u6b65</li> <li>\u6545\u969c\u8f6c\u79fb\uff08\u4e3b\u5907\u5207\u6362\uff09</li> <li>\u9632\u6b62\u8111\u88c2\u95ee\u9898</li> </ul> <p></p> <p></p> <p>QJM \u4e3b\u5907\u6570\u636e\u72b6\u6001\u540c\u6b65\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff1aJournal Node\u3002</p> <p></p> <p>\u6545\u969c\u8f6c\u79fb\u89e3\u91ca\uff1a\u901a\u8fc7 ZK \u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u5b9e\u73b0\u4e3b\u5907\u5207\u6362\u30022 \u4e2a ZKFC \u53bb ZK \u96c6\u7fa4\u4e0a\u6ce8\u518c\u8282\u70b9\uff08ephemeral \u8282\u70b9\uff09\uff0c\u8c01\u6ce8\u518c\u6210\u529f\uff0c\u8c01\u4ee3\u8868\u7684\u673a\u5668\u4e0a\u7684 NN \u5c31\u662f Active NN\uff0c\u6ca1\u6ce8\u518c\u6210\u529f\u7684 ZKFC \u5bf9 znode \u6ce8\u518c\u76d1\u542c\uff0c\u76d1\u542c\u8fd9\u4e2a znode \u662f\u5426\u6d88\u5931\u3002\u5982\u679c ZKFC \u53d1\u73b0 Active NN \u4e0d\u5065\u5eb7\uff0c\u65ad\u5f00\u548c ZK \u7684\u8fde\u63a5\uff0c\u4f1a\u8bdd\u6d88\u5931\uff0c\u6ce8\u518c\u7684 znode \u8282\u70b9\u88ab\u5220\u9664\uff0c\u4f1a\u89e6\u53d1\u76d1\u542c\uff0c\u901a\u77e5\u7ed9 Standby NN \u7684 ZKFC\u3002Standby NN \u4e0a\u7684 ZKFC \u6536\u5230\u76d1\u542c\u901a\u77e5\uff0c\u6ce8\u518c\u6210\u529f\uff0cStandby NN \u6210\u4e3a\u65b0\u7684 Active NN\u3002</p> <p>\u8111\u88c2\u95ee\u9898\uff1a\u5982\u679c ZKFC \u8c0e\u62a5\u519b\u60c5\u600e\u4e48\u529e\uff1f-- \u901a\u8fc7 Fencing\uff08\u9694\u79bb\uff09\u673a\u5236\u3002\u901a\u8fc7\u8fdc\u7a0b\u8865\u5200\u5f3a\u5236\u6740\u6b7b\u8fdb\u7a0b\u7684\u65b9\u5f0f\uff08\u6216\u8005\u7528\u6237\u4e8b\u5148\u5b9a\u4e49\u7684 shell \u811a\u672c\u5b8c\u6210\u9694\u79bb\uff09\u3002</p> <p></p>"},{"location":"Hadoop/2.%20HDFS/#hdfs-federation","title":"HDFS Federation \u8054\u90a6","text":"<p>HDFS \u8054\u90a6\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3 NameNode \u5185\u5b58\u4e0d\u591f\u548c\u591a\u7528\u6237\u547d\u540d\u7a7a\u95f4\u7684\u9694\u79bb\u95ee\u9898\u3002\u540c\u65f6\u7531\u4e8e NameNode \u8fd8\u662f\u5ba2\u6237\u7aef\u5bf9 HDFS \u7684\u552f\u4e00\u5165\u53e3\uff0c\u56e0\u6b64\u8054\u90a6\u8fd8\u80fd\u63d0\u5347 NameNode \u7684\u541e\u5410\u91cf\u3002</p> <p></p> <p></p> <p></p> <p></p> <p>Hadoop \u7684 HA \u7ed3\u6784\uff0c\u89e3\u51b3\u4e86\u5355\u70b9\u6545\u969c\u95ee\u9898\uff0c\u4f46\u662f NameNode \u672c\u8d28\u4e0a\u8fd8\u662f\u53ea\u6709\u4e00\u4e2a\u5de5\u4f5c\u8282\u70b9\uff0c\u5982\u679c\u6570\u636e\u91cf\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\u867d\u7136\u53ef\u4ee5\u589e\u52a0 DataNode \u63d0\u9ad8\u5b58\u50a8\u80fd\u529b\uff0c\u4f46\u662f NameNode \u53ef\u80fd\u4f1a\u6210\u4e3a\u7cfb\u7edf\u74f6\u9888\uff0c\u4e5f\u5c31\u662f\u5143\u6570\u636e\u4fe1\u606f\u65e0\u6cd5\u5b58\u50a8\u4e86\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cHadoop \u53c8\u5f15\u5165\u4e86\u8054\u90a6\u673a\u5236\u3002</p> <p>\u8054\u90a6\u673a\u5236\u7684\u539f\u7406\u4e5f\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\uff0c\u65e2\u7136\u4e00\u4e2a NameNode \u8d44\u6e90\u4e0d\u8db3\u4e86\uff0c\u90a3\u5c31\u52a0\u673a\u5668\uff0c\u4f7f\u7528\u591a\u4e2a NameNode\uff0c\u4f46\u662f Hadoop \u591a NameNode \u7684\u8bbe\u8ba1\u7ed3\u6784\u6bd4\u8f83\u7279\u6b8a\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\uff0c Hadoop \u7684\u8054\u90a6\u673a\u5236\u91c7\u7528\u4e86\u6a2a\u5411\u6269\u5c55\u7684\u65b9\u5f0f\uff0c\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e2a NameNode \u8d1f\u8d23\u72ec\u7acb\u7684\u90e8\u5206 DataNode \u8282\u70b9\uff0c\u56e0\u4e3a\u8fd9\u76f8\u5f53\u4e8e\u662f\u591a\u4e2a\u96c6\u7fa4\u3002Hadoop \u5c06 DataNode \u8282\u70b9\u7684\u8d44\u6e90\u5206\u4e3a\u591a\u4efd\uff0c\u6bcf\u4e00\u4efd\u7531\u4e00\u4e2a NameNode \u8d1f\u8d23\u7ef4\u62a4\u5143\u6570\u636e\u4fe1\u606f\uff0c\u6bcf\u4e2a NameNode \u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u9700\u8981\u534f\u8c03\uff0cDataNode \u5411\u6240\u6709\u7684 NameNode \u62a5\u544a\u5fc3\u8df3\u4fe1\u606f\u548c block \u4fe1\u606f\uff0c\u540c\u65f6\u5904\u7406\u6765\u81ea NameNode \u7684\u547d\u4ee4\uff0cDataNode \u901a\u8fc7 NameServiceId \u533a\u5206\u4e0d\u540c\u7684 NameNode\u3002\u4e00\u4e2a NameNode \u6545\u969c\u4e0d\u4f1a\u5f71\u54cd\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6 NameNode \u63d0\u4f9b\u670d\u52a1\u3002</p> <p>\u8054\u90a6\u673a\u5236\u867d\u7136\u5e26\u6765\u4e86\u5f88\u591a\u4fbf\u5229\uff0c\u4f46\u662f\u4e5f\u9644\u5e26\u4e86\u4e00\u4e9b\u65b0\u7684\u95ee\u9898\uff0c\u6700\u5178\u578b\u7684\u5c31\u662f\u7531\u4e8e namespace \u88ab\u62c6\u5206\u6210\u591a\u4e2a\uff0c\u4e14\u4e92\u76f8\u72ec\u7acb\uff0c\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\u53ea\u5141\u8bb8\u5b58\u5728\u4e00\u4e2a namespace \u4e2d\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u8bbf\u95ee\u591a\u4e2a\u6587\u4ef6\u8def\u5f84\uff08\u8de8 namespace\uff09\uff0c\u90a3\u4e48\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u4ea7\u751f\u4ea4\u53c9\u8bbf\u95ee namespace \u7684\u60c5\u51b5\u3002\u6b64\u5916\uff0c\u542f\u7528 Federation \u540e\uff0cHDFS \u5f88\u591a\u7ba1\u7406\u547d\u4ee4\u90fd\u4f1a\u5931\u6548\uff0c\u6bd4\u5982 hdfs dfsadmin\u3001hdfs fsck\u3001hdfs dfs cp/mv \u7b49\u3002</p>"},{"location":"Hadoop/3.%20MapReduce/","title":"MapReduce","text":""},{"location":"Hadoop/3.%20MapReduce/#mapreduce_1","title":"MapReduce \u662f\u4ec0\u4e48\uff1f","text":"<p>MapReduce \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\u7684\u7f16\u7a0b\u6846\u67b6\uff0cMapReduce \u6838\u5fc3\u529f\u80fd\u662f\u5c06\u7528\u6237\u7f16\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u548c\u81ea\u5e26\u9ed8\u8ba4\u7ec4\u4ef6\u6574\u5408\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\uff0c\u5e76\u53d1\u8fd0\u884c\u5728\u4e00\u4e2a Hadoop \u96c6\u7fa4\u4e0a\u3002</p> <p>MapReduce \u57fa\u4e8e\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5c06\u4e00\u4e2a\u5927\u7684\u8ba1\u7b97\u4efb\u52a1\u62c6\u5206\u6210\u591a\u4e2a\u5b50\u4efb\u52a1\u4ea4\u7ed9\u591a\u4e2a\u8282\u70b9\u5e76\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u5408\u5e76\u7ed3\u679c\u3002</p> <p>\u5b83\u7531\u4e24\u4e2a\u9636\u6bb5\u7ec4\u6210\uff1a</p> <ul> <li>Map \u9636\u6bb5\uff08\u5207\u5206\u6210\u4e00\u4e2a\u4e2a\u5c0f\u7684\u4efb\u52a1\uff09</li> <li>Reduce \u9636\u6bb5\uff08\u6c47\u603b\u5c0f\u4efb\u52a1\u7684\u7ed3\u679c\uff09</li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#mapreduce_2","title":"MapReduce \u7684\u4f18\u7f3a\u70b9","text":"<p>MapReduce \u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u6613\u4e8e\u7f16\u7a0b\uff1a</li> </ul> <p>\u5b83\u7b80\u5355\u7684\u5b9e\u73b0\u4e00\u4e9b\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u5206\u5e03\u5f0f\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u5206\u5e03\u5f0f\u7a0b\u5e8f\u53ef\u4ee5\u5206\u5e03\u5230\u5927\u91cf\u5ec9\u4ef7\u7684 PC \u673a\u5668\u4e0a\u8fd0\u884c\u3002\u4e5f\u5c31\u662f\u8bf4\u4f60\u5199\u4e00\u4e2a\u5206\u5e03\u5f0f\u7a0b\u5e8f\uff0c\u8ddf\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u4e32\u884c\u7a0b\u5e8f\u662f\u4e00\u6a21\u4e00\u6837\u7684\u3002</p> <ul> <li>\u9ad8\u53ef\u6269\u5c55\u6027\uff1a</li> </ul> <p>\u5f53\u4f60\u7684\u8ba1\u7b97\u8d44\u6e90\u4e0d\u80fd\u5f97\u5230\u6ee1\u8db3\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u589e\u52a0\u673a\u5668\u6765\u6269\u5c55\u5b83\u7684\u8ba1\u7b97\u80fd\u529b\u3002</p> <ul> <li>\u9ad8\u5bb9\u9519\u6027\uff1a</li> </ul> <p>MapReduce \u8bbe\u8ba1\u7684\u521d\u8877\u5c31\u662f\u4f7f\u7a0b\u5e8f\u80fd\u591f\u90e8\u7f72\u5728\u5ec9\u4ef7\u7684 PC \u673a\u5668\u4e0a\uff0c\u8fd9\u5c31\u8981\u6c42\u5b83\u5177\u6709\u5f88\u9ad8\u7684\u5bb9\u9519\u6027\u3002\u6bd4\u5982\u5176\u4e2d\u4e00\u53f0\u673a\u5668\u6302\u4e86\uff0c\u5b83\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u8ba1\u7b97\u4efb\u52a1\u8f6c\u79fb\u5230\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\uff0c\u4e0d\u81f3\u4e8e\u8fd9\u4e2a\u4efb\u52a1\u8fd0\u884c\u5931\u8d25\uff0c\u800c\u4e14\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u9700\u8981\u4eba\u5de5\u53c2\u4e0e\uff0c\u800c\u5b8c\u5168\u662f\u7531 Hadoop \u5185\u90e8\u5b8c\u6210\u7684\u3002</p> <p>MapReduce \u7684\u7f3a\u70b9\uff1a</p> <ul> <li>\u4e0d\u64c5\u957f\u5b9e\u65f6\u8ba1\u7b97</li> </ul> <p>MapReduce \u65e0\u6cd5\u50cf MySQL \u4e00\u6837\uff0c\u5728\u6beb\u79d2\u6216\u8005\u79d2\u7ea7\u5185\u8fd4\u56de\u7ed3\u679c\u3002</p> <ul> <li>\u4e0d\u64c5\u957f\u6d41\u5f0f\u8ba1\u7b97</li> </ul> <p>\u6d41\u5f0f\u8ba1\u7b97\u7684\u8f93\u5165\u6570\u636e\u662f\u52a8\u6001\u7684\uff0c\u800c MapReduce \u7684\u8f93\u5165\u6570\u636e\u96c6\u662f\u9759\u6001\u7684\uff0c\u4e0d\u80fd\u52a8\u6001\u53d8\u5316\u3002\u8fd9\u662f\u56e0\u4e3a MapReduce \u81ea\u8eab\u7684\u8bbe\u8ba1\u7279\u70b9\u51b3\u5b9a\u4e86\u6570\u636e\u6e90\u5fc5\u987b\u662f\u9759\u6001\u7684\u3002</p> <ul> <li>\u4e0d\u64c5\u957f\u9700\u8981\u591a\u8f6e\u8fed\u4ee3\u7684\u8ba1\u7b97</li> </ul> <p>\u5982\u679c\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u540e\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u8f93\u5165\u4e3a\u524d\u4e00\u4e2a\u7684\u8f93\u51fa\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a MapReduce \u4f5c\u4e1a\u7684\u4e2d\u95f4\u7ed3\u679c\u548c\u8f93\u51fa\u7ed3\u679c\u90fd\u4f1a\u5199\u5165\u5230\u78c1\u76d8\uff0c\u4f1a\u9020\u6210\u5927\u91cf\u7684\u78c1\u76d8 I/O \u548c\u7f51\u7edc\u5f00\u9500\uff0c\u5bfc\u81f4\u6027\u80fd\u975e\u5e38\u7684\u4f4e\u4e0b\u3002</p>"},{"location":"Hadoop/3.%20MapReduce/#mapreduce_3","title":"MapReduce \u8fdb\u7a0b","text":"<p>\u5728\u8fd0\u884c\u4e00\u4e2a\u5b8c\u6574\u7684 MapReduce \u7a0b\u5e8f\u65f6\uff0c\u5728\u96c6\u7fa4\u4e2d\u6709 3 \u7c7b\u5b9e\u4f8b\u8fdb\u7a0b\uff1a</p> <ul> <li>MRAppMaster\uff1a\u8d1f\u8d23\u6574\u4e2a\u7a0b\u5e8f\u8fc7\u7a0b\u8c03\u5ea6\u53ca\u72b6\u6001\u534f\u8c03</li> <li>MapTask\uff1a\u8d1f\u8d23 map \u9636\u6bb5\u6574\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b</li> <li>ReduceTask\uff1a\u8d1f\u8d23 reduce \u9636\u6bb5\u6574\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b</li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#mapreduce_4","title":"MapReduce \u5e8f\u5217\u5316","text":"<p>Mapper \u548c Reducer \u4f7f\u7528\u7684\u6570\u636e\u7684\u7c7b\u578b\u662f Hadoop \u81ea\u8eab\u5c01\u88c5\u7684\u5e8f\u5217\u5316\u7c7b\u578b\u3002</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u4e0d\u7528 Java \u7684\u5e8f\u5217\u5316\uff1f</p> <p>Java \u7684\u5e8f\u5217\u5316\u662f\u4e00\u4e2a\u91cd\u91cf\u7ea7\u5e8f\u5217\u5316\u6846\u67b6\uff08Serializable\uff09\uff0c\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5e8f\u5217\u5316\u540e\uff0c\u4f1a\u9644\u5e26\u5f88\u591a\u989d\u5916\u7684\u4fe1\u606f\uff08\u5404\u79cd\u6821\u9a8c\u4fe1\u606f\uff0cHeader\uff0c\u7ee7\u627f\u4f53\u7cfb\u7b49\uff09\uff0c\u4e0d\u4fbf\u4e8e\u5728\u7f51\u7edc\u4e2d\u9ad8\u6548\u4f20\u8f93\u3002\u6240\u4ee5\uff0cHadoop \u81ea\u5df1\u5f00\u53d1\u4e86\u4e00\u5957\u5e8f\u5217\u5316\u673a\u5236\uff08Writable\uff09\u3002</p> <p>Hadoop \u5e8f\u5217\u5316\u7279\u70b9\uff1a</p> <ul> <li>\u7d27\u51d1 \uff1a\u9ad8\u6548\u4f7f\u7528\u5b58\u50a8\u7a7a\u95f4</li> <li>\u5feb\u901f\uff1a\u8bfb\u5199\u6570\u636e\u7684\u989d\u5916\u5f00\u9500\u5c0f</li> <li>\u4e92\u64cd\u4f5c\uff1a\u652f\u6301\u591a\u8bed\u8a00\u7684\u4ea4\u4e92</li> </ul> <p>\u5982\u679c\u60f3\u8981\u4f20\u8f93 Java Bean\uff0c\u9700\u8981\u5b9e\u73b0 Writable \u63a5\u53e3\uff0c\u5e76\u624b\u52a8\u91cd\u5199\u5e8f\u5217\u5316\uff08<code>write()</code>\uff09\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\uff08<code>readFields()</code>\uff09\uff0c\u6ce8\u610f\u53cd\u5e8f\u5217\u5316\u987a\u5e8f\u548c\u5e8f\u5217\u5316\u7684\u987a\u5e8f\u8981\u5b8c\u5168\u4e00\u81f4\u3002\u540c\u65f6\uff0c\u5982\u679c\u9700\u8981\u5c06\u81ea\u5b9a\u4e49\u7684 Bean \u653e\u5728 Key \u4e2d\u4f20\u8f93\uff0c\u8fd8\u9700\u8981\u989d\u5916\u5b9e\u73b0 Comparable \u63a5\u53e3\uff0c\u56e0\u4e3a MapReduce \u4e2d\u7684 Shuffle \u8fc7\u7a0b\u8981\u6c42 Key \u5fc5\u987b\u80fd\u6392\u5e8f\u3002</p>"},{"location":"Hadoop/3.%20MapReduce/#mapreduce_5","title":"MapReduce \u6838\u5fc3\u601d\u60f3","text":""},{"location":"Hadoop/3.%20MapReduce/#map","title":"Map \u9636\u6bb5","text":"<p>\u7b2c\u4e00\u9636\u6bb5\uff1a\u903b\u8f91\u5207\u7247</p> <ul> <li>\u5bf9\u5f85\u5904\u7406\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u9010\u4e2a\u904d\u5386\uff0c\u8fdb\u884c\u903b\u8f91\u5207\u7247\u5f62\u6210\u5207\u7247\u89c4\u5212\u3002</li> <li>Split size = Block size\uff0c\u6bcf\u4e00\u4e2a\u5207\u7247\u7531\u4e00\u4e2a MapTask \u5904\u7406\u3002\uff08<code>FileInputFormat.getSplits()</code>\uff09</li> </ul> <p>\u7b2c\u4e8c\u9636\u6bb5\uff1a\u6309\u884c\u8bfb\u53d6</p> <ul> <li>\u5bf9\u5207\u7247\u4e2d\u7684\u6570\u636e\u6309\u884c\u8bfb\u53d6\uff0c\u89e3\u6790\u8fd4\u56de <code>&lt;key,value&gt;</code> \u5bf9\u3002</li> <li>key\uff1a\u6bcf\u4e00\u884c\u7684\u8d77\u59cb\u4f4d\u7f6e\u504f\u79fb\u91cf</li> <li>value\uff1a\u672c\u884c\u7684\u6587\u672c\u5185\u5bb9</li> <li><code>TextInputFormat.LineRecordReader</code></li> </ul> <p>\u7b2c\u4e09\u9636\u6bb5\uff1aMap \u65b9\u6cd5</p> <ul> <li>\u8c03\u7528 Mapper \u7c7b\u4e2d\u7684 map() \u65b9\u6cd5\u5904\u7406\u6570\u636e\u3002</li> <li>\u6bcf\u8bfb\u53d6\u89e3\u6790\u51fa\u6765\u7684\u4e00\u4e2a <code>&lt;key,value&gt;</code> \uff0c\u8c03\u7528\u4e00\u6b21 map() \u65b9\u6cd5\u5904\u7406\u3002\uff08<code>Mapper.map()</code>\uff09</li> </ul> <p>\u7b2c\u56db\u9636\u6bb5\uff1a\u5206\u533a partition</p> <ul> <li>\u5bf9 map() \u65b9\u6cd5\u8ba1\u7b97\u8f93\u51fa\u7684\u7ed3\u679c\u8fdb\u884c\u5206\u533a partition\u3002</li> <li>\u9ed8\u8ba4\u4e0d\u5206\u533a\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u53ea\u6709\u4e00\u4e2a ReduceTask\u3002</li> <li>\u5206\u533a\u7684\u6570\u91cf\u5c31\u662f ReduceTask \u8fd0\u884c\u7684\u6570\u91cf\u3002\uff08HashPartitioner\uff09</li> </ul> <p>\u7b2c\u4e94\u9636\u6bb5\uff1a\u5199\u5165\u5185\u5b58\u7f13\u51b2\u533a</p> <ul> <li>map() \u8f93\u51fa\u6570\u636e\u5199\u5165\u5185\u5b58\u7f13\u51b2\u533a\u3002</li> <li>\u8fbe\u5230 80% \u6bd4\u4f8b\u6ea2\u51fa\u5230\u78c1\u76d8\u4e0a\u3002</li> <li>\u6ea2\u5199 spill \u7684\u65f6\u5019\u6839\u636e key \u8fdb\u884c\u6392\u5e8f sort\u3002</li> <li>\u9ed8\u8ba4\u6839\u636e key \u5b57\u5178\u5e8f\u6392\u5e8f\u3002\uff08<code>WritableComparable.compareTo()</code>\uff09</li> </ul> <p>\u7b2c\u516d\u9636\u6bb5\uff1a\u6ea2\u5199\u6587\u4ef6\u5408\u5e76</p> <ul> <li>\u5bf9\u6240\u6709\u6ea2\u5199\u6587\u4ef6\u8fdb\u884c\u6700\u7ec8\u7684 merge \u5408\u5e76\uff0c\u6210\u4e3a\u4e00\u4e2a\u6587\u4ef6\u3002</li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#reduce","title":"Reduce \u9636\u6bb5","text":"<p>\u7b2c\u4e00\u9636\u6bb5\uff1a\u590d\u5236</p> <ul> <li>ReduceTask \u4f1a\u4e3b\u52a8\u4ece MapTask \u590d\u5236\u62c9\u53d6\u5176\u8f93\u51fa\u7684\u952e\u503c\u5bf9\u3002</li> </ul> <p>\u7b2c\u4e8c\u9636\u6bb5\uff1a\u5408\u5e76</p> <ul> <li>\u628a copy \u6765\u7684\u6570\u636e\uff0c\u8fdb\u884c\u5408\u5e76 merge\uff0c\u5373\u628a\u5206\u6563\u7684\u6570\u636e\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u7684\u6570\u636e\uff0c\u518d\u5bf9\u5408\u5e76\u540e\u7684\u6570\u636e\u6392\u5e8f\u3002</li> </ul> <p>\u7b2c\u4e09\u9636\u6bb5\uff1a\u5206\u7ec4 + reduce</p> <ul> <li>\u5bf9\u4e8e\u5408\u5e76\u3001\u6392\u5e8f\u540e\u7684\u952e\u503c\u5bf9\uff0c\u5c06 key \u76f8\u7b49\u7684\u952e\u503c\u5bf9\u7ec4\u6210\u4e00\u7ec4</li> <li>\u5bf9\u6bcf\u4e00\u7ec4\u952e\u503c\u5bf9\u8c03\u7528\u4e00\u6b21 reduce() \u65b9\u6cd5\u3002</li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#mapreduce_6","title":"MapReduce \u6846\u67b6\u539f\u7406\u8be6\u89e3","text":""},{"location":"Hadoop/3.%20MapReduce/#inputformat","title":"InputFormat \u6570\u636e\u8bfb\u5165","text":"<ul> <li> <p>\u8bfb\u53d6\u6570\u636e\u7ec4\u4ef6 <code>InputFormat</code>\uff08\u9ed8\u8ba4 <code>TextInputFormat</code>\uff09\u4f1a\u901a\u8fc7 <code>getSplits()</code> \u65b9\u6cd5\u5bf9\u8f93\u5165\u76ee\u5f55\u4e2d\u6587\u4ef6\u8fdb\u884c\u903b\u8f91\u89c4\u5212\u5f97\u5230 splits\uff0c\u6709\u591a\u5c11\u4e2a split \u5c31\u5bf9\u5e94\u542f\u52a8\u591a\u5c11\u4e2a MapTask\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b split \u4e0e block \u7684\u662f\u4e00\u5bf9\u4e00\u5173\u7cfb\u3002</p> </li> <li> <p>\u903b\u8f91\u89c4\u5212\u540e\uff0c\u7531 <code>RecordReader</code> \u5bf9\u8c61\uff08\u9ed8\u8ba4 <code>LineRecordReader</code>\uff09\u8fdb\u884c\u8bfb\u53d6\uff0c\u4ee5\u56de\u8f66\u6362\u884c\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u8bfb\u53d6\u4e00\u884c\u6570\u636e\uff0c\u8fd4\u56de <code>&lt;key\uff0cvalue&gt;</code>\u3002key \u8868\u793a\u6bcf\u884c\u9996\u5b57\u7b26\u504f\u79fb\u91cf\uff0cvalue \u8868\u793a\u8fd9\u4e00\u884c\u6587\u672c\u5185\u5bb9\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a <code>&lt;key,value&gt;</code>\uff0c\u8c03\u7528\u4e00\u6b21 map() \u65b9\u6cd5\u5904\u7406\u3002</p> </li> </ul> <p>block VS split</p> <ul> <li>\u6570\u636e\u5757\uff08Block\uff09\uff1aHDFS \u5b58\u50a8\u7684\u6570\u636e\u5355\u4f4d</li> <li> <p>\u5207\u7247\uff08Split\uff09\uff1a\u53ea\u662f\u903b\u8f91\u4e0a\u5bf9\u8f93\u5165\u8fdb\u884c\u5206\u7247\uff0c\u5e76\u4e0d\u4f1a\u5728\u78c1\u76d8\u4e0a\u5c06\u5176\u5207\u5206\u5b58\u50a8\u3002\u5207\u7247\u662f MapReduce \u7a0b\u5e8f\u8f93\u5165\u6570\u636e\u7684\u5355\u4f4d\uff0c\u4e00\u4e2a\u5207\u7247\u5bf9\u5e94\u542f\u52a8\u4e00\u4e2a MapTask\u3002</p> </li> <li> <p>\u5982\u679c Block \u5927\u5c0f\u4e3a 128M\uff0c\u5207\u7247\u5927\u5c0f\u4e3a 100M\uff0c\u90a3\u4e48\u6bcf\u4e2a Block \u5269\u4e0b\u7684 28M\uff0c\u4f1a\u8de8\u8282\u70b9\u8fdb\u884c\u7f51\u7edc\u901a\u4fe1\u4f20\u8f93\uff0c\u5e76\u4e14\u6709\u989d\u5916\u7684 IO \u5f00\u9500\uff0c\u6d6a\u8d39\u8d44\u6e90\u3002</p> </li> <li> <p>\u5207\u7247\u65f6\uff0c\u4e0d\u8003\u8651\u6570\u636e\u96c6\u6574\u4f53\uff0c\u800c\u662f\u9010\u4e2a\u9488\u5bf9\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5355\u72ec\u5207\u7247\u3002</p> </li> <li> <p>\u6bcf\u6b21\u5207\u7247\u65f6\uff0c\u90fd\u8981\u5224\u65ad\u5207\u5b8c\u5269\u4e0b\u7684\u90e8\u5206\u662f\u5426\u5927\u4e8e\u5757\u7684 1.1 \u500d\uff0c\u4e0d\u5927\u4e8e 1.1 \u500d\u5c31\u5212\u5206\u4e3a\u4e00\u4e2a\u5207\u7247\u3002</p> </li> <li> <p>\u5207\u7247\u89c4\u5212\u6587\u4ef6\u4f1a\u4e0a\u4f20\u81f3 Yarn\uff0cYarn \u4e0a\u7684 MRAppMaster \u5c31\u53ef\u4ee5\u6839\u636e\u5207\u7247\u89c4\u5212\u6587\u4ef6\u5f00\u542f\u5bf9\u5e94\u6570\u91cf\u7684 MapTask\u3002</p> </li> </ul> <p>FileInputFormat \u5b9e\u73b0\u7c7b</p> <p>\u5728\u8fd0\u884c MapReduce \u7a0b\u5e8f\u65f6\uff0c\u8f93\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u5305\u62ec\uff1a\u57fa\u4e8e\u884c\u7684\u65e5\u5fd7\u6587\u4ef6\u3001\u4e8c\u8fdb\u5236\u683c\u5f0f\u6587\u4ef6\u3001\u6570\u636e\u5e93\u8868\u7b49\u3002 \u90a3\u4e48\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c MapReduce \u662f\u5982\u4f55\u8bfb\u53d6\u8fd9\u4e9b\u6570\u636e\u7684\u5462\uff1f</p> <p>FileInputFormat \u5e38\u89c1\u7684\u63a5\u53e3\u5b9e\u73b0\u7c7b\u5305\u62ec\uff1aTextInputFormat\u3001KeyValueTextInputFormat\u3001NLineInputFormat\u3001CombineTextInputFormat \u548c\u81ea\u5b9a\u4e49 InputFormat \u7b49\u3002</p> <p>TextInputFormat</p> <p>TextInputFormat \u662f\u9ed8\u8ba4\u7684 FileInputFormat \u5b9e\u73b0\u7c7b\u3002\u6309\u884c\u8bfb\u53d6\u6bcf\u6761\u8bb0\u5f55\u3002 \u952e\u662f\u5b58\u50a8\u8be5\u884c\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u7684\u8d77\u59cb\u5b57\u8282\u504f\u79fb\u91cf\uff0c LongWritable \u7c7b\u578b\u3002\u503c\u662f\u8fd9\u884c\u7684\u5185\u5bb9\uff0c\u4e0d\u5305\u62ec\u4efb\u4f55\u884c\u7ec8\u6b62\u7b26\uff08\u6362\u884c\u7b26\u548c\u56de\u8f66\u7b26\uff09\uff0cText \u7c7b\u578b\u3002</p> <p>CombineTextInputFormat</p> <p>\u6846\u67b6\u9ed8\u8ba4\u7684 TextInputFormat \u5207\u7247\u673a\u5236\u662f\u5bf9\u4efb\u52a1\u6309\u6587\u4ef6\u89c4\u5212\u5207\u7247\uff0c\u4e0d\u7ba1\u6587\u4ef6\u591a\u5c0f\uff0c\u90fd\u4f1a\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5207\u7247\uff0c\u90fd\u4f1a\u4ea4\u7ed9\u4e00\u4e2a MapTask\uff0c\u8fd9\u6837\u5982\u679c\u6709\u5927\u91cf\u5c0f\u6587\u4ef6\uff0c\u5c31\u4f1a\u4ea7\u751f\u5927\u91cf\u7684 MapTask\uff0c\u5904\u7406\u6548\u7387\u6781\u5176\u4f4e\u4e0b\u3002</p> <p>CombineTextInputFormat \u7528\u4e8e\u5c0f\u6587\u4ef6\u8fc7\u591a\u7684\u573a\u666f\uff0c\u5b83\u53ef\u4ee5\u5c06\u591a\u4e2a\u5c0f\u6587\u4ef6\u4ece\u903b\u8f91\u4e0a\u89c4\u5212\u5230\u4e00\u4e2a\u5207\u7247\u4e2d\uff0c\u8fd9\u6837\uff0c\u591a\u4e2a\u5c0f\u6587\u4ef6\u5c31\u53ef\u4ee5\u4ea4\u7ed9\u4e00\u4e2a MapTask \u5904\u7406\u3002</p> <p>\u865a\u62df\u5b58\u50a8\u5207\u7247\u6700\u5927\u503c\u8bbe\u7f6e</p> <pre><code>CombineTextInputFormat.setMaxInputSplitSize(job, 4194304); // 4m\n</code></pre> <p>\u6ce8\u610f\uff1a\u865a\u62df\u5b58\u50a8\u5207\u7247\u6700\u5927\u503c\u8bbe\u7f6e\u6700\u597d\u6839\u636e\u5b9e\u9645\u7684\u5c0f\u6587\u4ef6\u5927\u5c0f\u60c5\u51b5\u6765\u8bbe\u7f6e\u5177\u4f53\u7684\u503c\u3002</p> <p></p>"},{"location":"Hadoop/3.%20MapReduce/#partition","title":"Partition \u5206\u533a","text":"<ul> <li>ReduceTask \u4e2a\u6570\u7684\u6539\u53d8\u5bfc\u81f4\u4e86\u6570\u636e\u5206\u533a\u7684\u4ea7\u751f\uff0c\u800c\u4e0d\u662f\u6570\u636e\u5206\u533a\u5bfc\u81f4\u4e86 ReduceTask \u4e2a\u6570\u7684\u6539\u53d8\u3002</li> <li>\u5982\u679c\u6211\u4eec\u624b\u52a8\u8bbe\u7f6e\u4e86 ReduceTask \u7684\u4e2a\u6570 &gt; 1\uff0c\u90a3\u4e48\u4f1a\u4f7f\u7528\u76f8\u5e94\u7684 Partitioner\u3002</li> <li>\u9ed8\u8ba4 HashPartitioner\uff0c\u6309\u7167 key \u7684 hashCode % numReduceTasks \u5206\u533a\u3002</li> </ul> <pre><code>public class HashPartitioner&lt;K, V&gt; extends Partitioner&lt;K, V&gt; {\n    public int getPartition(K key, V value, int numReduceTasks) {\n        return (key.hashCode() &amp; Integer.MAX_VALUE) % numReduceTasks;\n    }\n}\n</code></pre> <ul> <li>\u5177\u4f53\u5728 <code>context.write(key, value)</code> \u91cc\u7684 <code>write()</code> \u65b9\u6cd5\u91cc\uff0c\u6709\u4e00\u4e2a <code>collector.collect(key, value, partitioner.getPartition())</code> \u65b9\u6cd5\uff0c\u91cc\u9762\u7684 <code>partitioner</code> \u5c31\u662f\u9ed8\u8ba4\u7684 HashPartitioner\u3002</li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#sort","title":"Sort \u6392\u5e8f","text":"<p>\u6392\u5e8f\u662f MapReduce \u6846\u67b6\u4e2d\u6700\u91cd\u8981\u7684\u64cd\u4f5c\u4e4b\u4e00\u3002</p> <p>MapTask \u548c ReduceTask \u5747\u4f1a\u5bf9\u6570\u636e\u6309\u7167 key \u8fdb\u884c\u6392\u5e8f\u3002\u8be5\u64cd\u4f5c\u5c5e\u4e8e Hadoop \u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u5747\u4f1a\u88ab\u6392\u5e8f\uff0c\u800c\u4e0d\u7ba1\u903b\u8f91\u4e0a\u662f\u5426\u9700\u8981\u3002</p> <p>\u9ed8\u8ba4\u6392\u5e8f\u662f\u6309\u7167\u5b57\u5178\u987a\u5e8f\u6392\u5e8f\uff0c\u4e14\u5b9e\u73b0\u8be5\u6392\u5e8f\u7684\u65b9\u6cd5\u662f\u5feb\u901f\u6392\u5e8f\u3002</p> <p>\u4e3a\u4ec0\u4e48\u5f3a\u5236\u8981\u6c42\u6392\u5e8f\uff1f</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u5206\u7ec4\u3002\u5982\u679c\u4e0d\u6392\u5e8f\uff0c\u5230 reduce \u9636\u6bb5\u65f6\uff0c\u4e3a\u4e86\u5408\u5e76\u8ba1\u7b97\u6240\u6709\u76f8\u540c\u7684 key \u5bf9\u5e94\u7684 value\uff0c\u6bcf\u4e2a key \u90fd\u5fc5\u987b O(n) \u5730\u626b\u63cf\u4e00\u6b21\u6587\u4ef6\u3002\u5982\u679c\u6392\u5e8f\u4e86\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u6bd4\u8f83\u5f53\u524d key \u662f\u5426\u548c\u4e0a\u4e00\u4e2a\u76f8\u540c\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8e MapTask\uff0c\u5b83\u4f1a\u5c06\u5904\u7406\u7684\u7ed3\u679c\u6682\u65f6\u653e\u5230\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\uff0c\u5f53\u73af\u5f62\u7f13\u51b2\u533a\u4f7f\u7528\u7387\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\u540e\uff0c\u518d\u5bf9\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5feb\u901f\u6392\u5e8f\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6709\u5e8f\u6570\u636e\u6ea2\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u800c\u5f53\u6570\u636e\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u5b83\u4f1a\u5bf9\u78c1\u76d8\u4e0a\u6240\u6709\u6587\u4ef6\u6309\u7167\u5206\u533a\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u3002</p> <p>\u5bf9\u4e8e ReduceTask\uff0c\u5b83\u4ece\u6bcf\u4e2a MapTask \u4e0a\u8fdc\u7a0b\u62f7\u8d1d\u76f8\u5e94\u7684\u6570\u636e\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5927\u5c0f\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u6ea2\u5199\u78c1\u76d8\u4e0a\uff0c\u5426\u5219\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002\u5982\u679c\u78c1\u76d8\u4e0a\u6587\u4ef6\u6570\u76ee\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u4ee5\u751f\u6210\u4e00\u4e2a\u66f4\u5927\u6587\u4ef6\u3002\u5f53\u6240\u6709\u6570\u636e\u62f7\u8d1d\u5b8c\u6bd5\u540e\uff0cReduceTask \u7edf\u4e00\u5bf9\u5185\u5b58\u548c\u78c1\u76d8\u4e0a\u7684\u6240\u6709\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u3002</p> <p>\u81ea\u5b9a\u4e49\u7684 bean \u5bf9\u8c61\u505a\u4e3a key \u4f20\u8f93\uff0c\u9700\u8981\u5b9e\u73b0 WritableComparable \u63a5\u53e3\uff0c\u91cd\u5199 compareTo \u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6392\u5e8f\u3002</p>"},{"location":"Hadoop/3.%20MapReduce/#combiner","title":"Combiner \u89c4\u7ea6","text":"<p>Combiner in one sentence\uff1a\u5bf9 Map \u7aef\u7684\u8f93\u51fa\u5148\u505a\u4e00\u6b21\u5c40\u90e8\u5408\u5e76\uff0c\u4ee5\u51cf\u5c11\u5728 Map \u548c Reduce \u8282\u70b9\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u91cf\u3002</p> <p>\u901a\u8fc7\u4f7f\u7528 Combiner\uff0c\u53ef\u4ee5\u5728 Map \u4efb\u52a1\u7684\u672c\u5730\u8fdb\u884c\u4e00\u4e9b\u9884\u5148\u5408\u5e76\u7684\u64cd\u4f5c\uff0c\u4ece\u800c\u51cf\u5c11\u8f93\u51fa\u6570\u636e\u91cf\u3002\u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e\u6570\u636e\u4f20\u8f93\u5230 Reducer \u7684\u6210\u672c\uff0c\u5e76\u51cf\u5c11\u7f51\u7edc\u5e26\u5bbd\u7684\u4f7f\u7528\u3002\u7279\u522b\u662f\u5728 Map \u8f93\u51fa\u6570\u636e\u5177\u6709\u5197\u4f59\u6216\u91cd\u590d\u7684\u60c5\u51b5\u4e0b\uff0cCombiner \u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6570\u636e\u4f20\u8f93\u91cf\uff0c\u63d0\u9ad8\u6574\u4f53\u6027\u80fd\u3002</p> <ul> <li> <p>Combiner \u662f MR \u7a0b\u5e8f\u4e2d Mapper \u548c Reducer \u4e4b\u5916\u7684\u4e00\u79cd\u7ec4\u4ef6\u3002</p> </li> <li> <p>Combiner \u7ec4\u4ef6\u7684\u7236\u7c7b\u5c31\u662f Reducer\u3002</p> </li> <li> <p>Combiner \u548c Reducer \u7684\u533a\u522b\u5728\u4e8e\u8fd0\u884c\u7684\u4f4d\u7f6e\uff1a</p> </li> <li> <p>Combiner \u662f\u5728\u6bcf\u4e00\u4e2a MapTask \u6240\u5728\u7684\u8282\u70b9\u8fd0\u884c\uff0c\u662f\u5c40\u90e8\u805a\u5408</p> </li> <li> <p>Reducer \u662f\u63a5\u6536\u5168\u5c40\u6240\u6709 Mapper \u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u662f\u5168\u5c40\u805a\u5408</p> </li> <li> <p>Combiner \u7684\u610f\u4e49\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a MapTask \u7684\u8f93\u51fa\u8fdb\u884c\u5c40\u90e8\u6c47\u603b\uff0c\u4ee5\u51cf\u5c0f\u7f51\u7edc\u4f20\u8f93\u91cf\u3002</p> </li> <li> <p>Combiner \u80fd\u591f\u5e94\u7528\u7684\u524d\u63d0\u662f\u4e0d\u80fd\u5f71\u54cd\u6700\u7ec8\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u800c\u4e14\uff0cCombiner \u7684\u8f93\u51fa kv \u5e94\u8be5\u8ddf Reducer \u7684\u8f93\u5165 kv \u7c7b\u578b\u8981\u5bf9\u5e94\u8d77\u6765\u3002</p> </li> </ul> <p>\u81ea\u5b9a\u4e49 combiner\uff1a</p> <ul> <li>\u81ea\u5b9a\u4e49\u4e00\u4e2a Combiner \u7ee7\u627f Reducer\uff0c\u91cd\u5199 reduce() \u65b9\u6cd5</li> <li>\u5728 Job \u9a71\u52a8\u7c7b\u4e2d\u8bbe\u7f6e\uff1a</li> </ul> <pre><code>job.setCombinerClass(WordCountCombiner.class);\n</code></pre> <p>\u6ce8\u610f\uff1a\u5982\u679c MR \u7a0b\u5e8f\u6ca1\u6709 Reduce \u9636\u6bb5\uff08reduceTask \u4e2a\u6570\u4e3a 0\uff09\uff0c\u90a3\u4e48\u6574\u4e2a shuffle \u8fc7\u7a0b\u4e5f\u6ca1\u6709\u4e86\uff0ccombiner \u4e5f\u5c31\u4e0d\u4f1a\u8d77\u4f5c\u7528\uff0c\u53ea\u4f1a\u6709 map() \u65b9\u6cd5\u7684\u8f93\u51fa\u3002</p> <p>\u5c0f\u6280\u5de7\uff1a\u76f4\u63a5\u4f7f\u7528\u9a71\u52a8\u4e2d\u81ea\u5df1\u5b9e\u73b0\u7684 Reducer \u4ee3\u66ff Combiner \u5373\u53ef\u3002</p>"},{"location":"Hadoop/3.%20MapReduce/#outputformat","title":"OutputFormat \u6570\u636e\u8f93\u51fa","text":"<p>\u9ed8\u8ba4\u5b9e\u73b0\u7c7b\u4e3a TextOutputFormat\u3002</p> <p></p>"},{"location":"Hadoop/3.%20MapReduce/#maptask","title":"MapTask \u5de5\u4f5c\u673a\u5236\u8be6\u89e3","text":"<ul> <li>\u5185\u5b58\u7f13\u51b2\u533a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11\u78c1\u76d8 I/O</li> <li>\u5206\u533a\u53ea\u4f1a\u5728 ReduceTask &gt;= 2 \u7684\u65f6\u5019\u4ea7\u751f\u3002</li> </ul> <p>\u8be6\u7ec6\u6b65\u9aa4\uff1a</p> <p>Step 1</p> <ul> <li> <p>\u8bfb\u53d6\u6570\u636e\u7ec4\u4ef6 <code>InputFormat</code>\uff08\u9ed8\u8ba4 <code>TextInputFormat</code>\uff09\u4f1a\u901a\u8fc7 <code>getSplits()</code> \u65b9\u6cd5\u5bf9\u8f93\u5165\u76ee\u5f55\u4e2d\u6587\u4ef6\u8fdb\u884c\u903b\u8f91\u89c4\u5212\u5f97\u5230 splits\uff0c\u6709\u591a\u5c11\u4e2a split \u5c31\u5bf9\u5e94\u542f\u52a8\u591a\u5c11\u4e2a MapTask\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b split \u4e0e block \u7684\u662f\u4e00\u5bf9\u4e00\u5173\u7cfb\u3002</p> </li> <li> <p>\u903b\u8f91\u89c4\u5212\u540e\uff0c\u7531 <code>RecordReader</code> \u5bf9\u8c61\uff08\u9ed8\u8ba4 <code>LineRecordReader</code>\uff09\u8fdb\u884c\u8bfb\u53d6\uff0c\u4ee5\u56de\u8f66\u6362\u884c\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u8bfb\u53d6\u4e00\u884c\u6570\u636e\uff0c\u8fd4\u56de <code>&lt;key\uff0cvalue&gt;</code>\u3002key \u8868\u793a\u6bcf\u884c\u9996\u5b57\u7b26\u504f\u79fb\u503c\uff0cvalue \u8868\u793a\u8fd9\u4e00\u884c\u6587\u672c\u5185\u5bb9\u3002</p> </li> <li> <p>\u8bfb\u53d6 split \u8fd4\u56de <code>&lt;key,value&gt;</code>\uff0c\u8fdb\u5165\u7528\u6237\u81ea\u5df1\u7ee7\u627f\u7684 Mapper \u7c7b\u4e2d\uff0c\u6267\u884c\u7528\u6237\u91cd\u5199\u7684 map() \u65b9\u6cd5\u3002RecordReader \u8bfb\u53d6\u4e00\u884c\u6570\u636e\uff0c\u8c03\u7528\u4e00\u6b21 map() \u65b9\u6cd5\u5904\u7406\u3002</p> </li> </ul> <p>Step 2</p> <ul> <li> <p>map() \u5904\u7406\u5b8c\u4e4b\u540e\uff0c\u5c06 map() \u7684\u6bcf\u6761\u7ed3\u679c\u901a\u8fc7 <code>context.write()</code> \u7531 collector \u8fdb\u884c <code>collect()</code> \u6570\u636e\u6536\u96c6\u3002\u5728 <code>collect()</code> \u4e2d\uff0c\u4f1a\u5148\u5bf9\u5176\u8fdb\u884c\u5206\u533a\u5904\u7406\uff0c\u9ed8\u8ba4\u4f7f\u7528 HashPartitioner\u3002<code>collector.collect(key, value, partitioner.getPartition())</code> \u3002</p> </li> <li> <p>\u5206\u533a\u8ba1\u7b97\u4e4b\u540e\uff0c\u4f1a\u5c06\u6570\u636e\u5199\u5165\u5185\u5b58\uff0c\u5185\u5b58\u4e2d\u8fd9\u7247\u533a\u57df\u53eb\u505a\u73af\u5f62\u7f13\u51b2\u533a\uff0c\u7f13\u51b2\u533a\u7684\u4f5c\u7528\u662f\u6279\u91cf\u6536\u96c6 map \u7ed3\u679c\uff0c\u51cf\u5c11\u78c1\u76d8 IO \u7684\u5f71\u54cd\u3002<code>&lt;key, value&gt;</code> \u5bf9\u4ee5\u53ca partition \u7684\u7ed3\u679c\u90fd\u4f1a\u88ab\u5199\u5165\u7f13\u51b2\u533a\u3002\u5f53\u7136\u5199\u5165\u4e4b\u524d\uff0ckey \u4e0e value \u503c\u90fd\u4f1a\u88ab\u5e8f\u5217\u5316\u6210\u5b57\u8282\u6570\u7ec4\u3002</p> </li> <li> <p>\u73af\u5f62\u7f13\u51b2\u533a\u5c31\u662f\u5185\u5b58\u4e2d\u7684\u4e00\u5757\u533a\u57df\uff0c\u5e95\u5c42\u662f\u5b57\u8282\u6570\u7ec4\u3002\u7f13\u51b2\u533a\u662f\u6709\u5927\u5c0f\u9650\u5236\uff0c\u9ed8\u8ba4\u662f 100MB\u3002</p> </li> </ul> <p>Step 3</p> <ul> <li> <p>\u5f53 MapTask \u7684\u8f93\u51fa\u7ed3\u679c\u5f88\u591a\u65f6\uff0c\u5c31\u53ef\u80fd\u4f1a\u6491\u7206\u5185\u5b58\uff0c\u6240\u4ee5\u9700\u8981\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u5c06\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u4e34\u65f6\u5199\u5165\u78c1\u76d8\uff0c\u7136\u540e\u91cd\u65b0\u5229\u7528\u8fd9\u5757\u7f13\u51b2\u533a\u3002\u8fd9\u4e2a\u4ece\u5185\u5b58\u5f80\u78c1\u76d8\u5199\u6570\u636e\u7684\u8fc7\u7a0b\u88ab\u79f0\u4e3a Spill\uff0c\u4e2d\u6587\u53ef\u8bd1\u4e3a\u6ea2\u5199\u3002</p> </li> <li> <p>\u6ea2\u5199\u7684\u8fc7\u7a0b\u662f\u7531\u5355\u72ec\u7ebf\u7a0b\u6765\u5b8c\u6210\uff0c\u4e0d\u5f71\u54cd\u5f80\u7f13\u51b2\u533a\u5199 map \u7ed3\u679c\u7684\u7ebf\u7a0b\u3002\u6ea2\u5199\u7ebf\u7a0b\u542f\u52a8\u65f6\u4e0d\u5e94\u8be5\u963b\u6b62 map \u7684\u7ed3\u679c\u8f93\u51fa\uff0c\u6240\u4ee5\u6574\u4e2a\u7f13\u51b2\u533a\u6709\u4e2a\u6ea2\u5199\u7684\u6bd4\u4f8b spill.percent\u3002\u8fd9\u4e2a\u6bd4\u4f8b\u9ed8\u8ba4\u662f 0.8\uff0c\u4e5f\u5c31\u662f\u5f53\u7f13\u51b2\u533a\u7684\u6570\u636e\u5df2\u7ecf\u8fbe\u5230\u9608\u503c\uff08buffer size * spill percent = 100MB * 0.8 = 80MB\uff09\uff0c\u6ea2\u5199\u7ebf\u7a0b\u542f\u52a8\uff0c\u9501\u5b9a\u8fd9 80MB \u7684\u5185\u5b58\uff0c\u6267\u884c\u6ea2\u5199\u8fc7\u7a0b\u3002Map task \u7684\u8f93\u51fa\u7ed3\u679c\u8fd8\u53ef\u4ee5\u5f80\u5269\u4e0b\u7684 20MB \u5185\u5b58\u4e2d\u5199\uff0c\u4e92\u4e0d\u5f71\u54cd\u3002</p> </li> <li> <p>\u5f53\u6ea2\u5199\u7ebf\u7a0b\u542f\u52a8\u540e\uff0c\u9700\u8981\u5bf9\u8fd9 80MB \u7a7a\u95f4\u5185\u7684 key \u505a\u6392\u5e8f (Sort)\u3002\u6392\u5e8f\u662f MapReduce \u6a21\u578b\u9ed8\u8ba4\u7684\u884c\u4e3a\uff0c\u8fd9\u91cc\u7684\u6392\u5e8f\u4e5f\u662f\u5bf9\u5e8f\u5217\u5316\u7684\u5b57\u8282\u505a\u7684\u6392\u5e8f\u3002</p> </li> <li> <p>\u5982\u679c job \u8bbe\u7f6e\u8fc7 Combiner\uff0c\u6392\u5e8f\u4e4b\u540e\uff0c\u5c31\u662f\u4f7f\u7528 Combiner \u7684\u65f6\u5019\u4e86\u3002\u5c06\u6709\u76f8\u540c key \u7684\u952e\u503c\u5bf9\u7684 value \u52a0\u8d77\u6765\uff0c\u51cf\u5c11\u6ea2\u5199\u5230\u78c1\u76d8\u7684\u6570\u636e\u91cf\u3002Combiner \u4f1a\u4f18\u5316 MapReduce \u7684\u4e2d\u95f4\u7ed3\u679c\uff0c\u6240\u4ee5\u5b83\u5728\u6574\u4e2a\u6a21\u578b\u4e2d\u4f1a\u591a\u6b21\u4f7f\u7528\u3002</p> </li> </ul> <p>\u6ea2\u5199\u7684\u8fc7\u7a0b\u603b\u7ed3\uff1a</p> <ul> <li>\u6392\u5e8f</li> <li>combiner\uff08\u5982\u679c\u6709\uff09</li> <li>\u538b\u7f29\uff08\u5982\u679c\u6709\uff09</li> </ul> <p>Step 4</p> <ul> <li> <p>\u6bcf\u6b21\u6ea2\u5199\u4f1a\u5728\u78c1\u76d8\u4e0a\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\uff0c\u5982\u679c map \u7684\u8f93\u51fa\u7ed3\u679c\u771f\u7684\u5f88\u5927\uff0c\u6709\u591a\u6b21\u8fd9\u6837\u7684\u6ea2\u5199\u53d1\u751f\uff0c\u78c1\u76d8\u4e0a\u76f8\u5e94\u7684\u5c31\u4f1a\u6709\u591a\u4e2a\u4e34\u65f6\u6587\u4ef6\u5b58\u5728\u3002</p> </li> <li> <p>\u5f53\u6574\u4e2a\u6570\u636e\u5904\u7406\u7ed3\u675f\u4e4b\u540e\u5f00\u59cb\u5bf9\u78c1\u76d8\u4e2d\u7684\u4e34\u65f6\u6587\u4ef6\u8fdb\u884c merge \u5408\u5e76\uff0c\u56e0\u4e3a\u6700\u7ec8\u7684\u6587\u4ef6\u53ea\u6709\u4e00\u4e2a\uff0c\u5199\u5165\u78c1\u76d8\uff0c\u5e76\u4e14\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\uff0c\u4ee5\u8bb0\u5f55\u6bcf\u4e2a reduce \u5bf9\u5e94\u6570\u636e\u7684\u504f\u79fb\u91cf\u3002</p> </li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#reducetask","title":"ReduceTask \u5de5\u4f5c\u673a\u5236\u8be6\u89e3","text":"<p>Step 1</p> <ul> <li>Copy \u9636\u6bb5\uff0c\u7b80\u5355\u5730\u62c9\u53d6\u6570\u636e\u3002Reduce \u8fdb\u7a0b\u542f\u52a8\u4e00\u4e9b\u6570\u636e copy \u7ebf\u7a0b (Fetcher)\uff0c\u901a\u8fc7 HTTP \u65b9\u5f0f\u8bf7\u6c42 MapTask \u83b7\u53d6\u5c5e\u4e8e\u81ea\u5df1\u7684\u6570\u636e\u3002</li> </ul> <p>\u6ce8\uff1aEventFetcher \u7528\u4e8e\u5224\u65ad\u54ea\u4e9b MapTask \u5df2\u7ecf\u5b8c\u6210\u5de5\u4f5c\uff0cFetcher \u7ebf\u7a0b\u7528\u4e8e\u5b9e\u9645\u6267\u884c\u62c9\u53d6\u6570\u636e\u3002</p> <p>Step 2</p> <ul> <li> <p>Merge &amp; Sort \u9636\u6bb5\u3002Copy \u8fc7\u6765\u7684\u6570\u636e\u4f1a\u5148\u653e\u5165\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\uff0c\u8fd9\u91cc\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u8981\u6bd4 Map \u7aef\u7684\u66f4\u4e3a\u7075\u6d3b\u3002</p> </li> <li> <p>merge \u6709\u4e09\u79cd\u5f62\u5f0f\uff1a\u5185\u5b58\u5230\u5185\u5b58\uff0c\u5185\u5b58\u5230\u78c1\u76d8\uff0c\u78c1\u76d8\u5230\u78c1\u76d8\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7b2c\u4e00\u79cd\u5f62\u5f0f\u4e0d\u542f\u7528\u3002\u5f53\u5185\u5b58\u4e2d\u7684\u6570\u636e\u91cf\u5230\u8fbe\u4e00\u5b9a\u9608\u503c\uff0c\u5c31\u542f\u52a8\u5185\u5b58\u5230\u78c1\u76d8\u7684 merge\u3002\u7b2c\u4e8c\u79cd merge \u65b9\u5f0f\u4e00\u76f4\u5728\u8fd0\u884c\uff0c\u76f4\u5230\u6ca1\u6709 map \u7aef\u7684\u6570\u636e\u65f6\u624d\u7ed3\u675f\uff0c\u7136\u540e\u542f\u52a8\u7b2c\u4e09\u79cd\u78c1\u76d8\u5230\u78c1\u76d8\u7684 merge \u65b9\u5f0f\u751f\u6210\u6700\u7ec8\u7684\u6587\u4ef6\u3002</p> </li> <li> <p>\u628a\u5206\u6563\u7684\u6570\u636e\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u7684\u6570\u636e\u540e\uff0c\u8fd8\u4f1a\u518d\u5bf9\u5408\u5e76\u540e\u7684\u6570\u636e\u6392\u5e8f\u3002\u9ed8\u8ba4 key \u7684\u5b57\u5178\u5e8f\u6392\u5e8f\u3002</p> </li> </ul> <p>Step 3</p> <ul> <li> <p>Reduce \u9636\u6bb5\u3002\u5bf9\u6392\u5e8f\u540e\u7684\u952e\u503c\u5bf9\u8c03\u7528 reduce \u65b9\u6cd5\uff0ckey \u76f8\u7b49\u7684\u952e\u503c\u5bf9\u7ec4\u6210\u4e00\u7ec4\uff0c\u8c03\u7528\u4e00\u6b21 reduce() \u65b9\u6cd5\u3002\u6240\u8c13\u5206\u7ec4\u5c31\u662f\u7eaf\u7cb9\u7684\u524d\u540e\u4e24\u4e2a key \u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\u5c31\u7ee7\u7eed\u5224\u65ad\u4e0b\u4e00\u4e2a\u662f\u5426\u548c\u5f53\u524d\u76f8\u7b49\u3002\uff08\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\uff1f\u56e0\u4e3a\u7ecf\u8fc7\u4e86\u6392\u5e8f\uff09</p> </li> <li> <p>reduce \u5904\u7406\u7684\u7ed3\u679c\u4f1a\u8c03\u7528\u9ed8\u8ba4\u8f93\u51fa\u7ec4\u4ef6 <code>TextOutputFormat</code> \u5199\u5165\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u6587\u4ef6\u4e2d\u3002<code>TextOutputFormat</code> \u9ed8\u8ba4\u662f\u4e00\u6b21\u8f93\u51fa\u5199\u4e00\u884c\uff0ckey \u548c value \u4e4b\u95f4\u4ee5\u5236\u8868\u7b26 <code>\\t</code> \u5206\u5272\u3002</p> </li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#shuffle","title":"Shuffle \u5de5\u4f5c\u673a\u5236\u8be6\u89e3","text":""},{"location":"Hadoop/3.%20MapReduce/#mapreduce_7","title":"MapReduce \u4e2d\u7684\u6392\u5e8f","text":"<p>\u5728 Map \u4efb\u52a1\u548c Reduce \u4efb\u52a1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5171\u53d1\u751f\u4e86 3 \u6b21\u6392\u5e8f</p> <ul> <li> <p>\u5f53\u5185\u5b58\u7684\u73af\u5f62\u7f13\u51b2\u533a\u8fbe\u5230\u8bbe\u5b9a\u7684\u9608\u503c\uff0c\u5728\u6ea2\u5199\u78c1\u76d8\u4e4b\u524d\uff0c\u540e\u53f0\u7ebf\u7a0b\u4f1a\u5bf9\u7f13\u51b2\u533a\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u8fdb\u884c\u5185\u6392\u5e8f\u3002</p> </li> <li> <p>\u5728 Map \u4efb\u52a1\u5b8c\u6210\u4e4b\u524d\uff0c\u78c1\u76d8\u4e0a\u5b58\u5728\u591a\u4e2a\u5df2\u7ecf\u5206\u597d\u533a\uff0c\u5e76\u6392\u597d\u5e8f\u7684\u6ea2\u5199\u6587\u4ef6\uff0c\u8fd9\u65f6\u6ea2\u5199\u6587\u4ef6\u5c06\u88ab\u5408\u5e76\u6210\u4e00\u4e2a\u5df2\u5206\u533a\u4e14\u5df2\u6392\u5e8f\u7684\u8f93\u51fa\u6587\u4ef6\u3002\u7531\u4e8e\u6ea2\u5199\u6587\u4ef6\u5df2\u7ecf\u7ecf\u8fc7\u7b2c\u4e00\u6b21\u6392\u5e8f\uff0c\u6240\u6709\u5408\u5e76\u6587\u4ef6\u53ea\u9700\u8981\u518d\u505a\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u5373\u53ef\u4f7f\u8f93\u51fa\u6587\u4ef6\u6574\u4f53\u6709\u5e8f\u3002</p> </li> <li> <p>\u5728 reduce \u9636\u6bb5\uff0c\u9700\u8981\u5c06\u591a\u4e2a Map \u4efb\u52a1\u7684\u8f93\u51fa\u6587\u4ef6 copy \u5230 ReduceTask \u4e2d\u540e\u5408\u5e76\uff0c\u7531\u4e8e\u7ecf\u8fc7\u7b2c\u4e8c\u6b21\u6392\u5e8f\uff0c\u6240\u4ee5\u5408\u5e76\u6587\u4ef6\u65f6\u53ea\u9700\u518d\u505a\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u5373\u53ef\u4f7f\u8f93\u51fa\u6587\u4ef6\u6574\u4f53\u6709\u5e8f\u3002</p> </li> </ul> <p>\u5728\u8fd9 3 \u6b21\u6392\u5e8f\u4e2d\u7b2c\u4e00\u6b21\u662f\u5185\u5b58\u7f13\u51b2\u533a\u6ea2\u5199\u65f6\u505a\u7684\u5185\u6392\u5e8f\uff0c\u4f7f\u7528\u7684\u7b97\u6cd5\u662f\u5feb\u901f\u6392\u5e8f\uff0c\u7b2c\u4e8c\u6b21\u6392\u5e8f\u548c\u7b2c\u4e09\u6b21\u6392\u5e8f\u90fd\u662f\u5728\u6587\u4ef6\u5408\u5e76\u9636\u6bb5\u53d1\u751f\u7684\uff0c\u4f7f\u7528\u7684\u662f\u5f52\u5e76\u6392\u5e8f\u3002</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u6392\u5e8f\uff1f</p> <p>\u6392\u5e8f\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u5b9e\u73b0\u6570\u636e\u7684\u5206\u7ec4\uff0c\u7531\u4e8e\u5728 Reducer \u4e2d\u76f8\u540c\u7684 key \u4f1a\u88ab\u5206\u5230\u540c\u4e00\u4e2a\u5206\u7ec4\u4e2d\uff0c\u56e0\u6b64\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u53ef\u4ee5\u4fdd\u8bc1\u76f8\u540c\u7684 key \u90fd\u5728\u76f8\u90bb\u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u540e\u7eed\u7684 reduce \u8fc7\u7a0b\u3002</p>"},{"location":"Hadoop/3.%20MapReduce/#reduce-side-join","title":"Reduce Side Join","text":"<ul> <li>reduce side join\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5728 reduce \u9636\u6bb5\u6267\u884c join \u5173\u8054\u64cd\u4f5c\u3002</li> <li>\u8fd9\u4e5f\u662f\u6700\u5bb9\u6613\u60f3\u5230\u548c\u5b9e\u73b0\u7684 join \u65b9\u5f0f\u3002\u56e0\u4e3a\u901a\u8fc7 shuffle \u8fc7\u7a0b\u5c31\u53ef\u4ee5\u5c06\u76f8\u5173\u7684\u6570\u636e\u5206\u5230\u76f8\u540c\u7684\u5206\u7ec4\u4e2d\uff0c\u8fd9\u5c06\u4e3a\u540e\u9762\u7684 join \u64cd\u4f5c\u63d0\u4f9b\u4e86\u4fbf\u6377\u3002</li> </ul> <p>\u6b65\u9aa4\uff1a</p> <ul> <li>mapper \u5206\u522b\u8bfb\u53d6\u4e0d\u540c\u7684\u6570\u636e\u96c6\uff1b</li> <li>mapper \u7684\u8f93\u51fa\u4e2d\uff0c\u901a\u5e38\u4ee5 join \u7684\u5b57\u6bb5\u4f5c\u4e3a\u8f93\u51fa\u7684 key\uff1b</li> <li>\u4e0d\u540c\u6570\u636e\u96c6\u7684\u6570\u636e\u7ecf\u8fc7 shuffle\uff0ckey \u4e00\u6837\u7684\u4f1a\u88ab\u5206\u5230\u540c\u4e00\u5206\u7ec4\u5904\u7406\uff1b</li> <li>\u5728 reduce \u4e2d\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u628a\u6570\u636e\u8fdb\u884c\u5173\u8054\u6574\u5408\u6c47\u603b\uff0c\u6700\u7ec8\u8f93\u51fa\u3002</li> </ul> <p>\u5f0a\u7aef\uff1a</p> <ul> <li>reduce \u7aef join \u6700\u5927\u7684\u95ee\u9898\u662f\u6574\u4e2a join \u7684\u5de5\u4f5c\u662f\u5728 reduce \u9636\u6bb5\u5b8c\u6210\u7684\uff0c\u4f46\u662f\u901a\u5e38\u60c5\u51b5\u4e0b MapReduce \u4e2d reduce \u7684\u5e76\u884c\u5ea6\u662f\u6781\u5c0f\u7684\uff08\u9ed8\u8ba4\u662f 1 \u4e2a\uff09\uff0c\u8fd9\u5c31\u4f7f\u5f97\u6240\u6709\u7684\u6570\u636e\u90fd\u6324\u538b\u5230 reduce \u9636\u6bb5\u5904\u7406\uff0c\u538b\u529b\u9887\u5927\u3002\u867d\u7136\u53ef\u4ee5\u8bbe\u7f6e reduce \u7684\u5e76\u884c\u5ea6\uff0c\u4f46\u662f\u53c8\u4f1a\u5bfc\u81f4\u6700\u7ec8\u7ed3\u679c\u88ab\u5206\u6563\u5230\u591a\u4e2a\u4e0d\u540c\u6587\u4ef6\u4e2d\u3002</li> <li>\u5e76\u4e14\u5728\u6570\u636e\u4ece mapper \u5230 reducer \u7684\u8fc7\u7a0b\u4e2d\uff0cshuffle \u9636\u6bb5\u5341\u5206\u7e41\u7410\uff0c\u6570\u636e\u96c6\u5927\u65f6\u6210\u672c\u6781\u9ad8\u3002</li> </ul> <p>12--MapReduce Join \u5173\u8054\u64cd\u4f5c--reduce side join--Mapper \u7c7b\u4ee3\u7801\u5b9e\u73b0_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"Hadoop/3.%20MapReduce/#_1","title":"\u5206\u5e03\u5f0f\u7f13\u5b58","text":"<p>\u4f7f\u7528\u65b9\u5f0f\uff1a</p> <ul> <li>Step1\uff1a\u6dfb\u52a0\u7f13\u5b58\u6587\u4ef6\u3002\u53ef\u4ee5\u4f7f\u7528 MapReduce \u7684 API \u6dfb\u52a0\u9700\u8981\u7f13\u5b58\u7684\u6587\u4ef6\u3002</li> </ul> <pre><code>//\u6dfb\u52a0\u5f52\u6863\u6587\u4ef6\u5230\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\njob.addCacheArchive(URI uri);\n//\u6dfb\u52a0\u666e\u901a\u6587\u4ef6\u5230\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\njob.addCacheFile(URI uri);\n</code></pre> <p>\u6ce8\u610f\uff1a\u7f13\u5b58\u6587\u4ef6\u5fc5\u987b\u653e\u5728 HDFS \u4e0a\uff08\u5ba2\u6237\u7aef\u5c06\u672c\u5730\u6587\u4ef6\u4e0a\u4f20\u81f3 HDFS\uff09\uff0c\u5373\u5fc5\u987b\u5728\u96c6\u7fa4\u6a21\u5f0f\u4e0b\u624d\u80fd\u4f7f\u7528\u3002</p> <ul> <li>Step2\uff1aMapReduce \u7a0b\u5e8f\u4e2d\u8bfb\u53d6\u7f13\u5b58\u6587\u4ef6\u3002</li> </ul> <p>\u5728 Mapper \u7c7b\u6216\u8005 Reducer \u7c7b\u7684 <code>setup()</code> \u65b9\u6cd5\u4e2d\uff0c\u7528 <code>BufferedReader</code> \u83b7\u53d6\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u7684\u6587\u4ef6\u5185\u5bb9\u3002</p> <p><code>BufferedReader</code> \u662f\u5e26\u7f13\u51b2\u533a\u7684\u5b57\u7b26\u6d41\uff0c\u80fd\u591f\u51cf\u5c11\u8bbf\u95ee\u78c1\u76d8\u7684\u6b21\u6570\uff0c\u63d0\u9ad8\u6587\u4ef6\u8bfb\u53d6\u6027\u80fd\uff1b\u5e76\u4e14\u53ef\u4ee5\u4e00\u6b21\u6027\u8bfb\u53d6\u4e00\u884c\u5b57\u7b26\u3002</p> <pre><code>protected void setup(Context context) throw IOException,InterruptedException{\n   FileReader reader = new FileReader(\"myfile\");\n   BufferReader br = new BufferedReader(reader);\n......\n}\n</code></pre>"},{"location":"Hadoop/3.%20MapReduce/#map-side-join","title":"Map Side Join","text":"<p>Map Side Join \u6307\u7684\u662f\u5728 Map \u9636\u6bb5\u6267\u884c Join \u64cd\u4f5c\uff0c\u5e76\u4e14\u901a\u5e38\u7a0b\u5e8f\u4e5f\u6ca1\u6709\u4e86 Reduce \u9636\u6bb5\uff0c\u907f\u514d\u4e86\u7e41\u7410\u7684 Shuffle \u9636\u6bb5\u3002</p> <p>Map Side Join \u9002\u5408\u5c0f\u8868 Join \u5927\u8868\u7684\u60c5\u51b5\u3002</p> <p>\u5b9e\u73b0 Map Side Join \u7684\u5173\u952e\u662f\u4f7f\u7528 MapReduce \u7684\u5206\u5e03\u5f0f\u7f13\u5b58\u3002</p> <p></p> <p>\u5b9e\u73b0\u601d\u8def\uff1a</p> <ul> <li>\u9996\u5148\u5206\u6790\u5904\u7406\u7684\u6570\u636e\u96c6\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u7f13\u5b58\u6280\u672f\u5c06\u5c0f\u7684\u6570\u636e\u96c6\u8fdb\u884c\u5206\u5e03\u5f0f\u7f13\u5b58\u3002</li> <li>MapReduce \u6846\u67b6\u5728\u6267\u884c\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u5c06\u7f13\u5b58\u7684\u6570\u636e\u5206\u53d1\u5230\u5404\u4e2a MapTask \u8fd0\u884c\u7684\u673a\u5668\u4e0a\u3002</li> <li>\u5728 mapper \u521d\u59cb\u5316\u7684\u65f6\u5019\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u8bfb\u53d6\u5c0f\u6570\u636e\u96c6\u6570\u636e\uff0c\u7136\u540e\u548c\u81ea\u5df1\u8bfb\u53d6\u7684\u5927\u6570\u636e\u96c6\u8fdb\u884c join \u5173\u8054\uff0c\u8f93\u51fa\u6700\u7ec8\u7684\u7ed3\u679c\u3002</li> </ul> <p>\u4f18\u52bf\uff1a</p> <ul> <li>\u6574\u4e2a join \u7684\u8fc7\u7a0b\u6ca1\u6709 shuffle\uff0c\u6ca1\u6709 reduce\uff0c\u51cf\u5c11 shuffle \u65f6\u5019\u7684\u6570\u636e\u4f20\u8f93\u6210\u672c\u3002</li> <li>\u5e76\u4e14 mapper \u7684\u5e76\u884c\u5ea6\u53ef\u4ee5\u6839\u636e\u8f93\u5165\u6570\u636e\u91cf\u81ea\u52a8\u8c03\u6574\uff08\u903b\u8f91\u5207\u7247\uff09\uff0c\u5145\u5206\u53d1\u6325\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u4f18\u52bf\u3002</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u53ea\u6709\u5728\u6267\u884c Map \u7aef\u8fde\u63a5\u64cd\u4f5c\u7684\u5176\u4e2d\u4e00\u4e2a\u8868\u8db3\u591f\u5c0f\u4ee5\u9002\u5e94\u5185\u5b58\u65f6\uff0cMap \u7aef\u8fde\u63a5\u624d\u662f\u9002\u5f53\u7684\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u8868\u90fd\u5305\u542b\u5927\u91cf\u6570\u636e\u7684\u60c5\u51b5\uff0c\u6267\u884c Map \u7aef\u8fde\u63a5\u662f\u4e0d\u9002\u5408\u7684\u3002</li> </ul> <p>17--MapReduce Join \u5173\u8054\u64cd\u4f5c--map side join--\u6848\u4f8b\u9700\u6c42\u4e0e\u5b9e\u73b0\u601d\u8def_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"Hadoop/3.%20MapReduce/#mapreduce_8","title":"MapReduce \u4f18\u5316","text":"<p>MapReduce \u7684\u4f18\u5316\u6838\u5fc3\u5728\u4e8e\u4fee\u6539\u6570\u636e\u6587\u4ef6\u7c7b\u578b\u3001\u5408\u5e76\u5c0f\u6587\u4ef6\u3001\u4f7f\u7528\u538b\u7f29\u7b49\u65b9\u5f0f\uff0c\u901a\u8fc7\u964d\u4f4e IO \u5f00\u9500\u6765\u63d0\u5347 MapReduce \u8fc7\u7a0b\u4e2d Task \u7684\u6267\u884c\u6548\u7387\u3002</p> <p>\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u8282\u4e00\u4e9b\u53c2\u6570\u6765\u4ece\u6574\u4f53\u4e0a\u63d0\u5347 MapReduce \u7684\u6027\u80fd\u3002</p> <p>\u4ece\u6574\u4e2a MapReduce \u6d41\u7a0b\u4e0a\u6765\u770b\uff1a</p> <ul> <li>\u6570\u636e\u8f93\u5165\u9636\u6bb5\uff1a\u5408\u5e76\u5c0f\u6587\u4ef6\u3001\u91c7\u7528 CombineTextInputFormat \u89e3\u51b3\u5927\u91cf\u5c0f\u6587\u4ef6\u7684\u95ee\u9898</li> <li>Map \u9636\u6bb5\uff1a\u51cf\u5c11\u6ea2\u5199\u6b21\u6570\uff08\u589e\u52a0\u7f13\u51b2\u533a\u5927\u5c0f\u3001\u63d0\u9ad8\u9608\u503c\uff09\u3001\u51cf\u5c11\u5408\u5e76\u6b21\u6570\uff08\u589e\u52a0 merge \u7684\u6587\u4ef6\u6570\u91cf\u9608\u503c\uff09\u3001\u4f7f\u7528 Combiner \u8fdb\u884c\u5c40\u90e8\u805a\u5408\u3001\u4f7f\u7528\u538b\u7f29</li> <li>Reduce \u9636\u6bb5\uff1a\u8bbe\u7f6e\u5408\u7406\u7684 ReduceTask \u4e2a\u6570</li> <li>\u8003\u8651\u6570\u636e\u503e\u659c\u95ee\u9898</li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#_2","title":"\u6587\u4ef6\u5b58\u50a8\u683c\u5f0f\u4f18\u5316","text":"<p>\u884c\u5f0f\u5b58\u50a8\u9002\u5408\u6570\u636e\u7684\u5199\u5165\uff0c\u5217\u5f0f\u5b58\u50a8\u9002\u5408\u6570\u636e\u7684\u67e5\u8be2\u3002</p> <p>Sequence File\uff1a</p> <p></p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\uff0c\u6bd4\u6587\u672c\u6587\u4ef6\u66f4\u7d27\u51d1</li> <li>\u652f\u6301\u4e0d\u540c\u7ea7\u522b\u7684\u538b\u7f29\uff08Record \u7ea7\u522b\u548c Block \u7ea7\u522b\uff09</li> <li>\u6587\u4ef6\u652f\u6301\u62c6\u5206\u548c\u5e76\u884c\u5904\u7406\uff0c\u9002\u5408 MapReduce \u7a0b\u5e8f</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u4e8c\u8fdb\u5236\u683c\u5f0f\u4e0d\u65b9\u4fbf\u67e5\u770b</li> <li>\u7279\u5b9a\u4e8e Hadoop\uff0c\u53ea\u6709 Java API \u53ef\u4ee5\u4e0e\u4e4b\u4ea4\u4e92</li> </ul> <p>SequenceFile \u6587\u4ef6\uff0c\u4e3b\u8981\u7531\u4e00\u6761\u6761 record \u8bb0\u5f55\u7ec4\u6210\uff1b\u6bcf\u4e2a record \u662f\u952e\u503c\u5bf9\u5f62\u5f0f\u7684</p> <ul> <li> <p>SequenceFile \u6587\u4ef6\u53ef\u4ee5\u4f5c\u4e3a\u5c0f\u6587\u4ef6\u7684\u5b58\u50a8\u5bb9\u5668\uff1b</p> </li> <li> <p>\u6bcf\u6761 record \u4fdd\u5b58\u4e00\u4e2a\u5c0f\u6587\u4ef6\u7684\u5185\u5bb9</p> </li> <li>\u5c0f\u6587\u4ef6\u540d\u4f5c\u4e3a\u5f53\u524d record \u7684\u952e\uff1b</li> <li>\u5c0f\u6587\u4ef6\u7684\u5185\u5bb9\u4f5c\u4e3a\u5f53\u524d record \u7684\u503c\uff1b</li> <li> <p>\u5982 10000 \u4e2a 100KB \u7684\u5c0f\u6587\u4ef6\uff0c\u53ef\u4ee5\u7f16\u5199\u7a0b\u5e8f\u5c06\u8fd9\u4e9b\u6587\u4ef6\u653e\u5230\u4e00\u4e2a SequenceFile \u6587\u4ef6\u3002</p> </li> <li> <p>\u4e00\u4e2a SequenceFile \u662f\u53ef\u5206\u5272\u7684\uff0c\u6240\u4ee5 MapReduce \u53ef\u5c06\u6587\u4ef6\u5207\u5206\u6210\u5757\uff0c\u6bcf\u4e00\u5757\u72ec\u7acb\u64cd\u4f5c\u3002</p> </li> </ul> <p>\u6211\u4eec\u76f4\u63a5\u5c06\u6570\u636e\u5199\u5165\u4e00\u4e2a SequenceFile \u6587\u4ef6\uff0c\u7701\u53bb\u5c0f\u6587\u4ef6\u4f5c\u4e3a\u4e2d\u95f4\u5a92\u4ecb\u3002</p> <p>ORC File\uff1a</p> <p></p> <ul> <li>ORC \u6587\u4ef6\u7a7a\u95f4\u66f4\u5c0f\u3001\u5217\u5904\u7406\u66f4\u5feb\u3001\u53ef\u4ee5\u6784\u5efa\u7d22\u5f15\u3001\u652f\u6301\u538b\u7f29</li> <li>\u5217\u5f0f\u5b58\u50a8\u9002\u5408\u6570\u636e\u67e5\u8be2\uff0c\u4e5f\u9002\u5408\u6570\u636e\u538b\u7f29\u3001\u7f16\u7801\u4f18\u5316\u3002</li> <li>\u4e00\u4e2a Stripe = \u4e00\u4e2a horizontal partition\uff08\u884c\u7ec4\uff09\u3002</li> <li>ORC \u6587\u4ef6\u662f\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u3002</li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#_3","title":"\u6570\u636e\u538b\u7f29\u4f18\u5316","text":"<p>MR \u8fc7\u7a0b\u4e2d\u4e24\u4e2a\u8f93\u51fa\u9636\u6bb5\u53ef\u4ee5\u8fdb\u884c\u538b\u7f29\uff1a</p> <ul> <li>Map \u7684\u8f93\u51fa\u9636\u6bb5\uff0c\u51cf\u5c11 Mapper \u548c Reducer \u95f4\u7f51\u7edc\u4f20\u8f93\u7684\u5f00\u9500\uff0c\u52a0\u5feb\u6587\u4ef6\u4f20\u8f93\u6548\u7387</li> <li>Reduce \u7684\u8f93\u51fa\uff0c\u51cf\u5c11\u78c1\u76d8\u5b58\u50a8\u7684\u7a7a\u95f4</li> </ul> <p></p> <p></p>"},{"location":"Hadoop/3.%20MapReduce/#_4","title":"\u5c0f\u6587\u4ef6\u4f18\u5316","text":""},{"location":"Hadoop/3.%20MapReduce/#shuffle_1","title":"Shuffle \u4f18\u5316","text":"<p>\u51cf\u5c11\u6ea2\u5199\u6b21\u6570\uff1a</p> <ul> <li>\u8c03\u6574\u7f13\u51b2\u533a\u5927\u5c0f</li> <li>\u8c03\u6574\u6ea2\u5199\u89e6\u53d1\u6bd4\u4f8b\u7684\u9608\u503c</li> </ul> <p>\u51cf\u5c11 merge \u6b21\u6570\uff1a</p> <ul> <li>\u9ed8\u8ba4\u6bcf\u6b21\u751f\u6210 10 \u4e2a\u4e34\u65f6\u6587\u4ef6\u8fdb\u884c\u5408\u5e76\uff0c\u589e\u52a0\u6587\u4ef6\u4e2a\u6570\uff0c\u53ef\u4ee5\u51cf\u5c11 merge \u7684\u6b21\u6570</li> </ul>"},{"location":"Hadoop/3.%20MapReduce/#_5","title":"\u53c2\u6570\u4f18\u5316","text":"<p>\u5728\u8c03\u6574\u53c2\u6570\u5c5e\u6027\u4e4b\u540e\uff0c\u5982\u4f55\u8bc4\u4f30 MR \u7684\u6027\u80fd\uff1f</p> <p>\u4f7f\u7528\u57fa\u51c6\u6d4b\u8bd5\u3002 <pre><code>yarn jar /hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar\n</code></pre></p> <p></p> <p></p>"},{"location":"Hadoop/3.%20MapReduce/#mapreduce_9","title":"MapReduce \u6570\u636e\u503e\u659c","text":"<p>\u6570\u636e\u503e\u659c\u662f\u6307\u5728\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e9b\u7279\u5b9a\u7684\u952e\uff08Key\uff09\u6216\u5206\u533a\uff08Partition\uff09\u4e0a\u7684\u6570\u636e\u91cf\u8fdc\u8fdc\u8d85\u8fc7\u5176\u4ed6\u952e\u6216\u5206\u533a\uff0c\u5bfc\u81f4\u90e8\u5206\u8ba1\u7b97\u8282\u70b9\u7684\u8d1f\u8f7d\u4e0d\u5747\u8861\uff0c\u4ece\u800c\u964d\u4f4e\u6574\u4e2a\u4f5c\u4e1a\u7684\u6027\u80fd\u3002</p> <p>\u5e38\u89c1\u7684\u6570\u636e\u503e\u659c\u901a\u5e38\u6709\u4e24\u79cd\uff1a</p> <ul> <li>\u6570\u636e\u9891\u7387\u503e\u659c\uff1a\u67d0\u4e9b key \u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u5176\u4ed6 key \u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u6570\u91cf</li> <li>\u6570\u636e\u5927\u5c0f\u503e\u659c\uff1a\u90e8\u5206\u8bb0\u5f55\u7684\u5927\u5c0f\u8fdc\u8fdc\u5927\u4e8e\u5e73\u5747\u503c</li> </ul> <p>\u5728 MapReduce \u4e2d\uff0c\u6570\u636e\u503e\u659c\u53ef\u80fd\u53d1\u751f\u5728 Map \u7aef\u548c Reduce \u7aef\u3002Reduce \u7aef\u7684\u6570\u636e\u503e\u659c\u5e38\u5e38\u6765\u6e90\u4e8e MapReduce \u7684\u9ed8\u8ba4\u5206\u533a\u5668\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <ul> <li>\u81ea\u5b9a\u4e49\u5206\u533a\uff1a\u57fa\u4e8e\u4e1a\u52a1\u80cc\u666f\u8fdb\u884c\u81ea\u5b9a\u4e49\u5206\u533a\uff0c\u6216\u8005\u5bf9\u503e\u659c\u4e25\u91cd\u7684 key \u518d\u505a\u4e00\u5c42 hash\uff0c\u5c06\u6570\u636e\u6253\u6563</li> <li>\u4f7f\u7528 Combiner \u8fdb\u884c\u5c40\u90e8\u805a\u5408</li> <li>\u52a8\u6001\u8c03\u6574 Reducer \u7684\u4e2a\u6570\uff0c\u4f7f\u5f97\u6570\u636e\u80fd\u591f\u66f4\u5747\u5300\u5730\u5206\u5e03\u5230\u5404\u4e2a Reducer \u4e0a</li> </ul>"},{"location":"Hadoop/4.%20Yarn/","title":"Yarn","text":""},{"location":"Hadoop/4.%20Yarn/#yarn_1","title":"Yarn \u6982\u8ff0","text":"<p>Yarn \u662f\u4e00\u4e2a\u901a\u7528\u7684\u8d44\u6e90\u7ba1\u7406\u548c\u8c03\u5ea6\u7cfb\u7edf\uff0c\u8d1f\u8d23\u4e3a\u8fd0\u7b97\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\u5668\u8fd0\u7b97\u8d44\u6e90\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\uff0c\u800c MapReduce \u7b49\u8fd0\u7b97\u7a0b\u5e8f\u5219\u76f8\u5f53\u4e8e\u8fd0\u884c\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p></p> <p>Yarn \u7684\u7279\u70b9\uff1a</p> <ul> <li>\u5206\u5e03\u5f0f\u8ba1\u7b97\uff1aYarn \u5141\u8bb8\u7528\u6237\u5728\u96c6\u7fa4\u4e0a\u90e8\u7f72\u5206\u5e03\u5f0f\u5e94\u7528</li> <li>\u96c6\u7fa4\u8d44\u6e90\u7ba1\u7406\uff1aYarn \u63d0\u4f9b\u4e86\u5bf9\u96c6\u7fa4\u8d44\u6e90\u7684\u9ad8\u6548\u7ba1\u7406\uff0c\u5305\u62ec CPU\u3001\u5185\u5b58\u548c\u7f51\u7edc\u5e26\u5bbd\u7b49</li> <li>\u591a\u79df\u6237\uff1aYarn \u652f\u6301\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5728\u540c\u4e00\u96c6\u7fa4\u4e0a\uff0c\u800c\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270</li> <li>\u7075\u6d3b\u6027\uff1aYarn \u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5305\u62ec MapReduce\u3001Spark\u3001Storm \u7b49</li> </ul>"},{"location":"Hadoop/4.%20Yarn/#yarn_2","title":"Yarn \u57fa\u7840\u67b6\u6784","text":"<p>Yarn \u662f\u7ecf\u5178\u7684\u4e3b\u4ece\uff08master/slave\uff09\u67b6\u6784\u3002\u4e3b\u8981\u7531 ResourceManager\u3001NodeManager\u3001ApplicationMaster \u548c Container \u7b49\u7ec4\u4ef6\u6784\u6210\u3002</p> <p></p> <p>ResourceManager\uff08RM\uff09\uff1a\u5168\u5c40\u7684\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u8d1f\u8d23\u7ba1\u7406\u6574\u4e2a\u96c6\u7fa4\u7684\u8d44\u6e90</p> <p>\u4e3b\u8981\u4f5c\u7528\u5982\u4e0b\uff1a</p> <ul> <li>\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42</li> <li>\u76d1\u63a7 NodeManager</li> <li>\u542f\u52a8\u6216\u76d1\u63a7 ApplicationMaster</li> <li>\u8d44\u6e90\u7684\u5206\u914d\u4e0e\u8c03\u5ea6</li> </ul> <p>ResouceManager = \u8c03\u5ea6\u5668\uff08Scheduler\uff09 + \u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5668\uff08Application Manager\uff09</p> <p>\u5176\u4e2d\uff0c \u8c03\u5ea6\u5668\u53ef\u4ee5\u6839\u636e\u5bb9\u91cf\u3001\u961f\u5217\u7b49\u9650\u5236\u6761\u4ef6\uff08\u5982\u6bcf\u4e2a\u961f\u5217\u5206\u914d\u4e00\u5b9a\u7684\u8d44\u6e90\uff0c\u6700\u591a\u6267\u884c\u4e00\u5b9a\u6570\u91cf\u7684\u4f5c\u4e1a\u7b49\uff09\uff0c\u5c06\u7cfb\u7edf\u4e2d\u7684\u8d44\u6e90\u5206\u914d\u7ed9\u5404\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5668\u4e3b\u8981\u8d1f\u8d23\u7ba1\u7406\u6574\u4e2a\u7cfb\u7edf\u4e2d\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u63a5\u6536 job \u7684\u63d0\u4ea4\u8bf7\u6c42\uff0c\u4e3a\u5e94\u7528\u5206\u914d\u7b2c\u4e00\u4e2a Container \u6765\u8fd0\u884c ApplicationMaster\uff0c\u5305\u62ec\u5e94\u7528\u7a0b\u5e8f\u63d0\u4ea4\u3001\u4e0e\u8c03\u5ea6\u5668\u534f\u5546\u8d44\u6e90\u4ee5\u542f\u52a8 ApplicationMaster\u3001\u76d1\u63a7 ApplicationMaster \u8fd0\u884c\u72b6\u6001\u5e76\u5728\u5931\u8d25\u65f6\u91cd\u65b0\u542f\u52a8\u5b83\u7b49</p> <p>NodeManager\uff08NM\uff09\uff1a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u8d44\u6e90\u548c\u4efb\u52a1\u7684\u7ba1\u7406\u5668</p> <p>\u4e3b\u8981\u4f5c\u7528\u5982\u4e0b\uff1a</p> <ul> <li>\u7ba1\u7406\u5355\u4e2a\u8282\u70b9\u4e0a\u7684\u8d44\u6e90\u548c\u8fd0\u884c\u4efb\u52a1</li> <li>\u5904\u7406\u6765\u81ea ResourceManager \u7684\u547d\u4ee4</li> <li>\u5904\u7406\u6765\u81ea ApplicationMaster \u7684\u547d\u4ee4</li> <li>\u5b9a\u671f\u6c47\u62a5\u672c\u8282\u70b9\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u548c\u5404\u4e2a Container \u7684\u8fd0\u884c\u72b6\u6001</li> </ul> <p>ApplicationMaster\uff08AM\uff09\uff1a\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5668\uff0c\u8d1f\u8d23\u5e94\u7528\u7a0b\u5e8f\u7684\u7ba1\u7406\u5de5\u4f5c</p> <p>\u4e3b\u8981\u4f5c\u7528\u5982\u4e0b\uff1a</p> <ul> <li>\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7533\u8bf7\u8d44\u6e90\u5e76\u5206\u914d\u7ed9\u5185\u90e8\u7684\u4efb\u52a1</li> <li>\u4efb\u52a1\u7684\u76d1\u63a7\u4e0e\u5bb9\u9519</li> </ul> <p>Container\uff1aYARN \u4e2d\u7684\u8d44\u6e90\u62bd\u8c61\uff0c\u5b83\u5c01\u88c5\u4e86\u67d0\u4e2a\u8282\u70b9\u4e0a\u7684\u591a\u7ef4\u5ea6\u8d44\u6e90\uff0c\u5982\u5185\u5b58\u3001CPU\u3001\u78c1\u76d8\u3001 \u7f51\u7edc\u7b49</p>"},{"location":"Hadoop/4.%20Yarn/#yarn_3","title":"Yarn \u4f5c\u4e1a\u63d0\u4ea4\u6d41\u7a0b/\u5de5\u4f5c\u673a\u5236","text":"<p>05--YARN \u6e90\u7801\u5256\u6790--MapReduce \u7a0b\u5e8f\u63d0\u4ea4 YARN \u6d41\u7a0b--\u6574\u4f53\u6982\u8ff0_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u7b80\u5355\u7248\uff1a</p> <ul> <li> <p>\u7528\u6237\u5c06\u5e94\u7528\u7a0b\u5e8f\u63d0\u4ea4\u5230 ResourceManager \u4e0a\uff1b</p> </li> <li> <p>ResourceManager \u4e3a\u5e94\u7528\u7a0b\u5e8f ApplicationMaster \u7533\u8bf7\u8d44\u6e90\uff0c\u5e76\u4e0e\u67d0\u4e2a NodeManager \u901a\u4fe1\u542f\u52a8\u7b2c\u4e00\u4e2a Container\uff0c\u4ee5\u542f\u52a8 ApplicationMaster\uff1b</p> </li> <li> <p>ApplicationMaster \u4e0e ResourceManager \u6ce8\u518c\u8fdb\u884c\u901a\u4fe1\uff0c\u4e3a\u5185\u90e8\u8981\u6267\u884c\u7684\u4efb\u52a1\u7533\u8bf7\u8d44\u6e90\uff0c\u4e00\u65e6\u5f97\u5230\u8d44\u6e90\u540e\uff0c\u5c06\u4e8e NodeManager \u901a\u4fe1\uff0c\u4ee5\u542f\u52a8\u5bf9\u5e94\u7684 Task\uff1b</p> </li> <li> <p>\u6240\u6709\u4efb\u52a1\u8fd0\u884c\u5b8c\u6210\u540e\uff0cApplicationMaster \u5411 ResourceManager \u6ce8\u9500\uff0c\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u3002</p> </li> </ul> <p></p> <p>\u8be6\u7ec6\u7248\uff0c\u4ee5\u63d0\u4ea4\u8fd0\u884c MR \u7a0b\u5e8f\u4e3a\u4f8b\uff1a</p> <ul> <li>\u5ba2\u6237\u7aef\u5411 ResourceManager \u7533\u8bf7\u8fd0\u884c\u4e00\u4e2a Application\uff0c\u5f53 RM \u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u751f\u6210\u5e94\u7528 Application \u8d44\u6e90\u63d0\u4ea4\u8def\u5f84\u4ee5\u53ca application_id\uff0c\u5e76\u8fd4\u56de\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u63d0\u4ea4 job \u8fd0\u884c\u6240\u9700\u8d44\u6e90\u5230\u8d44\u6e90\u63d0\u4ea4\u8def\u5f84\u3002</li> <li>\u5f53\u5ba2\u6237\u7aef\u8d44\u6e90\u63d0\u4ea4\u5b8c\u6bd5\uff0c\u7533\u8bf7\u8fd0\u884c MRAppMaster\u3002\u5f53 ResourceManager \u63a5\u6536\u8bf7\u6c42\u4ee5\u540e\uff0c\u5c06\u7528\u6237\u7684\u8bf7\u6c42\u521d\u59cb\u5316\u6210\u4e00\u4e2a Task\uff0c\u5c06\u5176\u653e\u5230\u961f\u5217\u4e2d\u7b49\u5f85\u8c03\u5ea6\u6267\u884c\u3002\u5f53 NodeManager \u4e2d\u6709\u8d44\u6e90\u65f6\uff0cResourceManager \u5411\u5176\u53d1\u9001\u6307\u4ee4\uff0c\u6b64\u65f6 NodeManager \u9886\u53d6\u5230 Task \u4efb\u52a1\uff0c\u521b\u5efa\u5bb9\u5668 Container\uff0c\u5728\u5176\u4e2d\u8fd0\u884c MRAppMaster\u3002</li> <li>MRAppMaster \u542f\u52a8\u4ee5\u540e\uff0c\u9996\u5148\u53bb RM \u6ce8\u518c\u81ea\u5df1\u5e76\u901a\u8fc7\u5fc3\u8df3\u4fdd\u6301\u8054\u7cfb\uff0c\u7136\u540e\u4ece\u8d44\u6e90\u63d0\u4ea4\u8def\u5f84\u83b7\u53d6 Job \u8fd0\u884c\u8d44\u6e90\u4fe1\u606f\uff0c\u8ba1\u7b97\u6b64 MapReduce \u4efb\u52a1\u8fd0\u884c\u6240\u9700\u8981\u7684 MapTask \u4efb\u52a1\u4e2a\u6570\uff0c\u518d\u5411 ResourceManager \u7533\u8bf7\u8d44\u6e90\uff0c\u521b\u5efa MapTask \u5bb9\u5668 Container\u3002</li> <li>ResourceManager \u63a5\u6536\u5230 MRAppMaster \u8bf7\u6c42\u540e\uff0c\u5c06\u8fd9\u4e9b Task \u4efb\u52a1\u540c\u6837\u653e\u5230 Scheduler \u8c03\u5ea6\u961f\u5217\u4e2d\uff0c\u5f53 NodeManager \u4e2d\u6709\u8d44\u6e90\u65f6\uff0cResourceManager \u4f9d\u7136\u5411 NodeManager \u53d1\u9001\u6307\u4ee4\uff0c\u9886\u53d6\u5230 Task \u4efb\u52a1\uff0c\u521b\u5efa\u5bb9\u5668 Container\u3002</li> <li>\u5f53 NodeManager \u4e2d\u5bb9\u5668 Container \u521b\u5efa\u5b8c\u6210\u4ee5\u540e\uff0cMRAppMaster \u5c06\u8fd0\u884c MapTask \u4efb\u52a1\u7684\u7a0b\u5e8f\u811a\u672c\u53d1\u9001\u7ed9 Container \u5bb9\u5668\uff0c\u6700\u540e\u5728\u5bb9\u5668 Container \u4e2d\u542f\u52a8 YarnChild \u8fdb\u7a0b\u8fd0\u884c MapTask \u4efb\u52a1\uff0c\u5904\u7406\u6570\u636e\u3002</li> <li>Container \u5185 MapTask \u6267\u884c\u671f\u95f4\uff0cAM \u4f1a\u901a\u8fc7\u548c NM \u901a\u4fe1\uff0c\u83b7\u53d6\u5bb9\u5668\u72b6\u6001\uff0c\u76d1\u7763\u4efb\u52a1\u6267\u884c\u60c5\u51b5\u3002</li> <li>\u5f53 MapTask \u4efb\u52a1\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\uff0cMRAppMaster \u518d\u5411 ResourceManager \u7533\u8bf7\u8d44\u6e90\uff0c\u5728 NodeManager \u4e2d\u521b\u5efa ReduceTask \u4efb\u52a1\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u542f\u52a8 YarnChild \u8fdb\u7a0b\u8fd0\u884c ReduceTask \u4efb\u52a1\u3002</li> <li>\u6700\u540e\uff0c\u5f53 MapReduce \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\uff0c\u5411 ResourceManager \u6ce8\u9500\u81ea\u5df1\uff0c\u91ca\u653e\u8d44\u6e90\uff0c\u81f3\u6b64\u6574\u4e2a\u5e94\u7528\u8fd0\u884c\u5b8c\u6210\u3002</li> </ul>"},{"location":"Hadoop/4.%20Yarn/#yarn_4","title":"Yarn \u8d44\u6e90\u8c03\u5ea6\u5668","text":"<p>\u76ee\u524d\uff0cHadoop \u4f5c\u4e1a\u8c03\u5ea6\u5668\u4e3b\u8981\u6709 3 \u79cd\uff1aFIFO Scheduler\u3001\u5bb9\u91cf\u8c03\u5ea6\u5668\uff08Capacity Scheduler\uff09\u548c\u516c\u5e73\u8c03\u5ea6\u5668\uff08Fair Scheduler\uff09\u3002Apache Hadoop 3.1.3 \u9ed8\u8ba4\u7684\u8d44\u6e90\u8c03\u5ea6\u5668\u662f Capacity Scheduler\u3002</p> <p>\u5177\u4f53\u8bbe\u7f6e\u89c1\uff1a<code>yarn-default.xml</code></p> <p>FIFO Scheduler:</p> <p>\u5355\u961f\u5217\uff0c\u6839\u636e\u63d0\u4ea4\u4f5c\u4e1a\u7684\u5148\u540e\u987a\u5e8f\uff0c\u5148\u6765\u5148\u670d\u52a1\u3002</p> <p>\u4f18\u70b9\uff1a\u7b80\u5355\u6613\u61c2</p> <p>\u7f3a\u70b9\uff1a\u4e0d\u652f\u6301\u591a\u961f\u5217\uff0c\u5927\u4efb\u52a1\u53ef\u80fd\u4f1a\u5360\u7528\u96c6\u7fa4\u6240\u6709\u8d44\u6e90\uff0c\u963b\u585e\u5176\u4ed6\u4efb\u52a1</p> <p>Capacity Scheduler:</p> <p>Capacity Scheduler \u662f Yahoo \u5f00\u53d1\u7684\u591a\u7528\u6237\u8c03\u5ea6\u5668\u3002\u57fa\u4e8e\u5bb9\u91cf\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5bf9\u96c6\u7fa4\u8d44\u6e90\u8fdb\u884c\u5212\u5206\uff0c\u5c06\u8d44\u6e90\u5212\u5206\u4e3a\u591a\u4e2a\u8d44\u6e90\u6c60\uff0c\u5e76\u6309\u7167\u8d44\u6e90\u6c60\u7684\u6bd4\u4f8b\u5206\u914d\u8d44\u6e90\uff0c\u4ee5\u5b9e\u73b0\u8d44\u6e90\u7684\u5171\u4eab\u548c\u9694\u79bb\u3002\u8be5\u8c03\u5ea6\u5668\u9002\u5408\u4e8e\u591a\u7528\u6237\u3001\u591a\u961f\u5217\u7684\u5171\u4eab\u8d44\u6e90\u573a\u666f\u3002</p> <p>\u5bb9\u91cf\u8c03\u5ea6\u5668\u7279\u70b9\uff1a</p> <ul> <li>\u591a\u961f\u5217\uff1a\u6bcf\u4e2a\u961f\u5217\u53ef\u914d\u7f6e\u4e00\u5b9a\u7684\u8d44\u6e90\u91cf\uff0c\u6bcf\u4e2a\u961f\u5217\u91c7\u7528 FIFO \u8c03\u5ea6\u7b56\u7565\u3002</li> <li>\u5bb9\u91cf\u4fdd\u8bc1\uff1a\u7ba1\u7406\u5458\u53ef\u4e3a\u6bcf\u4e2a\u961f\u5217\u8bbe\u7f6e\u8d44\u6e90\u6700\u4f4e\u4fdd\u8bc1\u548c\u8d44\u6e90\u4f7f\u7528\u4e0a\u9650\u3002</li> <li>\u7075\u6d3b\u6027\uff1a\u5982\u679c\u4e00\u4e2a\u961f\u5217\u4e2d\u7684\u8d44\u6e90\u6709\u5269\u4f59\uff0c\u53ef\u4ee5\u6682\u65f6\u5171\u4eab\u7ed9\u90a3\u4e9b\u9700\u8981\u8d44\u6e90\u7684\u961f\u5217\uff0c\u800c\u4e00\u65e6\u8be5\u961f\u5217\u6709\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4ea4\uff0c\u5219\u5176\u4ed6\u961f\u5217\u501f\u8c03\u7684\u8d44\u6e90\u4f1a\u5f52\u8fd8\u7ed9\u8be5\u961f\u5217\u3002</li> <li>\u591a\u79df\u6237: \u652f\u6301\u591a\u7528\u6237\u5171\u4eab\u96c6\u7fa4\u548c\u591a\u5e94\u7528\u7a0b\u5e8f\u540c\u65f6\u8fd0\u884c\u3002 \u4e3a\u4e86\u9632\u6b62\u540c\u4e00\u4e2a\u7528\u6237\u7684\u4f5c\u4e1a\u72ec\u5360\u961f\u5217\u4e2d\u7684\u8d44\u6e90\uff0c\u8be5\u8c03\u5ea6\u5668\u4f1a\u5bf9\u540c\u4e00\u7528\u6237\u63d0\u4ea4\u7684\u4f5c\u4e1a\u6240\u5360\u8d44\u6e90\u91cf\u8fdb\u884c\u9650\u5b9a\u3002</li> </ul> <p>Fair Scheduler:</p> <p>Fair Scheduler \u662f Facebook \u5f00\u53d1\u7684\u591a\u7528\u6237\u8c03\u5ea6\u5668\u3002\u57fa\u4e8e\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5\uff0c\u901a\u8fc7\u7ef4\u62a4\u5404\u4e2a\u4efb\u52a1\u7684\u8d44\u6e90\u9700\u6c42\u548c\u4f7f\u7528\u60c5\u51b5\uff0c\u52a8\u6001\u5730\u5206\u914d\u8d44\u6e90\uff0c\u4ee5\u4fdd\u8bc1\u5404\u4e2a\u4efb\u52a1\u83b7\u5f97\u516c\u5e73\u7684\u8d44\u6e90\u5206\u914d\u3002\u9002\u7528\u4e8e\u591a\u7528\u6237\u3001\u591a\u961f\u5217\u7684\u5171\u4eab\u8d44\u6e90\u573a\u666f\u3002</p> <p></p> <p>\u4e0e\u5bb9\u91cf\u8c03\u5ea6\u5668\u7684\u76f8\u540c\u70b9 \uff1a</p> <ul> <li>\u591a\u961f\u5217\uff1a\u652f\u6301\u591a\u961f\u5217\u591a\u4f5c\u4e1a</li> <li>\u5bb9\u91cf\u4fdd\u8bc1\uff1a\u7ba1\u7406\u5458\u53ef\u4e3a\u6bcf\u4e2a\u961f\u5217\u8bbe\u7f6e\u8d44\u6e90\u6700\u4f4e\u4fdd\u8bc1\u548c\u8d44\u6e90\u4f7f\u7528\u4e0a\u9650</li> <li>\u7075\u6d3b\u6027\uff1a\u5982\u679c\u4e00\u4e2a\u961f\u5217\u4e2d\u7684\u8d44\u6e90\u6709\u5269\u4f59\uff0c\u53ef\u4ee5\u6682\u65f6\u5171\u4eab\u7ed9\u90a3\u4e9b\u9700\u8981\u8d44\u6e90\u7684\u961f\u5217\uff0c\u800c\u4e00\u65e6\u8be5\u961f\u5217\u6709\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4ea4\uff0c\u5219\u5176\u4ed6\u961f\u5217\u501f\u8c03\u7684\u8d44\u6e90\u4f1a\u5f52\u8fd8\u7ed9\u8be5\u961f\u5217\u3002</li> <li>\u591a\u79df\u6237\uff1a\u652f\u6301\u591a\u7528\u6237\u5171\u4eab\u96c6\u7fa4\u548c\u591a\u5e94\u7528\u7a0b\u5e8f\u540c\u65f6\u8fd0\u884c\uff1b\u4e3a\u4e86\u9632\u6b62\u540c\u4e00\u4e2a\u7528\u6237\u7684\u4f5c\u4e1a\u72ec\u5360\u961f\u5217\u4e2d\u7684\u8d44\u6e90\uff0c\u8be5\u8c03\u5ea6\u5668\u4f1a\u5bf9\u540c\u4e00\u7528\u6237\u63d0\u4ea4\u7684\u4f5c\u4e1a\u6240\u5360\u8d44\u6e90\u91cf\u8fdb\u884c\u9650\u5b9a\u3002</li> </ul> <p>\u4e0e\u5bb9\u91cf\u8c03\u5ea6\u5668\u4e0d\u540c\u70b9\uff1a</p> <ul> <li> <p>\u6838\u5fc3\u8c03\u5ea6\u7b56\u7565\u4e0d\u540c</p> </li> <li> <p>\u5bb9\u91cf\u8c03\u5ea6\u5668\uff1a\u4f18\u5148\u9009\u62e9\u8d44\u6e90\u5229\u7528\u7387\u4f4e\u7684\u961f\u5217</p> </li> <li> <p>\u516c\u5e73\u8c03\u5ea6\u5668\uff1a\u4f18\u5148\u9009\u62e9\u5bf9\u8d44\u6e90\u7684\u7f3a\u989d\u6bd4\u4f8b\u5927\u7684</p> </li> <li> <p>\u6bcf\u4e2a\u961f\u5217\u53ef\u4ee5\u5355\u72ec\u8bbe\u7f6e\u8d44\u6e90\u5206\u914d\u65b9\u5f0f</p> </li> <li> <p>\u5bb9\u91cf\u8c03\u5ea6\u5668\uff1aFIFO\u3001 DRF\uff08\u5185\u5b58 + CPU\uff09</p> </li> <li>\u516c\u5e73\u8c03\u5ea6\u5668\uff1aFIFO\u3001FAIR\u3001DRF</li> </ul> <p>\u603b\u7ed3\uff1a</p> <ul> <li>FIFO Scheduler\uff1a\u5355\u961f\u5217\uff0c\u6309\u7167\u4efb\u52a1\u63d0\u4ea4\u987a\u5e8f\u4f9d\u6b21\u5206\u914d\u8d44\u6e90\uff0c\u4e0d\u8003\u8651\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u548c\u8d44\u6e90\u9700\u6c42\u3002\u9002\u7528\u4e8e\u5c0f\u578b\u7b80\u5355\u5e94\u7528\u573a\u666f\u3002</li> <li>Capacity Scheduler\uff1a\u57fa\u4e8e\u5bb9\u91cf\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5bf9\u96c6\u7fa4\u8d44\u6e90\u8fdb\u884c\u5212\u5206\uff0c\u5c06\u8d44\u6e90\u5212\u5206\u4e3a\u591a\u4e2a\u8d44\u6e90\u6c60\uff0c\u5e76\u6309\u7167\u8d44\u6e90\u6c60\u7684\u6bd4\u4f8b\u5206\u914d\u8d44\u6e90\uff0c\u4ee5\u5b9e\u73b0\u8d44\u6e90\u7684\u5171\u4eab\u548c\u9694\u79bb\u3002\u8be5\u8c03\u5ea6\u5668\u9002\u5408\u4e8e\u591a\u7528\u6237\u3001\u591a\u961f\u5217\u7684\u5171\u4eab\u8d44\u6e90\u573a\u666f\u3002</li> <li>Fair Scheduler\uff1a\u57fa\u4e8e\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5\uff0c\u901a\u8fc7\u7ef4\u62a4\u5404\u4e2a\u4efb\u52a1\u7684\u8d44\u6e90\u9700\u6c42\u548c\u4f7f\u7528\u60c5\u51b5\uff0c\u52a8\u6001\u5730\u5206\u914d\u8d44\u6e90\uff0c\u4ee5\u4fdd\u8bc1\u5404\u4e2a\u4efb\u52a1\u83b7\u5f97\u516c\u5e73\u7684\u8d44\u6e90\u5206\u914d\u3002\u9002\u7528\u4e8e\u591a\u7528\u6237\u3001\u591a\u961f\u5217\u7684\u5171\u4eab\u8d44\u6e90\u573a\u666f\u3002</li> </ul>"},{"location":"Hive/1.%20Hive/","title":"Hive","text":""},{"location":"Hive/1.%20Hive/#hive_1","title":"Hive \u7b80\u4ecb","text":"<p>Hadoop \u89e3\u51b3\u4e86\u5927\u6570\u636e\u5b58\u50a8\u548c\u8ba1\u7b97\u7684\u95ee\u9898\uff0c\u4f46\u662f MapReduce \u7f16\u7a0b\u4e0d\u65b9\u4fbf\uff0cHDFS \u4e0a\u7684\u6587\u4ef6\u6ca1\u6709 Schema\uff0c\u7edf\u8ba1\u5206\u6790\u6bd4\u8f83\u56f0\u96be\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ea7\u751f\u4e86 Hive\u3002</p> <p>Hive \u662f\u7531 Facebook \u5f00\u6e90\uff0c\u57fa\u4e8e Hadoop \u7684\u4e00\u4e2a\u6570\u636e\u4ed3\u5e93\u5de5\u5177\uff0c\u53ef\u4ee5\u5c06\u7ed3\u6784\u5316\u7684\u6570\u636e\u6587\u4ef6\u6620\u5c04\u4e3a\u4e00\u5f20\u8868\uff0c\u5e76\u63d0\u4f9b\u7c7b SQL \u67e5\u8be2\u529f\u80fd\u3002</p> <p>Hive \u672c\u8d28\uff1a\u662f\u4e00\u4e2a Hadoop \u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u5c06 HQL (Hive SQL) \u8f6c\u5316\u6210 MapReduce \u7a0b\u5e8f\u3002</p>"},{"location":"Hive/1.%20Hive/#hive_2","title":"Hive \u548c\u6570\u636e\u5e93\u7684\u6bd4\u8f83","text":"<ul> <li>\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\uff1a</li> </ul> <p>Hive \u662f\u5efa\u7acb\u5728 Hadoop \u4e4b\u4e0a\u7684\u3002\u6240\u6709 Hive \u7684\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728 HDFS \u4e2d\u7684\uff1b\u800c\u6570\u636e\u5e93\u5219\u53ef\u4ee5\u5c06\u6570\u636e\u4fdd\u5b58\u5728\u5757\u8bbe\u5907\u6216\u8005\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\u3002</p> <ul> <li>\u7d22\u5f15\uff1a</li> </ul> <p>Hive \u5728\u52a0\u8f7d\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u4efb\u4f55\u5904\u7406\uff0c\u751a\u81f3\u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u626b\u63cf\uff0c\u56e0\u6b64\u4e5f\u6ca1\u6709\u5bf9\u6570\u636e\u4e2d\u7684\u67d0\u4e9b key \u5efa\u7acb\u7d22\u5f15\u3002Hive \u8981\u8bbf\u95ee\u6570\u636e\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u7279\u5b9a\u503c\u65f6\uff0c\u9700\u8981\u66b4\u529b\u626b\u63cf\u6574\u4e2a\u6570\u636e\uff0c\u56e0\u6b64\u8bbf\u95ee\u5ef6\u8fdf\u8f83\u9ad8\u3002\u7531\u4e8e MapReduce \u7684\u5f15\u5165\uff0c Hive \u53ef\u4ee5\u5e76\u884c\u8bbf\u95ee\u6570\u636e\uff0c\u56e0\u6b64\u5373\u4f7f\u6ca1\u6709\u7d22\u5f15\uff0c\u5bf9\u4e8e\u5927\u6570\u636e\u91cf\u7684\u8bbf\u95ee\uff0cHive \u4ecd\u7136\u53ef\u4ee5\u4f53\u73b0\u51fa\u4f18\u52bf\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cHive \u5728 0.8 \u7248\u672c\u4e4b\u540e\u5f15\u5165\u4e86\u56fe\u7d22\u5f15\u3002</p> <p>\u5728\u6570\u636e\u5e93\u4e2d\uff0c \u901a\u5e38\u4f1a\u9488\u5bf9\u4e00\u5217\u6216\u8005\u51e0\u5217\u5efa\u7acb\u7d22\u5f15\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5c11\u91cf\u7684\u3001\u7279\u5b9a\u6761\u4ef6\u7684\u6570\u636e\u7684\u8bbf\u95ee\uff0c \u6570\u636e\u5e93\u53ef\u4ee5\u6709\u5f88\u9ad8\u7684\u6548\u7387\u548c\u8f83\u4f4e\u7684\u5ef6\u8fdf\u3002</p> <p>\u7531\u4e8e\u6570\u636e\u7684\u8bbf\u95ee\u5ef6\u8fdf\u8f83\u9ad8\uff0c\u51b3\u5b9a\u4e86 Hive \u4e0d\u9002\u5408\u5728\u7ebf\u6570\u636e\u67e5\u8be2\u3002</p> <ul> <li>\u6570\u636e\u683c\u5f0f\uff1a</li> </ul> <p>Hive \u4e2d\u6ca1\u6709\u5b9a\u4e49\u4e13\u95e8\u7684\u6570\u636e\u683c\u5f0f\uff0c\u6570\u636e\u683c\u5f0f\u53ef\u4ee5\u7531\u7528\u6237\u6307\u5b9a\u3002\u7528\u6237\u5b9a\u4e49\u6570\u636e\u683c\u5f0f\u9700\u8981\u6307\u5b9a\u4e09\u4e2a\u5c5e\u6027: \u5217\u5206\u9694\u7b26\u3001\u884c\u5206\u9694\u7b26\u53ca\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u7684\u65b9\u6cd5 (Hive \u4e2d\u9ed8\u8ba4\u6709\u4e09\u79cd\u6587\u4ef6\u683c\u5f0f:TextFile\u3001SequenceFile \u53ca RCFile)\u3002\u7531\u4e8e\u5728\u52a0\u8f7d\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u4ece\u7528\u6237\u5b9a\u4e49\u7684\u6570\u636e\u683c\u5f0f\u5230 Hive \u5b9a\u4e49\u7684\u6570\u636e\u683c\u5f0f\u7684\u8f6c\u6362\uff0c\u56e0\u6b64\uff0cHive \u5728\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u5bf9\u6570\u636e\u672c\u8eab\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\uff0c\u800c\u53ea\u662f\u5c06\u6570\u636e\u5185\u5bb9\u590d\u5236\u6216\u8005\u79fb\u52a8\u5230\u76f8\u5e94\u7684 HDFS \u76ee\u5f55\u4e2d\u3002</p> <p>\u800c\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u4e0d\u540c\u7684\u6570\u636e\u5e93\u6709\u4e0d\u540c\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u800c\u4e14\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684\u6570\u636e\u683c\u5f0f\u3002\u6240\u6709\u6570\u636e\u90fd\u4f1a\u6309\u7167\u4e00\u5b9a\u7684\u7ec4\u7ec7\u5b58\u50a8\uff0c\u56e0\u6b64\uff0c\u6570\u636e\u5e93\u52a0\u8f7d\u6570\u636e\u7684\u8fc7\u7a0b\u4f1a\u6bd4\u8f83\u8017\u65f6\u3002</p> <ul> <li>\u6267\u884c\uff1a</li> </ul> <p>Hive \u4e2d\u5927\u591a\u6570\u67e5\u8be2\u7684\u6267\u884c\u662f\u901a\u8fc7 Hadoop \u63d0\u4f9b\u7684 MapReduce \u6765\u5b9e\u73b0\u7684 (\u7c7b\u4f3c\u4e8e <code>select * from</code> \u7684\u67e5\u8be2\u4e0d\u9700\u8981 MapReduce)\uff0c\u800c\u6570\u636e\u5e93\u901a\u5e38\u6709\u81ea\u5df1\u7684\u6267\u884c\u5f15\u64ce\u3002</p> <ul> <li>\u6570\u636e\u66f4\u65b0\uff1a</li> </ul> <p>\u7531\u4e8e Hive \u662f\u9488\u5bf9\u6570\u636e\u4ed3\u5e93\u5e94\u7528\u8bbe\u8ba1\u7684\uff0c\u800c\u6570\u636e\u4ed3\u5e93\u7684\u5185\u5bb9\u662f\u8bfb\u591a\u5199\u5c11\u7684\u3002\u56e0\u6b64\uff0cHive \u4e2d\u4e0d\u5efa\u8bae\u5bf9\u6570\u636e\u7684\u6539\u5199\uff0c\u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u5728\u52a0\u8f7d\u7684\u65f6\u5019\u786e\u5b9a\u597d\u7684\u3002\u800c\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u901a\u5e38\u662f\u9700\u8981\u7ecf\u5e38\u8fdb\u884c\u4fee\u6539\u7684\u3002</p> <ul> <li>\u6267\u884c\u5ef6\u8fdf\uff1a</li> </ul> <p>Hive \u5728\u67e5\u8be2\u6570\u636e\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6ca1\u6709\u7d22\u5f15\uff0c\u9700\u8981\u626b\u63cf\u6574\u4e2a\u8868\uff0c\u56e0\u6b64\u5ef6\u8fdf\u8f83\u9ad8\u3002\u53e6\u5916\u4e00\u4e2a\u5bfc\u81f4 Hive \u6267\u884c\u5ef6\u8fdf\u9ad8\u7684\u56e0\u7d20\u662f MapReduce \u6846\u67b6\u3002\u7531\u4e8e MapReduce \u672c\u8eab\u5177\u6709\u8f83\u9ad8\u7684\u5ef6\u8fdf\uff0c\u56e0\u6b64\u5728\u5229\u7528 MapReduce \u6267\u884c Hive \u67e5\u8be2\u65f6\uff0c\u4e5f\u4f1a\u6709\u8f83\u9ad8\u7684\u5ef6\u8fdf\u3002\u76f8\u5bf9\u7684\uff0c\u6570\u636e\u5e93\u7684\u6267\u884c\u5ef6\u8fdf\u8f83\u4f4e\u3002 \u5f53\u7136\uff0c\u8fd9\u4e2a\u4f4e\u662f\u6709\u6761\u4ef6\u7684\uff0c\u5373\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\uff0c\u5f53\u6570\u636e\u89c4\u6a21\u5927\u5230\u8d85\u8fc7\u6570\u636e\u5e93\u7684\u5904\u7406\u80fd\u529b\u7684\u65f6\u5019\uff0c Hive \u7684\u5e76\u884c\u8ba1\u7b97\u663e\u7136\u80fd\u4f53\u73b0\u51fa\u4f18\u52bf\u3002</p> <ul> <li>\u53ef\u6269\u5c55\u6027\uff1a</li> </ul> <p>\u7531\u4e8e Hive \u662f\u5efa\u7acb\u5728 Hadoop \u4e4b\u4e0a\u7684\u3002\u56e0\u6b64 Hive \u7684\u53ef\u6269\u5c55\u6027\u548c Hadoop \u7684\u53ef\u6269\u5c55\u6027\u662f\u4e00\u81f4\u7684\uff1b\u800c\u6570\u636e\u5e93\u7531\u4e8e ACID \u8bed\u4e49\u7684\u4e25\u683c\u9650\u5236\uff0c\u6269\u5c55\u6027\u975e\u5e38\u6709\u9650\u3002\u76ee\u524d\u6700\u5148\u8fdb\u7684\u5e76\u884c\u6570\u636e\u5e93 Oracle \u5728\u7406\u8bba\u4e0a\u7684\u6269\u5c55\u80fd\u529b\u4e5f\u53ea\u6709 100 \u53f0\u5de6\u53f3\u3002</p> <ul> <li>\u6570\u636e\u89c4\u6a21\uff1a</li> </ul> <p>\u7531\u4e8e Hive \u5efa\u7acb\u5728\u96c6\u7fa4\u4e0a\u5e76\u53ef\u4ee5\u5229\u7528 MapReduce \u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\uff0c\u56e0\u6b64\u53ef\u4ee5\u652f\u6301\u5f88\u5927\u89c4\u6a21\u7684\u6570\u636e\uff1b\u5bf9\u5e94\u7684\uff0c\u6570\u636e\u5e93\u53ef\u4ee5\u652f\u6301\u7684\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\u3002</p>"},{"location":"Hive/1.%20Hive/#hive_3","title":"Hive \u7684\u7ec4\u6210","text":"<p>\u5ba2\u6237\u7aef\u7ec4\u4ef6\uff1a</p> <ul> <li>CLI\uff1a\u901a\u8fc7\u547d\u4ee4\u884c\u7684\u65b9\u5f0f\u8fd0\u884c Hive \u5ba2\u6237\u7aef</li> <li>Web UI\uff1a\u901a\u8fc7\u7f51\u9875\u8bbf\u95ee Hive \u63d0\u4f9b\u7684\u670d\u52a1</li> </ul> <p>\u670d\u52a1\u7aef\u7ec4\u4ef6\uff1a</p> <ul> <li>Driver\uff1a\u5305\u542b\u89e3\u6790\u5668\u3001\u7f16\u8bd1\u5668\u3001\u4f18\u5316\u5668\u548c\u6267\u884c\u5668\uff0c\u4f5c\u7528\u662f\u5bf9 HQL \u8fdb\u884c\u89e3\u6790\u3001\u7f16\u8bd1\u3001\u4f18\u5316\u3001\u751f\u6210\u6267\u884c\u8ba1\u5212\uff0c\u63d0\u4ea4\u7ed9\u5e95\u5c42\u7684\u6267\u884c\u5f15\u64ce</li> <li>MetaStore\uff1a\u5b58\u50a8\u5143\u6570\u636e\uff08\u8868\u540d\u3001\u8868\u6240\u5c5e\u6570\u636e\u5e93\u3001\u8868\u7c7b\u578b\u3001\u8868\u6570\u636e\u6240\u5728\u76ee\u5f55\u7b49\uff09\uff0c\u9ed8\u8ba4\u4f7f\u7528\u81ea\u5e26\u7684 Derby \u6570\u636e\u5e93\uff0c\u4f46\u7f3a\u70b9\u662f\u65e0\u6cd5\u5e76\u53d1\u8fd0\u884c 2 \u4e2a Hive CLI \u5b9e\u4f8b\uff0c\u56e0\u6b64\u63a8\u8350\u4f7f\u7528 MySQL \u6570\u636e\u5e93\u6765\u5b58\u50a8\u5143\u6570\u636e</li> <li>HiveServer2\uff1a\u670d\u52a1\u7aef\u63a5\u53e3\uff0c\u901a\u8fc7 Thrift \u534f\u8bae\u63d0\u4f9b\u5bf9 Hive \u7684\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 JDBC/ODBC \u6765\u8bbf\u95ee Hive\uff0c\u652f\u6301\u591a\u5ba2\u6237\u7aef\u5e76\u53d1\u548c\u8eab\u4efd\u9a8c\u8bc1</li> </ul>"},{"location":"Hive/1.%20Hive/#hive-sql","title":"Hive SQL \u7f16\u8bd1\u8fc7\u7a0b","text":"<p>\u6df1\u5ea6\u597d\u6587\uff1aHive SQL \u7684\u7f16\u8bd1\u8fc7\u7a0b - \u7f8e\u56e2\u6280\u672f\u56e2\u961f (meituan.com)</p> <p></p> <p>Hive \u5c06 SQL \u8f6c\u5316\u4e3a MapReduce \u4efb\u52a1\uff0c\u6574\u4e2a\u7f16\u8bd1\u8fc7\u7a0b\u5206\u4e3a\u516d\u4e2a\u9636\u6bb5:</p> <ol> <li>\u89e3\u6790\u5668\uff08SQLParser\uff09\uff1a\u8bcd\u6cd5\u3001\u8bed\u6cd5\u89e3\u6790\uff0c\u5c06 SQL \u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09</li> <li>\u8bed\u4e49\u89e3\u6790\uff08Semantic Analyzer\uff09\uff1a\u5c06 AST \u8fdb\u4e00\u6b65\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u67e5\u8be2\u5355\u5143\uff08QueryBlock\uff09\uff0c\u5e76\u5c06 Hive \u4e2d\u7684\u5143\u4fe1\u606f\u8d4b\u7ed9\u6bcf\u4e2a QueryBlock</li> <li>\u903b\u8f91\u8ba1\u5212\u751f\u6210\u5668\uff08Logical Plan Gen\uff09\uff1a\u901a\u8fc7\u8bed\u6cd5\u6811\u751f\u6210\u903b\u8f91\u6267\u884c\u8ba1\u5212\uff08OperatorTree\uff09</li> <li>\u903b\u8f91\u4f18\u5316\u5668\uff08Logical Optimizer\uff09\uff1a\u5bf9\u903b\u8f91\u8ba1\u5212\u8fdb\u884c\u4f18\u5316\uff08\u5982\u8c13\u8bcd\u4e0b\u63a8\u3001\u6295\u5f71\u526a\u5207\uff09</li> <li>\u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\uff08Physical Plan Gen\uff09\uff1a\u6839\u636e\u4f18\u5316\u540e\u7684\u903b\u8f91\u8ba1\u5212\u751f\u6210\u7269\u7406\u8ba1\u5212\uff08\u904d\u5386 OperatorTree\uff0c\u7ffb\u8bd1\u4e3a MR \u4efb\u52a1\uff09</li> <li>\u7269\u7406\u4f18\u5316\u5668\uff08Physical Optimizer\uff09\uff1a\u5bf9\u7269\u7406\u8ba1\u5212\u8fdb\u884c\u4f18\u5316\uff08\u5bf9 MR \u4efb\u52a1\u7684\u53d8\u6362\uff0c\u5982 Map Join\uff09</li> </ol> <p></p> <p></p>"},{"location":"Hive/1.%20Hive/#hive_4","title":"Hive \u5de5\u4f5c\u539f\u7406/\u6267\u884c\u6d41\u7a0b","text":"<ol> <li>\u7528\u6237\u63d0\u4ea4\u67e5\u8be2\u4efb\u52a1\u7ed9 Driver</li> <li>Driver \u5c06\u67e5\u8be2\u53d1\u9001\u5230\u7f16\u8bd1\u5668\u4ee5\u751f\u6210\u6267\u884c\u8ba1\u5212</li> <li>\u7f16\u8bd1\u5668\u4ece MetaStore \u4e2d\u83b7\u53d6\u6240\u9700\u8981\u7684\u5143\u6570\u636e\u4fe1\u606f</li> <li>\u7f16\u8bd1\u5668\u5bf9 HQL \u8fdb\u884c\u7f16\u8bd1\uff0c\u4f1a\u7ecf\u5386\u8bed\u6cd5\u89e3\u6790\uff08AST\uff09\u3001\u8bed\u4e49\u89e3\u6790\uff08QueryBlock\uff09\u3001\u751f\u6210\u903b\u8f91\u8ba1\u5212\u3001\u4f18\u5316\u903b\u8f91\u8ba1\u5212\u3001\u751f\u6210\u7269\u7406\u8ba1\u5212\u3001\u4f18\u5316\u7269\u7406\u8ba1\u5212\u7b49\u8fc7\u7a0b</li> <li>\u7f16\u8bd1\u5668\u5c06\u6700\u7ec8\u7684\u6267\u884c\u8ba1\u5212\u8fd4\u56de\u7ed9 Driver</li> <li>Driver \u5c06\u6267\u884c\u8ba1\u5212\u63d0\u4ea4\u7ed9\u6267\u884c\u5f15\u64ce\uff08Execution Engine\uff09\u53bb\u6267\u884c\uff0c \u6267\u884c\u5f15\u64ce\u5c06 MR \u4efb\u52a1\u63d0\u4ea4\u7ed9 Job Tracker</li> <li>\u4efb\u52a1\u6267\u884c\u5b8c\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9 Driver \u5e76\u8fd4\u56de\u7ed9\u7528\u6237</li> </ol>"},{"location":"Hive/1.%20Hive/#mapreduce","title":"\u4e3a\u4ec0\u4e48 MapReduce \u7684\u6267\u884c\u6548\u7387\u5f88\u4f4e\uff1f","text":"<p>MapReduce \u7684\u6267\u884c\u6548\u7387\u5f88\u4f4e\uff0c\u8fd9\u79cd\u4f4e\u6548\u662f\u7531\u5b83\u7684\u6267\u884c\u6a21\u5f0f\u51b3\u5b9a\u7684\uff0c\u6240\u6709\u7684 MapTask\u3001ReduceTask \u5168\u90e8\u662f\u4ee5\u8fdb\u7a0b\u7684\u65b9\u5f0f\u6267\u884c\u7684\uff0c\u8981\u542f\u52a8\u8fdb\u7a0b\u3001\u9500\u6bc1\u8fdb\u7a0b\uff0c\u5373\u4f7f\u53ef\u4ee5\u5f00\u542f JVM \u91cd\u7528\uff0c\u4f46\u662f\u4e5f\u662f\u7528\u7684\u65f6\u5019\u5f00\u542f\uff0c\u7ed3\u675f\u4e4b\u540e\u5173\u95ed\uff0c\u800c\u4e14 JVM \u6210\u672c\u5f88\u9ad8\u3002</p> <p>\u968f\u7740\u65f6\u4ee3\u7684\u53d1\u5c55\uff0c\u4eba\u4eec\u5f00\u53d1\u51fa\u8ba1\u7b97\u5904\u7406\u80fd\u529b\u66f4\u5f3a\u5927\u7684\u6570\u636e\u5904\u7406\u5de5\u5177\uff0c\u5982 Spark\u3001 Tez \u7b49\uff0c\u6240\u4ee5 Hive \u5e95\u5c42\u6240\u652f\u6301\u7684\u6267\u884c\u5f15\u64ce\u6709 MapReduce\u3001Spark\u3001Tez\u3002</p> <p>\u5f00\u6e90 SQL-on-Hadoop \u7cfb\u7edf\u4e00\u89c8 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"Hive/1.%20Hive/#hive_5","title":"Hive \u7684\u4f7f\u7528","text":"<ul> <li>\u76f4\u63a5\u6267\u884c\uff1a<code>hive -e \u8bed\u53e5</code></li> <li>\u811a\u672c\u6267\u884c\uff1a<code>hive -f \u811a\u672c\u6587\u4ef6</code></li> <li>\u901a\u8fc7\u5ba2\u6237\u7aef\u6267\u884c</li> </ul>"},{"location":"Hive/1.%20Hive/#metastore","title":"MetaStore \u5185\u5d4c\u6a21\u5f0f\u3001\u672c\u5730\u6a21\u5f0f\u3001\u8fdc\u7a0b\u6a21\u5f0f","text":"<ul> <li>Embedded metastore\uff1a\u5185\u5d4c\u6a21\u5f0f</li> </ul> <p>\u5176\u7279\u70b9\u662f\uff1ahive \u670d\u52a1\u548c metastore \u670d\u52a1\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0cderby \u670d\u52a1\u4e5f\u8fd0\u884c\u5728\u8be5\u8fdb\u7a0b\u4e2d\u3002\u8be5\u6a21\u5f0f\u65e0\u9700\u7279\u6b8a\u914d\u7f6e\u3002</p> <ul> <li>Local metastore\uff1a\u672c\u5730\u6a21\u5f0f</li> </ul> <p>\u5176\u7279\u70b9\u662f\uff1ahive \u670d\u52a1\u548c metastore \u670d\u52a1\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0cmysql \u662f\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fdc\u7a0b\u673a\u5668\u4e0a\u3002\u8be5\u6a21\u5f0f\u53ea\u9700\u5c06 <code>hive-site.xml</code> \u4e2d\u7684 ConnectionURL \u6307\u5411 mysql\uff0c\u5e76\u914d\u7f6e\u597d\u9a71\u52a8\u540d\u3001\u6570\u636e\u5e93\u8fde\u63a5\u8d26\u53f7\u5373\u53ef\u3002</p> <ul> <li>Remote metastore\uff1a\u8fdc\u7a0b\u6a21\u5f0f</li> </ul> <p>\u5176\u7279\u70b9\u662f\uff1ahive \u670d\u52a1\u548c metastore \u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u5185\uff0c\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u673a\u5668\u3002 \u8be5\u6a21\u5f0f\u9700\u8981\u5c06 <code>hive.metastore.local</code> \u8bbe\u7f6e\u4e3a false\uff0c\u5e76\u5c06 <code>hive.metastore.uris</code> \u8bbe\u7f6e\u4e3a metastore \u670d\u52a1\u5668 URI\uff0c\u5982\u6709\u591a\u4e2a metastore \u670d\u52a1\u5668\uff0cURI \u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694\u3002metastore \u670d\u52a1\u5668 URI \u7684\u683c\u5f0f\u4e3a thrift://host:port\u3002</p>"},{"location":"Hive/1.%20Hive/#hive_6","title":"Hive \u5143\u6570\u636e\u6570\u636e\u5e93\u5305\u542b\u7684\u5177\u4f53\u5185\u5bb9","text":"<ul> <li> <p>\u662f\u4ec0\u4e48\uff1a\u672c\u8d28\u4e0a\u662f\u7528\u6765\u5b58\u50a8 hive \u4e2d\u6709\u54ea\u4e9b\u6570\u636e\u5e93\uff0c\u54ea\u4e9b\u8868\uff0c\u8868\u7684\u6a21\u5f0f\uff0c\u76ee\u5f55\uff0c\u5206\u533a\uff0c\u7d22\u5f15\u4ee5\u53ca\u547d\u540d\u7a7a\u95f4\u3002</p> </li> <li> <p>\u505a\u4ec0\u4e48\uff1a\u4e3b\u8981\u7528\u4f5c\u6570\u636e\u7ba1\u7406\uff0c\u5305\u62ec\u67e5\u770b\u6570\u636e\u8868\u4e4b\u95f4\u7684\u8840\u7f18\u5173\u7cfb\u3001\u67e5\u770b\u6570\u636e\u5b58\u50a8\u3001\u6570\u636e\u8868\u7684\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7b49\u3002</p> </li> </ul> <p>\u5e38\u89c1\u8868\uff1a</p> <ul> <li>DBS\uff1a\u8be5\u8868\u5b58\u50a8 Hive \u4e2d\u6240\u6709\u6570\u636e\u5e93\u7684\u57fa\u672c\u4fe1\u606f</li> <li>DATABASE_PARAMS\uff1a\u8be5\u8868\u5b58\u50a8\u6570\u636e\u5e93\u7684\u76f8\u5173\u53c2\u6570\uff08\u521b\u5efa\u6570\u636e\u5e93\u65f6\u7684 WITH DBPROPERTIES \u4e2d\u7684\u5185\u5bb9\u5c31\u5b58\u5728\u8fd9\uff09</li> <li>TBLS\uff1a\u8be5\u8868\u4e2d\u5b58\u50a8 Hive \u8868\u3001\u89c6\u56fe\u3001\u7d22\u5f15\u8868\u7684\u57fa\u672c\u4fe1\u606f</li> <li>SERDES\uff1a\u8be5\u8868\u5b58\u50a8\u5e8f\u5217\u5316\u4f7f\u7528\u7684\u7c7b\u4fe1\u606f</li> </ul>"},{"location":"Hive/1.%20Hive/#hive_7","title":"Hive \u7684\u56db\u79cd\u6570\u636e\u6a21\u578b","text":"<p>Hive \u7684\u56db\u79cd\u6570\u636e\u6a21\u578b\u5206\u522b\u4e3a Database, Table, Partition \u548c Bucket\u3002</p> <ul> <li>Database</li> </ul> <p>Database \u76f8\u5f53\u4e8e\u5173\u7cfb\u6570\u636e\u5e93\u91cc\u7684\u547d\u540d\u7a7a\u95f4(namespace)\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u7528\u6237\u548c\u6570\u636e\u5e93\u7684\u5e94\u7528\u9694\u79bb\u5230\u4e0d\u540c\u7684\u6570\u636e\u5e93\u6216\u6a21\u5f0f\u4e2d\u3002</p> <ul> <li>Table</li> </ul> <p>Hive \u91cc\u7684 Table \u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u4e00\u79cd\u53eb\u5185\u90e8\u8868\uff0c\u8fd9\u79cd\u8868\u7684\u6570\u636e\u6587\u4ef6\u5b58\u50a8\u5728 Hive \u7684\u6570\u636e\u4ed3\u5e93\u91cc\uff1b\u53e6\u4e00\u79cd\u53eb\u5916\u90e8\u8868\uff0c\u8fd9\u79cd\u8868\u7684\u6570\u636e\u6587\u4ef6\u53ef\u4ee5\u5b58\u653e\u5728 Hive \u6570\u636e\u4ed3\u5e93\u5916\u90e8\u7684\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u653e\u5230 Hive \u6570\u636e\u4ed3\u5e93\u91cc(\u6ce8\u610f\uff1aHive \u7684\u6570\u636e\u4ed3\u5e93\u4e5f\u5c31\u662f HDFS \u4e0a\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u662f Hive \u6570\u636e\u6587\u4ef6\u5b58\u50a8\u7684\u9ed8\u8ba4\u8def\u5f84\uff0c\u5b83\u53ef\u4ee5\u5728 Hive \u7684\u914d\u7f6e\u6587\u4ef6\u91cc\u8fdb\u884c\u914d\u7f6e\uff0c\u6700\u7ec8\u4e5f\u4f1a\u5b58\u653e\u5230\u5143\u6570\u636e\u5e93\u91cc)\u3002</p> <p>\u5185\u90e8\u8868\uff1aHive \u7684\u5185\u90e8\u8868\u548c\u6570\u636e\u5e93\u4e2d\u7684 Table \u5728\u6982\u5ff5\u4e0a\u662f\u7c7b\u4f3c\u7684\uff0c\u6bcf\u5f20 Table \u5728 Hive \u4e2d\u90fd\u6709\u4e00\u4e2a\u76f8\u5e94\u7684\u76ee\u5f55\u5b58\u50a8\u6570\u636e\u3002Table \u903b\u8f91\u4e0a\u7531\u5b58\u50a8\u7684\u6570\u636e\u548c\u63cf\u8ff0\u8868\u683c \u4e2d\u7684\u6570\u636e\u5f62\u5f0f\u7684\u76f8\u5173\u5143\u6570\u636e\u7ec4\u6210\u3002\u8868\u5b58\u50a8\u7684\u6570\u636e\u5b58\u653e\u5728\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u91cc\uff0c\u4f8b\u5982 HDFS\uff0c\u5143\u6570\u636e\u5b58\u50a8\u5728\u5173\u7cfb\u6570\u636e\u5e93\u91cc\u3002</p> <p>\u5916\u90e8\u8868\uff1a\u5728\u521b\u5efa\u5916\u90e8\u8868\u65f6\u3002\u5728 table \u4e4b\u524d\u8981\u52a0\u5173\u952e\u5b57 external\uff0c\u540c\u65f6\u8fd8\u8981\u7528 location \u547d\u4ee4\u6307\u5b9a\u6587\u4ef6\u5b58\u50a8\u7684\u8def\u5f84\u3002\u5982\u679c\u4e0d\u4f7f\u7528 locaction \u547d\u4ee4\uff0c\u6570\u636e\u6587\u4ef6\u4e5f\u4f1a\u653e\u7f6e\u5230 Hive \u7684\u6570\u636e\u4ed3\u5e93\u91cc\u3002\u5916\u90e8\u8868\u6307\u5411\u5df2\u7ecf\u5728 HDFS \u4e2d\u5b58\u5728\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u521b\u5efa Partition\u3002(\u5b83\u548c\u5185\u90e8\u8868\u5728\u5143\u6570\u636e\u7684\u7ec4\u7ec7\u4e0a\u662f\u76f8\u540c\u7684\uff0c\u800c\u5b9e\u9645\u6570\u636e\u7684\u5b58\u50a8\u5219\u6709\u8f83\u5927\u7684\u5dee\u5f02\u3002\u5185\u90e8\u8868\u7684\u521b\u5efa\u8fc7\u7a0b\u548c\u6570\u636e\u52a0\u8f7d\u8fc7\u7a0b\u53ef\u4ee5\u72ec\u7acb\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u5728\u540c\u4e00\u6761\u8bed\u53e5\u4e2d\u5b8c\u6210\u3002\u5728\u52a0\u8f7d\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5b9e\u9645\u6570\u636e\u4f1a\u88ab\u79fb\u52a8\u5230\u6570\u636e\u4ed3\u5e93\u76ee\u5f55\u4e2d\uff0c\u4e4b\u540e\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u5c06\u4f1a\u76f4\u63a5\u5728\u6570\u636e\u4ed3\u5e93\u76ee\u5f55\u4e2d\u5b8c\u6210\u3002\u5220\u9664\u8868\u65f6\uff0c\u8868\u4e2d\u7684\u6570\u636e\u548c\u5143\u6570\u636e\u5c06\u4f1a\u88ab\u540c\u65f6\u5220\u9664\u3002)\u800c\u5916\u90e8\u8868\u53ea\u6709\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u52a0\u8f7d\u6570\u636e\u548c\u521b\u5efa\u8868\u540c\u65f6\u5b8c\u6210(CREATE EXTERNAL TABLE... LOCATION)\uff0c\u5b9e\u9645\u6570\u636e\u5b58\u50a8\u5728 LOCATION \u540e\u9762\u6307\u5b9a\u7684 HDFS \u8def\u5f84\u4e2d\uff0c\u5e76\u4e0d\u4f1a\u79fb\u52a8\u5230\u6570\u636e\u4ed3\u5e93\u76ee\u5f55\u4e2d\u3002</p> <p>\u533a\u522b\uff1a\u5185\u90e8\u8868\u5728\u6267\u884c drop \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u4f1a\u5220\u9664\u5143\u6570\u636e\u548c\u5b58\u50a8\u7684\u6570\u636e\uff1b\u800c\u5916\u90e8\u8868\u5728\u6267\u884c drop \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u53ea\u5220\u9664\u5143\u6570\u636e\u5e93\u91cc\u7684\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u5220\u9664\u5b58\u50a8\u7684\u6570\u636e\u3002</p> <ul> <li>Partition</li> </ul> <p>\u5b9a\u4e49\uff1aHive \u91cc Partition \u7684\u6982\u5ff5\u662f\u6839\u636e\u300c\u5206\u533a\u5217\u300d\u7684\u503c\u5bf9\u8868\u7684\u6570\u636e\u8fdb\u884c\u7c97\u7565\u5212\u5206\u7684\u673a\u5236\u3002\u5728 Hive \u5b58\u50a8\u4e0a\u5c31\u4f53\u73b0\u5728\u8868\u7684\u4e3b\u76ee\u5f55(Hive \u7684\u8868\u5b9e\u9645\u663e\u793a\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\u5939)\u4e0b\u7684\u4e00\u4e2a\u5b50\u76ee\u5f55\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u7684\u540d\u5b57\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u5206\u533a\u5217\u7684\u540d\u5b57\u3002\u5206\u533a\u5217\u4e0d\u662f\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5\uff0c\u800c\u662f\u72ec\u7acb\u7684\u5217\uff0c\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u5217\u6765\u5b58 \u50a8\u8868\u4e2d\u7684\u6570\u636e\u6587\u4ef6\u3002</p> <p>\u4f5c\u7528\uff1a\u4f7f\u7528\u5206\u533a\u662f\u4e3a\u4e86\u52a0\u5feb\u6570\u636e\u7684\u67e5\u8be2\u901f\u5ea6\u3002\u6211\u4eec\u5728\u67e5\u8be2\u67d0\u4e2a\u5177\u4f53\u5206\u533a\u5217\u91cc\u7684\u6570\u636e\u65f6\uff0c\u6ca1\u5fc5\u8981\u8fdb\u884c\u5168\u8868\u626b\u63cf\u3002</p> <ul> <li>Bucket</li> </ul> <p>Table \u548c Partition \u90fd\u662f\u76ee\u5f55\u7ea7\u522b\u7684\u62c6\u5206\u6570\u636e\uff0c\u800c Bucket \u5219\u662f\u9488\u5bf9\u6570\u636e\u6e90\u6570\u636e\u6587\u4ef6\u672c\u8eab\u6765\u62c6\u5206\u6570\u636e\u7684\u3002\u4f7f\u7528\u6876\u7684\u8868\u4f1a\u5c06\u6e90\u6570\u636e\u6587\u4ef6\u6309\u4e00\u5b9a\u89c4\u5f8b\u62c6\u5206\u6210\u591a\u4e2a\u6587\u4ef6\u3002\u6876\u8fd0\u7528\u7684\u573a\u666f\u6709\u9650\uff0c\u4e00\u4e2a\u662f\u505a Map \u8fde\u63a5\u7684\u8fd0\u7b97\uff0c\u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u53d6\u6837\u64cd\u4f5c\u3002</p> <p>Bucket \u662f\u5c06\u8868\u7684\u5217\u901a\u8fc7 Hash \u7b97\u6cd5\u8fdb\u4e00\u6b65\u5206\u89e3\u6210\u4e0d\u540c\u7684\u6587\u4ef6\u5b58\u50a8\u3002\u5b83\u5bf9\u6307\u5b9a\u5217\u8ba1\u7b97 Hash \u6839\u636e Hash \u503c\u5207\u5206\u6570\u636e\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5e76\u884c\uff0c\u6bcf\u4e2a Bucket \u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\u3002</p>"},{"location":"Hive/1.%20Hive/#hive_8","title":"Hive \u6570\u636e\u7c7b\u578b","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b \u8bf4\u660e \u5b9a\u4e49 tinyint 1byte \u6709\u7b26\u53f7\u6574\u6570 smallint 2byte \u6709\u7b26\u53f7\u6574\u6570 int 4byte \u6709\u7b26\u53f7\u6574\u6570 bigint 8byte \u6709\u7b26\u53f7\u6574\u6570 boolean \u5e03\u5c14\u7c7b\u578b\uff0ctrue \u6216\u8005 false float \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 double \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 decimal \u5341\u8fdb\u5236\u7cbe\u51c6\u6570\u5b57\u7c7b\u578b decimal(16,2) varchar \u5b57\u7b26\u5e8f\u5217\uff0c\u9700\u6307\u5b9a\u6700\u5927\u957f\u5ea6\uff0c\u6700\u5927\u957f\u5ea6\u7684\u8303\u56f4\u662f [1,65535] varchar(32) string \u5b57\u7b26\u4e32\uff0c\u65e0\u9700\u6307\u5b9a\u6700\u5927\u957f\u5ea6 timestamp \u65f6\u95f4\u7c7b\u578b binary \u4e8c\u8fdb\u5236\u6570\u636e <p>\u96c6\u5408\u6570\u636e\u7c7b\u578b\u5982\u4e0b\uff1a</p> \u7c7b\u578b \u8bf4\u660e \u5b9a\u4e49 \u53d6\u503c array \u6570\u7ec4\u662f\u4e00\u7ec4\u76f8\u540c\u7c7b\u578b\u7684\u503c\u7684\u96c6\u5408 <code>array&lt;string&gt;</code> <code>arr[0]</code> map map \u662f\u4e00\u7ec4\u76f8\u540c\u7c7b\u578b\u7684\u952e\u503c\u5bf9\u96c6\u5408 <code>map&lt;string, int&gt;</code> <code>map['key']</code> struct \u7ed3\u6784\u4f53 <code>struct&lt;id:int, name:string&gt;</code> <code>struct.id</code> <p>\u901a\u8fc7\u96c6\u5408\u7c7b\u578b\u6765\u5b9a\u4e49\u5217\u7684\u597d\u5904\u662f\u4ec0\u4e48?</p> <p>\u5728\u5927\u6570\u636e\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u9075\u5faa\u6807\u51c6\u683c\u5f0f\u7684\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u53ef\u4ee5\u63d0\u4f9b\u66f4\u9ad8\u541e\u5410\u91cf\u7684\u6570\u636e\u3002\u5f53\u5904\u7406\u7684\u6570\u636e\u7684\u6570\u91cf\u7ea7\u662f T \u6216\u8005 P \u65f6\uff0c\u4ee5\u6700\u5c11\u7684\u300c\u5934\u90e8\u5bfb\u5740\u300d\u6765\u4ece\u78c1\u76d8\u4e0a\u626b\u63cf \u6570\u636e\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002\u6309\u6570\u636e\u96c6\u8fdb\u884c\u5c01\u88c5\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11\u5bfb\u5740\u6b21\u6570\u6765\u63d0\u4f9b\u67e5\u8be2\u7684\u901f\u5ea6\u3002\u800c\u5982\u679c\u6839\u636e\u5916\u952e\u5173\u7cfb\u5173\u8054\u7684\u8bdd\u5219\u9700\u8981\u8fdb\u884c\u78c1\u76d8\u95f4\u7684\u5bfb\u5740\u64cd\u4f5c\uff0c\u8fd9\u6837\u4f1a\u6709\u975e\u5e38\u9ad8\u7684\u6027\u80fd\u6d88\u8017\u3002</p> <p>\u96c6\u5408\u7c7b\u578b\u7684\u5e94\u7528\u573a\u666f</p> <p>Map \u7c7b\u578b\u5e38\u7528\u6765\u505a\u6269\u5c55\u5b57\u6bb5\uff0c\u907f\u514d\u591a\u6b21\u4fee\u6539\u8868\u7ed3\u6784\uff1b\u800c Array \u7c7b\u578b\u5e38\u5e38\u51fa\u73b0\u5728\u884c\u5217\u8f6c\u5316\u4e2d\u3002</p> <p>Hive \u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u505a\u7c7b\u578b\u8f6c\u6362\uff0c\u8f6c\u6362\u7684\u65b9\u5f0f\u5305\u62ec\u9690\u5f0f\u8f6c\u6362\u4ee5\u53ca\u663e\u5f0f\u8f6c\u6362\u3002</p> <p>\u9690\u5f0f\u8f6c\u6362\uff1a</p> <ul> <li>\u4efb\u4f55\u6574\u6570\u7c7b\u578b\u90fd\u53ef\u4ee5\u9690\u5f0f\u5730\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8303\u56f4\u66f4\u5e7f\u7684\u7c7b\u578b\uff0c\u5982 tinyint \u53ef\u4ee5\u8f6c\u6362\u6210 int\uff0cint \u53ef\u4ee5\u8f6c\u6362\u6210 bigint</li> <li>\u6240\u6709\u6574\u6570\u7c7b\u578b\u3001float \u548c string \u7c7b\u578b\u90fd\u53ef\u4ee5\u9690\u5f0f\u5730\u8f6c\u6362\u6210 double</li> <li>tinyint\u3001smallint\u3001int \u90fd\u53ef\u4ee5\u8f6c\u6362\u4e3a float</li> <li>boolean \u7c7b\u578b\u4e0d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u5b83\u7684\u7c7b\u578b</li> </ul>"},{"location":"Hive/1.%20Hive/#hive_9","title":"Hive \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316","text":"<p>\u5f53\u8fdb\u7a0b\u5728\u8fdb\u884c\u8fdc\u7a0b\u901a\u4fe1\u65f6\uff0c\u53d1\u9001\u65b9\u9700\u8981\u628a\u5bf9\u8c61\u8f6c\u5316\u4e3a\u5b57\u8282\u5e8f\u5217\u624d\u53ef\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\uff0c\u79f0\u4e3a\u5bf9\u8c61\u5e8f\u5217\u5316\uff1b\u63a5\u6536\u65b9\u5219\u9700\u8981\u628a\u5b57\u8282\u5e8f\u5217\u6062\u590d\u4e3a\u5bf9\u8c61\uff0c \u79f0\u4e3a\u5bf9\u8c61\u7684\u53cd\u5e8f\u5217\u5316\u3002</p> <p>Hive \u7684\u53cd\u5e8f\u5217\u5316\u662f\u5bf9 key/value \u53cd\u5e8f\u5217\u5316\u6210 hive table \u7684\u6bcf\u4e2a\u5217\u7684\u503c\u3002 Hive \u53ef\u4ee5\u65b9\u4fbf\u7684\u5c06\u6570\u636e\u52a0\u8f7d\u5230\u8868\u4e2d\u800c\u4e0d\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u8f6c\u6362\uff0c\u8fd9\u6837\u5728\u5904\u7406\u6d77\u91cf\u6570\u636e\u65f6\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4\u3002</p> <p>\u6211\u4eec\u90fd\u77e5\u9053\uff0cHive \u6709\u4e09\u5927\u6838\u5fc3\u7ec4\u4ef6\uff1a</p> <ul> <li>Query Processor\uff1a\u67e5\u8be2\u5904\u7406\u5de5\u5177\uff0c\u5bf9\u5e94\u6e90\u7801\u4e2d\u7684 ql \u5305</li> <li>SerDe\uff1a\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316\u5668\uff0c\u6e90\u7801 serde \u5305</li> <li>MetaStore\uff1a\u5143\u6570\u636e\u5b58\u50a8\u53ca\u670d\u52a1\uff0c\u6e90\u7801 metastore \u5305</li> </ul> <p>\u5176\u4e2d SerDe \u662f Serializer \u548c Deserializer \u7684\u7f29\u5199\uff0c\u662f\u5e8f\u5217\u5316\u5668\u4e0e\u53cd\u5e8f\u5217\u5316\u5668\uff0cHive \u4f7f\u7528 SerDe \u63a5\u53e3\u53bb\u5b8c\u6210 IO \u64cd\u4f5c\uff0c\u63a5\u53e3\u7684\u4e09\u4e2a\u4e3b\u8981\u529f\u80fd\uff1a</p> <ul> <li>\u5e8f\u5217\u5316(Serialization)\uff0c\u4ece Hive \u5199\u5165 FS</li> <li>\u53cd\u5e8f\u5217\u5316\uff08Deserialization\uff09\uff0c\u4ece FS \u8bfb\u5165 Hive</li> <li>\u89e3\u91ca\u8bfb\u5199\u5b57\u6bb5\uff0c\u52a0\u8d77\u6587\u4ef6\u5230\u5b57\u6bb5\u7684\u6620\u5c04\u4f5c\u7528</li> </ul> <p></p> <p>\u5728 Hive \u7684 HQL \u8bed\u53e5\u4e2d\uff0cselect \u65f6\u5c06\u4f1a\u7528\u5230\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c insert \u65f6\u4f1a\u7528\u5230\u5e8f\u5217\u5316\u64cd\u4f5c\u3002</p>"},{"location":"Hive/1.%20Hive/#_1","title":"\u5185\u90e8\u8868\u548c\u5916\u90e8\u8868","text":""},{"location":"Hive/1.%20Hive/#_2","title":"\u5185\u90e8\u8868\u4e0e\u5916\u90e8\u8868\u7684\u533a\u522b","text":"<p>\u5185\u90e8\u8868\u548c\u5916\u90e8\u8868\u53ef\u4ee5\u901a\u8fc7 <code>describe extended tablename;</code> \u6765\u67e5\u770b\u3002</p> <p>Hive \u4e2d\u5185\u90e8\u8868\u4e0e\u5916\u90e8\u8868\u7684\u533a\u522b\uff1a</p> <ul> <li>\u5185\u90e8\u8868\u6570\u636e\u7531 Hive \u81ea\u8eab\u7ba1\u7406\uff0c\u5916\u90e8\u8868\u6570\u636e\u7531 HDFS \u7ba1\u7406</li> <li>\u5185\u90e8\u8868\u7684\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\u662f <code>hive.metastore.warehouse.dir</code>\uff0c\u9ed8\u8ba4\u4f4d\u7f6e\uff1a <code>/user/hive/warehouse</code>\uff0c\u5916\u90e8\u8868\u6570\u636e\u7684\u5b58\u50a8\u4f4d\u7f6e\u7531\u81ea\u5df1\u6307\u5b9a\uff08\u5982\u679c\u6ca1\u6709 LOCATION\uff0c Hive \u5c06\u5728 HDFS \u4e0a\u7684 <code>/user/hive/warehouse</code> \u6587\u4ef6\u5939\u4e0b\u4ee5\u5916\u90e8\u8868\u7684\u8868\u540d\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5e76\u5c06\u5c5e\u4e8e\u8fd9\u4e2a\u8868\u7684\u6570\u636e\u5b58\u653e\u5728\u8fd9\u91cc\uff09</li> <li>\u5220\u9664\u5185\u90e8\u8868\u4f1a\u76f4\u63a5\u5220\u9664\u5143\u6570\u636e\u53ca\u5b58\u50a8\u6570\u636e\uff0c\u5220\u9664\u5916\u90e8\u8868\u4ec5\u4ec5\u4f1a\u5220\u9664\u5143\u6570\u636e\uff0cHDFS \u4e0a\u7684\u6587\u4ef6\u5e76\u4e0d\u4f1a\u88ab\u5220\u9664</li> <li>\u5bf9\u5185\u90e8\u8868\u7684\u4fee\u6539\u4f1a\u5c06\u4fee\u6539\u76f4\u63a5\u540c\u6b65\u7ed9\u5143\u6570\u636e\uff0c\u800c\u5bf9\u5916\u90e8\u8868\u7684\u8868\u7ed3\u6784\u548c\u5206\u533a\u8fdb\u884c\u4fee\u6539\uff0c\u5219\u9700\u8981\u901a\u8fc7\u4fee\u590d\uff08<code>MSCK REPAIR TABLE table_name;</code>\uff09\u6765\u8fdb\u884c\u540c\u6b65\u5143\u6570\u636e</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u4f20\u7edf\u6570\u636e\u5e93\u5bf9\u8868\u6570\u636e\u9a8c\u8bc1\u662f schema on write\uff08\u5199\u65f6\u6a21\u5f0f\uff09\uff0c \u800c Hive \u5728 load \u65f6\u662f\u4e0d\u68c0\u67e5\u6570\u636e\u662f\u5426\u7b26\u5408 schema \u7684\uff0cHive \u9075\u5faa\u7684\u662f schema on read\uff08\u8bfb\u65f6\u6a21\u5f0f\uff09\uff0c\u53ea\u6709\u5728\u8bfb\u7684\u65f6\u5019 hive \u624d\u68c0\u67e5\u3001\u89e3\u6790\u5177\u4f53\u7684\u6570\u636e\u5b57\u6bb5\u3001schema\u3002 \u8bfb\u65f6\u6a21\u5f0f\u7684\u4f18\u52bf\u662f\u52a0\u8f7d\u6570\u636e\u975e\u5e38\u8fc5\u901f\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u8bfb\u53d6\u6570\u636e\u8fdb\u884c\u89e3\u6790\uff0c\u4ec5\u4ec5\u8fdb\u884c\u6587\u4ef6\u7684\u590d\u5236\u6216\u8005\u79fb\u52a8\u3002\u5199\u65f6\u6a21\u5f0f\u7684\u4f18\u52bf\u662f\u63d0\u5347\u4e86\u67e5\u8be2\u6027\u80fd\uff0c\u56e0\u4e3a\u9884\u5148\u89e3\u6790\u4e4b\u540e\u53ef\u4ee5\u5bf9\u5217\u5efa\u7acb\u7d22\u5f15\uff0c\u5e76\u538b\u7f29\uff0c\u4f46\u8fd9\u6837\u4e5f\u4f1a\u82b1\u8d39\u8981\u591a\u7684\u52a0\u8f7d\u65f6\u95f4\u3002</p> <p>\u5177\u4f53\u7684\u4f7f\u7528\u573a\u666f\uff1a</p> <ul> <li>\u505a etl \u5904\u7406\u65f6\uff0c\u901a\u5e38\u4f1a\u9009\u62e9\u5185\u90e8\u8868\u505a\u4e2d\u95f4\u8868\uff0c\u56e0\u4e3a\u6e05\u7406\u65f6\uff0c\u4f1a\u5c06 HDFS \u4e0a\u7684\u6587\u4ef6\u540c\u65f6\u5220\u9664\u3002</li> <li>\u5982\u679c\u6015\u8bef\u5220\u6570\u636e\uff0c\u53ef\u4ee5\u9009\u62e9\u5916\u90e8\u8868\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u5220\u9664\u6587\u4ef6\uff0c\u65b9\u4fbf\u6062\u590d\u6570\u636e</li> <li>\u5982\u679c\u5bf9\u6570\u636e\u7684\u5904\u7406\u90fd\u662f\u901a\u8fc7 hql \u8bed\u53e5\u5b8c\u6210\uff0c\u9009\u62e9\u5185\u90e8\u8868\uff0c\u5982\u679c\u6709\u5176\u4ed6\u5de5\u5177\u4e00 \u540c\u5904\u7406\uff0c\u9009\u62e9\u5916\u90e8\u8868\u3002</li> <li>\u6bcf\u5929\u91c7\u96c6\u7684 Nginx \u65e5\u5fd7\u548c\u57cb\u70b9\u65e5\u5fd7\uff0c\u5728\u5b58\u50a8\u7684\u65f6\u5019\u5efa\u8bae\u4f7f\u7528\u5916\u90e8\u8868\uff0c\u56e0\u4e3a\u65e5\u5fd7\u6570\u636e\u662f\u91c7\u96c6\u7a0b\u5e8f\u5b9e\u65f6\u91c7\u96c6\u8fdb\u6765\u7684\uff0c\u4e00\u65e6\u88ab\u8bef\u5220\uff0c\u6062\u590d\u8d77\u6765\u975e\u5e38\u9ebb\u70e6\u3002\u800c\u4e14\u5916\u90e8\u8868\u65b9\u4fbf\u6570\u636e\u7684\u5171\u4eab\u3002</li> <li>\u62bd\u53d6\u8fc7\u6765\u7684\u4e1a\u52a1\u6570\u636e\uff0c\u5176\u5b9e\u7528\u5916\u90e8\u8868\u6216\u8005\u5185\u90e8\u8868\u95ee\u9898\u90fd\u4e0d\u5927\uff0c\u5c31\u7b97\u88ab\u8bef\u5220\uff0c\u6062\u590d\u8d77\u6765\u4e5f\u662f\u5f88\u5feb\u7684\uff0c\u5982\u679c\u9700\u8981\u5bf9\u6570\u636e\u5185\u5bb9\u548c\u5143\u6570\u636e\u8fdb\u884c\u7d27\u51d1\u7684\u7ba1\u7406\uff0c\u90a3\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528\u5185\u90e8\u8868</li> <li>\u5728\u505a\u7edf\u8ba1\u5206\u6790\u65f6\u5019\u7528\u5230\u7684\u4e2d\u95f4\u8868\uff0c\u7ed3\u679c\u8868\u53ef\u4ee5\u4f7f\u7528\u5185\u90e8\u8868\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u4e0d\u9700\u8981\u5171\u4eab, \u4f7f\u7528\u5185\u90e8\u8868\u66f4\u4e3a\u5408\u9002\u3002\u5e76\u4e14\u5f88\u591a\u65f6\u5019\u7ed3\u679c\u5206\u533a\u8868\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u7559\u6700\u8fd1 3 \u5929\u7684\u6570\u636e\uff0c\u7528\u5916\u90e8\u8868\u7684\u65f6\u5019\u5220\u9664\u5206\u533a\u65f6\u65e0\u6cd5\u5220\u9664\u6570\u636e\u3002</li> </ul>"},{"location":"Hive/1.%20Hive/#_3","title":"\u5185\u90e8\u8868\u4e0e\u5916\u90e8\u8868\u7684\u8f6c\u6362","text":"<p>\u5982\u679c\u521b\u5efa\u7684\u5916\u90e8\u8868\u5728\u9ed8\u8ba4\u7684\u8def\u5f84\u4e0b\uff0c\u4e0d\u4f1a\u5220\u9664\u6587\u4ef6\uff0c\u5373\u4f7f\u66f4\u6539\u8868\u540d\uff0c\u8be5\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u7684\u540d\u5b57\u4e5f\u4e0d\u4f1a\u6539\u53d8\uff0c\u6b64\u65f6\u5982\u679c\u518d\u521b\u5efa\u4e00\u4e2a\u548c\u539f\u6765\u540d\u5b57\u76f8\u540c\u7684\u5916\u90e8\u8868\uff0c\u4f1a\u9020\u6210\u4e24\u4e2a\u8868\u7684\u6570\u636e\u8def\u5f84\u662f\u4e00\u6837\u7684\u3002\u5982\u679c\u7b2c\u4e8c\u6b21\u521b\u5efa\u7684\u8868\u548c\u7b2c\u4e00\u6b21\u521b\u5efa\u7684\u8868\u7ed3\u6784\u4e0d\u4e00\u81f4\uff0c\u5728\u67e5\u8be2\u7b2c\u4e8c\u4e2a\u8868\u65f6\uff0c\u4f1a\u62a5\u9519\u3002</p> <p>\u5982\u679c\u6700\u5f00\u59cb\u521b\u5efa\u4e86\u5916\u90e8\u8868\u5728\u9ed8\u8ba4\u8def\u5f84\u4e0b\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u5bf9\u8868\u91cd\u547d\u540d\u7684\u8bdd\uff0c\u76f8\u5e94\u7684\u8def\u5f84\u540d\u662f\u4e0d\u4f1a\u53d8\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u5728\u91cd\u5efa\u4e00\u4e2a\u8868\u540d\u548c\u539f\u8868\u4e00\u6837\u540d\u79f0\u7684\u8868\u5c31\u4f1a\u9020\u6210\u4e24\u4e2a\u8868\u7684\u6570\u636e\u8def\u5f84\u662f\u4e00\u6837\u7684\uff0c\u663e\u7136\u8fd9\u662f\u4e0d\u60f3\u8981\u7684\u7ed3\u679c\u3002</p> <ul> <li> <p>\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5916\u90e8\u8868 <code>table_1</code>\uff0c\u4f46\u662f\u8def\u5f84\u4e0d\u6307\u5b9a\u5373\u4e3a\u9ed8\u8ba4\uff0c\u8fd9\u65f6\u5019\u91cd\u547d\u540d <code>table_1</code> \u4e3a <code>table_111</code>\uff0c\u8fd9\u4e2a\u65f6\u5019\u56e0\u4e3a <code>table_111</code> \u4e3a\u5916\u90e8\u8868\uff0c\u90a3\u4ed6\u7684\u6587\u4ef6\u8def\u5f84\u4ecd\u7136\u662f <code>/user/hive/warehouse/test.db/table_1</code></p> </li> <li> <p>\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u518d\u521b\u5efa\u4e00\u4e2a\u8868 <code>table_1</code>\uff0c\u56e0\u4e3a\u6ca1\u6709\u6307\u5b9a\u8def\u5f84\uff0c<code>table_1</code> \u6570\u636e\u8def\u5f84\u4e5f\u662f <code>/user/hive/warehouse/test.db/table_1</code>\uff0c\u800c\u56e0\u4e3a\u5148\u540e\u521b\u5efa\u7684\u4e24\u4e2a\u8868\u7ed3\u6784\u662f\u4e00\u6837\uff0c\u8fd9\u4e2a\u65f6\u5019\u67e5\u8be2 <code>table_1</code>\uff0c\u5176\u5b9e\u4e5f\u80fd\u67e5\u51fa\u539f\u5148 <code>table_1</code> \u4e2d\u7684\u6570\u636e\uff0c\u8fd9\u76f8\u5f53\u4e8e <code>table_1</code> \u548c <code>table_111</code> \u5171\u7528\u6570\u636e\u6e90\u3002\u5982\u679c\u65b0\u5efa\u7684\u7b2c\u4e8c\u4e2a <code>table_1</code> \u8868\u7ed3\u6784\u4e0d\u4e00\u6837\u7684\u8bdd\uff0c\u90a3\u67e5\u8be2 <code>table_1</code> \u5c31\u4f1a\u67e5\u8be2\u62a5\u67e5\u8be2\u7ed3\u6784\u7684\u9519</p> </li> </ul> <pre><code>--- \u5185\u90e8\u8868\u8f6c\u5916\u90e8\u8868\nalter table xm_testA set TBLPROPERTIES (\"EXTERNAL\"=\"TRUE\")\n--- \u5916\u90e8\u8868\u8f6c\u6362\u5185\u90e8\u8868\nalter table xm_testB set TBLPROPTIES (\"EXTERNAL\"=\"FALSE\")\n</code></pre>"},{"location":"Hive/1.%20Hive/#_4","title":"\u5206\u533a\u8868\u4e0e\u975e\u5206\u533a\u8868","text":"<p>Hive \u4e2d\u7684\u5206\u533a\u5c31\u662f\u628a\u4e00\u5f20\u5927\u8868\u7684\u6570\u636e\u6309\u7167\u4e1a\u52a1\u9700\u8981\u5206\u6563\u5730\u5b58\u50a8\u5230\u591a\u4e2a\u76ee\u5f55\uff0c\u6bcf\u4e2a\u76ee\u5f55\u5c31\u79f0\u4e3a\u8be5\u8868\u7684\u4e00\u4e2a\u5206\u533a\u3002\u5728\u67e5\u8be2\u65f6\u901a\u8fc7 where \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9009\u62e9\u67e5\u8be2\u6240\u9700\u8981\u7684\u5206\u533a\uff0c\u8fd9\u6837\u7684\u67e5\u8be2\u6548\u7387\u4f1a\u63d0\u9ad8\u5f88\u591a\u3002</p> <p>\u7531\u4e8e Hive \u5b9e\u9645\u662f\u5b58\u50a8\u5728 HDFS \u4e0a\u7684\u62bd\u8c61\uff0cHive \u7684\u4e00\u4e2a\u5206\u533a\u540d\u5bf9\u5e94\u4e00\u4e2a\u76ee\u5f55\u540d\uff0c\u5b50\u5206\u533a\u540d\u5c31\u662f\u5b50\u76ee\u5f55\u540d\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9645\u5b57\u6bb5\u3002\u4e00\u4e2a\u8868\u53ef\u4ee5\u62e5\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5206\u533a\uff0c\u6bcf\u4e2a\u5206\u533a\u4ee5\u6587\u4ef6\u5939\u7684\u5f62\u5f0f\u5355\u72ec\u5b58\u5728\u8868\u6587\u4ef6\u5939\u7684\u76ee\u5f55\u4e0b\u3002</p> <p>\u5206\u533a\u662f\u4ee5\u5b57\u6bb5\u7684\u5f62\u5f0f\u5728\u8868\u7ed3\u6784\u4e2d\u5b58\u5728\uff0c\u53ef\u4ee5\u628a\u5206\u533a\u5b57\u6bb5\u770b\u4f5c\u8868\u7684\u4f2a\u5217\uff0c\u901a\u8fc7 <code>describe table</code> \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5230\u5b57\u6bb5\u5b58\u5728\uff0c\u4f46\u662f\u8be5\u5b57\u6bb5\u4e0d\u5b58\u653e\u5b9e\u9645\u7684\u6570\u636e\u5185\u5bb9\uff0c\u4ec5\u4ec5\u662f\u5206\u533a\u7684\u8868\u793a\u3002</p>"},{"location":"Hive/1.%20Hive/#_5","title":"\u9759\u6001\u5206\u533a\u548c\u52a8\u6001\u5206\u533a","text":"<p>hive \u4e2d\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u5206\u533a\uff1a\u9759\u6001\u5206\u533a SP\uff08static partition\uff09\u3001\u52a8\u6001\u5206\u533a DP \uff08dynamic partition\uff09\u3002</p> <p>\u52a8\u6001\u5206\u533a\u662f\u6307\u5411\u5206\u533a\u8868 insert \u6570\u636e\u65f6\uff0c\u88ab\u5199\u5165\u7684\u5206\u533a\u4e0d\u7531\u7528\u6237\u6307\u5b9a\uff0c\u800c\u662f\u7531\u6bcf\u884c\u6570\u636e\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bb5\u7684\u503c\u6765\u52a8\u6001\u5730\u51b3\u5b9a\u3002\u4f7f\u7528\u52a8\u6001\u5206\u533a\uff0c\u53ef\u53ea\u7528\u4e00\u4e2a insert \u8bed\u53e5\u5c06\u6570\u636e\u5199\u5165\u591a\u4e2a\u5206\u533a\u3002</p> <p>\u9759\u6001\u5206\u533a\u4e0e\u52a8\u6001\u5206\u533a\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a\u9759\u6001\u5206\u533a\u662f\u624b\u52a8\u6307\u5b9a\uff0c\u800c\u52a8\u6001\u5206\u533a\u662f\u901a\u8fc7\u6570\u636e\u6765\u8fdb\u884c\u5224\u65ad\u3002\u8be6\u7ec6\u6765\u8bf4\uff0c\u9759\u6001\u5206\u533a\u7684\u5217\u662f\u5728\u7f16\u8bd1\u65f6\u671f\uff0c\u901a\u8fc7\u7528\u6237\u4f20\u9012\u6765\u786e\u5b9a\u7684\uff1b\u52a8\u6001\u5206\u533a\u53ea\u6709\u5728 SQL \u6267\u884c\u65f6\u624d\u80fd\u786e\u5b9a\u3002</p> <p>\u5199\u5165\u7684\u65f6\u5019\u7684\u533a\u522b\uff1a\u9759\u6001\u5206\u533a\u5728\u63d2\u6570\u8bed\u53e5\u7684\u540e\u8fb9\u5c31\u8981\u6dfb\u52a0\u5b57\u6bb5\u548c\u5b57\u6bb5\u503c\u540e\uff0c\u4e0d\u9700\u8981\u5728 sql \u7684\u67e5\u8be2\u8bed\u53e5\u518d\u6dfb\u52a0\u8be5\u5b57\u6bb5\uff1b\u52a8\u6001\u5206\u533a\u5728\u63d2\u6570\u8bed\u53e5\u540e\u8fb9\u6dfb\u52a0\u5b57\u6bb5\u540e\uff0c \u8fd8\u9700\u8981\u5728 sql \u7684\u67e5\u8be2\u8bed\u53e5\u7684\u6700\u540e\uff0c\u628a\u8be5\u5b57\u6bb5\u52a0\u4e0a\u3002</p> <p>\u9759\u6001\u5206\u533a\uff1a</p> <pre><code>insert into table test partition(dt='20210101')\nselect a, b, c\nfrom source\nwhere dt = '20210101';\n--- test \u5b57\u6bb5\uff1aa, b, c, dt\n</code></pre> <p>\u52a8\u6001\u5206\u533a\uff1a</p> <pre><code>insert into table test partition(dt)\nselect a, b, c, dt\nfrom source\nwhere dt &gt;= '20210101';\n--- \u53ef\u4ee5\u5199\u5165\u591a\u4e2a\u5206\u533a\n</code></pre>"},{"location":"Hive/1.%20Hive/#_6","title":"\u5206\u6876\u8868","text":"<p>\u5206\u6876\u7684\u51fa\u73b0\uff1a\u5206\u533a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9694\u79bb\u6570\u636e\u548c\u4f18\u5316\u67e5\u8be2\u7684\u4fbf\u5229\u65b9\u5f0f\uff0c\u4e0d\u8fc7\u5e76\u975e\u6240\u6709\u7684\u6570\u636e\u90fd\u53ef\u5f62\u6210\u5408\u7406\u7684\u5206\u533a\uff0c\u5c24\u5176\u662f\u9700\u8981\u786e\u5b9a\u5408\u9002\u5927\u5c0f\u7684\u5206\u533a\u5212\u5206\u65b9\u5f0f\u3002</p> <p>\u4e0e\u5206\u533a\u7684\u533a\u522b\uff1a\u5206\u533a\u8868\u9488\u5bf9\u662f\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u5b58\u50a8\u8def\u5f84\uff0c\u5206\u6876\u8868\u5219\u9488\u5bf9\u7684\u662f\u6587\u4ef6\uff0c\u7c92\u5ea6\u66f4\u7ec6\uff0c\u662f\u53e6\u4e00\u79cd\u7ba1\u7406\u6570\u636e\u7684\u65b9\u5f0f\u3002</p> <p>\u6570\u636e\u5206\u6876\u7684\u539f\u7406: Hive \u4e2d\u6309\u7167\u5206\u6876\u5b57\u6bb5\u7684 hash \u503c\u53bb\u6a21\u4ee5\u5206\u6876\u7684\u4e2a\u6570\u3002</p> <p>\u5206\u6876\u7684\u4f5c\u7528\uff1a</p> <ul> <li>\u63d0\u9ad8\u67e5\u8be2\u6548\u7387</li> </ul> <p>\u5168\u8868\u67e5\u8be2\u6216\u5206\u533a\u67e5\u8be2\u8f6c\u6362\u6210\u6876\u67e5\u8be2\u3002</p> <ul> <li>\u5927\u8868 join</li> </ul> <p>\u5bf9\u4e8e\u4e24\u5f20\u5927\u8868\u7684 join\uff0c\u6267\u884c reduce join(shuffle join)\u80af\u5b9a\u4e0d\u5408\u9002\uff0c\u53ea\u80fd\u505a map join\u3002\u4f46\u662f reduce join \u53ea\u9002\u5408\u505a\u5c0f\u8868\u548c\u5927\u8868\u7684 join\uff0c\u5982\u4f55\u505a\u5927\u8868\u95f4\u7684 join \u5462\uff1f\u6b64\u65f6\u53ef\u4ee5\u5bf9\u4e24\u5f20\u5927\u8868\u7684\u8fde\u63a5\u5b57\u6bb5\u5206\u6876\uff0c\u6b64\u65f6\u7684 join \u662f\u6309\u7167\u6876\u6765\u7684\uff0c\u5b57\u6bb5\u503c\u76f8\u540c\u7684 record \u4f1a\u8fdb\u5165\u540c\u4e00\u4e2a\u6876\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u4e24\u5f20\u5927\u8868\u7684\u5206\u6876\u6570\u91cf\u4e0a\u5fc5\u987b\u662f\u500d\u6570\u5173\u7cfb\uff0c\u786e\u4fdd\u5bf9\u4e8e\u8fde\u63a5\u6761\u4ef6\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u89e3\u91ca\uff1a\u5982\u679c\u8fde\u63a5\u5b57\u6bb5\u67d0\u4e00\u4e2a\u503c\u7684 hashcode \u4e3a 8\uff0cA \u8868\u5206 4 \u6876\uff0cB \u8868\u5206 5 \u6876\uff0c\u5219\u8be5 \u503c\u5728 A \u8868\u8fdb\u5165 0 \u53f7\u6876\uff0c\u5728 B \u8868\u8fdb\u5165 3 \u53f7\u6876\uff0c\u6b64\u65f6 join \u7684\u8fde\u63a5\u6761\u4ef6\u5c31\u4e0d\u4e00\u81f4\u4e86\u3002 \u8981\u60f3\u5728 map \u7aef\u6267\u884c\u6876 join\uff0c\u5fc5\u987b\u8bbe\u7f6e <code>hive.optimize.bucketmapjoin=true</code>\u3002</p> <ul> <li>\u62bd\u6837\u67e5\u8be2</li> </ul> <p>\u4f20\u7edf\u62bd\u6837\uff1a<code>select * from emp tablesample(10%);</code></p> <p>Hive \u63d0\u4f9b\u4e86\u4e00\u79cd\u6309\u7167\u767e\u5206\u6bd4\u8fdb\u884c\u62bd\u6837\u7684\u65b9\u5f0f\uff0c\u8fd9\u79cd\u662f\u57fa\u4e8e\u884c\u6570\u7684\uff0c\u6309\u7167\u8f93\u5165\u8def\u5f84\u4e0b\u7684\u6570\u636e\u5757\u767e\u5206\u6bd4\u8fdb\u884c\u7684\u62bd\u6837\u3002</p> <p>\u63d0\u793a\uff1a\u8fd9\u79cd\u62bd\u6837\u65b9\u5f0f\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u6240\u6709\u7684\u6587\u4ef6\u683c\u5f0f\u3002\u53e6\u5916\uff0c\u8fd9\u79cd\u62bd\u6837\u7684\u6700\u5c0f \u62bd\u6837\u5355\u5143\u662f\u4e00\u4e2a HDFS \u6570\u636e\u5757\u3002\u56e0\u6b64\uff0c\u5982\u679c\u8868\u7684\u6570\u636e\u5927\u5c0f\u5c0f\u4e8e\u666e\u901a\u7684\u5757\u5927\u5c0f 128M \u7684\u8bdd\uff0c\u90a3\u4e48\u5c06\u4f1a\u8fd4\u56de\u6240\u6709\u884c\u3002</p> <p>\u5206\u6876\u62bd\u6837\uff1a<code>select * from emp tablesample(bucket x out of y);</code></p> <p>y \u5fc5\u987b\u662f table \u603b bucket \u6570\u7684\u500d\u6570\u6216\u8005\u56e0\u5b50\u3002hive \u6839\u636e y \u7684\u5927\u5c0f\uff0c\u51b3\u5b9a\u62bd\u6837\u7684\u6bd4\u4f8b\u3002\u4f8b\u5982\uff0ctable \u603b\u5171\u5206\u4e86 4 \u4efd\uff084 \u4e2a bucket\uff09\uff0c\u5f53 y=2 \u65f6\uff0c\u62bd\u53d6(4/2=)2 \u4e2a bucket \u7684\u6570\u636e\uff0c\u5f53 y=8 \u65f6\uff0c\u62bd\u53d6(4/8=)1/2 \u4e2a bucket \u7684\u6570\u636e\u3002</p> <p>x \u8868\u793a\u4ece\u54ea\u4e2a bucket \u5f00\u59cb\u62bd\u53d6\u3002\u4f8b\u5982\uff0ctable \u603b bucket \u6570\u4e3a 4\uff0ctablesample(bucket 4 out of 4)\uff0c\u8868\u793a\u603b\u5171\u62bd\u53d6\uff084/4=\uff091 \u4e2a bucket \u7684\u6570\u636e\uff0c\u62bd\u53d6\u7b2c 4 \u4e2a bucket \u7684\u6570\u636e\u3002</p> <p>\u6ce8\u610f\uff1ax \u7684\u503c\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e y \u7684\u503c\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002</p>"},{"location":"Hive/1.%20Hive/#_7","title":"\u89c6\u56fe","text":"<p>Hive \u4e2d\u7684\u89c6\u56fe\uff08view\uff09\u662f\u4e00\u79cd\u865a\u62df\u8868\uff0c\u53ea\u4fdd\u5b58\u5b9a\u4e49\uff0c\u4e0d\u5b9e\u9645\u5b58\u50a8\u6570\u636e\u3002\u901a\u5e38\u4ece\u771f\u5b9e\u7684\u7269\u7406\u8868\u67e5\u8be2\u4e2d\u521b\u5efa\u751f\u6210\u89c6\u56fe\uff0c\u4e5f\u53ef\u4ee5\u4ece\u5df2\u7ecf\u5b58\u5728\u7684\u89c6\u56fe\u4e0a\u521b\u5efa\u65b0\u89c6\u56fe\u3002</p> <p>\u521b\u5efa\u89c6\u56fe\u65f6\uff0c\u5c06\u51bb\u7ed3\u89c6\u56fe\u7684\u67b6\u6784\uff0c\u5982\u679c\u5220\u9664\u6216\u66f4\u6539\u57fa\u7840\u8868\uff0c\u5219\u89c6\u56fe\u5c06\u5931\u8d25\u3002\u6982\u51b5\u8d77\u6765\u5c31\u662f\uff1a\u89c6\u56fe\u662f\u7528\u6765\u7b80\u5316\u64cd\u4f5c\u7684\uff0c\u5b83\u5176\u5b9e\u662f\u4e00\u5f20\u865a\u8868\uff0c\u5728\u89c6\u56fe\u4e2d\u4e0d\u7f13\u51b2\u8bb0\u5f55\uff0c\u4e5f\u6ca1\u6709\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\u3002</p> <pre><code>----\u30101\u3011\u521b\u5efa\u89c6\u56fe\uff1a\ncreate view v_test as select customer_id, customer_city from olist_customers_dataset;\n----\u30102\u3011\u67e5\u770b\u89c6\u56fe\u5b9a\u4e49\uff1a\nshow create table v_test;\n----\u30103\u3011\u5220\u9664\u89c6\u56fe\uff1a\ndrop view v_test;\n----\u30104\u3011\u66f4\u6539\u89c6\u56fe\u5b9a\u4e49\uff1a\nalter view v_test as select customer_id, customer_city, customer_state from olist _customers_dataset;\n</code></pre> <p>\u89c6\u56fe\u7684\u4f5c\u7528\uff1a</p> <ul> <li>\u5c06\u771f\u5b9e\u8868\u4e2d\u7279\u5b9a\u7684\u5217\u6570\u636e\u63d0\u4f9b\u7ed9\u7528\u6237\uff0c\u4fdd\u62a4\u6570\u636e\u9690\u79c1\u3002</li> <li>\u901a\u8fc7\u89c6\u56fe\u964d\u4f4e\u67e5\u8be2\u7684\u590d\u6742\u5ea6\uff0c\u4f18\u5316\u67e5\u8be2\u8bed\u53e5\uff0c\u51cf\u5c11\u4ee3\u7801\u590d\u6742\u5ea6\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002</li> </ul>"},{"location":"Hive/1.%20Hive/#_8","title":"\u9762\u8bd5\u9898","text":"<ol> <li>\u8bf7\u8bb2\u4e00\u4e0b\u5185\u90e8\u8868\u4e0e\u5916\u90e8\u8868\u7684\u5b9a\u4e49\u3001\u533a\u522b\u3001\u4f7f\u7528\u573a\u666f\u3002</li> <li>\u8bf7\u8bb2\u4e00\u4e0b\u5bf9\u5206\u533a\u3001\u5206\u6876\u7684\u7406\u89e3\u3002</li> <li>\u8bf7\u8bb2\u4e00\u4e0b\u5bf9\u9759\u6001\u5206\u533a\u3001\u52a8\u6001\u5206\u533a\u7684\u7406\u89e3\u3002</li> <li>\u8bf7\u8bb2\u4e00\u4e0b\u5982\u4f55\u5904\u7406\u5927\u8868 join \u5927\u8868\u7684\u95ee\u9898\u3002(\u6309\u7167\u5173\u8054\u5b57\u6bb5\u5206\u6876)</li> </ol>"},{"location":"Hive/1.%20Hive/#hive-by","title":"Hive \u4e2d\u7684\u56db\u4e2a By","text":"<p>Hive \u5171\u6709\u56db\u4e2a by\uff1aorder by\uff0csort by\uff0cdistribute by\uff0ccluster by\u3002</p> <p>order by\uff1a</p> <ul> <li>\u5168\u5c40\u6392\u5e8f</li> <li>\u53ea\u6709\u4e00\u4e2a reducer(\u591a\u4e2a reducer \u65e0\u6cd5\u4fdd\u8bc1\u5168\u5c40\u6709\u5e8f)\uff1b\u5f53\u8f93\u5165\u89c4\u6a21\u8f83\u5927\u65f6\uff0c\u9700\u8981\u8f83\u957f\u7684\u8ba1\u7b97\u65f6\u95f4</li> </ul> <p>sort by\uff1a</p> <ul> <li>\u975e\u5168\u5c40\u6392\u5e8f</li> <li>\u5728\u6570\u636e\u8fdb\u5165 reducer \u524d\u5b8c\u6210\u6392\u5e8f</li> <li>\u5f53 reducer \u4e2a\u6570 &gt; 1 \u65f6\uff0c\u53ea\u80fd\u4fdd\u8bc1\u6bcf\u4e2a reducer \u7684\u8f93\u51fa\u6709\u5e8f\uff0c\u4e0d\u4fdd\u8bc1\u5168\u5c40\u6709\u5e8f</li> </ul> <p>distribute by\uff1a</p> <ul> <li>\u6309\u7167\u6307\u5b9a\u7684\u5b57\u6bb5\u5bf9\u6570\u636e\u8fdb\u884c\u5212\u5206\u8f93\u51fa\u5230\u4e0d\u540c\u7684 reduce \u4e2d\uff0c\u540e\u9762\u4e0d\u80fd\u8ddf desc\u3001 asc \u6392\u5e8f</li> <li>\u5e38\u548c sort by \u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u4e14 distribute by \u5fc5\u987b\u5728 sort by \u524d\u9762</li> </ul> <p>cluster by\uff1a</p> <ul> <li>cluster by x \u76f8\u5f53\u4e8e distribute by x + sort by x\uff0c\u53ea\u80fd\u9ed8\u8ba4\u5347\u5e8f\uff0c\u4e0d\u80fd\u4f7f\u7528\u5012\u5e8f</li> </ul>"},{"location":"Hive/1.%20Hive/#join","title":"Join","text":""},{"location":"Hive/1.%20Hive/#semi-join","title":"Semi Join","text":"<p>SQL Basics: How To Use A LEFT SEMI JOIN and Why - YouTube</p> <p>Optimizing IN and EXISTS Subquery Predicates with Semijoin Transformations</p> <p>mysql \u4e2d\u6709\u4e00\u4e2a\u8bed\u6cd5 in/exists \u7528\u4e8e\u5224\u65ad\u5b57\u6bb5\u662f\u5426\u5728\u7ed9\u5b9a\u7684\u503c\u4e2d\u3002</p> <p>\u5bf9\u4e8e hql \u8bed\u53e5\u53bb\u6267\u884c\u8fd9\u4e2a\u8bed\u53e5\u7684\u65f6\u5019\u9700\u8981\u8f6c\u6362\u4e3a MR \u4efb\u52a1\uff0c hive \u5728 \u8f6c\u6362\u4e3a MR \u4efb\u52a1\u7684\u65f6\u5019\u6027\u80fd\u6781\u4f4e\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u7528 join \u89e3\u51b3\u3002 <code>select * from a left semi join b on a.id=b.id;</code></p> <p>\u5de6\u534a\u8fde\u63a5\uff1a\u5224\u65ad\u5de6\u8868\u4e2d\u7684\u5173\u8054\u952e\u662f\u5426\u5728\u53f3\u8868\u4e2d\u5b58\u5728\uff0c\u82e5\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u5de6\u8868\u7684\u5b58\u5728\u7684\u6570\u636e\u7684\u76f8\u5173\u5b57\u6bb5\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u4e0d\u8fd4\u56de\u3002</p> <pre><code>select a.*\nfrom user_base_info as a\nleft semi join user_phone_info as b\non a.user_id=b.user_id;\n--\u7b49\u4ef7\u4e8e\uff1a\nselect a.*\nfrom user_base_info as a\nwhere a.user_id in (select user_id from user_phone_info);\n--\u4e5f\u7b49\u4ef7\u4e8e\uff1a\nselect a.*\nfrom user_base_info as a\nwhere EXISTS (select 1 from user_phone_info as b where a.user_id=b.user_id);\n</code></pre> <p>\u548c\u666e\u901a Join \u7684\u533a\u522b\uff1aa semi join b \u53ea\u8fd4\u56de a \u8868\u7684\u6570\u636e\uff0c\u800c join \u4f1a\u8fd4\u56de a \u8868 join b \u8868\u4e4b\u540e\u7684\u5168\u90e8\u6570\u636e\u3002</p>"},{"location":"Hive/1.%20Hive/#common-join","title":"Common Join","text":"<p>\u5982\u679c\u4e0d\u6307\u5b9a Map Join \u6216\u8005\u4e0d\u7b26\u5408 Map Join \u7684\u6761\u4ef6\uff0c\u90a3\u4e48 Hive \u89e3\u6790\u5668\u4f1a\u5c06 Join \u64cd\u4f5c\u8f6c\u6362\u6210 Common Join\uff0c\u5373\u5728 Reduce \u9636\u6bb5\u5b8c\u6210 join\u3002 \u6574\u4e2a\u8fc7\u7a0b\u5305\u542b Map\u3001Shuffle\u3001Reduce \u9636\u6bb5\u3002</p> <p>Map \u9636\u6bb5\uff1a</p> <ul> <li>Step1\uff1a\u8bfb\u53d6\u6e90\u8868\u7684\u6570\u636e\uff0cMap \u8f93\u51fa\u65f6\u5019\u4ee5 Join on \u6761\u4ef6\u4e2d\u7684\u5217\u4e3a key\uff0c\u5982\u679c Join \u6709\u591a\u4e2a\u5173\u8054\u952e\uff0c\u5219\u4ee5\u8fd9\u4e9b\u5173\u8054\u952e\u7684\u7ec4\u5408\u4f5c\u4e3a key</li> <li>Step2: Map \u8f93\u51fa\u7684 value \u4e3a join \u4e4b\u540e\u6240\u5173\u5fc3\u7684(select \u6216\u8005 where \u4e2d\u9700\u8981\u7528\u5230\u7684) \u5217\uff1b\u540c\u65f6\u5728 value \u4e2d\u8fd8\u4f1a\u5305\u542b\u8868\u7684 Tag \u4fe1\u606f\uff0c\u7528\u4e8e\u6807\u660e\u6b64 value \u5bf9\u5e94\u54ea\u4e2a\u8868</li> <li>Step3: \u6309\u7167 key \u8fdb\u884c\u6392\u5e8f\u3002</li> </ul> <p>Shuffle \u9636\u6bb5\uff1a</p> <ul> <li>\u6839\u636e key \u7684\u503c\u8fdb\u884c hash\uff0c\u5e76\u5c06 key/value \u6309\u7167 hash \u503c\u63a8\u9001\u81f3\u4e0d\u540c\u7684 reduce \u4e2d\uff0c\u8fd9\u6837\u786e\u4fdd\u4e24\u4e2a\u8868\u4e2d\u76f8\u540c\u7684 key \u4f4d\u4e8e\u540c\u4e00\u4e2a reduce \u4e2d\u3002</li> </ul> <p>Reduce \u9636\u6bb5\uff1a</p> <ul> <li>\u6839\u636e key \u7684\u503c\u5b8c\u6210 join \u64cd\u4f5c\uff0c\u671f\u95f4\u901a\u8fc7 Tag \u6765\u8bc6\u522b\u4e0d\u540c\u8868\u4e2d\u7684\u6570\u636e\u3002</li> </ul> <p></p>"},{"location":"Hive/1.%20Hive/#map-join","title":"Map Join","text":"<p>Map Join \u901a\u5e38\u7528\u4e8e\u4e00\u4e2a\u5f88\u5c0f\u7684\u8868\u548c\u4e00\u4e2a\u5927\u8868\u8fdb\u884c join \u7684\u573a\u666f\uff0c\u5177\u4f53\u5c0f\u8868\u6709\u591a\u5c0f\uff0c\u7531\u53c2\u6570 <code>hive.mapjoin.smalltable.filesize</code> \u6765\u51b3\u5b9a\uff0c\u8be5\u53c2\u6570\u8868\u793a\u5c0f\u8868\u7684\u603b\u5927\u5c0f\u3002</p> <p></p> <p>Map Join \u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u53ea\u6709 map \u9636\u6bb5\u7684 Job \u5b8c\u6210\u4e00\u4e2a join \u64cd\u4f5c\u3002\u5176\u9002\u7528\u573a\u666f\u4e3a\u5927\u8868 join \u5c0f\u8868\u3002\u82e5\u67d0 join \u64cd\u4f5c\u6ee1\u8db3\u8981\u6c42\uff0c\u5219\u7b2c\u4e00\u4e2a Job \u4f1a\u8bfb\u53d6\u5c0f\u8868\u6570\u636e\uff0c\u5c06\u5176\u5236\u4f5c\u4e3a hash table\uff0c\u5e76\u4e0a\u4f20\u81f3 Hadoop \u5206\u5e03\u5f0f\u7f13\u5b58 (\u672c\u8d28\u4e0a\u662f\u4e0a\u4f20\u81f3 HDFS)\u3002\u7b2c\u4e8c\u4e2a Job \u4f1a\u5148\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u8bfb\u53d6\u5c0f\u8868\u6570\u636e\uff0c\u5e76\u7f13\u5b58\u5728 MapTask \u7684\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u626b\u63cf\u5927\u8868\u6570\u636e\uff0c\u8fd9\u6837\u5728 map \u7aef\u5373\u53ef\u5b8c\u6210\u5173\u8054\u64cd\u4f5c\u3002</p> <ul> <li> <p>Job1\uff08\u672c\u5730\u4efb\u52a1\uff09\uff1a\u8bfb\u53d6\u5c0f\u8868\u6570\u636e\u3001\u5236\u4f5c\u54c8\u5e0c\u8868\u3001\u4e0a\u4f20\u81f3\u5206\u5e03\u5f0f\u7f13\u5b58</p> </li> <li> <p>Job2\uff1a\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u8bfb\u53d6\u54c8\u5e0c\u8868\u3001\u52a0\u8f7d\u81f3\u5185\u5b58\u3001\u5b8c\u6210 join</p> </li> </ul> <p>\u89e6\u53d1 Map Join\uff1a</p> <ul> <li>\u5728 SQL \u8bed\u53e5\u4e2d\u589e\u52a0 hint \u63d0\u793a\uff08\u8fc7\u65f6\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\uff09</li> <li>Hive \u4f18\u5316\u5668\u6839\u636e\u8868\u7684\u6570\u636e\u91cf\u5927\u5c0f\u81ea\u52a8\u89e6\u53d1</li> </ul> <p>hint \u63d0\u793a\uff1a\u5c06 ta \u4f5c\u4e3a\u5c0f\u8868\u7f13\u5b58</p> <pre><code>select /*+ mapjoin(ta) */\n    ta.id,\n    tb.id\nfrom table_a ta\njoin table_b tb\non ta.id=tb.id;\n</code></pre> <p>\u81ea\u52a8\u89e6\u53d1\uff1a</p> <p>Hive \u5728\u7f16\u8bd1 SQL \u8bed\u53e5\u9636\u6bb5\uff0c\u8d77\u521d\u6240\u6709\u7684 Join \u64cd\u4f5c\u5747\u91c7\u7528 Common Join \u7b97\u6cd5\u5b9e\u73b0\u3002</p> <p>\u4e4b\u540e\u5728\u7269\u7406\u4f18\u5316\u9636\u6bb5\uff0cHive \u4f1a\u6839\u636e\u6bcf\u4e2a Common Join \u4efb\u52a1\u6240\u9700\u8868\u7684\u5927\u5c0f\u5224\u65ad\u8be5 Common Join \u4efb\u52a1\u662f\u5426\u80fd\u591f\u8f6c\u6362\u4e3a Map Join \u4efb\u52a1\uff0c\u82e5\u6ee1\u8db3\u8981\u6c42\uff0c\u4fbf\u5c06 Common Join \u4efb\u52a1\u81ea\u52a8\u8f6c\u6362\u4e3a Map Join \u4efb\u52a1\u3002\u5224\u65ad\u6807\u51c6\u4e3a\u5c0f\u8868\u5927\u5c0f\u4e0e\u7528\u6237\u8bbe\u7f6e\u7684\u9608\u503c\uff08MapTask \u5185\u5b58\uff09\u6bd4\u8f83\u3002</p> <p>\u4f46\u6709\u4e9b Common Join \u4efb\u52a1\u6240\u9700\u7684\u8868\u5927\u5c0f\uff0c\u5728 SQL \u7684\u7f16\u8bd1\u9636\u6bb5\u662f\u672a\u77e5\u7684\uff08\u4f8b\u5982\u5148\u8fdb\u884c\u4e00\u4e2a\u5206\u7ec4\u805a\u5408\uff0c\u4e4b\u540e\u518d\u548c\u4e00\u5f20\u8868\u8fdb\u884c Join \u64cd\u4f5c\uff09\uff0c\u6240\u4ee5\u8fd9\u79cd Common Join \u4efb\u52a1\u662f\u5426\u80fd\u8f6c\u6362\u6210 Map Join \u4efb\u52a1\u5728\u7f16\u8bd1\u9636\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\u3002</p> <p>\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0cHive \u4f1a\u5728\u7f16\u8bd1\u9636\u6bb5\u751f\u6210\u4e00\u4e2a\u6761\u4ef6\u4efb\u52a1 (Conditional Task)\uff0c\u5176\u4e0b\u4f1a\u5305\u542b\u4e00\u4e2a\u8ba1\u5212\u5217\u8868\uff0c\u8ba1\u5212\u5217\u8868\u4e2d\u5305\u542b\u8f6c\u6362\u540e\u7684 Map Join \u4efb\u52a1\u4ee5\u53ca\u539f\u6709\u7684 Common Join \u4efb\u52a1\u3002 \u6700\u7ec8\u5177\u4f53\u91c7\u7528\u54ea\u4e2a\u8ba1\u5212\uff0c\u662f\u5728\u8fd0\u884c\u65f6\u51b3\u5b9a\u7684\u3002\u5927\u81f4\u601d\u8def\u5982\u4e0b\u56fe\u6240\u793a:</p> <p>\u5047\u8bbe\u6211\u4eec\u6709 A \u548c B \u4e24\u5f20\u8868\uff0c\u4e24\u5f20\u8868\u7684\u5927\u5c0f\u90fd\u672a\u77e5\uff0c\u90a3\u4e48\u6b64\u65f6 Map Join \u6709 2 \u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u7f13\u5b58 A \u8868\uff0c\u626b\u63cf B \u8868</li> <li>\u7f13\u5b58 B \u8868\uff0c\u626b\u63cf A \u8868</li> </ul> <p>\u56e0\u6b64\u4f1a\u751f\u6210\u591a\u79cd\u6267\u884c\u8ba1\u5212\u3002</p> <p></p>"},{"location":"Hive/1.%20Hive/#bucket-map-join","title":"Bucket Map Join","text":"<p>Bucket Map Join \u662f\u5bf9 Map Join \u7684\u6539\u8fdb\uff0c\u5176\u6253\u7834\u4e86 Map Join \u53ea\u9002\u7528\u4e8e\u5927\u8868 join \u5c0f\u8868\u7684\u9650\u5236\uff0c\u53ef\u7528\u4e8e\u5927\u8868 join \u5927\u8868\u7684\u573a\u666f\u3002</p> <p>\u5206\u6876\u7684\u539f\u7406\uff1a\u5bf9\u5206\u6876\u5b57\u6bb5\u8fdb\u884c hash partition\uff0c\u62c6\u5206\u4e3a\u82e5\u5e72\u4e2a\u6587\u4ef6\u3002</p> <p>Bucket Map Join \u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u82e5\u80fd\u4fdd\u8bc1\u53c2\u4e0e join \u7684\u8868\u5747\u4e3a\u5206\u6876\u8868\uff0c\u4e14\u5173\u8054\u5b57\u6bb5\u4e3a\u5206\u6876\u5b57\u6bb5\uff0c\u4e14\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u5206\u6876\u6570\u91cf\u662f\u53e6\u5916\u4e00\u5f20\u8868\u5206\u6876\u6570\u91cf\u7684\u6574\u6570\u500d\uff0c\u5c31\u80fd\u4fdd\u8bc1\u53c2\u4e0e join \u7684\u4e24\u5f20\u8868\u7684\u5206\u6876\u4e4b\u95f4\u5177\u6709\u660e\u786e\u7684\u5173\u8054\u5173\u7cfb\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5728\u4e24\u8868\u7684\u5206\u6876\u95f4\u8fdb\u884c Map Join \u64cd\u4f5c\u4e86\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u7b2c\u4e8c\u4e2a Job \u7684 Map \u7aef\u5c31\u65e0\u9700\u518d\u7f13\u5b58\u5c0f\u8868\u7684\u5168\u8868\u6570\u636e\u4e86\uff0c\u800c\u53ea\u9700\u7f13\u5b58\u5176\u6240\u9700\u7684\u5206\u6876\u5373\u53ef\u3002</p> <p></p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u56fe\uff1a</p> <p>\u5bf9\u4e8e Table B \u6765\u8bf4\uff0c\u7531\u4e8e\u6709 2 \u4e2a\u6876\uff0c\u56e0\u6b64\u6240\u6709 <code>hashcode % 2 == 0</code> \u7684 record \u90fd\u4f1a\u8fdb\u5165 Bucket B-0\uff0c\u6240\u6709 <code>hashcode % 2 == 1</code> \u7684 record \u90fd\u4f1a\u8fdb\u5165 Bucket B-1\u3002</p> <p>\u5bf9\u4e8e Table A \u6765\u8bf4\uff0c\u7531\u4e8e\u6709 4 \u4e2a\u6876\uff0c\u56e0\u6b64\u6240\u6709 <code>hashcode % 4 == 0</code> \u7684 record \u90fd\u4f1a\u8fdb\u5165 Bucket A-0\u3002\u6240\u6709 <code>hashcode % 4 == 2</code> \u7684 record \u90fd\u4f1a\u8fdb\u5165 Bucket A-2\u3002Bucket A-0 \u548c Bucket A-2 \u4e2d\u7684\u8fd9\u4e9b record \u5c31\u5bf9\u5e94\u7740 Bucket B-0 \u4e2d\u7684 record\u3002\u540c\u7406\uff0cBucket A-1 \u548c Bucket A-3 \u4e2d\u7684\u6240\u6709 record \u5c31\u5bf9\u5e94\u7740 Bucket B-1 \u4e2d\u7684 record\u3002</p> <p>\u5f53\u7136\uff0c\u6700\u7b80\u5355\u7684\u60c5\u51b5\u5c31\u662f\u4e24\u5f20\u8868\u7684\u6876\u6570\u76f8\u540c\u3002</p> <p>\u4e4b\u540e\u5c31\u548c Map Join \u7684\u64cd\u4f5c\u4e00\u81f4\uff1a</p> <ul> <li>Job1\uff1a\u5148\u7531\u672c\u5730 Map \u4efb\u52a1\u5c06\u76f8\u5bf9\u5c0f\u4e00\u70b9\u7684\u8868\u7684\u6bcf\u4e2a\u6876\u5404\u5236\u4f5c\u4e00\u5f20\u54c8\u5e0c\u8868\uff0c\u5c06\u6240\u6709\u54c8\u5e0c\u8868\u4e0a\u4f20\u81f3\u5206\u5e03\u5f0f\u7f13\u5b58</li> <li>Job2\uff1a\u6309\u7167 BucketInputFormat \u8bfb\u53d6\u5927\u8868\u6570\u636e\uff0c\u4e00\u4e2a\u6876\u4e00\u4e2a\u5207\u7247\uff0c\u6bcf\u4e00\u4e2a Mapper \u53ea\u9700\u8981\u5904\u7406\u5927\u8868\u4e2d\u7684\u4e00\u4e2a\u6876\u5373\u53ef\u3002\u540c\u65f6\uff0c\u6839\u636e\u6876\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bcf\u4e2a Mapper \u53ea\u9700\u8981\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u8bfb\u53d6\u81ea\u5df1\u9700\u8981\u7684\u5c0f\u8868\u7684\u6876\u7684\u54c8\u5e0c\u8868\u5373\u53ef\u3002\u4f8b\u5982\uff0cMapper1 \u88ab\u5206\u5230\u4e86 Bucket A-0\uff0c\u56e0\u6b64\uff0cMapper1 \u53ea\u9700\u8981\u53bb\u5206\u5e03\u5f0f\u7f13\u5b58\u8bfb\u53d6 Bucket B-0 \u5373\u53ef\u3002</li> </ul>"},{"location":"Hive/1.%20Hive/#sort-merge-bucket-map-join","title":"Sort Merge Bucket Map Join","text":"<p>Sort Merge Bucket Map Join(\u7b80\u79f0 SMB Map Join) \u57fa\u4e8e Bucket Map Join\u3002SMB Map Join \u8981\u6c42\uff0c\u53c2\u4e0e join \u7684\u8868\u5747\u4e3a\u5206\u6876\u8868\uff0c\u4e14\u9700\u4fdd\u8bc1\u5206\u6876\u5185\u7684\u6570\u636e\u662f\u6709\u5e8f\u7684\uff0c\u4e14\u5206\u6876\u5b57\u6bb5\u3001 \u6392\u5e8f\u5b57\u6bb5\u548c\u5173\u8054\u5b57\u6bb5\u4e3a\u76f8\u540c\u5b57\u6bb5\uff0c\u4e14\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u5206\u6876\u6570\u91cf\u662f\u53e6\u5916\u4e00\u5f20\u8868\u5206\u6876\u6570\u91cf\u7684\u6574\u6570\u500d\u3002</p> <p>SMB Map Join \u540c Bucket Join \u4e00\u6837\uff0c\u540c\u6837\u662f\u5229\u7528\u4e24\u8868\u5404\u5206\u6876\u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb\uff0c\u5728\u5206\u6876\u4e4b\u95f4\u8fdb\u884c join \u64cd\u4f5c\uff0c\u4e0d\u540c\u7684\u662f\u5206\u6876\u4e4b\u95f4\u7684 join \u64cd\u4f5c\u7684\u5b9e\u73b0\u539f\u7406\u3002Bucket Map Join\uff0c\u4e24\u4e2a\u5206\u6876\u4e4b\u95f4\u7684 join \u5b9e\u73b0\u539f\u7406\u4e3a Hash Join \u7b97\u6cd5\uff1b\u800c SMB Map Join\uff0c\u4e24\u4e2a\u5206\u6876\u4e4b\u95f4\u7684 join \u5b9e\u73b0\u539f\u7406\u4e3a Sort Merge Join \u7b97\u6cd5\u3002</p> <p>Hash Join \u548c Sort Merge Join \u5747\u4e3a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u5e38\u89c1\u7684 Join \u5b9e\u73b0\u7b97\u6cd5\u3002Hash Join \u7684\u539f\u7406\u76f8\u5bf9\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u53c2\u4e0e join \u7684\u4e00\u5f20\u8868\u6784\u5efa hash table\uff0c\u7136\u540e\u626b\u63cf\u53e6\u5916\u4e00\u5f20\u8868\uff0c \u7136\u540e\u8fdb\u884c\u9010\u884c\u5339\u914d\u3002Sort Merge Join \u9700\u8981\u5728\u4e24\u5f20\u6309\u7167\u5173\u8054\u5b57\u6bb5\u6392\u597d\u5e8f\u7684\u8868\u4e2d\u8fdb\u884c\uff0c\u5176\u539f\u7406\u5982\u56fe\u6240\u793a\uff1a</p> <p></p> <p>SMB Map Join VS Bucket Map Join</p> <ul> <li>\u4e0d\u9700\u8981\u5236\u4f5c\u54c8\u5e0c\u8868</li> <li>\u4e0d\u9700\u8981\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u54c8\u5e0c\u8868\uff08\u4e00\u4e2a\u6876\uff09\uff0c\u56e0\u6b64\u5bf9\u6876\u7684\u5927\u5c0f\u6ca1\u6709\u8981\u6c42</li> </ul> <p>Hive \u4e2d\u7684 SMB Map Join \u5c31\u662f\u5bf9\u4e24\u4e2a\u5206\u6876\u7684\u6570\u636e\u6309\u7167\u4e0a\u8ff0\u601d\u8def\u8fdb\u884c Join \u64cd\u4f5c\u3002\u53ef\u4ee5\u770b\u51fa\uff0cSMB Map Join \u4e0e Bucket Map Join \u76f8\u6bd4\uff0c\u5728\u8fdb\u884c Join \u64cd\u4f5c\u65f6\uff0cMap \u7aef\u662f\u65e0\u9700\u5bf9\u6574\u4e2a Bucket \u6784\u5efa hash table\uff0c\u4e5f\u65e0\u9700\u5728 Map \u7aef\u7f13\u5b58\u6574\u4e2a Bucket \u6570\u636e\u7684\uff0c\u6bcf\u4e2a Mapper \u53ea\u9700\u6309\u987a\u5e8f\u9010\u4e2a key \u8bfb\u53d6\u4e24\u4e2a\u5206\u6876\u7684\u6570\u636e\u8fdb\u884c join \u5373\u53ef\u3002</p> <p>\u8bbe\u7f6e\uff1a</p> <pre><code>set hive.auto.convert.sortmerge.join=true;\nset hive.optimize.bucketmapjoin=true;\nset hive.optimize.bucketmapjoin.sortedmerge=true;\n</code></pre>"},{"location":"Hive/1.%20Hive/#_9","title":"\u81ea\u5b9a\u4e49\u51fd\u6570","text":"<p>Hive \u81ea\u5b9a\u4e49\u51fd\u6570\u5305\u62ec\u4e09\u79cd UDF\u3001UDAF\u3001UDTF\u3002</p> <ul> <li>UDF(User-Defined-Function)\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u4e00\u5bf9\u4e00\u7684\u8f93\u5165\u8f93\u51fa\u3002</li> <li>UDAF(User-Defined Aggregation Funcation)\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u805a\u5408\u51fd\u6570\uff0c\u591a\u8fdb\u4e00\u51fa\u3002 \u4f8b\u5982\uff1acount/max/min\u3002</li> <li>UDTF(User-Defined Table-Generating Functions)\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u8868\u751f\u6210\u51fd\u6570\uff0c\u4e00\u5bf9\u591a\u7684\u8f93\u5165\u8f93\u51fa\u3002\u4f8b\u5982\uff1alateral view explode\u3002</li> </ul> <p>\u4f7f\u7528\u65b9\u5f0f\uff1a</p> <p>\u5728 HIVE \u4f1a\u8bdd\u4e2d add \u81ea\u5b9a\u4e49\u51fd\u6570\u7684 jar \u6587\u4ef6\uff0c\u7136\u540e\u521b\u5efa function \u7ee7\u800c\u4f7f\u7528\u51fd\u6570\u3002\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u7f16\u5199\u81ea\u5b9a\u4e49\u51fd\u6570</li> <li>\u6253\u5305\u4e0a\u4f20\u5230\u96c6\u7fa4\u673a\u5668\u4e2d</li> <li>\u8fdb\u5165 hive \u5ba2\u6237\u7aef\uff0c\u6dfb\u52a0 jar \u5305\uff1a<code>hive&gt; add jar /home/hive_udf.jar</code></li> <li>\u521b\u5efa\u4e34\u65f6\u51fd\u6570\uff1a <code>hive&gt; create temporary function getLen as 'com.anson.GetLength';</code></li> <li>\u4f7f\u7528\u4e34\u65f6\u51fd\u6570\uff1a <code>hive&gt; select getLen('1234567');</code></li> <li>\u9500\u6bc1\u4e34\u65f6\u51fd\u6570\uff1a<code>hive&gt; drop temporary function getLen;</code></li> </ol>"},{"location":"Hive/1.%20Hive/#_10","title":"\u884c\u5f0f\u5b58\u50a8\u548c\u5217\u5f0f\u5b58\u50a8","text":"<p>\u884c\u5f0f\u5b58\u50a8\u7684\u7279\u70b9\uff1a</p> <p>\u67e5\u8be2\u6ee1\u8db3\u6761\u4ef6\u7684\u4e00\u6574\u884c\u6570\u636e\u7684\u65f6\u5019\uff0c\u5217\u5b58\u50a8\u9700\u8981\u53bb\u6bcf\u4e2a\u805a\u96c6\u7684\u5b57\u6bb5\u627e\u5230\u5bf9\u5e94\u7684\u6bcf\u4e2a\u5217\u7684\u503c\uff0c\u884c\u5b58\u50a8\u53ea\u9700\u8981\u627e\u5230\u5176\u4e2d\u4e00\u4e2a\u503c\uff0c\u5176\u4f59\u7684\u503c\u90fd\u5728\u76f8\u90bb\u5730\u65b9\uff0c\u6240\u4ee5\u6b64\u65f6\u884c\u5b58\u50a8\u67e5\u8be2\u7684\u901f\u5ea6\u66f4\u5feb\u3002</p> <p>\u4f18\u70b9\uff1a\u5177\u5907\u5feb\u901f\u6570\u636e\u52a0\u8f7d\u548c\u52a8\u6001\u8d1f\u8f7d\u7684\u9ad8\u9002\u5e94\u80fd\u529b\uff0c\u56e0\u4e3a\u884c\u5b58\u50a8\u4fdd\u8bc1\u4e86\u76f8\u540c\u8bb0\u5f55\u7684\u6240\u6709\u57df\u90fd\u5728\u540c\u4e00\u4e2a\u96c6\u7fa4\u8282\u70b9\u3002</p> <p>\u7f3a\u70b9\uff1a\u4f46\u662f\u5b83\u4e0d\u592a\u6ee1\u8db3\u5feb\u901f\u7684\u67e5\u8be2\u54cd\u5e94\u65f6\u95f4\u7684\u8981\u6c42\uff0c\u7279\u522b\u662f\u5728\u5f53\u67e5\u8be2\u4ec5\u4ec5\u9488\u5bf9\u6240\u6709\u5217\u4e2d\u7684\u5c11\u6570\u51e0\u5217\u65f6\uff0c\u5b83\u5c31\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4f4d\u5230\u6240\u9700\u5217\u800c\u8df3\u8fc7\u4e0d\u9700\u8981\u7684\u5217\uff0c\u7531\u4e8e\u6df7\u5408\u7740\u4e0d\u540c\u6570\u636e\u503c\u7684\u5217\uff0c\u884c\u5b58\u50a8\u4e0d\u6613\u83b7\u5f97\u4e00\u4e2a\u6781\u9ad8\u7684\u538b\u7f29\u6bd4\uff08\u4e00\u884c\u6570\u636e\u901a\u5e38\u5305\u542b\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff09\u3002</p> <p>\u884c\u5b58\u50a8\u603b\u7ed3</p> <p>\u9700\u8981\u67e5\u8be2\u4e00\u6574\u884c\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u884c\u5b58\u50a8\u7531\u4e8e\u4e00\u884c\u6570\u636e\u90fd\u805a\u96c6\u5728\u4e00\u5757\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u51b5\u4e0b\u67e5\u8be2\u66f4\u5feb\u3002\u800c\u5982\u679c\u4ec5\u4ec5\u67e5\u8be2\u5c11\u6570\u51e0\u5217\u6570\u636e\u65f6\uff0c\u5219\u67e5\u8be2\u6548\u7387\u4e0d\u9ad8\u3002\u540c\u65f6\uff0c\u4e00\u884c\u6570\u636e\u901a\u5e38\u5305\u542b\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u96be\u4ee5\u83b7\u5f97\u7406\u60f3\u7684\u538b\u7f29\u6548\u679c\u3002</p> <p>\u5217\u5f0f\u5b58\u50a8\u7684\u7279\u70b9\uff1a</p> <p>\u56e0\u4e3a\u6bcf\u4e2a\u5b57\u6bb5\u7684\u6570\u636e\u805a\u96c6\u5b58\u50a8\uff0c\u5728\u67e5\u8be2\u53ea\u9700\u8981\u5c11\u6570\u51e0\u4e2a\u5b57\u6bb5\u7684\u65f6\u5019\uff0c\u80fd\u5927\u5927\u51cf\u5c11\u8bfb\u53d6\u7684\u6570\u636e\u91cf\u3002\u540c\u65f6\u6bcf\u4e2a\u5b57\u6bb5\u7684\u6570\u636e\u7c7b\u578b\u4e00\u5b9a\u662f\u76f8\u540c\u7684\uff0c\u5217\u5f0f\u5b58\u50a8\u53ef\u4ee5\u9488\u5bf9\u6027\u7684\u8bbe\u8ba1\u66f4\u597d\u7684\u8bbe\u8ba1\u538b\u7f29\u7b97\u6cd5\u3002</p> <p>\u4f18\u70b9\u662f\uff1a\u8fd9\u79cd\u7ed3\u6784\u4f7f\u5f97\u5728\u67e5\u8be2\u65f6\u80fd\u591f\u76f4\u63a5\u8bfb\u53d6\u9700\u8981\u7684\u5217\u800c\u907f\u514d\u4e0d\u5fc5\u8981\u5217\u7684\u8bfb\u53d6\uff0c\u5e76\u4e14\u5bf9\u4e8e\u76f8\u4f3c\u6570\u636e\u4e5f\u53ef\u4ee5\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u538b\u7f29\u6bd4\u3002</p> <p>\u7f3a\u70b9\u662f\uff1a\u5b83\u5e76\u4e0d\u80fd\u63d0\u4f9b\u57fa\u4e8e Hadoop \u7cfb\u7edf\u7684\u5feb\u901f\u67e5\u8be2\u5904\u7406\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u540c\u4e00\u8bb0\u5f55\u7684\u6240\u6709\u5217\u90fd\u5b58\u50a8\u5728\u540c\u4e00\u96c6\u7fa4\u8282\u70b9\u4e4b\u4e0a\uff0c\u4e5f\u4e0d\u9002\u5e94\u9ad8\u5ea6\u52a8\u6001\u7684\u6570\u636e\u8d1f\u8f7d\u6a21\u5f0f\u3002</p> <p>Hive \u4e2d\u5e38\u7528\u7684\u5b58\u50a8\u683c\u5f0f\u6709 TEXTFILE \u3001SEQUENCEFILE\u3001AVRO\u3001RCFILE\u3001ORCFILE\u3001 PARQUET \u7b49\uff0c\u5176\u4e2d TEXTFILE \u3001SEQUENCEFILE \u548c AVRO \u662f\u884c\u5f0f\u5b58\u50a8\uff0cRCFILE\u3001ORCFILE\u3001 PARQUET \u662f\u5217\u5f0f\u5b58\u50a8\u3002\u5b58\u50a8\u683c\u5f0f\u5373\u662f\u6307\u8868\u7684\u6570\u636e\u662f\u5982\u4f55\u5728 HDFS \u4e0a\u7ec4\u7ec7\u6392\u5217\u7684\u3002</p>"},{"location":"Hive/1.%20Hive/#hive_10","title":"Hive \u4e2d\u7684\u5b58\u50a8\u683c\u5f0f","text":"<p>Apache Hive \u652f\u6301 Apache Hadoop \u4e2d\u4f7f\u7528\u7684\u51e0\u79cd\u719f\u6089\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5982 TextFile\uff0cRCFile\uff0cSequenceFile\uff0cAVRO\uff0cORC \u548c Parquet \u683c\u5f0f\u3002\u5728\u5efa\u8868\u65f6\u4f7f\u7528 STORED AS (TextFile|RCFile|SequenceFile|AVRO|ORC|Parquet) \u6765\u6307\u5b9a\u5b58\u50a8\u683c\u5f0f\u3002</p> <p>TextFile \u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u6761\u8bb0\u5f55\uff0c\u6bcf\u884c\u90fd\u4ee5\u6362\u884c\u7b26\uff08\\n\uff09\u7ed3\u5c3e\u3002\u6570\u636e\u4e0d\u505a\u538b\u7f29\uff0c\u78c1\u76d8\u5f00\u9500\u5927\uff0c\u6570\u636e\u89e3\u6790\u5f00\u9500\u5927\u3002\u53ef\u7ed3\u5408 Gzip\u3001Bzip2 \u4f7f\u7528\uff08\u7cfb\u7edf\u81ea\u52a8\u68c0\u67e5\uff0c\u6267\u884c\u67e5\u8be2\u65f6\u81ea\u52a8\u89e3\u538b\uff09\uff0c\u4f46\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0cHive \u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u5207\u5206\uff0c\u4ece\u800c\u65e0\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u5e76\u884c\u64cd\u4f5c\u3002</p> <p>SequenceFile \u662f Hadoop API \u63d0\u4f9b\u7684\u4e00\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b83\u5c06\u6570\u636e\u4ee5 <code>&lt;key,value&gt;</code> \u7684\u5f62\u5f0f\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d\u3002\u8fd9\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\u5185\u90e8\u4f7f\u7528 Hadoop \u7684\u6807\u51c6\u7684 Writable \u63a5\u53e3\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002Hive \u4e2d\u7684 SequenceFile \u7ee7\u627f\u81ea Hadoop API \u7684 SequenceFile\uff0c\u4e0d\u8fc7\u5b83\u7684 key \u4e3a\u7a7a\uff0c \u4f7f\u7528 value \u5b58\u653e\u5b9e\u9645\u7684\u503c\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u907f\u514d MR \u5728\u8fd0\u884c map \u9636\u6bb5\u7684\u6392\u5e8f\u8fc7\u7a0b\u3002\u652f\u6301\u4e09\u79cd\u538b\u7f29\u9009\u62e9\uff1aNONE, RECORD, BLOCK\u3002Record \u538b\u7f29\u7387\u4f4e\uff0c\u4e00\u822c\u5efa\u8bae\u4f7f\u7528 BLOCK \u538b\u7f29\u3002</p> <p>RCFile \u662f\u4e00\u79cd\u884c\u5217\u5b58\u50a8\u76f8\u7ed3\u5408\u7684\u5b58\u50a8\u65b9\u5f0f\u3002\u9996\u5148\uff0c\u5176\u5c06\u6570\u636e\u6309\u884c\u5206\u5757\uff0c\u4fdd\u8bc1\u540c\u4e00\u4e2a record \u5728\u4e00\u4e2a\u5757\u4e0a\uff0c\u907f\u514d\u8bfb\u4e00\u4e2a\u8bb0\u5f55\u9700\u8981\u8bfb\u53d6\u591a\u4e2a block\u3002\u5176\u6b21\uff0c\u5757\u6570\u636e\u5217\u5f0f\u5b58\u50a8\uff0c\u6709\u5229\u4e8e\u6570\u636e\u538b\u7f29\u548c\u5feb\u901f\u7684\u5217\u5b58\u53d6\u3002</p> <p>ORC \u6587\u4ef6\u683c\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06\u6570\u636e\u5b58\u50a8\u5728 Hive \u8868\u4e2d\u7684\u9ad8\u6548\u65b9\u6cd5\u3002\u8fd9\u4e2a\u6587\u4ef6\u7cfb\u7edf\u5b9e\u9645\u4e0a\u662f\u4e3a\u4e86\u514b\u670d\u5176\u4ed6 Hive \u6587\u4ef6\u683c\u5f0f\u7684\u9650\u5236\u800c\u8bbe\u8ba1\u7684\u3002Hive \u4ece\u5927\u578b\u8868\u8bfb\u53d6\uff0c\u5199\u5165\u548c\u5904\u7406\u6570\u636e\u65f6\uff0c\u4f7f\u7528 ORC \u6587\u4ef6\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002</p> <p>Parquet \u662f\u4e00\u4e2a\u9762\u5411\u5217\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u3002Parquet \u5bf9\u4e8e\u5927\u578b\u67e5\u8be2\u7684\u7c7b\u578b\u662f\u9ad8\u6548\u7684\u3002\u5bf9\u4e8e\u626b\u63cf\u7279\u5b9a\u8868\u683c\u4e2d\u7684\u7279\u5b9a\u5217\u7684\u67e5\u8be2\uff0cParquet \u7279\u522b\u6709\u7528\u3002Parquet \u4f7f\u7528\u538b\u7f29 Snappy\uff0cgzip\uff1b\u76ee\u524d Snappy \u9ed8\u8ba4\u3002</p> <p>AVRO \u662f\u5f00\u6e90\u9879\u76ee\uff0c\u4e3a Hadoop \u63d0\u4f9b\u6570\u636e\u5e8f\u5217\u5316\u548c\u6570\u636e\u4ea4\u6362\u670d\u52a1\u3002Avro \u662f\u4e00\u79cd\u7528\u4e8e\u652f\u6301\u6570\u636e\u5bc6\u96c6\u578b\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u3002\u5b83\u7684\u6587\u4ef6\u683c\u5f0f\u66f4\u4e3a\u7d27\u51d1\uff0c\u82e5\u8981\u8bfb\u53d6\u5927\u91cf\u6570\u636e\u65f6\uff0cAvro \u80fd\u591f\u63d0\u4f9b\u66f4\u597d\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u6027\u80fd\u3002</p>"},{"location":"Hive/1.%20Hive/#rc-file","title":"RC File","text":"<p>RCFile\uff08Record Columnar File\uff09\u5b58\u50a8\u7ed3\u6784\u9075\u5faa\u7684\u662f\u300c\u5148\u6c34\u5e73\u5212\u5206\uff0c\u518d\u5782\u76f4\u5212\u5206\u300d \u7684\u8bbe\u8ba1\u7406\u5ff5\u3002RCFile \u7ed3\u5408\u4e86\u884c\u5b58\u50a8\u548c\u5217\u5b58\u50a8\u7684\u4f18\u70b9\uff1a\u9996\u5148\uff0cRCFile \u4fdd\u8bc1\u540c\u4e00\u884c\u7684\u6570\u636e\u4f4d\u4e8e\u540c\u4e00\u8282\u70b9\uff0c\u56e0\u6b64\u5143\u7ec4\u91cd\u6784\u7684\u5f00\u9500\u5f88\u4f4e\uff1b\u5176\u6b21\uff0c\u50cf\u5217\u5b58\u50a8\u4e00\u6837\uff0cRCFile \u80fd\u591f\u5229\u7528\u5217\u7ef4\u5ea6\u7684\u6570\u636e\u538b\u7f29\uff0c\u5e76\u4e14\u80fd\u8df3\u8fc7\u4e0d\u5fc5\u8981\u7684\u5217\u8bfb\u53d6\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\u662f HDFS \u5185 RCFile \u7684\u5b58\u50a8\u7ed3\u6784\u3002\u6bcf\u4e2a HDFS \u5757\u4e2d\uff0cRCFile \u4ee5\u884c\u7ec4\u4e3a\u57fa\u672c\u5355\u4f4d\u6765\u7ec4\u7ec7\u8bb0\u5f55\u3002\u5bf9\u4e8e\u4e00\u5f20\u8868\uff0c\u6240\u6709\u884c\u7ec4\u5927\u5c0f\u90fd\u76f8\u540c\u3002\u4e00\u4e2a HDFS \u5757\u4f1a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u884c\u7ec4\u3002\u4e00\u4e2a\u884c\u7ec4\u5305\u62ec\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u7b2c\u4e00\u90e8\u5206\u662f\u884c\u7ec4\u5934\u90e8\u7684\u540c\u6b65\u6807\u8bc6\uff0c\u4e3b\u8981\u7528\u4e8e\u5206\u9694 HDFS \u5757\u4e2d\u7684\u4e24\u4e2a\u8fde\u7eed\u884c\u7ec4\uff1b</li> <li>\u7b2c\u4e8c\u90e8\u5206\u662f\u884c\u7ec4\u7684\u5143\u6570\u636e\u5934\u90e8\uff0c\u7528\u4e8e\u5b58\u50a8\u884c\u7ec4\u5355\u5143\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u884c\u7ec4\u4e2d\u7684\u8bb0\u5f55\u6570\u3001\u6bcf\u4e2a\u5217\u7684\u5b57\u8282\u6570\u3001\u5217\u4e2d\u6bcf\u4e2a\u57df\u7684\u5b57\u8282\u6570\uff1b</li> <li>\u7b2c\u4e09\u90e8\u5206\u662f\u8868\u683c\u6570\u636e\u6bb5\uff0c\u5373\u5b9e\u9645\u7684\u5217\u5b58\u50a8\u6570\u636e\u3002</li> </ul> <p>\u76f8\u6bd4\u4e8e\u5176\u4ed6\u5217\u5f0f\u5b58\u50a8\u7684\u4f18\u52bf\uff1a</p> <ul> <li>\u67d0\u4e9b\u5217\u5f0f\u5b58\u50a8\u540c\u4e00\u5217\u53ef\u80fd\u5b58\u5728\u4e0d\u540c\u7684 block \u4e0a\uff0c\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0cHive \u91cd\u7ec4\u5217\u7684\u8fc7\u7a0b\u4f1a\u6d6a\u8d39\u5f88\u591a IO \u5f00\u9500\u3002\u800c RCFile \u7531\u4e8e\u76f8\u540c\u7684\u5217\u90fd\u662f\u5728\u4e00\u4e2a HDFS \u5757\u4e0a\uff0c\u6240\u4ee5 \u76f8\u5bf9\u5217\u5b58\u50a8\u800c\u8a00\u4f1a\u8282\u7701\u5f88\u591a\u8d44\u6e90\u3002</li> <li>RCFile \u91c7\u7528\u6e38\u7a0b\u7f16\u7801\uff0c\u76f8\u540c\u7684\u6570\u636e\u4e0d\u4f1a\u91cd\u590d\u5b58\u50a8\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8282\u7ea6\u4e86\u5b58\u50a8\u7a7a\u95f4\uff0c\u5c24\u5176\u662f\u5b57\u6bb5\u4e2d\u5305\u542b\u5927\u91cf\u91cd\u590d\u6570\u636e\u7684\u65f6\u5019\u3002</li> </ul> <p>\u6ce8\uff1a\u6e38\u7a0b\u7f16\u7801\u662f\u4e00\u79cd\u7b80\u5355\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u5982\u5b57\u7b26\u4e32\u300cAAABBBCCC\u300d\u53ef\u4ee5\u7528\u300c3A3B3C\u300d\u6765\u8868\u793a\u3002\u5bf9\u4e8e\u91cd\u590d\u5e76\u4e14\u8fde\u7eed\u51fa\u73b0\u7684\u6570\u636e\u538b\u7f29\u8f83\u4e3a\u6709\u6548\u3002</p> <ul> <li>RCFile \u4e0d\u652f\u6301\u4efb\u610f\u65b9\u5f0f\u7684\u6570\u636e\u5199\u64cd\u4f5c\uff0c\u4ec5\u63d0\u4f9b\u4e00\u79cd\u8ffd\u52a0\u63a5\u53e3\uff0c\u8fd9\u662f\u56e0\u4e3a\u5e95\u5c42\u7684 HDFS \u5f53\u524d\u4ec5\u4ec5\u652f\u6301\u6570\u636e\u8ffd\u52a0\u5199\u6587\u4ef6\u5c3e\u90e8\u3002</li> <li>\u5f53\u5904\u7406\u4e00\u4e2a\u884c\u7ec4\u65f6\uff0cRCFile \u65e0\u9700\u5168\u90e8\u8bfb\u53d6\u884c\u7ec4\u7684\u5168\u90e8\u5185\u5bb9\u5230\u5185\u5b58\u3002\u76f8\u53cd\uff0c\u5b83\u4ec5\u4ec5\u8bfb\u5143\u6570\u636e\u5934\u90e8\u548c\u7ed9\u5b9a\u67e5\u8be2\u9700\u8981\u7684\u5217\u3002\u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u5fc5\u8981\u7684\u5217\u4ee5\u83b7\u5f97\u5217\u5b58\u50a8\u7684 I/O \u4f18\u52bf\u3002\u4f8b\u5982\uff1a<code>select c from table where a &gt; 1</code>\u3002</li> </ul>"},{"location":"Hive/1.%20Hive/#orc-file","title":"ORC File","text":"<p>ORC File\uff0c\u5b83\u7684\u5168\u540d\u662f Optimized Row Columnar (ORC) file\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9 RCFile \u505a\u4e86\u4e00\u4e9b\u4f18\u5316\u3002\u8fd0\u7528 ORC File \u53ef\u4ee5\u63d0\u9ad8 Hive \u7684\u8bfb\u3001\u5199\u4ee5\u53ca\u5904\u7406\u6570\u636e\u7684\u6027\u80fd\u3002</p> <p>\u548c RCFile \u683c\u5f0f\u76f8\u6bd4\uff0cORC File \u683c\u5f0f\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a</p> <ul> <li>\u6bcf\u4e2a task \u53ea\u8f93\u51fa\u5355\u4e2a\u6587\u4ef6\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11 NameNode \u7684\u8d1f\u8f7d</li> <li>\u652f\u6301\u5404\u79cd\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a datetime, decimal, \u4ee5\u53ca\u4e00\u4e9b\u590d\u6742\u7c7b\u578b (struct, list, map, and union)</li> <li>\u5728\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684\u7d22\u5f15\u6570\u636e</li> <li>\u57fa\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u5757\u6a21\u5f0f\u538b\u7f29\uff1ainteger \u7c7b\u578b\u7684\u5217\u7528\u6e38\u7a0b\u7f16\u7801 (run-length encoding)\uff1bString \u7c7b\u578b\u7684\u5217\u7528\u5b57\u5178\u7f16\u7801</li> </ul> <p>ORC File \u5305\u542b\u4e00\u7ec4\u7ec4\u7684\u884c\u6570\u636e\uff0c\u79f0\u4e3a stripe\uff0c\u9664\u6b64\u4e4b\u5916\uff0cORC File \u7684 file footer \u8fd8\u5305\u542b\u4e00\u4e9b\u989d\u5916\u7684\u8f85\u52a9\u4fe1\u606f\u3002\u5728 ORC File \u6587\u4ef6\u7684\u6700\u540e\uff0c\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a postscript \u7684\u533a\uff0c\u5b83\u4e3b\u8981\u662f\u7528\u6765\u5b58\u50a8\u538b\u7f29\u53c2\u6570\u53ca\u538b\u7f29\u9875\u811a\u7684\u5927\u5c0f\u3002 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a stripe \u7684\u5927\u5c0f\u4e3a 250MB\u3002\u5927\u5c3a\u5bf8\u7684 stripe \u4f7f\u5f97\u4ece HDFS \u8bfb\u6570\u636e\u66f4\u9ad8\u6548\u3002</p> <p></p> <p></p> <p>Index data \u5305\u542b\u6bcf\u5217\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u4ee5\u53ca\u6bcf\u5217\u6240\u5728\u7684\u884c\u3002\u884c\u7d22\u5f15\u91cc\u9762\u63d0\u4f9b\u4e86\u504f\u79fb\u91cf\uff0c\u5b83\u53ef\u4ee5\u8df3\u5230\u6b63\u786e\u7684\u538b\u7f29\u5757\u4f4d\u7f6e\u3002\u5177\u6709\u76f8\u5bf9\u9891\u7e41\u7684\u884c\u7d22\u5f15\uff0c\u4f7f\u5f97\u5728 stripe \u4e2d\u5feb\u901f\u8bfb\u53d6\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8df3\u8fc7\u5f88\u591a\u884c\uff0c\u5c3d\u7ba1\u8fd9\u4e2a stripe \u7684\u5927\u5c0f\u5f88\u5927\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u53ef\u4ee5\u8df3\u8fc7 10000 \u884c\u3002\u62e5\u6709\u901a\u8fc7\u8fc7\u6ee4\u8c13\u8bcd\u800c\u8df3\u8fc7\u5927\u91cf\u7684\u884c\u7684\u80fd\u529b\u3002</p> <ul> <li>index data\uff1a\u6bcf\u9694\u4e00\u4e07\u884c\u7684\u7a00\u758f\u7d22\u5f15</li> <li>row data\uff1a\u5b9e\u9645\u6570\u636e</li> <li>stripe footer\uff1a\u6570\u636e\u7684\u957f\u5ea6\uff0c\u7c7b\u578b\u7b49\u4fe1\u606f</li> <li>file footer\uff1a\u8bb0\u5f55\u4e86\u5404\u4e2a stripe \u7684\u4fe1\u606f\uff0c\u6bcf\u4e2a stripe \u4e2d\u6709\u591a\u5c11\u884c\uff0c\u4ee5\u53ca\u6bcf\u5217\u7684\u6570\u636e\u7c7b\u578b\u3002\u5f53\u7136\uff0c\u5b83\u91cc\u9762\u8fd8\u5305\u542b\u4e86\u5217\u7ea7\u522b\u7684\u4e00\u4e9b\u805a\u5408\u7684\u7ed3\u679c\uff0c \u6bd4\u5982\uff1acount, min, max, and sum</li> <li>postscript\uff1a\u8bb0\u5f55\u4e86 file footer \u7684\u957f\u5ea6</li> </ul> <p>\u4f7f\u7528 ORC File\uff1a</p> <pre><code>CREATE TABLE ... STORED AS ORC\nALTER TABLE ... [PARTITION partition_spec] SET FILEFORMAT ORC\nSET hive.default.fileformat=Orc\n</code></pre> <pre><code>create table Addresses ( name string, street string, city string, state string, zip int )\nstored as orc tblproperties (\"orc.compress\"=\"NONE\")\n</code></pre>"},{"location":"Hive/1.%20Hive/#parquet","title":"Parquet","text":"<p>\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u4f7f\u7528\u6570\u636e\u6a21\u578b\u901a\u5e38\u90fd\u662f\u6241\u5e73\u5f0f\u7684\uff0c\u4f46\u662f\u5728\u5927\u6570\u636e\u73af\u5883\u4e0b\uff0c\u901a\u5e38\u6570\u636e\u7684\u6765\u6e90\u662f\u670d\u52a1\u7aef\u7684\u57cb\u70b9\u6570\u636e\uff0c\u5f88\u53ef\u80fd\u9700\u8981\u628a\u7a0b\u5e8f\u4e2d\u7684\u67d0\u4e9b\u5bf9\u8c61\u5185\u5bb9\u4f5c\u4e3a\u8f93\u51fa\u7684\u4e00\u90e8\u5206\uff0c\u800c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u53ef\u80fd\u662f\u5d4c\u5957\u7684\uff0c\u6240\u4ee5\u5982\u679c\u80fd\u591f\u539f\u751f\u7684\u652f\u6301\u8fd9\u79cd\u6570\u636e\uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u989d\u5916\u7684\u89e3\u6790\u4fbf\u80fd\u83b7\u5f97\u60f3\u8981\u7684\u7ed3\u679c\u3002</p> <p>Parquet \u7684\u7075\u611f\u6765\u81ea\u4e8e 2010 \u5e74 Google \u53d1\u8868\u7684 Dremel \u8bba\u6587\uff0c\u6587\u4e2d\u4ecb\u7ecd\u4e86\u4e00\u79cd\u652f\u6301\u5d4c\u5957\u7ed3\u6784\u7684\u5b58\u50a8\u683c\u5f0f\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u5217\u5f0f\u5b58\u50a8\u7684\u65b9\u5f0f\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002Parquet \u4ec5\u4ec5\u662f\u4e00\u79cd\u5b58\u50a8\u683c\u5f0f\uff0c\u5b83\u662f\u8bed\u8a00\u3001\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u548c\u4efb\u4f55\u4e00\u79cd\u6570\u636e\u5904\u7406\u6846\u67b6\u7ed1\u5b9a\u3002\u8fd9\u4e5f\u662f parquet \u76f8\u8f83\u4e8e ORC \u7684\u4ec5\u6709\u4f18\u52bf\uff1a\u652f\u6301\u5d4c\u5957\u7ed3\u6784\u3002Parquet \u6ca1\u6709\u592a\u591a\u5176\u4ed6\u53ef\u5708\u53ef\u70b9\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u4ed6\u4e0d\u652f\u6301 update \u64cd\u4f5c(\u6570\u636e\u5199\u6210\u540e\u4e0d\u53ef\u4fee\u6539)\uff0c\u4e0d\u652f\u6301 ACID \u7b49\u3002</p> <p>Parquet \u6587\u4ef6\u662f\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u7684\uff0c\u6587\u4ef6\u4e2d\u5305\u62ec\u8be5\u6587\u4ef6\u7684\u6570\u636e\u548c\u5143\u6570\u636e\u3002</p> <p></p> <p>\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a Parquet \u6587\u4ef6\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u6587\u4ef6\u7684\u9996\u5c3e\u90fd\u662f\u8be5\u6587\u4ef6\u7684 Magic Code\uff0c\u7528\u4e8e\u6821\u9a8c\u5b83\u662f\u5426\u662f\u4e00\u4e2a Parquet \u6587\u4ef6\u3002</p> <p>\u9996\u5c3e\u4e2d\u95f4\u7531\u82e5\u5e72\u4e2a Row Group \u548c\u4e00\u4e2a Footer(File Meta Data) \u7ec4\u6210\u3002</p> <p>\u6bcf\u4e2a Row Group \u5305\u542b\u591a\u4e2a Column Chunk\uff0c\u6bcf\u4e2a Column Chunk \u5305\u542b\u591a\u4e2a Page\u3002\u4ee5\u4e0b\u662f Row Group\u3001Column Chunk \u548c Page \u4e09\u4e2a\u6982\u5ff5\u7684\u8bf4\u660e:</p> <ul> <li>\u884c\u7ec4 (Row Group)\uff1a \u4e00\u4e2a\u884c\u7ec4\u5bf9\u5e94\u903b\u8f91\u8868\u4e2d\u7684\u82e5\u5e72\u884c\u3002</li> <li>\u5217\u5757 (Column Chunk)\uff1a \u4e00\u4e2a\u884c\u7ec4\u4e2d\u7684\u4e00\u5217\u4fdd\u5b58\u5728\u4e00\u4e2a\u5217\u5757\u4e2d\u3002</li> <li>\u9875 (Page)\uff1a\u4e00\u4e2a\u5217\u5757\u7684\u6570\u636e\u4f1a\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u9875\u3002</li> </ul> <p>Footer(File Meta Data) \u4e2d\u5b58\u50a8\u4e86\u6bcf\u4e2a\u884c\u7ec4 (Row Group) \u4e2d\u7684\u6bcf\u4e2a\u5217\u5757 (Column Chunk) \u7684\u5143\u6570\u636e\u4fe1\u606f\uff0c\u5143\u6570\u636e\u4fe1\u606f\u5305\u542b\u4e86\u8be5\u5217\u7684\u6570\u636e\u7c7b\u578b\u3001\u8be5\u5217\u7684\u7f16\u7801\u65b9\u5f0f\u3001\u8be5\u7c7b\u7684 Data Page \u4f4d\u7f6e\u7b49\u4fe1\u606f\u3002</p> <p>\u9664\u4e86\u652f\u6301\u5d4c\u5957\u7ed3\u6784\uff0cParquet \u8fd8\u652f\u6301\u4e00\u4e9b\u4f18\u5316\uff1a</p> <ul> <li>\u6620\u5c04\u4e0b\u63a8(Project PushDown)</li> </ul> <p>\u8bf4\u5230\u5217\u5f0f\u5b58\u50a8\u7684\u4f18\u52bf\uff0c\u6620\u5c04\u4e0b\u63a8\u662f\u6700\u7a81\u51fa\u7684\uff0c\u5b83\u610f\u5473\u7740\u5728\u83b7\u53d6\u8868\u4e2d\u539f\u59cb\u6570\u636e\u65f6\u53ea\u9700\u8981\u626b\u63cf\u67e5\u8be2\u4e2d\u9700\u8981\u7684\u5217\uff0c\u7531\u4e8e\u6bcf\u4e00\u5217\u7684\u6240\u6709\u503c\u90fd\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u5206\u533a\u53d6\u51fa\u6bcf\u4e00\u5217\u7684\u6240\u6709\u503c\u5c31\u53ef\u4ee5\u5b9e\u73b0 TableScan \u7b97\u5b50\uff0c\u800c\u907f\u514d\u626b\u63cf\u6574\u4e2a\u8868\u6587\u4ef6\u5185\u5bb9\u3002</p> <p>\u5728 Parquet \u4e2d\u539f\u751f\u5c31\u652f\u6301\u6620\u5c04\u4e0b\u63a8\uff0c\u6267\u884c\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 Configuration \u4f20\u9012\u9700\u8981\u8bfb\u53d6\u7684\u5217\u7684\u4fe1\u606f\uff0c\u6620\u5c04\u6bcf\u6b21\u4f1a\u626b\u63cf\u4e00\u4e2a Row Group \u7684\u6570\u636e\uff0c\u7136\u540e\u4e00\u6b21\u6027\u5f97\u5c06\u8be5 Row Group \u91cc\u6240\u6709\u9700\u8981\u7684\u5217\u7684 Column Chunk \u90fd\u8bfb\u53d6\u5230\u5185\u5b58\u4e2d\uff0c\u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a Row Group \u7684\u6570\u636e\u80fd\u591f\u5927\u5927\u964d\u4f4e\u968f\u673a\u8bfb\u7684\u6b21\u6570\uff0c \u9664\u6b64\u4e4b\u5916\uff0cParquet \u5728\u8bfb\u53d6\u7684\u65f6\u5019\u4f1a\u8003\u8651\u5217\u662f\u5426\u8fde\u7eed\uff0c\u5982\u679c\u67d0\u4e9b\u9700\u8981\u7684\u5217\u662f\u5b58\u50a8\u4f4d\u7f6e\u662f\u8fde\u7eed\u7684\uff0c\u90a3\u4e48\u4e00\u6b21\u8bfb\u64cd\u4f5c\u5c31\u53ef\u4ee5\u628a\u591a\u4e2a\u5217\u7684\u6570\u636e\u8bfb\u53d6\u5230\u5185\u5b58\u3002</p> <ul> <li>\u8c13\u8bcd\u4e0b\u63a8(Predicate PushDown)</li> </ul> <p>\u901a\u8fc7\u5c06\u4e00\u4e9b\u8fc7\u6ee4\u6761\u4ef6\u5c3d\u53ef\u80fd\u7684\u5728\u6700\u5e95\u5c42\u6267\u884c\u53ef\u4ee5\u51cf\u5c11\u6bcf\u4e00\u5c42\u4ea4\u4e92\u7684\u6570\u636e\u91cf\uff0c\u4ece\u800c\u63d0\u5347\u6027\u80fd\u3002Parquet \u505a\u4e86\u66f4\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\uff0c\u4f18\u5316\u7684\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e00\u4e2a Row Group \u7684\u6bcf\u4e00\u4e2a Column Chunk \u5728\u5b58\u50a8\u7684\u65f6\u5019\u90fd\u8ba1\u7b97\u5bf9\u5e94\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5305\u62ec\u8be5 Column Chunk \u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u548c\u7a7a\u503c\u4e2a\u6570\u3002\u901a\u8fc7\u8fd9\u4e9b\u7edf\u8ba1\u503c\u548c\u8be5\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\u53ef\u4ee5\u5224\u65ad\u8be5 Row Group \u662f\u5426\u9700\u8981\u626b\u63cf\u3002\u53e6\u5916 Parquet \u672a\u6765\u8fd8\u4f1a\u589e\u52a0\u8bf8\u5982 Bloom Filter \u548c Index \u7b49\u4f18\u5316\u6570\u636e\uff0c\u66f4\u52a0\u6709\u6548\u7684\u5b8c\u6210\u8c13\u8bcd\u4e0b\u63a8\u3002</p> <p>\u5728\u4f7f\u7528 Parquet \u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e24\u79cd\u7b56\u7565\u63d0\u5347\u67e5\u8be2\u6027\u80fd\uff1a</p> <ul> <li>\u7c7b\u4f3c\u4e8e\u5173\u7cfb\u6570\u636e\u5e93\u7684\u4e3b\u952e\uff0c\u5bf9\u9700\u8981\u9891\u7e41\u8fc7\u6ee4\u7684\u5217\u8bbe\u7f6e\u4e3a\u6709\u5e8f\u7684\uff0c\u8fd9\u6837\u5728\u5bfc\u5165\u6570\u636e\u7684\u65f6\u5019\u4f1a\u6839\u636e\u8be5\u5217\u7684\u987a\u5e8f\u5b58\u50a8\u6570\u636e\uff0c\u8fd9\u6837\u53ef\u4ee5\u6700\u5927\u5316\u7684\u5229\u7528\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u5b9e\u73b0\u8c13\u8bcd\u4e0b\u63a8\u3002</li> <li>\u51cf\u5c0f\u884c\u7ec4\u5927\u5c0f\u548c\u9875\u5927\u5c0f\uff0c\u8fd9\u6837\u589e\u52a0\u8df3\u8fc7\u6574\u4e2a\u884c\u7ec4\u7684\u53ef\u80fd\u6027\uff0c\u4f46\u662f\u6b64\u65f6\u9700\u8981\u6743\u8861\u7531\u4e8e\u538b\u7f29\u548c\u7f16\u7801\u6548\u7387\u4e0b\u964d\u5e26\u6765\u7684 I/O \u8d1f\u8f7d\u3002</li> </ul> <p>\u6027\u80fd\u5bf9\u6bd4\uff1a</p> <p>\u76f8\u6bd4\u4f20\u7edf\u7684\u884c\u5f0f\u5b58\u50a8\uff0cHadoop \u751f\u6001\u5708\u8fd1\u5e74\u6765\u4e5f\u6d8c\u73b0\u51fa\u8bf8\u5982 RC\u3001ORC\u3001Parquet \u7684\u5217\u5f0f\u5b58\u50a8\u683c\u5f0f\uff0c\u5b83\u4eec\u7684\u6027\u80fd\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a</p> <ol> <li>\u66f4\u9ad8\u7684\u538b\u7f29\u6bd4\uff0c\u7531\u4e8e\u76f8\u540c\u7c7b\u578b\u7684\u6570\u636e\u66f4\u5bb9\u6613\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5217\u4f7f\u7528\u9ad8\u6548\u7684\u7f16\u7801\u548c\u538b\u7f29\u65b9\u5f0f\u3002</li> <li>\u66f4\u5c11\u7684 I/O\uff0c\u7531\u4e8e\u6620\u5c04\u4e0b\u63a8\u548c\u8c13\u8bcd\u4e0b\u63a8\u7684\u4f7f\u7528\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e00\u5927\u90e8\u5206\u4e0d\u5fc5\u8981\u7684\u6570\u636e\u626b\u63cf\uff0c\u5c24\u5176\u662f\u8868\u7ed3\u6784\u6bd4\u8f83\u5e9e\u5927\u7684\u65f6\u5019\u66f4\u52a0\u660e\u663e\uff0c\u7531\u6b64\u4e5f\u80fd\u591f\u5e26\u6765\u66f4\u597d\u7684\u67e5\u8be2\u6027\u80fd\u3002</li> </ol> <p>\u5728\u6570\u636e\u5b58\u50a8\u65b9\u9762\uff0cORC \u548c Parquet \u4e24\u79cd\u5b58\u50a8\u683c\u5f0f\u5728\u90fd\u662f\u7528 snappy \u538b\u7f29\u7684\u60c5\u51b5 \u4e0b\u4e24\u79cd\u5b58\u50a8\u683c\u5f0f\u5360\u7528\u7684\u7a7a\u95f4\u76f8\u5dee\u5e76\u4e0d\u5927\uff0c\u800c\u4e14 Parquet \u683c\u5f0f\u7a0d\u597d\u4e8e ORC \u683c\u5f0f\u3002\u4e24\u8005\u5728\u529f\u80fd\u4e0a\u4e5f\u90fd\u6709\u4f18\u7f3a\u70b9\uff0cParquet \u539f\u751f\u652f\u6301\u5d4c\u5957\u5f0f\u6570\u636e\u7ed3\u6784\uff0c\u800c ORC \u5bf9\u6b64\u652f\u6301\u8f83\u5dee\uff0c\u8fd9\u79cd\u590d\u6742\u7684 Schema \u67e5\u8be2\u4e5f\u76f8\u5bf9\u8f83\u5dee\uff1b\u800c Parquet \u4e0d\u652f\u6301\u6570\u636e\u7684\u4fee\u6539\u548c ACID\uff0c\u4f46\u662f ORC \u5bf9\u6b64\u63d0\u4f9b\u652f\u6301\uff0c\u4f46\u662f\u5728 OLAP \u73af\u5883\u4e0b\u5f88\u5c11\u4f1a\u5bf9\u5355\u6761\u6570\u636e\u4fee\u6539\uff0c\u66f4\u591a\u7684\u5219\u662f\u6279\u91cf\u5bfc\u5165\u3002</p>"},{"location":"Hive/1.%20Hive/#_11","title":"\u6570\u636e\u538b\u7f29","text":"<p>\u4e3a\u4e86\u8282\u7701\u96c6\u7fa4\u78c1\u76d8\u7684\u5b58\u50a8\u8d44\u6e90\uff0c\u6570\u636e\u4e00\u822c\u90fd\u662f\u9700\u8981\u538b\u7f29\u7684\uff0c\u76ee\u524d\u5728 Hadoop \u4e2d\u7528\u7684\u6bd4\u8f83\u591a\u7684\u6709 lzo\u3001gzip\u3001snappy\u3001bzip2\u3002</p> <p>\u90a3\u4e48\u662f\u5426\u9009\u62e9\u6587\u4ef6\u538b\u7f29\u5462\uff1f\u5728 hadoop \u4f5c\u4e1a\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0cjob \u6267\u884c\u901f\u5ea6\u66f4\u591a\u7684 \u662f\u5c40\u9650\u4e8e I/O\uff0c\u800c\u4e0d\u662f\u53d7\u5236\u4e8e CPU\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u901a\u8fc7\u6587\u4ef6\u538b\u7f29\u53ef\u4ee5\u63d0\u9ad8 hadoop \u6027\u80fd\u3002\u7136\u800c\uff0c\u5982\u679c\u4f5c\u4e1a\u7684\u6267\u884c\u901f\u5ea6\u53d7\u9650\u4e8e CPU \u7684\u6027\u80fd\uff0c\u90a3\u4e48\u538b\u7f29\u6587\u4ef6\u53ef\u80fd\u5c31\u4e0d\u5408\u9002\uff0c\u56e0\u4e3a\u6587\u4ef6\u7684\u538b\u7f29\u548c\u89e3\u538b\u4f1a\u82b1\u8d39\u6389\u8f83\u591a\u7684\u65f6\u95f4\u3002\uff08IO \u5bc6\u96c6\u4efb\u52a1\u8fd8\u662f CPU \u5bc6\u96c6\u4efb\u52a1\uff09</p> <p>Hive \u4e2d\u7684\u538b\u7f29\uff1a</p> <ul> <li>\u4e2d\u95f4\u7ed3\u679c\u7684\u538b\u7f29</li> </ul> <p>\u5904\u7406\u4f5c\u4e1a map \u4efb\u52a1\u548c reduce \u4efb\u52a1\u4e4b\u95f4\u7684\u6570\u636e\uff0c\u5bf9\u4e8e\u4e2d\u95f4\u538b\u7f29\uff0c\u6700\u597d\u9009\u62e9\u4e00\u4e2a\u8282\u7701 CPU \u8017\u65f6\u7684\u538b\u7f29\u65b9\u5f0f\u3002SnappyCodec \u662f\u4e00\u4e2a\u8f83\u597d\u7684\u538b\u7f29\u683c\u5f0f\uff0cCPU \u6d88\u8017\u8f83\u4f4e\u3002</p> <ul> <li>\u8f93\u51fa\u7ed3\u679c\u7684\u538b\u7f29</li> </ul> <p>\u4f5c\u4e1a\u6700\u7ec8\u7684\u8f93\u51fa\u4e5f\u53ef\u4ee5\u538b\u7f29\uff0c<code>hive.exec.compress.output</code> \u8fd9\u4e2a\u5c5e\u6027\u63a7\u5236\u8fd9\u4e2a\u64cd\u4f5c\u3002\u5f53\u7136\uff0c\u5982\u679c\u4ec5\u4ec5\u53ea\u9700\u8981\u5728\u67d0\u4e00\u6b21\u4f5c\u4e1a\u4e2d\u4f7f\u7528\u6700\u7ec8\u538b\u7f29\uff0c\u90a3\u4e48\uff0c\u53ef \u4ee5\u76f4\u63a5\u5728\u811a\u672c\u4e2d\u8bbe\u7f6e\u8fd9\u4e2a\u5c5e\u6027\uff0c\u800c\u4e0d\u5fc5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u3002</p> <p>\u538b\u7f29\u683c\u5f0f\uff1a</p> <ul> <li>GZip</li> <li>BZip2</li> <li>Snappy</li> <li>LZO</li> </ul> <p></p> <p>GZip \u548c BZip2 \u538b\u7f29\u53ef\u4ee5\u4fdd\u8bc1\u6700\u5c0f\u7684\u538b\u7f29\u6587\u4ef6\uff0c\u4f46\u662f\u8fc7\u4e8e\u6d88\u8017\u65f6\u95f4\uff1bSnappy \u548c LZO \u538b\u7f29\u548c\u89e3\u538b\u7f29\u5f88\u5feb\uff0c\u4f46\u662f\u538b\u7f29\u7684\u6587\u4ef6\u8f83\u5927\u3002\u6240\u4ee5\u5982\u4f55\u9009\u62e9\u538b\u7f29\u683c\u5f0f\uff0c\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u9700\u6c42\u51b3\u5b9a\u3002</p>"},{"location":"Hive/1.%20Hive/#gzip","title":"Gzip","text":"<p>\u4f18\u70b9\uff1a\u538b\u7f29\u7387\u6bd4\u8f83\u9ad8\uff0c\u800c\u4e14\u538b\u7f29/\u89e3\u538b\u901f\u5ea6\u4e5f\u6bd4\u8f83\u5feb\uff1bhadoop \u672c\u8eab\u652f\u6301\uff0c\u5728\u5e94\u7528\u4e2d\u5904\u7406 gzip \u683c\u5f0f\u7684\u6587\u4ef6\u5c31\u548c\u76f4\u63a5\u5904\u7406\u6587\u672c\u4e00\u6837\uff1b\u6709 hadoop native \u5e93\uff1b\u5927\u90e8\u5206 linux \u7cfb\u7edf\u90fd\u81ea\u5e26 gzip \u547d\u4ee4\uff0c\u4f7f\u7528\u65b9\u4fbf\u3002</p> <p>\u7f3a\u70b9\uff1a\u4e0d\u652f\u6301 split\u3002</p> <p>\u5e94\u7528\u573a\u666f\uff1a\u5f53\u6bcf\u4e2a\u6587\u4ef6\u538b\u7f29\u4e4b\u540e\u5728 130M \u4ee5\u5185\u7684\uff081 \u4e2a\u5757\u5927\u5c0f\u5185\uff09\uff0c\u90fd\u53ef\u4ee5\u8003\u8651\u7528 gzip \u538b\u7f29\u683c\u5f0f\u3002\u8b6c\u5982\u8bf4\u4e00\u5929\u6216\u8005\u4e00\u4e2a\u5c0f\u65f6\u7684\u65e5\u5fd7\u538b\u7f29\u6210\u4e00\u4e2a gzip \u6587\u4ef6\uff0c\u8fd0\u884c mapreduce \u7a0b\u5e8f\u7684\u65f6\u5019\u901a\u8fc7\u591a\u4e2a gzip \u6587\u4ef6\u5e76\u884c\u5904\u7406\u3002hive \u7a0b\u5e8f\uff0cstreaming \u7a0b\u5e8f\uff0c\u548c java \u5199\u7684 mapreduce \u7a0b\u5e8f\u5b8c\u5168\u548c\u6587\u672c\u5904\u7406\u4e00\u6837\uff0c\u538b\u7f29\u4e4b\u540e\u539f\u6765\u7684\u7a0b\u5e8f\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4fee\u6539\u3002</p>"},{"location":"Hive/1.%20Hive/#lzo","title":"LZO","text":"<p>\u4f18\u70b9\uff1a\u538b\u7f29/\u89e3\u538b\u901f\u5ea6\u4e5f\u6bd4\u8f83\u5feb\uff0c\u5408\u7406\u7684\u538b\u7f29\u7387\uff1b\u652f\u6301 split\uff0c\u662f hadoop \u4e2d\u6700\u6d41\u884c\u7684\u538b\u7f29\u683c\u5f0f\uff1b\u652f\u6301 hadoop native \u5e93\uff1b\u53ef\u4ee5\u5728 linux \u7cfb\u7edf\u4e0b\u5b89\u88c5 lzop \u547d\u4ee4\uff0c\u4f7f\u7528\u65b9\u4fbf\u3002</p> <p>\u7f3a\u70b9\uff1a\u538b\u7f29\u7387\u6bd4 gzip \u8981\u4f4e\u4e00\u4e9b\uff1bhadoop \u672c\u8eab\u4e0d\u652f\u6301\uff0c\u9700\u8981\u5b89\u88c5\uff1b\u5728\u5e94\u7528\u4e2d\u5bf9 lzo \u683c\u5f0f\u7684\u6587\u4ef6\u9700\u8981\u505a\u4e00\u4e9b\u7279\u6b8a\u5904\u7406\uff08\u4e3a\u4e86\u652f\u6301 split \u9700\u8981\u5efa\u7d22\u5f15\uff0c\u8fd8\u9700\u8981\u6307\u5b9a inputformat \u4e3a lzo \u683c\u5f0f\uff09\u3002</p> <p>\u5e94\u7528\u573a\u666f\uff1a\u4e00\u4e2a\u5f88\u5927\u7684\u6587\u672c\u6587\u4ef6\uff0c\u538b\u7f29\u4e4b\u540e\u8fd8\u5927\u4e8e 200M \u4ee5\u4e0a\u7684\u53ef\u4ee5\u8003\u8651\uff0c\u800c\u4e14\u5355\u4e2a\u6587\u4ef6\u8d8a\u5927\uff0clzo \u4f18\u70b9\u8d8a\u8d8a\u660e\u663e\u3002</p>"},{"location":"Hive/1.%20Hive/#snappy","title":"Snappy","text":"<p>\u4f18\u70b9\uff1a\u9ad8\u901f\u538b\u7f29\u901f\u5ea6\u548c\u5408\u7406\u7684\u538b\u7f29\u7387\uff1b\u652f\u6301 hadoop native \u5e93\u3002</p> <p>\u7f3a\u70b9\uff1a\u4e0d\u652f\u6301 split\uff1b\u538b\u7f29\u7387\u6bd4 gzip \u8981\u4f4e\uff1bhadoop \u672c\u8eab\u4e0d\u652f\u6301\uff0c\u9700\u8981\u5b89\u88c5\uff1blinux \u7cfb\u7edf\u4e0b\u6ca1\u6709\u5bf9\u5e94\u7684\u547d\u4ee4\u3002</p> <p>\u5e94\u7528\u573a\u666f\uff1a\u5f53 mapreduce \u4f5c\u4e1a\u7684 map \u8f93\u51fa\u7684\u6570\u636e\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u4f5c\u4e3a map \u5230 reduce \u7684\u4e2d\u95f4\u6570\u636e\u7684\u538b\u7f29\u683c\u5f0f\uff1b\u6216\u8005\u4f5c\u4e3a\u4e00\u4e2a mapreduce \u4f5c\u4e1a\u7684\u8f93\u51fa\u548c\u53e6\u5916\u4e00\u4e2a mapreduce \u4f5c\u4e1a\u7684\u8f93\u5165\u3002</p>"},{"location":"Hive/1.%20Hive/#bzip2","title":"Bzip2","text":"<p>\u4f18\u70b9\uff1a\u652f\u6301 split\uff1b\u5177\u6709\u5f88\u9ad8\u7684\u538b\u7f29\u7387\uff0c\u6bd4 gzip \u538b\u7f29\u7387\u90fd\u9ad8\uff1bhadoop \u672c\u8eab\u652f\u6301\uff0c\u4f46\u4e0d\u652f\u6301 native\uff1b\u5728 linux \u7cfb\u7edf\u4e0b\u81ea\u5e26 bzip2 \u547d\u4ee4\uff0c\u4f7f\u7528\u65b9\u4fbf\u3002</p> <p>\u7f3a\u70b9\uff1a\u538b\u7f29/\u89e3\u538b\u901f\u5ea6\u6162\uff1b\u4e0d\u652f\u6301 native\u3002</p> <p>\u5e94\u7528\u573a\u666f\uff1a\u9002\u5408\u5bf9\u901f\u5ea6\u8981\u6c42\u4e0d\u9ad8\uff0c\u4f46\u9700\u8981\u8f83\u9ad8\u7684\u538b\u7f29\u7387\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f5c\u4e3a mapreduce \u4f5c\u4e1a\u7684\u8f93\u51fa\u683c\u5f0f\uff1b\u6216\u8005\u8f93\u51fa\u4e4b\u540e\u7684\u6570\u636e\u6bd4\u8f83\u5927\uff0c\u5904\u7406\u4e4b\u540e\u7684\u6570\u636e\u9700\u8981\u538b\u7f29\u5b58\u6863\u51cf\u5c11\u78c1\u76d8\u7a7a\u95f4\u5e76\u4e14\u4ee5\u540e\u6570\u636e\u7528\u5f97\u6bd4\u8f83\u5c11\u7684\u60c5\u51b5\uff1b\u6216\u8005\u5bf9\u5355\u4e2a\u5f88\u5927\u7684\u6587\u672c\u6587\u4ef6\u60f3\u538b\u7f29\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4\uff0c\u540c\u65f6\u53c8\u9700\u8981\u652f\u6301 split\uff0c\u800c\u4e14\u517c\u5bb9\u4e4b\u524d\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u5373\u5e94\u7528\u7a0b\u5e8f\u4e0d\u9700\u8981\u4fee\u6539\uff09\u7684\u60c5\u51b5\u3002</p>"},{"location":"Hive/1.%20Hive/#_12","title":"\u62c9\u94fe\u8868","text":"<p>\u6f2b\u8c08\u6570\u636e\u4ed3\u5e93\u4e4b\u62c9\u94fe\u8868\uff08\u539f\u7406\u3001\u8bbe\u8ba1\u4ee5\u53ca\u5728 Hive \u4e2d\u7684\u5b9e\u73b0\uff09</p> <p>\u62c9\u94fe\u8868\u662f\u9488\u5bf9\u6570\u636e\u4ed3\u5e93\u8bbe\u8ba1\u4e2d\u8868\u5b58\u50a8\u6570\u636e\u7684\u65b9\u5f0f\u800c\u5b9a\u4e49\u7684\uff0c\u4e3b\u8981 \u662f\u7ef4\u62a4\u5386\u53f2\u72b6\u6001\uff0c\u4ee5\u53ca\u6700\u65b0\u72b6\u6001\u6570\u636e\u7684\u4e00\u79cd\u8868\uff0c\u62c9\u94fe\u8868\u6839\u636e\u62c9\u94fe\u7c92\u5ea6\u7684\u4e0d\u540c\uff0c\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u5feb\u7167\uff0c\u53ea\u4e0d\u8fc7\u505a\u4e86\u4f18\u5316\uff0c\u53bb\u9664\u4e86\u4e00\u90e8\u5206\u4e0d\u53d8\u7684\u8bb0\u5f55\uff0c\u901a\u8fc7\u62c9\u94fe\u8868\u53ef\u4ee5 \u5f88\u65b9\u4fbf\u7684\u8fd8\u539f\u51fa\u62c9\u94fe\u65f6\u70b9\u7684\u5ba2\u6237\u8bb0\u5f55\u3002</p> <p>\u5b9e\u73b0\u601d\u8def\uff1a\u62c9\u94fe\u8868\u4e13\u95e8\u7528\u4e8e\u89e3\u51b3\u5728\u6570\u636e\u4ed3\u5e93\u4e2d\u6570\u636e\u53d1\u751f\u53d8\u5316\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u5b58\u50a8\u7684\u95ee\u9898\uff0c\u5982\u679c\u76f4\u63a5\u8986\u76d6\u5386\u53f2\u72b6\u6001\uff0c\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u67e5\u8be2\u5386\u53f2\u72b6\u6001\uff0c\u5982\u679c\u5c06\u6240\u6709\u6570\u636e\u5355\u72ec\u5207\u7247\u5b58\u50a8\uff0c\u4f1a\u5bfc\u81f4\u5b58\u50a8\u5927\u91cf\u975e\u66f4\u65b0\u6570\u636e\u7684\u95ee\u9898\u3002\u62c9\u94fe\u8868\u7684\u8bbe\u8ba1\u662f\u5c06\u66f4\u65b0\u7684\u6570\u636e\u8fdb\u884c\u72b6\u6001\u8bb0\u5f55\uff0c\u6ca1\u6709\u53d1\u751f\u66f4\u65b0\u7684\u6570\u636e\u4e0d\u8fdb\u884c\u72b6\u6001\u5b58\u50a8\uff0c\u7528\u4e8e\u5b58\u50a8\u6240\u6709\u6570\u636e\u5728\u4e0d\u540c\u65f6\u95f4\u4e0a\u7684\u6240\u6709\u72b6\u6001\uff0c\u901a\u8fc7\u65f6\u95f4\u8fdb\u884c\u6807\u8bb0\u6bcf\u4e2a\u72b6\u6001\u7684\u751f\u547d\u5468\u671f\uff0c\u67e5\u8be2\u65f6\uff0c\u6839\u636e\u9700\u6c42\u53ef\u4ee5\u83b7\u53d6\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u72b6\u6001\u7684\u6570\u636e\uff0c\u9ed8\u8ba4\u7528 9999-12-31 \u7b49\u6700\u5927\u503c\u6765\u8868\u793a\u6700\u65b0\u72b6\u6001\u3002</p> <p>\u9002\u7528\u573a\u666f\uff1a\u6570\u636e\u91cf\u6709\u70b9\u5927\uff0c\u8868\u4e2d\u67d0\u4e9b\u5b57\u6bb5\u6709\u53d8\u5316\uff0c\u4f46\u662f\u53d8\u5316\u7684\u9891\u7387\u4e5f\u4e0d\u662f\u5f88\u9ad8\uff0c\u4e1a\u52a1\u9700\u6c42\u53c8\u9700\u8981\u7edf\u8ba1\u8fd9\u79cd\u53d8\u5316\u72b6\u6001\uff0c\u6bcf\u5929\u5168\u91cf\u4e00\u4efd\u6709\u70b9\u4e0d\u592a\u73b0\u5b9e\uff0c\u4e0d\u4ec5\u6d6a\u8d39\u4e86\u5b58\u50a8\u7a7a\u95f4\uff0c\u6709\u65f6\u53ef\u80fd\u4e1a\u52a1\u7edf\u8ba1\u4e5f\u6709\u70b9\u9ebb\u70e6\uff0c\u8fd9\u65f6\uff0c\u62c9\u94fe\u8868\u7684\u4f5c\u7528\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u65e2\u8282\u7701\u7a7a\u95f4\uff0c\u53c8\u6ee1\u8db3\u4e86\u9700\u6c42\u3002</p> <p>\u539f\u59cb\u6570\u636e\uff1a</p> 1 2021-08-20 2021-08-20 \u521b\u5efa 2 2021-08-20 2021-08-20 \u521b\u5efa 3 2021-08-20 2021-08-20 \u521b\u5efa 1 2021-08-20 2021-08-21 \u652f\u4ed8 2 2021-08-20 2021-08-21 \u5b8c\u6210 4 2021-08-21 2021-08-21 \u521b\u5efa 1 2021-08-20 2021-08-22 \u5b8c\u6210 3 2021-08-20 2021-08-22 \u652f\u4ed8 4 2021-08-21 2021-08-22 \u652f\u4ed8 5 2021-08-22 2021-08-22 \u521b\u5efa <p>\u62c9\u94fe\u8868\uff1a</p> 1 2021-08-20 2021-08-20 \u521b\u5efa 2021-08-20 2021-08-21 1 2021-08-20 2021-08-21 \u652f\u4ed8 2021-08-21 2021-08-22 1 2021-08-20 2021-08-22 \u5b8c\u6210 2021-08-22 9999-12-31 2 2021-08-20 2021-08-20 \u521b\u5efa 2021-08-20 2021-08-21 2 2021-08-20 2021-08-21 \u5b8c\u6210 2021-08-21 9999-12-31 3 2021-08-20 2021-08-20 \u521b\u5efa 2021-08-20 2021-08-22 3 2021-08-20 2021-08-22 \u652f\u4ed8 2021-08-22 9999-12-31 4 2021-08-21 2021-08-21 \u521b\u5efa 2021-08-21 2021-08-22 4 2021-08-21 2021-08-22 \u652f\u4ed8 2021-08-22 9999-12-31 5 2021-08-22 2021-08-22 \u521b\u5efa 2021-08-22 9999-12-31 <p>\u6211\u4eec\u4e00\u822c\u5728\u6570\u4ed3\u4e2d\u901a\u8fc7\u589e\u52a0 start_date, end_date \u6765\u8868\u793a\u6570\u636e\u7684\u6709\u6548\u671f\u3002start_date \u8868\u793a\u8be5\u6761\u8bb0\u5f55\u7684\u751f\u547d\u5468\u671f\u5f00\u59cb\u65f6\u95f4\uff0cend_date \u8868\u793a\u8be5\u6761\u8bb0\u5f55\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\u95f4\uff1bend_date = '9999-12-31' \u8868\u793a\u8be5\u6761\u8bb0\u5f55\u76ee\u524d\u5904\u4e8e\u6709\u6548\u72b6\u6001\uff1b</p> <p>\u5982\u679c\u67e5\u8be2\u5f53\u524d\u6240\u6709\u6709\u6548\u7684\u8bb0\u5f55\uff0c\u5219 <code>select * from order_his where end_date = '9999-12-31'</code>\u3002 \u5982\u679c\u67e5\u8be2 2021-08-21 \u7684\u5386\u53f2\u5feb\u7167\uff0c\u5219 <code>select * from order_his where start_date &lt;= '2021-08-21' and end_date &gt;= '2021-08-21'</code>\u3002</p>"},{"location":"Hive/1.%20Hive/#json","title":"Json \u65e5\u5fd7\u5904\u7406","text":""},{"location":"Hive/1.%20Hive/#_13","title":"\u591a\u5b57\u6bb5\u63d0\u53d6","text":"<p>\u6570\u636e\u6e90\uff1a</p> <pre><code>{\"movie\":\"2791\",\"rate\":\"4\",\"time\":\"978302188\",\"userid\":\"1\"}\n{\"movie\":\"2687\",\"rate\":\"3\",\"time\":\"978824268\",\"userid\":\"1\"}\n{\"movie\":\"2018\",\"rate\":\"4\",\"time\":\"978301777\",\"userid\":\"1\"}\n{\"movie\":\"3105\",\"rate\":\"5\",\"time\":\"978301713\",\"userid\":\"1\"}\n{\"movie\":\"2797\",\"rate\":\"4\",\"time\":\"978302039\",\"userid\":\"1\"}\n</code></pre> <pre><code>--\u89e3\u6790\u591a\u4e2a\u5b57\u6bb5\nselect json_tuple(loginfo,'movie','rate','time','userid') as (movie_id,rate,time,user_id)\nfrom log_json\n</code></pre>"},{"location":"Hive/1.%20Hive/#_14","title":"\u65e5\u5fd7\u5355\u5b57\u6bb5\u89e3\u6790","text":"<p>\u51fd\u6570\uff1a<code>get_json_object(string json_string, string path)</code></p> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u586b\u5199 json \u5bf9\u8c61\u53d8\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f7f\u7528 <code>$</code> \u8868\u793a json \u53d8\u91cf\u6807\u8bc6\uff0c\u7136\u540e\u7528 <code>.</code> \u6216 <code>[]</code> \u8bfb\u53d6\u5bf9\u8c61\u6216\u6570\u7ec4\u3002</li> <li>\u5982\u679c\u8f93\u5165\u7684 json \u5b57\u7b26\u4e32\u65e0\u6548\uff0c\u90a3\u4e48\u8fd4\u56de NULL\u3002</li> <li>\u6bcf\u6b21\u53ea\u80fd\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u9879\u3002</li> </ul> <p>\u6570\u636e\u6e90\uff1a</p> <pre><code>{\n  \"store\": {\n    \"fruit\": [\n      { \"weight\": 8, \"type\": \"apple\" },\n      { \"weight\": 9, \"type\": \"pear\" }\n    ],\n    \"bicycle\": { \"price\": 19.95, \"color\": \"red\" }\n  },\n  \"email\": \"amy@only_for_json_udf_test.net\",\n  \"owner\": \"amy\"\n}\n</code></pre> <pre><code>--1.get\u5355\u5c42\u503c\uff1a\u7ed3\u679c=amy\nselect get_json_object(loginfo,'$.owner') from data;\n--2.get\u591a\u5c42\u503c\uff1a\u7ed3\u679c=19.95\nselect get_json_object(loginfo,'$.store.bicycle.price') from data;\n--3.get \u6570\u7ec4\u503c[]\uff1a\u7ed3\u679c={\"weight\":8,\"type\":\"apple\"}\nselect get_json_object(loginfo,'$.store.fruit[0]') from data;\n</code></pre>"},{"location":"Hive/1.%20Hive/#url","title":"URL \u53c2\u6570\u89e3\u6790","text":"<pre><code>---\u8fd4\u56de facebook.com\nselect parse_url('http://facebook.com/path/p1.php?query=1','HOST');\n---\u8fd4\u56de /path/p1.php\nselect parse_url('http://facebook.com/path/p1.php?query=1','PATH');\n---\u8fd4\u56de query=1\nselect parse_url('http://facebook.com/path/p1.php?query=1','QUERY');\n</code></pre>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/","title":"Hive \u9762\u8bd5\u9898","text":""},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_1","title":"Hive \u6982\u8ff0","text":"<p>Hive \u662f\u7531 Facebook \u5f00\u6e90\uff0c\u57fa\u4e8e Hadoop \u7684\u4e00\u4e2a\u6570\u636e\u4ed3\u5e93\u5de5\u5177\uff0c\u53ef\u4ee5\u5c06\u7ed3\u6784\u5316\u7684\u6570\u636e\u6587\u4ef6\u6620\u5c04\u4e3a\u4e00\u5f20\u8868\uff0c\u5e76\u63d0\u4f9b\u7c7b SQL \u67e5\u8be2\u529f\u80fd\u3002</p> <p>Hive \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a Hadoop \u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u5c06 HQL \u8f6c\u5316\u6210 MapReduce \u7a0b\u5e8f\u3002</p> <p>Hive \u6700\u9002\u5408\u4e8e\u9759\u6001\u6570\u636e\u5206\u6790\uff0c\u4e0d\u9700\u8981\u5feb\u901f\u7ed9\u51fa\u7ed3\u679c\uff0c\u800c\u4e14\u6570\u636e\u672c\u8eab\u4e0d\u4f1a\u9891\u7e41\u53d8\u5316\u3002</p> <p>Hive \u672c\u8eab\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5e93\uff0cHadoop \u548c HDFS \u7684\u8bbe\u8ba1\u672c\u8eab\u7ea6\u675f\u548c\u5c40\u9650\u6027\u9650\u5236\u4e86 Hive \u6240\u80fd\u80dc\u4efb\u7684\u5de5\u4f5c\u3002\u5176\u4e2d\u6700\u5927\u7684\u9650\u5236\u5c31\u662f Hive \u4e0d\u652f\u6301\u8bb0\u5f55\u7ea7\u522b\u7684\u66f4\u65b0\u3001\u63d2\u5165\u6216\u8005\u5220\u9664\u64cd\u4f5c\uff0c\u53ea\u80fd\u901a\u8fc7\u67e5\u8be2\u751f\u4ea7\u65b0\u8868\u6216\u8005\u5c06\u67e5\u8be2\u7ed3\u679c\u5bfc\u5165\u5230\u6587\u4ef6\u4e2d\u3002\u540c\u65f6\uff0cHive \u4e5f\u4e0d\u652f\u6301\u4e8b\u52a1\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_2","title":"Hive \u548c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u533a\u522b","text":"<ul> <li>\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\uff1a</li> </ul> <p>Hive \u662f\u5efa\u7acb\u5728 Hadoop \u4e4b\u4e0a\u7684\u3002\u6240\u6709 Hive \u7684\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728 HDFS \u4e2d\u7684\uff1b\u800c\u6570\u636e\u5e93\u5219\u53ef\u4ee5\u5c06\u6570\u636e\u4fdd\u5b58\u5728\u5757\u8bbe\u5907\u6216\u8005\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\u3002</p> <ul> <li>\u7d22\u5f15\uff1a</li> </ul> <p>Hive \u5728\u52a0\u8f7d\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u4efb\u4f55\u5904\u7406\uff0c\u751a\u81f3\u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u626b\u63cf\uff0c\u56e0\u6b64\u4e5f\u6ca1\u6709\u5bf9\u6570\u636e\u4e2d\u7684\u67d0\u4e9b key \u5efa\u7acb\u7d22\u5f15\u3002Hive \u8981\u8bbf\u95ee\u6570\u636e\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u7279\u5b9a\u503c\u65f6\uff0c\u9700\u8981\u66b4\u529b\u626b\u63cf\u6574\u4e2a\u6570\u636e\uff0c\u56e0\u6b64\u8bbf\u95ee\u5ef6\u8fdf\u8f83\u9ad8\u3002\u7531\u4e8e MapReduce \u7684\u5f15\u5165\uff0c Hive \u53ef\u4ee5\u5e76\u884c\u8bbf\u95ee\u6570\u636e\uff0c\u56e0\u6b64\u5373\u4f7f\u6ca1\u6709\u7d22\u5f15\uff0c\u5bf9\u4e8e\u5927\u6570\u636e\u91cf\u7684\u8bbf\u95ee\uff0cHive \u4ecd\u7136\u53ef\u4ee5\u4f53\u73b0\u51fa\u4f18\u52bf\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cHive \u5728 0.8 \u7248\u672c\u4e4b\u540e\u5f15\u5165\u4e86 bitmap \u7d22\u5f15\u3002</p> <p>\u5728\u6570\u636e\u5e93\u4e2d\uff0c \u901a\u5e38\u4f1a\u9488\u5bf9\u4e00\u5217\u6216\u8005\u51e0\u5217\u5efa\u7acb\u7d22\u5f15\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5c11\u91cf\u7684\u3001\u7279\u5b9a\u6761\u4ef6\u7684\u6570\u636e\u7684\u8bbf\u95ee\uff0c\u6570\u636e\u5e93\u53ef\u4ee5\u6709\u5f88\u9ad8\u7684\u6548\u7387\u548c\u8f83\u4f4e\u7684\u5ef6\u8fdf\u3002</p> <p>\u7531\u4e8e\u6570\u636e\u7684\u8bbf\u95ee\u5ef6\u8fdf\u8f83\u9ad8\uff0c\u51b3\u5b9a\u4e86 Hive \u4e0d\u9002\u5408\u5728\u7ebf\u6570\u636e\u67e5\u8be2\u3002</p> <ul> <li>\u6570\u636e\u683c\u5f0f\uff1a</li> </ul> <p>Hive \u4e2d\u6ca1\u6709\u5b9a\u4e49\u4e13\u95e8\u7684\u6570\u636e\u683c\u5f0f\uff0c\u6570\u636e\u683c\u5f0f\u53ef\u4ee5\u7531\u7528\u6237\u6307\u5b9a\u3002\u7528\u6237\u5b9a\u4e49\u6570\u636e\u683c\u5f0f\u9700\u8981\u6307\u5b9a\u4e09\u4e2a\u5c5e\u6027: \u5217\u5206\u9694\u7b26\u3001\u884c\u5206\u9694\u7b26\u53ca\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u7684\u65b9\u6cd5 (Hive \u4e2d\u9ed8\u8ba4\u6709\u4e09\u79cd\u6587\u4ef6\u683c\u5f0f:TextFile\u3001SequenceFile \u53ca RCFile)\u3002\u7531\u4e8e\u5728\u52a0\u8f7d\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u4ece\u7528\u6237\u5b9a\u4e49\u7684\u6570\u636e\u683c\u5f0f\u5230 Hive \u5b9a\u4e49\u7684\u6570\u636e\u683c\u5f0f\u7684\u8f6c\u6362\uff0c\u56e0\u6b64\uff0cHive \u5728\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u5bf9\u6570\u636e\u672c\u8eab\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\uff0c\u800c\u53ea\u662f\u5c06\u6570\u636e\u5185\u5bb9\u590d\u5236\u6216\u8005\u79fb\u52a8\u5230\u76f8\u5e94\u7684 HDFS \u76ee\u5f55\u4e2d\u3002</p> <p>\u800c\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u4e0d\u540c\u7684\u6570\u636e\u5e93\u6709\u4e0d\u540c\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u800c\u4e14\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684\u6570\u636e\u683c\u5f0f\u3002\u6240\u6709\u6570\u636e\u90fd\u4f1a\u6309\u7167\u4e00\u5b9a\u7684\u7ec4\u7ec7\u5b58\u50a8\uff0c\u56e0\u6b64\uff0c\u6570\u636e\u5e93\u52a0\u8f7d\u6570\u636e\u7684\u8fc7\u7a0b\u4f1a\u6bd4\u8f83\u8017\u65f6\u3002</p> <ul> <li>\u6267\u884c\uff1a</li> </ul> <p>Hive \u4e2d\u5927\u591a\u6570\u67e5\u8be2\u7684\u6267\u884c\u662f\u901a\u8fc7 Hadoop \u63d0\u4f9b\u7684 MapReduce \u6765\u5b9e\u73b0\u7684 (\u7c7b\u4f3c\u4e8e <code>select * from</code> \u7684\u67e5\u8be2\u4e0d\u9700\u8981 MapReduce)\uff0c\u800c\u6570\u636e\u5e93\u901a\u5e38\u6709\u81ea\u5df1\u7684\u6267\u884c\u5f15\u64ce\u3002</p> <ul> <li>\u6570\u636e\u66f4\u65b0\uff1a</li> </ul> <p>\u7531\u4e8e Hive \u662f\u9488\u5bf9\u6570\u636e\u4ed3\u5e93\u5e94\u7528\u8bbe\u8ba1\u7684\uff0c\u800c\u6570\u636e\u4ed3\u5e93\u7684\u5185\u5bb9\u662f\u8bfb\u591a\u5199\u5c11\u7684\u3002\u56e0\u6b64\uff0cHive \u4e2d\u4e0d\u5efa\u8bae\u5bf9\u6570\u636e\u7684\u6539\u5199\uff0c\u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u5728\u52a0\u8f7d\u7684\u65f6\u5019\u786e\u5b9a\u597d\u7684\u3002\u800c\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u901a\u5e38\u662f\u9700\u8981\u7ecf\u5e38\u8fdb\u884c\u4fee\u6539\u7684\u3002</p> <ul> <li>\u6267\u884c\u5ef6\u8fdf\uff1a</li> </ul> <p>Hive \u5728\u67e5\u8be2\u6570\u636e\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6ca1\u6709\u7d22\u5f15\uff0c\u9700\u8981\u626b\u63cf\u6574\u4e2a\u8868\uff0c\u56e0\u6b64\u5ef6\u8fdf\u8f83\u9ad8\u3002\u53e6\u5916\u4e00\u4e2a\u5bfc\u81f4 Hive \u6267\u884c\u5ef6\u8fdf\u9ad8\u7684\u56e0\u7d20\u662f MapReduce \u6846\u67b6\u3002\u7531\u4e8e MapReduce \u672c\u8eab\u5177\u6709\u8f83\u9ad8\u7684\u5ef6\u8fdf\uff0c\u56e0\u6b64\u5728\u5229\u7528 MapReduce \u6267\u884c Hive \u67e5\u8be2\u65f6\uff0c\u4e5f\u4f1a\u6709\u8f83\u9ad8\u7684\u5ef6\u8fdf\u3002\u76f8\u5bf9\u7684\uff0c\u6570\u636e\u5e93\u7684\u6267\u884c\u5ef6\u8fdf\u8f83\u4f4e\u3002 \u5f53\u7136\uff0c\u8fd9\u4e2a\u4f4e\u662f\u6709\u6761\u4ef6\u7684\uff0c\u5373\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\uff0c\u5f53\u6570\u636e\u89c4\u6a21\u5927\u5230\u8d85\u8fc7\u6570\u636e\u5e93\u7684\u5904\u7406\u80fd\u529b\u7684\u65f6\u5019\uff0c Hive \u7684\u5e76\u884c\u8ba1\u7b97\u663e\u7136\u80fd\u4f53\u73b0\u51fa\u4f18\u52bf\u3002</p> <ul> <li>\u53ef\u6269\u5c55\u6027\uff1a</li> </ul> <p>\u7531\u4e8e Hive \u662f\u5efa\u7acb\u5728 Hadoop \u4e4b\u4e0a\u7684\u3002\u56e0\u6b64 Hive \u7684\u53ef\u6269\u5c55\u6027\u548c Hadoop \u7684\u53ef\u6269\u5c55\u6027\u662f\u4e00\u81f4\u7684\uff1b\u800c\u6570\u636e\u5e93\u7531\u4e8e ACID \u8bed\u4e49\u7684\u4e25\u683c\u9650\u5236\uff0c\u6269\u5c55\u6027\u975e\u5e38\u6709\u9650\u3002\u76ee\u524d\u6700\u5148\u8fdb\u7684\u5e76\u884c\u6570\u636e\u5e93 Oracle \u5728\u7406\u8bba\u4e0a\u7684\u6269\u5c55\u80fd\u529b\u4e5f\u53ea\u6709 100 \u53f0\u5de6\u53f3\u3002</p> <ul> <li>\u6570\u636e\u89c4\u6a21\uff1a</li> </ul> <p>\u7531\u4e8e Hive \u5efa\u7acb\u5728\u96c6\u7fa4\u4e0a\u5e76\u53ef\u4ee5\u5229\u7528 MapReduce \u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\uff0c\u56e0\u6b64\u53ef\u4ee5\u652f\u6301\u5f88\u5927\u89c4\u6a21\u7684\u6570\u636e\uff1b\u5bf9\u5e94\u7684\uff0c\u6570\u636e\u5e93\u53ef\u4ee5\u652f\u6301\u7684\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\u3002</p> <p>OLTP VS OLAP</p> <ul> <li>OLTP(Online Transaction Processing)\uff1a\u8054\u673a\u4e8b\u52a1\u5904\u7406\uff0c\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u6570\u636e\u5e93\u4e8b\u52a1\uff0c\u9002\u5408\u5bf9\u6570\u636e\u8fdb\u884c\u7ba1\u7406\u3001\u66f4\u65b0\u548c\u4fee\u6539</li> <li>OLAP(Online Analytical Processing)\uff1a\u8054\u673a\u5206\u6790\u5904\u7406\uff0c\u4e3b\u8981\u7528\u4e8e\u5bf9\u5386\u53f2\u6570\u636e\u8fdb\u884c\u5206\u6790\uff0c\u9002\u5408\u5bf9\u6570\u636e\u8fdb\u884c\u8bfb\u548c\u5206\u6790</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_3","title":"Hive \u7684\u7ec4\u6210","text":"<p>\u5ba2\u6237\u7aef\u7ec4\u4ef6\uff1a</p> <ul> <li>CLI\uff1a\u901a\u8fc7\u547d\u4ee4\u884c\u7684\u65b9\u5f0f\u8fd0\u884c Hive \u5ba2\u6237\u7aef</li> <li>Web UI\uff1a\u901a\u8fc7\u7f51\u9875\u8bbf\u95ee Hive \u63d0\u4f9b\u7684\u670d\u52a1</li> </ul> <p>\u670d\u52a1\u7aef\u7ec4\u4ef6\uff1a</p> <ul> <li>Driver\uff1a\u5305\u542b\u89e3\u6790\u5668\u3001\u7f16\u8bd1\u5668\u3001\u4f18\u5316\u5668\u548c\u6267\u884c\u5668\uff0c\u4f5c\u7528\u662f\u5bf9 HQL \u8fdb\u884c\u89e3\u6790\u3001\u7f16\u8bd1\u3001\u4f18\u5316\u3001\u751f\u6210\u6267\u884c\u8ba1\u5212\uff0c\u63d0\u4ea4\u7ed9\u5e95\u5c42\u7684\u6267\u884c\u5f15\u64ce</li> <li>MetaStore\uff1a\u5b58\u50a8\u5143\u6570\u636e\uff08\u8868\u540d\u3001\u8868\u6240\u5c5e\u6570\u636e\u5e93\u3001\u8868\u7c7b\u578b\u3001\u8868\u6570\u636e\u6240\u5728\u76ee\u5f55\u7b49\uff09\uff0c\u9ed8\u8ba4\u4f7f\u7528\u81ea\u5e26\u7684 Derby \u6570\u636e\u5e93\uff0c\u4f46\u7f3a\u70b9\u662f\u65e0\u6cd5\u5e76\u53d1\u8fd0\u884c 2 \u4e2a Hive CLI \u5b9e\u4f8b\uff0c\u56e0\u6b64\u63a8\u8350\u4f7f\u7528 MySQL \u6570\u636e\u5e93\u6765\u5b58\u50a8\u5143\u6570\u636e</li> <li>HiveServer2\uff1a\u670d\u52a1\u7aef\u63a5\u53e3\uff0c\u901a\u8fc7 Thrift \u534f\u8bae\u63d0\u4f9b\u5bf9 Hive \u7684\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 JDBC/ODBC \u6765\u8bbf\u95ee Hive\uff0c\u652f\u6301\u591a\u5ba2\u6237\u7aef\u5e76\u53d1\u548c\u8eab\u4efd\u9a8c\u8bc1</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive-sql","title":"Hive SQL \u7f16\u8bd1\u8fc7\u7a0b","text":"<p>\u6df1\u5ea6\u597d\u6587\uff1aHive SQL \u7684\u7f16\u8bd1\u8fc7\u7a0b - \u7f8e\u56e2\u6280\u672f\u56e2\u961f (meituan.com)</p> <p></p> <p>Hive \u5c06 SQL \u8f6c\u5316\u4e3a MapReduce \u4efb\u52a1\uff0c\u6574\u4e2a\u7f16\u8bd1\u8fc7\u7a0b\u5206\u4e3a\u516d\u4e2a\u9636\u6bb5:</p> <ol> <li>\u89e3\u6790\u5668\uff08SQLParser\uff09\uff1a\u8bcd\u6cd5\u3001\u8bed\u6cd5\u89e3\u6790\uff0c\u5c06 SQL \u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09</li> <li>\u8bed\u4e49\u89e3\u6790\uff08Semantic Analyzer\uff09\uff1a\u5c06 AST \u8fdb\u4e00\u6b65\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u67e5\u8be2\u5355\u5143\uff08QueryBlock\uff09\uff0c\u5e76\u5c06 Hive \u4e2d\u7684\u5143\u4fe1\u606f\u8d4b\u7ed9\u6bcf\u4e2a QueryBlock</li> <li>\u903b\u8f91\u8ba1\u5212\u751f\u6210\u5668\uff08Logical Plan Gen\uff09\uff1a\u901a\u8fc7\u8bed\u6cd5\u6811\u751f\u6210\u903b\u8f91\u6267\u884c\u8ba1\u5212\uff08OperatorTree\uff09</li> <li>\u903b\u8f91\u4f18\u5316\u5668\uff08Logical Optimizer\uff09\uff1a\u5bf9\u903b\u8f91\u8ba1\u5212\u8fdb\u884c\u4f18\u5316\uff08\u5982\u8c13\u8bcd\u4e0b\u63a8\u3001\u6295\u5f71\u526a\u5207\uff09</li> <li>\u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\uff08Physical Plan Gen\uff09\uff1a\u6839\u636e\u4f18\u5316\u540e\u7684\u903b\u8f91\u8ba1\u5212\u751f\u6210\u7269\u7406\u8ba1\u5212\uff08\u904d\u5386 OperatorTree\uff0c\u7ffb\u8bd1\u4e3a MR \u4efb\u52a1\uff09</li> <li>\u7269\u7406\u4f18\u5316\u5668\uff08Physical Optimizer\uff09\uff1a\u5bf9\u7269\u7406\u8ba1\u5212\u8fdb\u884c\u4f18\u5316\uff08\u5bf9 MR \u4efb\u52a1\u7684\u53d8\u6362\uff0c\u5982 Map Join\uff09</li> </ol> <p></p> <p></p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_4","title":"Hive \u5de5\u4f5c\u539f\u7406/\u6267\u884c\u6d41\u7a0b","text":"<ol> <li>\u7528\u6237\u63d0\u4ea4\u67e5\u8be2\u4efb\u52a1\u7ed9 Driver</li> <li>Driver \u5c06\u67e5\u8be2\u53d1\u9001\u5230\u7f16\u8bd1\u5668\u4ee5\u751f\u6210\u6267\u884c\u8ba1\u5212</li> <li>\u7f16\u8bd1\u5668\u4ece MetaStore \u4e2d\u83b7\u53d6\u6240\u9700\u8981\u7684\u5143\u6570\u636e\u4fe1\u606f</li> <li>\u7f16\u8bd1\u5668\u5bf9 HQL \u8fdb\u884c\u7f16\u8bd1\uff0c\u4f1a\u7ecf\u5386\u8bed\u6cd5\u89e3\u6790\uff08AST\uff09\u3001\u8bed\u4e49\u89e3\u6790\uff08QueryBlock\uff09\u3001\u751f\u6210\u903b\u8f91\u8ba1\u5212\u3001\u4f18\u5316\u903b\u8f91\u8ba1\u5212\u3001\u751f\u6210\u7269\u7406\u8ba1\u5212\u3001\u4f18\u5316\u7269\u7406\u8ba1\u5212\u7b49\u8fc7\u7a0b</li> <li>\u7f16\u8bd1\u5668\u5c06\u6700\u7ec8\u7684\u6267\u884c\u8ba1\u5212\u8fd4\u56de\u7ed9 Driver</li> <li>Driver \u5c06\u6267\u884c\u8ba1\u5212\u63d0\u4ea4\u7ed9\u6267\u884c\u5f15\u64ce\uff08Execution Engine\uff09\u53bb\u6267\u884c\uff0c \u6267\u884c\u5f15\u64ce\u5c06 MR \u4efb\u52a1\u63d0\u4ea4\u7ed9 Job Tracker</li> <li>\u4efb\u52a1\u6267\u884c\u5b8c\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9 Driver \u5e76\u8fd4\u56de\u7ed9\u7528\u6237</li> </ol>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#mapreduce","title":"\u4e3a\u4ec0\u4e48 MapReduce \u7684\u6267\u884c\u6548\u7387\u5f88\u4f4e\uff1f","text":"<p>MapReduce \u7684\u6267\u884c\u6548\u7387\u5f88\u4f4e\uff0c\u8fd9\u79cd\u4f4e\u6548\u662f\u7531\u5b83\u7684\u6267\u884c\u6a21\u5f0f\u51b3\u5b9a\u7684\uff0c\u6240\u6709\u7684 MapTask\u3001ReduceTask \u5168\u90e8\u662f\u4ee5\u8fdb\u7a0b\u7684\u65b9\u5f0f\u6267\u884c\u7684\uff0c\u8981\u542f\u52a8\u8fdb\u7a0b\u3001\u9500\u6bc1\u8fdb\u7a0b\uff0c\u5373\u4f7f\u53ef\u4ee5\u5f00\u542f JVM \u91cd\u7528\uff0c\u4f46\u662f\u4e5f\u662f\u7528\u7684\u65f6\u5019\u5f00\u542f\uff0c\u7ed3\u675f\u4e4b\u540e\u5173\u95ed\uff0c\u800c\u4e14 JVM \u6210\u672c\u5f88\u9ad8\u3002</p> <p>\u968f\u7740\u65f6\u4ee3\u7684\u53d1\u5c55\uff0c\u4eba\u4eec\u5f00\u53d1\u51fa\u8ba1\u7b97\u5904\u7406\u80fd\u529b\u66f4\u5f3a\u5927\u7684\u6570\u636e\u5904\u7406\u5de5\u5177\uff0c\u5982 Spark\u3001 Tez \u7b49\uff0c\u6240\u4ee5 Hive \u5e95\u5c42\u6240\u652f\u6301\u7684\u6267\u884c\u5f15\u64ce\u6709 MapReduce\u3001Spark\u3001Tez\u3002</p> <p>\u5f00\u6e90 SQL-on-Hadoop \u7cfb\u7edf\u4e00\u89c8 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#metastore","title":"MetaStore \u5185\u5d4c\u6a21\u5f0f\u3001\u672c\u5730\u6a21\u5f0f\u3001\u8fdc\u7a0b\u6a21\u5f0f","text":"<ul> <li>Embedded metastore\uff1a\u5185\u5d4c\u6a21\u5f0f</li> </ul> <p>\u5176\u7279\u70b9\u662f\uff1ahive \u670d\u52a1\u548c metastore \u670d\u52a1\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0cderby \u670d\u52a1\u4e5f\u8fd0\u884c\u5728\u8be5\u8fdb\u7a0b\u4e2d\u3002\u8be5\u6a21\u5f0f\u65e0\u9700\u7279\u6b8a\u914d\u7f6e\u3002</p> <ul> <li>Local metastore\uff1a\u672c\u5730\u6a21\u5f0f</li> </ul> <p>\u5176\u7279\u70b9\u662f\uff1ahive \u670d\u52a1\u548c metastore \u670d\u52a1\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0cmysql \u662f\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fdc\u7a0b\u673a\u5668\u4e0a\u3002\u8be5\u6a21\u5f0f\u53ea\u9700\u5c06 <code>hive-site.xml</code> \u4e2d\u7684 ConnectionURL \u6307\u5411 mysql\uff0c\u5e76\u914d\u7f6e\u597d\u9a71\u52a8\u540d\u3001\u6570\u636e\u5e93\u8fde\u63a5\u8d26\u53f7\u5373\u53ef\u3002</p> <ul> <li>Remote metastore\uff1a\u8fdc\u7a0b\u6a21\u5f0f</li> </ul> <p>\u5176\u7279\u70b9\u662f\uff1ahive \u670d\u52a1\u548c metastore \u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u5185\uff0c\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u673a\u5668\u3002 \u8be5\u6a21\u5f0f\u9700\u8981\u5c06 <code>hive.metastore.local</code> \u8bbe\u7f6e\u4e3a false\uff0c\u5e76\u5c06 <code>hive.metastore.uris</code> \u8bbe\u7f6e\u4e3a metastore \u670d\u52a1\u5668 URI\uff0c\u5982\u6709\u591a\u4e2a metastore \u670d\u52a1\u5668\uff0cURI \u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694\u3002metastore \u670d\u52a1\u5668 URI \u7684\u683c\u5f0f\u4e3a thrift://host:port\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_5","title":"Hive \u5143\u6570\u636e\u6570\u636e\u5e93\u5305\u542b\u7684\u5177\u4f53\u5185\u5bb9","text":"<ul> <li> <p>\u662f\u4ec0\u4e48\uff1a\u672c\u8d28\u4e0a\u662f\u7528\u6765\u5b58\u50a8 hive \u4e2d\u6709\u54ea\u4e9b\u6570\u636e\u5e93\uff0c\u54ea\u4e9b\u8868\uff0c\u8868\u7684\u6a21\u5f0f\uff0c\u76ee\u5f55\uff0c\u5206\u533a\uff0c\u7d22\u5f15\u4ee5\u53ca\u547d\u540d\u7a7a\u95f4\u3002</p> </li> <li> <p>\u505a\u4ec0\u4e48\uff1a\u4e3b\u8981\u7528\u4f5c\u6570\u636e\u7ba1\u7406\uff0c\u5305\u62ec\u67e5\u770b\u6570\u636e\u8868\u4e4b\u95f4\u7684\u8840\u7f18\u5173\u7cfb\u3001\u67e5\u770b\u6570\u636e\u5b58\u50a8\u3001\u6570\u636e\u8868\u7684\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7b49\u3002</p> </li> </ul> <p>\u5e38\u89c1\u8868\uff1a</p> <ul> <li>DBS\uff1a\u8be5\u8868\u5b58\u50a8 Hive \u4e2d\u6240\u6709\u6570\u636e\u5e93\u7684\u57fa\u672c\u4fe1\u606f</li> <li>DATABASE_PARAMS\uff1a\u8be5\u8868\u5b58\u50a8\u6570\u636e\u5e93\u7684\u76f8\u5173\u53c2\u6570\uff08\u521b\u5efa\u6570\u636e\u5e93\u65f6\u7684 WITH DBPROPERTIES \u4e2d\u7684\u5185\u5bb9\u5c31\u5b58\u5728\u8fd9\uff09</li> <li>TBLS\uff1a\u8be5\u8868\u4e2d\u5b58\u50a8 Hive \u8868\u3001\u89c6\u56fe\u3001\u7d22\u5f15\u8868\u7684\u57fa\u672c\u4fe1\u606f</li> <li>SERDES\uff1a\u8be5\u8868\u5b58\u50a8\u5e8f\u5217\u5316\u4f7f\u7528\u7684\u7c7b\u4fe1\u606f</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_6","title":"Hive \u6570\u636e\u7c7b\u578b","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b \u8bf4\u660e \u5b9a\u4e49 tinyint 1byte \u6709\u7b26\u53f7\u6574\u6570 smallint 2byte \u6709\u7b26\u53f7\u6574\u6570 int 4byte \u6709\u7b26\u53f7\u6574\u6570 bigint 8byte \u6709\u7b26\u53f7\u6574\u6570 boolean \u5e03\u5c14\u7c7b\u578b\uff0ctrue \u6216\u8005 false float \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 double \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 decimal \u5341\u8fdb\u5236\u7cbe\u51c6\u6570\u5b57\u7c7b\u578b decimal(16,2) varchar \u5b57\u7b26\u5e8f\u5217\uff0c\u9700\u6307\u5b9a\u6700\u5927\u957f\u5ea6\uff0c\u6700\u5927\u957f\u5ea6\u7684\u8303\u56f4\u662f [1,65535] varchar(32) string \u5b57\u7b26\u4e32\uff0c\u65e0\u9700\u6307\u5b9a\u6700\u5927\u957f\u5ea6 timestamp \u65f6\u95f4\u7c7b\u578b binary \u4e8c\u8fdb\u5236\u6570\u636e <p>\u96c6\u5408\u6570\u636e\u7c7b\u578b\u5982\u4e0b\uff1a</p> \u7c7b\u578b \u8bf4\u660e \u5b9a\u4e49 \u53d6\u503c array \u6570\u7ec4\u662f\u4e00\u7ec4\u76f8\u540c\u7c7b\u578b\u7684\u503c\u7684\u96c6\u5408 <code>array&lt;string&gt;</code> <code>arr[0]</code> map map \u662f\u4e00\u7ec4\u76f8\u540c\u7c7b\u578b\u7684\u952e\u503c\u5bf9\u96c6\u5408 <code>map&lt;string, int&gt;</code> <code>map['key']</code> struct \u7ed3\u6784\u4f53 <code>struct&lt;id:int, name:string&gt;</code> <code>struct.id</code> <p>\u901a\u8fc7\u96c6\u5408\u7c7b\u578b\u6765\u5b9a\u4e49\u5217\u7684\u597d\u5904\u662f\u4ec0\u4e48?</p> <p>\u5728\u5927\u6570\u636e\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u9075\u5faa\u6807\u51c6\u683c\u5f0f\u7684\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u53ef\u4ee5\u63d0\u4f9b\u66f4\u9ad8\u541e\u5410\u91cf\u7684\u6570\u636e\u3002\u5f53\u5904\u7406\u7684\u6570\u636e\u7684\u6570\u91cf\u7ea7\u662f T \u6216\u8005 P \u65f6\uff0c\u4ee5\u6700\u5c11\u7684\u300c\u5934\u90e8\u5bfb\u5740\u300d\u6765\u4ece\u78c1\u76d8\u4e0a\u626b\u63cf\u6570\u636e\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002\u6309\u6570\u636e\u96c6\u8fdb\u884c\u5c01\u88c5\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11\u5bfb\u5740\u6b21\u6570\u6765\u63d0\u4f9b\u67e5\u8be2\u7684\u901f\u5ea6\u3002\u800c\u5982\u679c\u6839\u636e\u5916\u952e\u5173\u7cfb\u5173\u8054\u7684\u8bdd\u5219\u9700\u8981\u8fdb\u884c\u78c1\u76d8\u95f4\u7684\u5bfb\u5740\u64cd\u4f5c\uff0c\u8fd9\u6837\u4f1a\u6709\u975e\u5e38\u9ad8\u7684\u6027\u80fd\u6d88\u8017\u3002</p> <p>\u96c6\u5408\u7c7b\u578b\u7684\u5e94\u7528\u573a\u666f</p> <ul> <li>map \u7c7b\u578b\u5e38\u7528\u6765\u505a\u6269\u5c55\u5b57\u6bb5\uff0c\u907f\u514d\u591a\u6b21\u4fee\u6539\u8868\u7ed3\u6784</li> <li>array \u7c7b\u578b\u5e38\u5e38\u51fa\u73b0\u5728\u884c\u5217\u8f6c\u5316\u4e2d</li> </ul> <p>Hive \u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u505a\u7c7b\u578b\u8f6c\u6362\uff0c\u8f6c\u6362\u7684\u65b9\u5f0f\u5305\u62ec\u9690\u5f0f\u8f6c\u6362\u4ee5\u53ca\u663e\u5f0f\u8f6c\u6362\u3002</p> <p>\u9690\u5f0f\u8f6c\u6362\uff1a</p> <ul> <li>\u4efb\u4f55\u6574\u6570\u7c7b\u578b\u90fd\u53ef\u4ee5\u9690\u5f0f\u5730\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8303\u56f4\u66f4\u5e7f\u7684\u7c7b\u578b\uff0c\u5982 tinyint \u53ef\u4ee5\u8f6c\u6362\u6210 int\uff0cint \u53ef\u4ee5\u8f6c\u6362\u6210 bigint</li> <li>\u6240\u6709\u6574\u6570\u7c7b\u578b\u3001float \u548c string \u7c7b\u578b\u90fd\u53ef\u4ee5\u9690\u5f0f\u5730\u8f6c\u6362\u6210 double</li> <li>tinyint\u3001smallint\u3001int \u90fd\u53ef\u4ee5\u8f6c\u6362\u4e3a float</li> <li>boolean \u7c7b\u578b\u4e0d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u5b83\u7684\u7c7b\u578b</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_7","title":"Hive \u8bfb\u5199\u6587\u4ef6\u6d41\u7a0b","text":"<p>\u5f53\u8fdb\u7a0b\u5728\u8fdb\u884c\u8fdc\u7a0b\u901a\u4fe1\u65f6\uff0c\u53d1\u9001\u65b9\u9700\u8981\u628a\u5bf9\u8c61\u8f6c\u5316\u4e3a\u5b57\u8282\u5e8f\u5217\u624d\u53ef\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\uff0c\u79f0\u4e3a\u5bf9\u8c61\u5e8f\u5217\u5316\uff1b\u63a5\u6536\u65b9\u5219\u9700\u8981\u628a\u5b57\u8282\u5e8f\u5217\u6062\u590d\u4e3a\u5bf9\u8c61\uff0c \u79f0\u4e3a\u5bf9\u8c61\u7684\u53cd\u5e8f\u5217\u5316\u3002</p> <p>\u8bfb\u8fc7\u7a0b\uff1aHDFS files --&gt; InputFileFormat --&gt; <code>&lt;key,value&gt;</code> --&gt; Deserializer(\u53cd\u5e8f\u5217\u5316) --&gt; Row Object</p> <p>Hive \u8bfb\u53d6\u6587\u4ef6\u65f6\u9996\u5148\u8c03\u7528 InputFormat\uff08\u9ed8\u8ba4 TextInputFormat\uff09\uff0c\u8fd4\u56de\u4e00\u6761\u4e00\u6761 kv \u952e\u503c\u5bf9\u8bb0\u5f55\uff08\u9ed8\u8ba4\u662f\u4e00\u884c\u5bf9\u5e94\u4e00\u6761\u8bb0\u5f55\uff09\u3002\u7136\u540e\u8c03\u7528 SerDe\uff08\u9ed8\u8ba4 LazySimpleSerDe\uff09\u7684 Deserializer\uff0c\u5c06\u4e00\u6761\u8bb0\u5f55\u4e2d\u7684 value \u6839\u636e\u5206\u9694\u7b26\u5207\u5206\u4e3a\u5404\u4e2a\u5b57\u6bb5\u3002</p> <p>\u5199\u8fc7\u7a0b\uff1aRow Object --&gt; serializer(\u5e8f\u5217\u5316) --&gt; <code>&lt;key,value&gt;</code> --&gt; OutputFileFormat --&gt; HDFS files</p> <p>Hive \u5199\u6587\u4ef6\u65f6\uff0c\u9996\u5148\u8c03\u7528 SerDe\uff08\u9ed8\u8ba4 LazySimpleSerDe\uff09\u7684 Serializer \u5c06\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u8282\u5e8f\u5217\uff0c\u7136\u540e\u8c03\u7528 OutputFormat \u5c06\u6570\u636e\u5199\u5165 HDFS \u6587\u4ef6\u4e2d\u3002</p> <p></p> <p>\u5728 Hive \u7684 HQL \u8bed\u53e5\u4e2d\uff0cselect \u65f6\u5c06\u4f1a\u7528\u5230\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c insert \u65f6\u4f1a\u7528\u5230\u5e8f\u5217\u5316\u64cd\u4f5c\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_1","title":"\u5185\u90e8\u8868\u548c\u5916\u90e8\u8868\u7684\u533a\u522b","text":"<ul> <li>\u5b58\u50a8\u4f4d\u7f6e\uff1a\u5185\u90e8\u8868\u7684\u6570\u636e\u7531 Hive \u81ea\u8eab\u7ba1\u7406\uff0c\u5b58\u50a8\u5728\u6570\u636e\u4ed3\u5e93\u6307\u5411\u7684\u8def\u5f84\uff08\u9ed8\u8ba4\u4e3a <code>user/hive/warehouse</code>\uff09\uff1b\u5916\u90e8\u8868\u7684\u6570\u636e\u5b58\u50a8\u5728 HDFS \u4e2d\uff0cHive \u4ec5\u4ec5\u8bb0\u5f55\u6570\u636e\u7684\u6240\u5728\u8def\u5f84</li> <li>\u5220\u9664\u8868\u4e4b\u540e\uff1a\u5185\u90e8\u8868\u5220\u9664\u4e4b\u540e\uff0c\u8868\u7684\u5143\u6570\u636e\u548c\u5b9e\u9645\u6570\u636e\u90fd\u88ab\u5220\u9664\uff1b\u5916\u90e8\u8868\u5220\u9664\u540e\uff0c\u4ec5\u4ec5\u5220\u9664\u8868\u7684\u5143\u6570\u636e\uff0c\u5b9e\u9645\u6570\u636e\u4e0d\u4f1a\u88ab\u5220\u9664</li> <li>\u5efa\u8868\u8bed\u6cd5\uff1a\u5916\u90e8\u8868\u5728\u521b\u5efa\u65f6\u9700\u8981\u52a0\u4e0a external \u5173\u952e\u5b57</li> <li>\u5bf9\u5185\u90e8\u8868\u7684\u4fee\u6539\u4f1a\u5c06\u4fee\u6539\u76f4\u63a5\u540c\u6b65\u7ed9\u5143\u6570\u636e\uff0c\u800c\u5bf9\u5916\u90e8\u8868\u7684\u8868\u7ed3\u6784\u548c\u5206\u533a\u8fdb\u884c\u4fee\u6539\uff0c\u5219\u9700\u8981\u4fee\u590d\uff08<code>MSCK REPAIR TABLE table_name;</code>\uff09</li> </ul> <p>\u5e94\u7528\u573a\u666f\uff1a</p> <ul> <li>\u5916\u90e8\u8868\u9002\u5408\u5c06\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u6587\u4ef6\u5bfc\u5165\u5230 Hive \u4e2d\u8fdb\u884c\u53ea\u8bfb\u7684\u5206\u6790\uff0c\u4e5f\u80fd\u65b9\u4fbf\u5171\u4eab\u6765\u81ea\u5176\u4ed6\u7cfb\u7edf\u7684\u6570\u636e</li> <li>\u5185\u90e8\u8868\u7531\u4e8e\u5220\u9664\u65f6\u4f1a\u540c\u65f6\u5220\u9664\u6570\u636e\u6587\u4ef6\uff0c\u5bf9\u5185\u90e8\u8868\u7684\u7ed3\u6784\u4fee\u6539\u4e5f\u4f1a\u540c\u6b65\u7ed9\u5143\u6570\u636e\uff0c\u56e0\u6b64\u9002\u5408\u5bf9\u8868\u8fdb\u884c\u4fee\u6539\u3001\u5220\u9664\u64cd\u4f5c\u3002\u5982\u505a etl \u5904\u7406\u65f6\uff0c\u901a\u5e38\u4f1a\u9009\u62e9\u5185\u90e8\u8868\u505a\u4e2d\u95f4\u8868\uff0c\u56e0\u4e3a\u6e05\u7406\u65f6\uff0c\u4f1a\u5c06 HDFS \u4e0a\u7684\u6587\u4ef6\u540c\u65f6\u5220\u9664</li> </ul> <p>\u5982\u4f55\u67e5\u770b\u4e00\u4e2a\u8868\u662f\u5185\u90e8\u8868\u8fd8\u662f\u5916\u90e8\u8868\uff1f</p> <pre><code>describe extended tablename;\n</code></pre> <p>\u5185\u90e8\u8868\u548c\u5916\u90e8\u8868\u7684\u8f6c\u6362</p> <pre><code>--- \u5185\u90e8\u8868\u8f6c\u5916\u90e8\u8868\nalter table testA set TBLPROPERTIES (\"EXTERNAL\"=\"TRUE\")\n--- \u5916\u90e8\u8868\u8f6c\u6362\u5185\u90e8\u8868\nalter table testB set TBLPROPTIES (\"EXTERNAL\"=\"FALSE\")\n</code></pre>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_2","title":"\u5206\u533a\u8868","text":"<p>\u5206\u533a\u662f\u5c06\u8868\u6309\u7167\u67d0\u4e2a\u5217\u7684\u503c\u8fdb\u884c\u5212\u5206\uff0c\u7136\u540e\u5c06\u8868\u7684\u6570\u636e\u6309\u7167\u4e0d\u540c\u5206\u533a\u5206\u6563\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u76ee\u5f55\u4e0b\u3002</p> <p>\u5206\u533a\u7684\u76ee\u7684\u4e3b\u8981\u662f\u4e3a\u4e86\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u5927\u89c4\u6a21\u7684\u8868\uff0c\u4f7f\u7528\u5206\u533a\u53ef\u4ee5\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\uff0c\u51cf\u5c11\u626b\u63cf\u7684\u6570\u636e\u91cf\u3002\u53e6\u5916\uff0c\u5206\u533a\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u67e5\u8be2\u7684\u5e76\u53d1\u5ea6\u3002</p> <p>\u5206\u533a\u662f\u4ee5\u5b57\u6bb5\u7684\u5f62\u5f0f\u5728\u8868\u7ed3\u6784\u4e2d\u5b58\u5728\uff0c\u4f46\u662f\u8be5\u5b57\u6bb5\u4e0d\u5b58\u653e\u5b9e\u9645\u7684\u6570\u636e\u5185\u5bb9\uff0c\u4ec5\u4ec5\u662f\u5206\u533a\u7684\u8868\u793a\u3002</p> <p>\u521b\u5efa\u5206\u533a\u8868\uff1a</p> <pre><code>create table dept_partition\n(\n    deptno int, --\u90e8\u95e8\u7f16\u53f7\n    dname string, --\u90e8\u95e8\u540d\u79f0\n    loc string --\u90e8\u95e8\u4f4d\u7f6e\n)\npartitioned by (day string)\nrow format delimited fields terminated by '\\t';\n</code></pre> <p>\u5c06\u6570\u636e\u5199\u5165\u5206\u533a\u8868\uff1a</p> <ul> <li>load \u65b9\u5f0f</li> </ul> <pre><code>load data local inpath '/datas/dept_20220401.log'\ninto table dept_partition\npartition(day='20220401');\n</code></pre> <ul> <li>insert \u65b9\u5f0f</li> </ul> <p>\u5c06 day='20220401' \u5206\u533a\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd\u63d2\u5165\u5230 day='20220402' \u5206\u533a</p> <pre><code>insert overwrite table dept_partition partition(day = '20220402')\nselect deptno, dname, loc\nfrom dept_partition\nwhere day = '2020-04-01';\n</code></pre> <p>\u4fee\u590d\u5206\u533a\uff1a</p> <p>Hive \u5c06\u5206\u533a\u8868\u7684\u6240\u6709\u5206\u533a\u4fe1\u606f\u90fd\u4fdd\u5b58\u5728\u4e86\u5143\u6570\u636e\u4e2d\uff0c\u53ea\u6709\u5143\u6570\u636e\u4e0e HDFS \u4e0a\u7684\u5206\u533a\u8def\u5f84\u4e00\u81f4\u65f6\uff0c\u5206\u533a\u8868\u624d\u80fd\u6b63\u5e38\u8bfb\u5199\u6570\u636e\u3002\u82e5\u7528\u6237\u624b\u52a8\u521b\u5efa/\u5220\u9664\u5206\u533a\u8def\u5f84\uff0cHive \u90fd\u662f\u611f\u77e5\u4e0d\u5230\u7684\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4 Hive \u7684\u5143\u6570\u636e\u548c HDFS \u7684\u5206\u533a\u8def\u5f84\u4e0d\u4e00\u81f4\u3002</p> <p>\u82e5\u5206\u533a\u5143\u6570\u636e\u548c HDFS \u7684\u5206\u533a\u8def\u5f84\u4e0d\u4e00\u81f4\uff0c\u8fd8\u53ef\u4f7f\u7528 msck \u547d\u4ee4\u8fdb\u884c\u4fee\u590d</p> <pre><code>msck repair table table_name [add/drop/sync partitions];\n</code></pre>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_3","title":"\u9759\u6001\u5206\u533a\u548c\u52a8\u6001\u5206\u533a","text":"<p>\u52a8\u6001\u5206\u533a\u662f\u6307\u5411\u5206\u533a\u8868 insert \u6570\u636e\u65f6\uff0c\u88ab\u5199\u5165\u7684\u5206\u533a\u4e0d\u7531\u7528\u6237\u6307\u5b9a\uff0c\u800c\u662f\u7531\u6bcf\u884c\u6570\u636e\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bb5\u7684\u503c\u6765\u52a8\u6001\u5730\u51b3\u5b9a\u3002\u4f7f\u7528\u52a8\u6001\u5206\u533a\uff0c\u53ef\u53ea\u7528\u4e00\u4e2a insert \u8bed\u53e5\u5c06\u6570\u636e\u5199\u5165\u591a\u4e2a\u5206\u533a\u3002</p> <p>\u9759\u6001\u5206\u533a\u4e0e\u52a8\u6001\u5206\u533a\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a\u9759\u6001\u5206\u533a\u662f\u624b\u52a8\u6307\u5b9a\uff0c\u800c\u52a8\u6001\u5206\u533a\u662f\u901a\u8fc7\u6570\u636e\u6765\u8fdb\u884c\u5224\u65ad\u3002\u8be6\u7ec6\u6765\u8bf4\uff0c\u9759\u6001\u5206\u533a\u7684\u5217\u662f\u5728\u7f16\u8bd1\u65f6\u671f\uff0c\u901a\u8fc7\u7528\u6237\u4f20\u9012\u6765\u786e\u5b9a\u7684\uff1b\u52a8\u6001\u5206\u533a\u53ea\u6709\u5728 SQL \u6267\u884c\u65f6\u624d\u80fd\u786e\u5b9a\u3002</p> <p>\u9759\u6001\u5206\u533a\uff1a</p> <pre><code>insert into table test partition(dt='20210101')\nselect a, b, c\nfrom source\nwhere dt = '20210101';\n--- test \u5b57\u6bb5\uff1aa, b, c, dt\n</code></pre> <p>\u52a8\u6001\u5206\u533a\uff1a</p> <pre><code>insert into table test partition(dt)\nselect a, b, c, dt\nfrom source\nwhere dt &gt;= '20210101';\n--- \u53ef\u4ee5\u5199\u5165\u591a\u4e2a\u5206\u533a\n</code></pre> <p>\u8981\u4f7f\u7528\u52a8\u6001\u5206\u533a\uff0c\u9700\u8981\u5f00\u542f\u52a8\u6001\u5206\u533a\u529f\u80fd\uff0c\u5e76\u4e14\u8bbe\u7f6e Hive \u4e3a\u975e\u4e25\u683c\u6a21\u5f0f\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_4","title":"\u5206\u6876\u8868","text":"<p>\u5206\u6876\u662f\u6309\u7167\u67d0\u4e2a\u5217\u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u5206\u6876\uff0c\u5c06\u8868\u5206\u6563\u5b58\u50a8\u5230\u4e0d\u540c\u7684\u6876\u4e2d\uff0c\u6bcf\u4e2a\u6876\u7684\u6570\u636e\u91cf\u5927\u81f4\u76f8\u540c\u3002</p> <p>\u4e0e\u5206\u533a\u7684\u533a\u522b\uff1a\u5206\u533a\u8868\u9488\u5bf9\u662f\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u5b58\u50a8\u8def\u5f84\uff0c\u5206\u6876\u8868\u5219\u9488\u5bf9\u7684\u662f\u6587\u4ef6\uff0c\u7c92\u5ea6\u66f4\u7ec6\uff0c\u662f\u53e6\u4e00\u79cd\u7ba1\u7406\u6570\u636e\u7684\u65b9\u5f0f\u3002</p> <p>\u6570\u636e\u5206\u6876\u7684\u539f\u7406: Hive \u4e2d\u6309\u7167\u5206\u6876\u5b57\u6bb5\u7684 hash \u503c\u53bb\u6a21\u4ee5\u5206\u6876\u7684\u4e2a\u6570\u3002</p> <p>\u5206\u6876\u7684\u4f5c\u7528\uff1a</p> <ul> <li>\u63d0\u9ad8\u67e5\u8be2\u6548\u7387</li> </ul> <p>\u5168\u8868\u67e5\u8be2\u8f6c\u6362\u6210\u6876\u67e5\u8be2\uff0c\u67e5\u8be2\u7684\u5e76\u53d1\u5ea6\u66f4\u9ad8\u3002</p> <ul> <li>\u5927\u8868 join</li> </ul> <p>\u5bf9\u4e8e\u4e24\u5f20\u5927\u8868\u7684 join\uff0c\u6267\u884c reduce join(shuffle join)\u80af\u5b9a\u4e0d\u5408\u9002\uff0c\u53ea\u80fd\u505a map join\u3002\u4f46\u662f reduce join \u53ea\u9002\u5408\u505a\u5c0f\u8868\u548c\u5927\u8868\u7684 join\uff0c\u5982\u4f55\u505a\u5927\u8868\u95f4\u7684 join \u5462\uff1f\u6b64\u65f6\u53ef\u4ee5\u5bf9\u4e24\u5f20\u5927\u8868\u7684\u8fde\u63a5\u5b57\u6bb5\u5206\u6876\uff0c\u6b64\u65f6\u7684 join \u662f\u6309\u7167\u6876\u6765\u7684\uff0c\u5b57\u6bb5\u503c\u76f8\u540c\u7684 record \u4f1a\u8fdb\u5165\u540c\u4e00\u4e2a\u6876\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u4e24\u5f20\u5927\u8868\u7684\u5206\u6876\u6570\u91cf\u4e0a\u5fc5\u987b\u662f\u500d\u6570\u5173\u7cfb\uff0c\u786e\u4fdd\u5bf9\u4e8e\u8fde\u63a5\u6761\u4ef6\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u89e3\u91ca\uff1a\u5982\u679c\u8fde\u63a5\u5b57\u6bb5\u67d0\u4e00\u4e2a\u503c\u7684 hashcode \u4e3a 8\uff0cA \u8868\u5206 4 \u6876\uff0cB \u8868\u5206 5 \u6876\uff0c\u5219\u8be5 \u503c\u5728 A \u8868\u8fdb\u5165 0 \u53f7\u6876\uff0c\u5728 B \u8868\u8fdb\u5165 3 \u53f7\u6876\uff0c\u6b64\u65f6 join \u7684\u8fde\u63a5\u6761\u4ef6\u5c31\u4e0d\u4e00\u81f4\u4e86\u3002 \u8981\u60f3\u5728 map \u7aef\u6267\u884c\u6876 join\uff0c\u5fc5\u987b\u8bbe\u7f6e <code>hive.optimize.bucketmapjoin=true</code>\u3002</p> <ul> <li>\u62bd\u6837\u67e5\u8be2</li> </ul> <p>\u5206\u6876\u53ef\u4ee5\u7528\u4e8e\u5bf9\u8868\u8fdb\u884c\u62bd\u6837\uff0c\u5bf9\u4e8e\u5927\u89c4\u6a21\u7684\u8868\uff0c\u65e0\u9700\u626b\u63cf\u5168\u8868\u5373\u53ef\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u62bd\u6837\u5206\u6790\u3002</p> <p>\u5206\u6876\u548c\u5206\u533a\u7684\u533a\u522b</p> <ul> <li>\u5206\u533a\u662f\u5bf9\u5e94\u4e0d\u540c\u7684\u76ee\u5f55\uff08\u7c97\u7c92\u5ea6\uff09\uff0c\u5206\u6876\u662f\u5bf9\u5e94\u4e0d\u540c\u7684\u6587\u4ef6\uff08\u7ec6\u7c92\u5ea6\uff09\u3002</li> <li>\u5206\u533a\u662f\u975e\u968f\u673a\u5730\u5206\u5272\u6570\u636e\uff0c\u800c\u5206\u6876\u662f\u6309\u7167\u5217\u7684\u54c8\u5e0c\u51fd\u6570\u8fdb\u884c\u5206\u5272\u7684\uff0c\u56e0\u6b64\u662f\u968f\u673a\u5206\u5272\u7684\uff0c\u4e5f\u76f8\u5bf9\u6bd4\u8f83\u5e73\u5747\u3002</li> <li>\u5206\u533a\u901a\u5e38\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u903b\u8f91\u4e0a\u7684\u5206\u7c7b\u548c\u7ec4\u7ec7\uff0c\u5206\u6876\u5219\u5e38\u5e38\u7528\u4e8e\u4f18\u5316 join \u64cd\u4f5c\u6216\u8005\u5bf9\u5927\u89c4\u6a21\u6570\u636e\u8fdb\u884c\u62bd\u6837\u3002</li> </ul> <p>\u5206\u6876\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4f18\u5316 join \u64cd\u4f5c\uff1f</p> <p>\u5206\u6876\u4e3b\u8981\u662f\u7528\u4e8e\u4f18\u5316\u5927\u8868\u548c\u5927\u8868\u7684 join\uff0c\u5982\u679c\u5927\u8868 join \u5927\u8868\u91c7\u7528 reduce join \u7684\u8bdd\uff0c\u4e0d\u4ec5\u6162\uff0c\u8fd8\u53ef\u80fd shuffle \u6570\u636e\u91cf\u8fc7\u5927\u4ea7\u751f\u5f02\u5e38\u3002</p> <ul> <li>\u5206\u6876\u53ef\u4ee5\u5c06\u5927\u8868\u7684\u6570\u636e\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u6876\uff0c\u5206\u522b\u5728 Map \u7aef\u505a join\u3002\u7531\u4e8e\u5206\u6876\u65f6\uff0c\u9700\u8981\u8ba1\u7b97\u5206\u6876\u5b57\u6bb5\u7684\u54c8\u5e0c\u503c % \u5206\u6876\u4e2a\u6570\u7684\u4e00\u4e2a\u503c\uff0c\u6839\u636e\u8fd9\u4e2a\u503c\u5c06\u6570\u636e\u653e\u5230\u4e0d\u540c\u7684\u6876\u91cc\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u76f8\u540c key \u7684\u6570\u636e\u4f1a\u5728\u4e00\u4e2a\u6876\u91cc\uff0c\u56e0\u6b64\u5728 join \u7684\u65f6\u5019\u4e0d\u9700\u8981\u5168\u8868\u626b\u63cf\uff0c\u53ea\u9700\u8981\u53bb\u626b\u63cf\u5bf9\u5e94\u6876\u4e2d\u7684\u6570\u636e\u5373\u53ef\u3002</li> <li>\u7531\u4e8e\u5206\u6876\u8868\u7684\u6bcf\u4e00\u4e2a\u6876\u4e2d\u7684\u6570\u636e\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u505a map join\uff08SMB Map Join/Sort Merge Bucket Map Join\uff09\u3002</li> </ul> <p>\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u5927\u8868\u8f6c\u6362\u4e3a\u5c0f\u8868\uff0c\u5206\u522b\u505a Map Join\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#order-by-sort-by-distribute-by-cluster-by","title":"Order By, Sort By, Distribute By, Cluster By","text":"<ul> <li>Order By\uff1a\u4f1a\u5bf9\u67e5\u8be2\u7ed3\u679c\u96c6\u6267\u884c\u4e00\u4e2a\u5168\u5c40\u6392\u5e8f\uff0c\u6240\u6709\u6570\u636e\u90fd\u901a\u8fc7\u4e00\u4e2a reducer \u8fdb\u884c\u5904\u7406</li> <li>Sort By\uff1a\u53ea\u80fd\u4fdd\u8bc1\u6bcf\u4e2a reducer \u5185\u90e8\u7684\u6570\u636e\u5c40\u90e8\u6709\u5e8f\uff0c\u5728\u6570\u636e\u8fdb\u5165 reducer \u524d\u5b8c\u6210\u6392\u5e8f</li> <li>Distribute By\uff1a\u6309\u7167\u6307\u5b9a\u5b57\u6bb5\u5bf9\u6570\u636e\u8fdb\u884c\u5212\u5206\uff0c\u8f93\u51fa\u5230\u4e0d\u540c\u7684 reducer \u4e2d\uff0c\u901a\u5e38\u662f\u4e3a\u4e86\u8fdb\u884c\u540e\u7eed\u7684\u805a\u96c6\u64cd\u4f5c\uff0c\u5e38\u4e0e sort by \u914d\u5408\u4f7f\u7528</li> <li>Cluster By\uff1a\u5982\u679c distribute by \u548c order by \u7684\u5b57\u6bb5\u76f8\u540c\uff0c\u5e76\u4e14\u5347\u5e8f\u6392\u5e8f\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 cluster by \u7b80\u5199</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#join-mr","title":"Join \u7684 MR \u5b9e\u73b0\u539f\u7406","text":""},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#common-joinreduce-join","title":"Common Join/Reduce Join","text":"<p>\u5982\u679c\u4e0d\u6307\u5b9a Map Join \u6216\u8005\u4e0d\u7b26\u5408 Map Join \u7684\u6761\u4ef6\uff0c\u90a3\u4e48 Hive \u89e3\u6790\u5668\u4f1a\u5c06 Join \u64cd\u4f5c\u8f6c\u6362\u6210 Common Join\uff0c\u5373\u5728 Reduce \u9636\u6bb5\u5b8c\u6210 join\u3002 \u6574\u4e2a\u8fc7\u7a0b\u5305\u542b Map\u3001Shuffle\u3001Reduce \u9636\u6bb5\u3002</p> <p>Map \u9636\u6bb5\uff1a</p> <ul> <li>Step1\uff1a\u8bfb\u53d6\u6e90\u8868\u7684\u6570\u636e\uff0cMap \u8f93\u51fa\u65f6\u5019\u4ee5 Join on \u6761\u4ef6\u4e2d\u7684\u5b57\u6bb5\u4e3a key\uff0c\u5982\u679c Join \u6709\u591a\u4e2a\u5173\u8054\u952e\uff0c\u5219\u4ee5\u8fd9\u4e9b\u5173\u8054\u952e\u7684\u7ec4\u5408\u4f5c\u4e3a key</li> <li>Step2: Map \u8f93\u51fa\u7684 value \u4e3a join \u4e4b\u540e\u6240\u5173\u5fc3\u7684(select \u6216\u8005 where \u4e2d\u9700\u8981\u7528\u5230\u7684) \u5217\uff1b\u540c\u65f6\u5728 value \u4e2d\u8fd8\u4f1a\u5305\u542b\u8868\u7684 Tag \u4fe1\u606f\uff0c\u7528\u4e8e\u6807\u660e\u6b64 value \u5bf9\u5e94\u54ea\u4e2a\u8868</li> <li>Step3: \u6309\u7167 key \u8fdb\u884c\u6392\u5e8f\u3002</li> </ul> <p>Shuffle \u9636\u6bb5\uff1a</p> <ul> <li>\u6839\u636e key \u7684\u503c\u8fdb\u884c hash\uff0c\u5e76\u5c06 key/value \u6309\u7167 hash \u503c\u5206\u914d\u7ed9\u4e0d\u540c\u7684 reducer\uff0c\u8fd9\u6837\u80fd\u786e\u4fdd\u4e24\u4e2a\u8868\u4e2d\u76f8\u540c\u7684 key \u4f4d\u4e8e\u540c\u4e00\u4e2a reducer \u4e2d\u3002</li> </ul> <p>Reduce \u9636\u6bb5\uff1a</p> <ul> <li>\u6839\u636e key \u7684\u503c\u5b8c\u6210 join \u64cd\u4f5c\uff0c\u671f\u95f4\u901a\u8fc7 Tag \u6765\u8bc6\u522b\u4e0d\u540c\u8868\u4e2d\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#map-join","title":"Map Join","text":"<p>Map Join \u901a\u5e38\u7528\u4e8e\u5c0f\u8868 join \u5927\u8868\u7684\u573a\u666f\uff0c\u5177\u4f53\u5c0f\u8868\u6709\u591a\u5c0f\uff0c\u7531\u53c2\u6570 <code>hive.mapjoin.smalltable.filesize</code> \u6765\u51b3\u5b9a\uff0c\u8be5\u53c2\u6570\u8868\u793a\u5c0f\u8868\u7684\u603b\u5927\u5c0f\u3002</p> <p></p> <p>Map Join \u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u53ea\u6709 map \u9636\u6bb5\u7684 Job \u5b8c\u6210\u4e00\u4e2a join \u64cd\u4f5c\u3002\u82e5\u67d0 join \u64cd\u4f5c\u6ee1\u8db3\u8981\u6c42\uff0c\u5219\u7b2c\u4e00\u4e2a Job \u4f1a\u8bfb\u53d6\u5c0f\u8868\u6570\u636e\uff0c\u5c06\u5176\u5236\u4f5c\u4e3a\u54c8\u5e0c\u8868\uff0c\u5e76\u4e0a\u4f20\u81f3 Hadoop \u5206\u5e03\u5f0f\u7f13\u5b58 (\u672c\u8d28\u4e0a\u662f\u4e0a\u4f20\u81f3 HDFS)\u3002\u7b2c\u4e8c\u4e2a Job \u4f1a\u5148\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u8bfb\u53d6\u5c0f\u8868\u6570\u636e\uff0c\u5e76\u7f13\u5b58\u5728 MapTask \u7684\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u626b\u63cf\u5927\u8868\u6570\u636e\uff0c\u8fd9\u6837\u5728 Map \u7aef\u5373\u53ef\u5b8c\u6210\u5173\u8054\u64cd\u4f5c\u3002</p> <ul> <li> <p>Job1\uff08\u672c\u5730\u4efb\u52a1\uff09\uff1a\u8bfb\u53d6\u5c0f\u8868\u6570\u636e\u3001\u5236\u4f5c\u54c8\u5e0c\u8868\u3001\u4e0a\u4f20\u81f3\u5206\u5e03\u5f0f\u7f13\u5b58</p> </li> <li> <p>Job2\uff1a\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u8bfb\u53d6\u54c8\u5e0c\u8868\u3001\u52a0\u8f7d\u81f3\u5185\u5b58\u3001\u5b8c\u6210 join</p> </li> </ul> <p>Map Join \u7684\u4f18\u70b9\u662f\u53ea\u6709 Map \u9636\u6bb5\uff0c\u4e0d\u5b58\u5728 Shuffle \u548c Reduce \u9636\u6bb5\uff0c\u56e0\u6b64\u6548\u7387\u975e\u5e38\u9ad8\u3002</p> <p>\u89e6\u53d1 Map Join\uff1a</p> <ul> <li>\u5728 SQL \u8bed\u53e5\u4e2d\u589e\u52a0 hint \u63d0\u793a\uff08\u8fc7\u65f6\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\uff09</li> <li>Hive \u4f18\u5316\u5668\u6839\u636e\u8868\u7684\u6570\u636e\u91cf\u5927\u5c0f\u81ea\u52a8\u89e6\u53d1</li> </ul> <p>\u81ea\u52a8\u89e6\u53d1\uff1a</p> <p>Hive \u5728\u7f16\u8bd1 SQL \u8bed\u53e5\u9636\u6bb5\uff0c\u8d77\u521d\u6240\u6709\u7684 Join \u64cd\u4f5c\u5747\u91c7\u7528 Common Join \u7b97\u6cd5\u5b9e\u73b0\u3002</p> <p>\u4e4b\u540e\u5728\u7269\u7406\u4f18\u5316\u9636\u6bb5\uff0cHive \u4f1a\u6839\u636e\u6bcf\u4e2a Common Join \u4efb\u52a1\u6240\u9700\u8868\u7684\u5927\u5c0f\u5224\u65ad\u8be5 Common Join \u4efb\u52a1\u662f\u5426\u80fd\u591f\u8f6c\u6362\u4e3a Map Join \u4efb\u52a1\uff0c\u82e5\u6ee1\u8db3\u8981\u6c42\uff0c\u4fbf\u5c06 Common Join \u4efb\u52a1\u81ea\u52a8\u8f6c\u6362\u4e3a Map Join \u4efb\u52a1\u3002\u5224\u65ad\u6807\u51c6\u4e3a\u5c0f\u8868\u5927\u5c0f\u4e0e\u7528\u6237\u8bbe\u7f6e\u7684\u9608\u503c\uff08MapTask \u5185\u5b58\uff09\u6bd4\u8f83\u3002</p> <p>\u4f46\u6709\u4e9b Common Join \u4efb\u52a1\u6240\u9700\u7684\u8868\u5927\u5c0f\uff0c\u5728 SQL \u7684\u7f16\u8bd1\u9636\u6bb5\u662f\u672a\u77e5\u7684\uff08\u4f8b\u5982\u5148\u8fdb\u884c\u4e00\u4e2a\u5206\u7ec4\u805a\u5408\uff0c\u4e4b\u540e\u518d\u548c\u4e00\u5f20\u8868\u8fdb\u884c Join \u64cd\u4f5c\uff09\uff0c\u6240\u4ee5\u8fd9\u79cd Common Join \u4efb\u52a1\u662f\u5426\u80fd\u8f6c\u6362\u6210 Map Join \u4efb\u52a1\u5728\u7f16\u8bd1\u9636\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\u3002</p> <p>\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0cHive \u4f1a\u5728\u7f16\u8bd1\u9636\u6bb5\u751f\u6210\u4e00\u4e2a\u6761\u4ef6\u4efb\u52a1 (Conditional Task)\uff0c\u5176\u4e0b\u4f1a\u5305\u542b\u4e00\u4e2a\u8ba1\u5212\u5217\u8868\uff0c\u8ba1\u5212\u5217\u8868\u4e2d\u5305\u542b\u8f6c\u6362\u540e\u7684 Map Join \u4efb\u52a1\u4ee5\u53ca\u539f\u6709\u7684 Common Join \u4efb\u52a1\u3002 \u6700\u7ec8\u5177\u4f53\u91c7\u7528\u54ea\u4e2a\u8ba1\u5212\uff0c\u662f\u5728\u8fd0\u884c\u65f6\u51b3\u5b9a\u7684\u3002\u5927\u81f4\u601d\u8def\u5982\u4e0b\u56fe\u6240\u793a:</p> <p>\u5047\u8bbe\u6211\u4eec\u6709 A \u548c B \u4e24\u5f20\u8868\uff0c\u4e24\u5f20\u8868\u7684\u5927\u5c0f\u90fd\u672a\u77e5\uff0c\u90a3\u4e48\u6b64\u65f6 Map Join \u6709 2 \u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u7f13\u5b58 A \u8868\uff0c\u626b\u63cf B \u8868</li> <li>\u7f13\u5b58 B \u8868\uff0c\u626b\u63cf A \u8868</li> </ul> <p>\u56e0\u6b64\u4f1a\u751f\u6210\u591a\u79cd\u6267\u884c\u8ba1\u5212\u3002</p> <p></p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#bucket-map-join","title":"Bucket Map Join","text":"<p>Bucket Map Join \u662f\u5bf9 Map Join \u7684\u6539\u8fdb\uff0c\u5176\u6253\u7834\u4e86 Map Join \u53ea\u9002\u7528\u4e8e\u5927\u8868 join \u5c0f\u8868\u7684\u9650\u5236\uff0c\u53ef\u7528\u4e8e\u5927\u8868 join \u5927\u8868\u7684\u573a\u666f\u3002</p> <p>\u5206\u6876\u7684\u539f\u7406\uff1a\u5bf9\u5206\u6876\u5b57\u6bb5\u8fdb\u884c hash partition\uff0c\u62c6\u5206\u4e3a\u82e5\u5e72\u4e2a\u6587\u4ef6\u3002</p> <p>Bucket Map Join \u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u82e5\u80fd\u4fdd\u8bc1\u53c2\u4e0e join \u7684\u8868\u5747\u4e3a\u5206\u6876\u8868\uff0c\u4e14\u5173\u8054\u5b57\u6bb5\u4e3a\u5206\u6876\u5b57\u6bb5\uff0c\u4e14\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u5206\u6876\u6570\u91cf\u662f\u53e6\u5916\u4e00\u5f20\u8868\u5206\u6876\u6570\u91cf\u7684\u6574\u6570\u500d\uff0c\u5c31\u80fd\u4fdd\u8bc1\u53c2\u4e0e join \u7684\u4e24\u5f20\u8868\u7684\u5206\u6876\u4e4b\u95f4\u5177\u6709\u660e\u786e\u7684\u5173\u8054\u5173\u7cfb\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5728\u4e24\u8868\u7684\u5206\u6876\u95f4\u8fdb\u884c Map Join \u64cd\u4f5c\u4e86\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u7b2c\u4e8c\u4e2a Job \u7684 Map \u7aef\u5c31\u65e0\u9700\u518d\u7f13\u5b58\u5c0f\u8868\u7684\u5168\u8868\u6570\u636e\u4e86\uff0c\u800c\u53ea\u9700\u7f13\u5b58\u5176\u6240\u9700\u7684\u5206\u6876\u5373\u53ef\u3002</p> <p></p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u56fe\uff1a</p> <p>\u5bf9\u4e8e Table B \u6765\u8bf4\uff0c\u7531\u4e8e\u6709 2 \u4e2a\u6876\uff0c\u56e0\u6b64\u6240\u6709 <code>hashcode % 2 == 0</code> \u7684 record \u90fd\u4f1a\u8fdb\u5165 Bucket B-0\uff0c\u6240\u6709 <code>hashcode % 2 == 1</code> \u7684 record \u90fd\u4f1a\u8fdb\u5165 Bucket B-1\u3002</p> <p>\u5bf9\u4e8e Table A \u6765\u8bf4\uff0c\u7531\u4e8e\u6709 4 \u4e2a\u6876\uff0c\u56e0\u6b64\u6240\u6709 <code>hashcode % 4 == 0</code> \u7684 record \u90fd\u4f1a\u8fdb\u5165 Bucket A-0\u3002\u6240\u6709 <code>hashcode % 4 == 2</code> \u7684 record \u90fd\u4f1a\u8fdb\u5165 Bucket A-2\u3002Bucket A-0 \u548c Bucket A-2 \u4e2d\u7684\u8fd9\u4e9b record \u5c31\u5bf9\u5e94\u7740 Bucket B-0 \u4e2d\u7684 record\u3002\u540c\u7406\uff0cBucket A-1 \u548c Bucket A-3 \u4e2d\u7684\u6240\u6709 record \u5c31\u5bf9\u5e94\u7740 Bucket B-1 \u4e2d\u7684 record\u3002</p> <p>\u5f53\u7136\uff0c\u6700\u7b80\u5355\u7684\u60c5\u51b5\u5c31\u662f\u4e24\u5f20\u8868\u7684\u6876\u6570\u76f8\u540c\u3002</p> <p>\u4e4b\u540e\u5c31\u548c Map Join \u7684\u64cd\u4f5c\u4e00\u81f4\uff1a</p> <ul> <li>Job1\uff1a\u5148\u7531\u672c\u5730 Map \u4efb\u52a1\u5c06\u76f8\u5bf9\u5c0f\u4e00\u70b9\u7684\u8868\u7684\u6bcf\u4e2a\u6876\u5404\u5236\u4f5c\u4e00\u5f20\u54c8\u5e0c\u8868\uff0c\u5c06\u6240\u6709\u54c8\u5e0c\u8868\u4e0a\u4f20\u81f3\u5206\u5e03\u5f0f\u7f13\u5b58</li> <li>Job2\uff1a\u6309\u7167 BucketInputFormat \u8bfb\u53d6\u5927\u8868\u6570\u636e\uff0c\u4e00\u4e2a\u6876\u4e00\u4e2a\u5207\u7247\uff0c\u6bcf\u4e00\u4e2a Mapper \u53ea\u9700\u8981\u5904\u7406\u5927\u8868\u4e2d\u7684\u4e00\u4e2a\u6876\u5373\u53ef\u3002\u540c\u65f6\uff0c\u6839\u636e\u6876\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bcf\u4e2a Mapper \u53ea\u9700\u8981\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u8bfb\u53d6\u81ea\u5df1\u9700\u8981\u7684\u5c0f\u8868\u7684\u6876\u7684\u54c8\u5e0c\u8868\u5373\u53ef\u3002\u4f8b\u5982\uff0cMapper1 \u88ab\u5206\u5230\u4e86 Bucket A-0\uff0c\u56e0\u6b64\uff0cMapper1 \u53ea\u9700\u8981\u53bb\u5206\u5e03\u5f0f\u7f13\u5b58\u8bfb\u53d6 Bucket B-0 \u5373\u53ef\u3002</li> </ul> <p>\u603b\u7ed3</p> <p>Bucket Map Join \u9002\u7528\u4e8e\u5927\u8868 Join \u5927\u8868\u7684\u60c5\u51b5\uff0c\u5b9e\u73b0\u65b9\u5f0f\u662f\u5148\u5bf9 2 \u5f20\u5927\u8868\u8fdb\u884c\u5206\u6876\uff0c\u4e4b\u540e\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c Map Join\u3002\u5177\u4f53\u5730\uff0c\u6bcf\u4e2a Mapper \u53ea\u9700\u8981\u5904\u7406\u4e00\u4e2a\u6876\u7684\u6570\u636e\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u8bfb\u53d6\u81ea\u5df1\u9700\u8981 join\u7684\u6876\u7684\u54c8\u5e0c\u8868\u5373\u53ef\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#smb-map-join","title":"SMB Map Join","text":"<p>Sort Merge Bucket Map Join(\u7b80\u79f0 SMB Map Join) \u57fa\u4e8e Bucket Map Join\u3002SMB Map Join \u8981\u6c42\uff0c\u53c2\u4e0e join \u7684\u8868\u5747\u4e3a\u5206\u6876\u8868\uff0c\u4e14\u9700\u4fdd\u8bc1\u5206\u6876\u5185\u7684\u6570\u636e\u662f\u6709\u5e8f\u7684\uff0c\u4e14\u5206\u6876\u5b57\u6bb5\u3001 \u6392\u5e8f\u5b57\u6bb5\u548c\u5173\u8054\u5b57\u6bb5\u4e3a\u76f8\u540c\u5b57\u6bb5\uff0c\u4e14\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u5206\u6876\u6570\u91cf\u662f\u53e6\u5916\u4e00\u5f20\u8868\u5206\u6876\u6570\u91cf\u7684\u6574\u6570\u500d\u3002</p> <p>SMB Map Join \u540c Bucket Join \u4e00\u6837\uff0c\u540c\u6837\u662f\u5229\u7528\u4e24\u8868\u5404\u5206\u6876\u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb\uff0c\u5728\u5206\u6876\u4e4b\u95f4\u8fdb\u884c join \u64cd\u4f5c\uff0c\u4e0d\u540c\u7684\u662f\u5206\u6876\u4e4b\u95f4\u7684 join \u64cd\u4f5c\u7684\u5b9e\u73b0\u539f\u7406\u3002Bucket Map Join\uff0c\u4e24\u4e2a\u5206\u6876\u4e4b\u95f4\u7684 join \u5b9e\u73b0\u539f\u7406\u4e3a Hash Join \u7b97\u6cd5\uff1b\u800c SMB Map Join\uff0c\u4e24\u4e2a\u5206\u6876\u4e4b\u95f4\u7684 join \u5b9e\u73b0\u539f\u7406\u4e3a Sort Merge Join \u7b97\u6cd5\u3002</p> <p>Hash Join \u548c Sort Merge Join \u5747\u4e3a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u5e38\u89c1\u7684 Join \u5b9e\u73b0\u7b97\u6cd5\u3002Hash Join \u7684\u539f\u7406\u76f8\u5bf9\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u53c2\u4e0e join \u7684\u4e00\u5f20\u8868\u6784\u5efa\u54c8\u5e0c\u8868\uff0c\u7136\u540e\u626b\u63cf\u53e6\u5916\u4e00\u5f20\u8868\uff0c\u7136\u540e\u8fdb\u884c\u9010\u884c\u5339\u914d\u3002Sort Merge Join \u9700\u8981\u5728\u4e24\u5f20\u6309\u7167\u5173\u8054\u5b57\u6bb5\u6392\u597d\u5e8f\u7684\u8868\u4e2d\u8fdb\u884c\uff0c\u5176\u539f\u7406\u5982\u56fe\u6240\u793a\uff1a</p> <p></p> <p>SMB Map Join VS Bucket Map Join</p> <ul> <li>\u4e0d\u9700\u8981\u5236\u4f5c\u54c8\u5e0c\u8868</li> <li>\u4e0d\u9700\u8981\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u54c8\u5e0c\u8868\uff08\u4e00\u4e2a\u6876\uff09\uff0c\u56e0\u6b64\u5bf9\u6876\u7684\u5927\u5c0f\u6ca1\u6709\u8981\u6c42</li> </ul> <p>Hive \u4e2d\u7684 SMB Map Join \u5c31\u662f\u5bf9\u4e24\u4e2a\u5206\u6876\u7684\u6570\u636e\u6309\u7167\u4e0a\u8ff0\u601d\u8def\u8fdb\u884c Join \u64cd\u4f5c\u3002\u53ef\u4ee5\u770b\u51fa\uff0cSMB Map Join \u4e0e Bucket Map Join \u76f8\u6bd4\uff0c\u5728\u8fdb\u884c Join \u64cd\u4f5c\u65f6\uff0cMap \u7aef\u662f\u65e0\u9700\u5bf9\u6574\u4e2a Bucket \u6784\u5efa\u54c8\u5e0c\u8868\uff0c\u4e5f\u65e0\u9700\u5728 Map \u7aef\u7f13\u5b58\u6574\u4e2a Bucket \u6570\u636e\u7684\uff0c\u6bcf\u4e2a Mapper \u53ea\u9700\u6309\u987a\u5e8f\u9010\u4e2a key \u8bfb\u53d6\u4e24\u4e2a\u5206\u6876\u7684\u6570\u636e\u8fdb\u884c join \u5373\u53ef\u3002</p> <p>\u8bbe\u7f6e\uff1a</p> <pre><code>set hive.auto.convert.sortmerge.join=true;\nset hive.optimize.bucketmapjoin=true;\nset hive.optimize.bucketmapjoin.sortedmerge=true;\n</code></pre>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_5","title":"\u81ea\u5b9a\u4e49\u51fd\u6570","text":"<p>Hive \u81ea\u5b9a\u4e49\u51fd\u6570\u5305\u62ec\u4e09\u79cd UDF\u3001UDAF\u3001UDTF\u3002</p> <ul> <li>UDF(User-Defined-Function)\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u4e00\u5bf9\u4e00\u7684\u8f93\u5165\u8f93\u51fa\u3002</li> <li>UDAF(User-Defined Aggregation Funcation)\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u805a\u5408\u51fd\u6570\uff0c\u591a\u8fdb\u4e00\u51fa\u3002 \u4f8b\u5982\uff1acount/max/min\u3002</li> <li>UDTF(User-Defined Table-Generating Functions)\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u8868\u751f\u6210\u51fd\u6570\uff0c\u4e00\u5bf9\u591a\u7684\u8f93\u5165\u8f93\u51fa\u3002\u4f8b\u5982\uff1alateral view explode\u3002</li> </ul> <p>\u4f7f\u7528\u65b9\u5f0f\uff1a</p> <p>\u5728 HIVE \u4f1a\u8bdd\u4e2d add \u81ea\u5b9a\u4e49\u51fd\u6570\u7684 jar \u6587\u4ef6\uff0c\u7136\u540e\u521b\u5efa function \u7ee7\u800c\u4f7f\u7528\u51fd\u6570\u3002\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u7f16\u5199\u81ea\u5b9a\u4e49\u51fd\u6570</li> <li>\u6253\u5305\u4e0a\u4f20\u5230\u96c6\u7fa4\u673a\u5668\u4e2d</li> <li>\u8fdb\u5165 hive \u5ba2\u6237\u7aef\uff0c\u6dfb\u52a0 jar \u5305\uff1a<code>hive&gt; add jar /home/hive_udf.jar</code></li> <li>\u521b\u5efa\u4e34\u65f6\u51fd\u6570\uff1a <code>hive&gt; create temporary function getLen as 'com.anson.GetLength';</code></li> <li>\u4f7f\u7528\u4e34\u65f6\u51fd\u6570\uff1a <code>hive&gt; select getLen('1234567');</code></li> <li>\u9500\u6bc1\u4e34\u65f6\u51fd\u6570\uff1a<code>hive&gt; drop temporary function getLen;</code></li> </ol>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#udf","title":"UDF","text":"<p>\u4e00\u5bf9\u4e00\u7684\u8f93\u5165\u8f93\u51fa\uff0c\u53ea\u80fd\u8f93\u5165\u4e00\u6761\u8bb0\u5f55\u5f53\u4e2d\u7684\u6570\u636e\uff0c\u540c\u65f6\u8fd4\u56de\u4e00\u6761\u5904\u7406\u7ed3\u679c\u3002\u5c5e\u4e8e\u6700\u5e38\u89c1\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u3002Hive \u7684 UDF \u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\u6216\u8005\u5b9e\u73b0\u7684 API\uff0c\u4e00\u79cd\u662f UDF \u6bd4\u8f83\u7b80\u5355\uff0c\u4e00\u79cd\u662f GenericUDF \u6bd4\u8f83\u590d\u6742\u3002</p> <p>\u5982\u679c\u6240\u64cd\u4f5c\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f\u57fa\u7840\u6570\u636e\u7c7b\u578b\uff0c\u5982\uff08Hadoop&amp;Hive \u57fa\u672c writable \u7c7b\u578b\uff0c\u5982 Text, IntWritable, LongWriable, DoubleWritable \u7b49\uff09\u3002\u90a3\u4e48\u7ee7\u627f <code>org.apache.hadoop.hive.ql.UDF</code> \u7c7b\uff0c\u5e76\u5b9e\u73b0 evaluate() \u65b9\u6cd5\u5373\u53ef\u3002</p> <p>\u5982\u679c\u6240\u64cd\u4f5c\u7684\u6570\u636e\u7c7b\u578b\u662f\u590d\u6742\u6570\u636e\u7c7b\u578b\uff0c\u5982 Map\uff0cList \u548c Set\uff0c\u90a3\u4e48\u9700\u8981\u7ee7\u627f <code>org.apache.hadoop.hive.ql.udf.generic.GenericUDF</code> \u7c7b\uff0c\u5e76\u5b9e\u73b0\u4e09\u4e2a\u65b9\u6cd5\uff1a</p> <ol> <li>initialize()\uff1a\u53ea\u8c03\u7528\u4e00\u6b21\uff0c\u5728\u4efb\u4f55 evaluate() \u8c03\u7528\u4e4b\u524d\u53ef\u4ee5\u63a5\u6536\u5230\u4e00\u4e2a\u53ef\u4ee5\u8868\u793a\u51fd\u6570\u8f93\u5165\u53c2\u6570\u7c7b\u578b\u7684 ObjectInspectors \u6570\u7ec4\u3002initialize \u7528\u6765\u9a8c\u8bc1\u8be5\u51fd\u6570\u662f\u5426\u63a5\u6536\u6b63\u786e\u7684\u53c2\u6570\u7c7b\u578b\u548c\u53c2\u6570\u4e2a\u6570\uff0c\u6700\u540e\u63d0\u4f9b\u6700\u540e\u7ed3\u679c\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\u3002</li> <li>evaluate()\uff1a\u771f\u6b63\u7684\u903b\u8f91\uff0c\u8bfb\u53d6\u8f93\u5165\u6570\u636e\uff0c\u5904\u7406\u6570\u636e\uff0c\u8fd4\u56de\u7ed3\u679c\u3002</li> <li>getDisplayString()\uff1a\u8fd4\u56de\u63cf\u8ff0\u8be5\u65b9\u6cd5\u7684\u5b57\u7b26\u4e32\uff0c\u6ca1\u6709\u592a\u591a\u4f5c\u7528\u3002</li> </ol> <p>todo\uff1a\u5b9e\u73b0\u4e00\u4e2a\u624b\u673a\u53f7\u8131\u654f\u7684 UDF</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#udaf","title":"UDAF","text":"<p>Hive \u81ea\u5b9a\u4e49\u51fd\u6570(UDF\u3001UDAF)_51CTO \u535a\u5ba2_hive \u81ea\u5b9a\u4e49\u51fd\u6570</p> <p>\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <ol> <li>\u81ea\u5b9a\u4e49\u4e00\u4e2a Java \u7c7b\uff0c\u7ee7\u627f UDAF \u7c7b</li> <li>\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u9759\u6001\u7c7b\uff0c\u5b9e\u73b0 UDAFEvaluator \u63a5\u53e3</li> <li>\u5b9e\u73b0 init(), iterate(), terminatePartial(), merge(), terminate()\uff0c\u5171 5 \u4e2a\u65b9\u6cd5</li> </ol> <p></p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#udtf","title":"UDTF","text":"<p>\u9700\u8981\u7ee7\u627f <code>org.apache.hadoop.hive.ql.udf.generic.GenericUDTF</code> \u7c7b\uff0c\u5e76\u5b9e\u73b0\u4e09\u4e2a\u65b9\u6cd5\uff1a</p> <ol> <li>initialize()\uff1a\u8fd4\u56de UDTF \u7684\u8fd4\u56de\u884c\u7684\u4fe1\u606f\uff08\u8fd4\u56de\u4e2a\u6570\uff0c\u7c7b\u578b\uff09\u3002</li> <li>process()\uff1a\u771f\u6b63\u7684\u5904\u7406\u8fc7\u7a0b\u5728 process \u51fd\u6570\u4e2d\uff0c\u5728 process \u4e2d\uff0c\u6bcf\u4e00\u6b21 forward() \u8c03\u7528\u4ea7\u751f\u4e00\u884c\uff1b\u5982\u679c\u4ea7\u751f\u591a\u5217\u53ef\u4ee5\u5c06\u591a\u4e2a\u5217\u7684\u503c\u653e\u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u5c06\u8be5\u6570\u7ec4\u4f20\u5165\u5230 forward()\u51fd\u6570\u3002forward()\u4f20\u5165\u7684\u5c31\u662f\u6700\u540e\u7684\u7ed3\u679c\uff0c\u91cc\u9762\u4e00\u822c\u662f\u6570\u7ec4\uff0c\u6570\u7ec4\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u5c31\u4ee3\u7801\u6700\u540e\u4e00\u884c\u8f93\u51fa\u7684\u7ed3\u679c\u6709\u591a\u5c11\u5217</li> <li>close()\uff1a\u5bf9\u9700\u8981\u6e05\u7406\u7684\u65b9\u6cd5\u8fdb\u884c\u6e05\u7406\u3002</li> </ol>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_8","title":"Hive \u6570\u636e\u5b58\u50a8\u683c\u5f0f","text":""},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_6","title":"\u884c\u5b58\u50a8\u548c\u5217\u5b58\u50a8","text":"<p>\u884c\u5b58\u50a8\u7279\u70b9\uff1a</p> <ul> <li>\u9700\u8981\u67e5\u8be2\u4e00\u6574\u884c\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u884c\u5b58\u50a8\u7531\u4e8e\u4e00\u884c\u6570\u636e\u90fd\u805a\u96c6\u5728\u4e00\u5757\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u51b5\u4e0b\u67e5\u8be2\u66f4\u5feb\u3002\u800c\u5982\u679c\u4ec5\u4ec5\u67e5\u8be2\u5c11\u6570\u51e0\u5217\u6570\u636e\u65f6\uff0c\u5219\u67e5\u8be2\u6548\u7387\u4e0d\u9ad8\u3002</li> <li>\u4e00\u884c\u6570\u636e\u901a\u5e38\u5305\u542b\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u96be\u4ee5\u83b7\u5f97\u7406\u60f3\u7684\u538b\u7f29\u6548\u679c\u3002</li> </ul> <p>\u5217\u5b58\u50a8\u7279\u70b9\uff1a</p> <ul> <li>\u66f4\u5c11\u7684 I/O\uff1a\u56e0\u4e3a\u6bcf\u4e2a\u5b57\u6bb5\u7684\u6570\u636e\u805a\u96c6\u5b58\u50a8\uff0c\u5728\u67e5\u8be2\u53ea\u9700\u8981\u5c11\u6570\u51e0\u4e2a\u5b57\u6bb5\u7684\u65f6\u5019\uff0c\u80fd\u5927\u5927\u51cf\u5c11\u8bfb\u53d6\u7684\u6570\u636e\u91cf\u3002</li> <li>\u66f4\u9ad8\u7684\u538b\u7f29\u6bd4\uff1a\u6bcf\u4e2a\u5b57\u6bb5\u7684\u6570\u636e\u7c7b\u578b\u4e00\u5b9a\u662f\u76f8\u540c\u7684\uff0c\u5217\u5f0f\u5b58\u50a8\u53ef\u4ee5\u9488\u5bf9\u6027\u7684\u8bbe\u8ba1\u66f4\u597d\u7684\u8bbe\u8ba1\u538b\u7f29\u7b97\u6cd5\u3002</li> </ul> <p>Hive \u4e2d\u5e38\u7528\u7684\u5b58\u50a8\u683c\u5f0f\u6709 TEXTFILE \u3001SEQUENCEFILE\u3001AVRO\u3001RCFILE\u3001ORCFILE\u3001 PARQUET \u7b49\uff0c\u5176\u4e2d TEXTFILE \u3001SEQUENCEFILE \u548c AVRO \u662f\u884c\u5f0f\u5b58\u50a8\uff0cRCFILE\u3001ORCFILE\u3001PARQUET \u662f\u5217\u5f0f\u5b58\u50a8\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_9","title":"Hive \u4e2d\u5e38\u89c1\u7684\u5b58\u50a8\u683c\u5f0f","text":"<p>Apache Hive \u652f\u6301 Apache Hadoop \u4e2d\u4f7f\u7528\u7684\u51e0\u79cd\u719f\u6089\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5982 TextFile\uff0cRCFile\uff0cSequenceFile\uff0cAVRO\uff0cORC \u548c Parquet \u683c\u5f0f\u3002</p> <p>TextFile \u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u6761\u8bb0\u5f55\uff0c\u6bcf\u884c\u90fd\u4ee5\u6362\u884c\u7b26\u7ed3\u5c3e\u3002\u6570\u636e\u4e0d\u505a\u538b\u7f29\uff0c\u78c1\u76d8\u5f00\u9500\u5927\uff0c\u6570\u636e\u89e3\u6790\u5f00\u9500\u5927\u3002\u53ef\u7ed3\u5408 Gzip\u3001Bzip2 \u4f7f\u7528\uff08\u7cfb\u7edf\u81ea\u52a8\u68c0\u67e5\uff0c\u6267\u884c\u67e5\u8be2\u65f6\u81ea\u52a8\u89e3\u538b\uff09\uff0c\u4f46\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0cHive \u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u5207\u5206\uff0c\u4ece\u800c\u65e0\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u5e76\u884c\u64cd\u4f5c\u3002</p> <p>SequenceFile \u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b83\u5c06\u6570\u636e\u4ee5 <code>&lt;key,value&gt;</code> \u7684\u5f62\u5f0f\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d\u3002\u8fd9\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\u5185\u90e8\u4f7f\u7528 Hadoop \u6807\u51c6\u7684 Writable \u63a5\u53e3\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\u652f\u6301\u4e0d\u540c\u7ea7\u522b\u7684\u538b\u7f29\uff1aNONE, RECORD, BLOCK\u3002</p> <p>AVRO \u662f\u4e00\u79cd\u7528\u4e8e\u652f\u6301\u6570\u636e\u5bc6\u96c6\u578b\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u3002\u5b83\u7684\u6587\u4ef6\u683c\u5f0f\u66f4\u4e3a\u7d27\u51d1\uff0c\u82e5\u8981\u8bfb\u53d6\u5927\u91cf\u6570\u636e\u65f6\uff0cAvro \u80fd\u591f\u63d0\u4f9b\u66f4\u597d\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u6027\u80fd\u3002</p> <p>RCFile \u662f\u4e00\u79cd\u884c\u5217\u5b58\u50a8\u76f8\u7ed3\u5408\u7684\u5b58\u50a8\u65b9\u5f0f\u3002\u5c06\u6587\u4ef6\u6c34\u5e73\u5212\u5206\u4e3a\u591a\u4e2a\u884c\u7ec4\uff08Row Group\uff09\uff0c\u884c\u7ec4\u5185\u90e8\u7684\u6570\u636e\u662f\u6309\u5217\u5b58\u50a8\u7684\u3002\u56e0\u6b64\u5b83\u80fd\u4fdd\u8bc1\u540c\u4e00\u884c\u7684\u6570\u636e\u4f4d\u4e8e\u540c\u4e00\u4e2a HDFS \u5757\uff0c\u540c\u65f6\u8fd8\u80fd\u5229\u7528\u5217\u5b58\u50a8\u7684\u4f18\u70b9\u8fdb\u884c\u5feb\u901f\u7684\u5217\u8bfb\u53d6\u548c\u6570\u636e\u538b\u7f29\u3002</p> <p>ORC \u5bf9 RCFile \u505a\u4e86\u4e00\u4e9b\u4f18\u5316\uff0c\u4e3b\u8981\u5305\u62ec\u652f\u6301\u66f4\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\uff08datetime, decimal, struct, list \u7b49\uff09\u3001\u5728\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684\u7a00\u758f\u7d22\u5f15\u7b49\u3002ORC \u4e5f\u662f\u4e00\u79cd\u884c\u5217\u5b58\u50a8\u76f8\u7ed3\u5408\u7684\u5b58\u50a8\u65b9\u5f0f\u3002\u5b83\u5c06\u6587\u4ef6\u6c34\u5e73\u5212\u5206\u4e3a\u591a\u4e2a Stripe\uff0c\u6bcf\u4e2a Stripe \u5185\u90e8\u7684\u6570\u636e\u662f\u6309\u5217\u5b58\u50a8\u7684\u3002\u5b83\u548c RCFile \u4e00\u6837\uff0c\u80fd\u4fdd\u8bc1\u540c\u4e00\u884c\u7684\u6570\u636e\u4f4d\u4e8e\u540c\u4e00\u4e2a HDFS \u5757\uff0c\u540c\u65f6\u8fd8\u80fd\u5229\u7528\u5217\u5b58\u50a8\u7684\u4f18\u70b9\u8fdb\u884c\u5feb\u901f\u7684\u5217\u8bfb\u53d6\u548c\u6570\u636e\u538b\u7f29\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u80fd\u5229\u7528\u7a00\u758f\u884c\u7d22\u5f15\uff0c\u5728 stripe \u4e2d\u5feb\u901f\u8bfb\u53d6\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8df3\u8fc7\u5f88\u591a\u884c\u3002</p> <p>Parquet \u662f\u4e00\u4e2a\u9762\u5411\u5217\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u3002\u5b83\u652f\u6301\u5d4c\u5957\u7ed3\u6784\u7684\u5b58\u50a8\u683c\u5f0f\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u5217\u5f0f\u5b58\u50a8\u7684\u65b9\u5f0f\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002Parquet \u5c06\u6587\u4ef6\u6c34\u5e73\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a Row Group\uff0c\u6bcf\u4e2a Row Group \u5305\u542b\u591a\u4e2a Column Chunk\uff0c\u6bcf\u4e2a Column Chunk \u5305\u542b\u591a\u4e2a Page\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#rc-file","title":"RC File","text":"<p>RCFile\uff08Record Columnar File\uff09\u5b58\u50a8\u7ed3\u6784\u9075\u5faa\u7684\u662f\u300c\u5148\u6c34\u5e73\u5212\u5206\uff0c\u518d\u5782\u76f4\u5212\u5206\u300d \u7684\u8bbe\u8ba1\u7406\u5ff5\u3002RCFile \u7ed3\u5408\u4e86\u884c\u5b58\u50a8\u548c\u5217\u5b58\u50a8\u7684\u4f18\u70b9\uff1a\u9996\u5148\uff0cRCFile \u4fdd\u8bc1\u540c\u4e00\u884c\u7684\u6570\u636e\u4f4d\u4e8e\u540c\u4e00\u8282\u70b9\uff0c\u56e0\u6b64\u5143\u7ec4\u91cd\u6784\u7684\u5f00\u9500\u5f88\u4f4e\uff1b\u5176\u6b21\uff0c\u50cf\u5217\u5b58\u50a8\u4e00\u6837\uff0cRCFile \u80fd\u591f\u5229\u7528\u5217\u7ef4\u5ea6\u7684\u6570\u636e\u538b\u7f29\uff0c\u5e76\u4e14\u80fd\u8df3\u8fc7\u4e0d\u5fc5\u8981\u7684\u5217\u8bfb\u53d6\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\u662f HDFS \u5185 RCFile \u7684\u5b58\u50a8\u7ed3\u6784\u3002\u6bcf\u4e2a HDFS \u5757\u4e2d\uff0cRCFile \u4ee5\u884c\u7ec4\u4e3a\u57fa\u672c\u5355\u4f4d\u6765\u7ec4\u7ec7\u8bb0\u5f55\u3002\u5bf9\u4e8e\u4e00\u5f20\u8868\uff0c\u6240\u6709\u884c\u7ec4\u5927\u5c0f\u90fd\u76f8\u540c\u3002\u4e00\u4e2a HDFS \u5757\u4f1a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u884c\u7ec4\u3002\u4e00\u4e2a\u884c\u7ec4\u5305\u62ec\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u7b2c\u4e00\u90e8\u5206\u662f\u884c\u7ec4\u5934\u90e8\u7684\u540c\u6b65\u6807\u8bc6\uff0c\u4e3b\u8981\u7528\u4e8e\u5206\u9694 HDFS \u5757\u4e2d\u7684\u4e24\u4e2a\u8fde\u7eed\u884c\u7ec4\uff1b</li> <li>\u7b2c\u4e8c\u90e8\u5206\u662f\u884c\u7ec4\u7684\u5143\u6570\u636e\u5934\u90e8\uff0c\u7528\u4e8e\u5b58\u50a8\u884c\u7ec4\u5355\u5143\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u884c\u7ec4\u4e2d\u7684\u8bb0\u5f55\u6570\u3001\u6bcf\u4e2a\u5217\u7684\u5b57\u8282\u6570\u3001\u5217\u4e2d\u6bcf\u4e2a\u57df\u7684\u5b57\u8282\u6570\uff1b</li> <li>\u7b2c\u4e09\u90e8\u5206\u662f\u8868\u683c\u6570\u636e\u6bb5\uff0c\u5373\u5b9e\u9645\u7684\u5217\u5b58\u50a8\u6570\u636e\u3002</li> </ul> <p>\u76f8\u6bd4\u4e8e\u5176\u4ed6\u5217\u5f0f\u5b58\u50a8\u7684\u4f18\u52bf\uff1a</p> <ul> <li>\u67d0\u4e9b\u5217\u5f0f\u5b58\u50a8\u540c\u4e00\u5217\u53ef\u80fd\u5b58\u5728\u4e0d\u540c\u7684 block \u4e0a\uff0c\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0cHive \u91cd\u7ec4\u5217\u7684\u8fc7\u7a0b\u4f1a\u6d6a\u8d39\u5f88\u591a IO \u5f00\u9500\u3002\u800c RCFile \u7531\u4e8e\u76f8\u540c\u7684\u5217\u90fd\u662f\u5728\u4e00\u4e2a HDFS \u5757\u4e0a\uff0c\u6240\u4ee5 \u76f8\u5bf9\u5217\u5b58\u50a8\u800c\u8a00\u4f1a\u8282\u7701\u5f88\u591a\u8d44\u6e90\u3002</li> <li>RCFile \u91c7\u7528\u6e38\u7a0b\u7f16\u7801\uff0c\u76f8\u540c\u7684\u6570\u636e\u4e0d\u4f1a\u91cd\u590d\u5b58\u50a8\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8282\u7ea6\u4e86\u5b58\u50a8\u7a7a\u95f4\uff0c\u5c24\u5176\u662f\u5b57\u6bb5\u4e2d\u5305\u542b\u5927\u91cf\u91cd\u590d\u6570\u636e\u7684\u65f6\u5019\u3002</li> </ul> <p>\u6ce8\uff1a\u6e38\u7a0b\u7f16\u7801\u662f\u4e00\u79cd\u7b80\u5355\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u5982\u5b57\u7b26\u4e32\u300cAAABBBCCC\u300d\u53ef\u4ee5\u7528\u300c3A3B3C\u300d\u6765\u8868\u793a\u3002\u5bf9\u4e8e\u91cd\u590d\u5e76\u4e14\u8fde\u7eed\u51fa\u73b0\u7684\u6570\u636e\u538b\u7f29\u8f83\u4e3a\u6709\u6548\u3002</p> <ul> <li>RCFile \u4e0d\u652f\u6301\u4efb\u610f\u65b9\u5f0f\u7684\u6570\u636e\u5199\u64cd\u4f5c\uff0c\u4ec5\u63d0\u4f9b\u4e00\u79cd\u8ffd\u52a0\u63a5\u53e3\uff0c\u8fd9\u662f\u56e0\u4e3a\u5e95\u5c42\u7684 HDFS \u5f53\u524d\u4ec5\u4ec5\u652f\u6301\u6570\u636e\u8ffd\u52a0\u5199\u6587\u4ef6\u5c3e\u90e8\u3002</li> <li>\u5f53\u5904\u7406\u4e00\u4e2a\u884c\u7ec4\u65f6\uff0cRCFile \u65e0\u9700\u5168\u90e8\u8bfb\u53d6\u884c\u7ec4\u7684\u5168\u90e8\u5185\u5bb9\u5230\u5185\u5b58\u3002\u76f8\u53cd\uff0c\u5b83\u4ec5\u4ec5\u8bfb\u5143\u6570\u636e\u5934\u90e8\u548c\u7ed9\u5b9a\u67e5\u8be2\u9700\u8981\u7684\u5217\u3002\u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u5fc5\u8981\u7684\u5217\u4ee5\u83b7\u5f97\u5217\u5b58\u50a8\u7684 I/O \u4f18\u52bf\u3002\u4f8b\u5982\uff1a<code>select c from table where a &gt; 1</code>\u3002</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#orc-file","title":"ORC File","text":"<p>ORC File\uff0c\u5b83\u7684\u5168\u540d\u662f Optimized Row Columnar (ORC) file\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9 RCFile \u505a\u4e86\u4e00\u4e9b\u4f18\u5316\u3002\u8fd0\u7528 ORC File \u53ef\u4ee5\u63d0\u9ad8 Hive \u7684\u8bfb\u3001\u5199\u4ee5\u53ca\u5904\u7406\u6570\u636e\u7684\u6027\u80fd\u3002</p> <p>\u548c RCFile \u683c\u5f0f\u76f8\u6bd4\uff0cORC File \u683c\u5f0f\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a</p> <ul> <li>\u6bcf\u4e2a task \u53ea\u8f93\u51fa\u5355\u4e2a\u6587\u4ef6\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11 NameNode \u7684\u8d1f\u8f7d</li> <li>\u652f\u6301\u5404\u79cd\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a datetime, decimal, \u4ee5\u53ca\u4e00\u4e9b\u590d\u6742\u7c7b\u578b (struct, list, map, and union)</li> <li>\u5728\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684\u7d22\u5f15\u6570\u636e</li> <li>\u57fa\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u5757\u6a21\u5f0f\u538b\u7f29\uff1ainteger \u7c7b\u578b\u7684\u5217\u7528\u6e38\u7a0b\u7f16\u7801 (run-length encoding)\uff1bString \u7c7b\u578b\u7684\u5217\u7528\u5b57\u5178\u7f16\u7801</li> </ul> <p>ORC File \u5305\u542b\u4e00\u7ec4\u7ec4\u7684\u884c\u6570\u636e\uff0c\u79f0\u4e3a stripe\uff0c\u9664\u6b64\u4e4b\u5916\uff0cORC File \u7684 file footer \u8fd8\u5305\u542b\u4e00\u4e9b\u989d\u5916\u7684\u8f85\u52a9\u4fe1\u606f\u3002\u5728 ORC File \u6587\u4ef6\u7684\u6700\u540e\uff0c\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a postscript \u7684\u533a\uff0c\u5b83\u4e3b\u8981\u662f\u7528\u6765\u5b58\u50a8\u538b\u7f29\u53c2\u6570\u53ca\u538b\u7f29\u9875\u811a\u7684\u5927\u5c0f\u3002 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a stripe \u7684\u5927\u5c0f\u4e3a 250MB\u3002\u5927\u5c3a\u5bf8\u7684 stripe \u4f7f\u5f97\u4ece HDFS \u8bfb\u6570\u636e\u66f4\u9ad8\u6548\u3002</p> <p></p> <p></p> <p>Index data \u5305\u542b\u6bcf\u5217\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u4ee5\u53ca\u6bcf\u5217\u6240\u5728\u7684\u884c\u3002\u884c\u7d22\u5f15\u91cc\u9762\u63d0\u4f9b\u4e86\u504f\u79fb\u91cf\uff0c\u5b83\u53ef\u4ee5\u8df3\u5230\u6b63\u786e\u7684\u538b\u7f29\u5757\u4f4d\u7f6e\u3002\u5177\u6709\u76f8\u5bf9\u9891\u7e41\u7684\u884c\u7d22\u5f15\uff0c\u4f7f\u5f97\u5728 stripe \u4e2d\u5feb\u901f\u8bfb\u53d6\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8df3\u8fc7\u5f88\u591a\u884c\uff0c\u5c3d\u7ba1\u8fd9\u4e2a stripe \u7684\u5927\u5c0f\u5f88\u5927\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u53ef\u4ee5\u8df3\u8fc7 10000 \u884c\u3002\u62e5\u6709\u901a\u8fc7\u8fc7\u6ee4\u8c13\u8bcd\u800c\u8df3\u8fc7\u5927\u91cf\u7684\u884c\u7684\u80fd\u529b\u3002</p> <ul> <li>index data\uff1a\u6bcf\u9694\u4e00\u4e07\u884c\u7684\u7a00\u758f\u7d22\u5f15</li> <li>row data\uff1a\u5b9e\u9645\u6570\u636e</li> <li>stripe footer\uff1a\u6570\u636e\u7684\u957f\u5ea6\uff0c\u7c7b\u578b\u7b49\u4fe1\u606f</li> <li>file footer\uff1a\u8bb0\u5f55\u4e86\u5404\u4e2a stripe \u7684\u4fe1\u606f\uff0c\u6bcf\u4e2a stripe \u4e2d\u6709\u591a\u5c11\u884c\uff0c\u4ee5\u53ca\u6bcf\u5217\u7684\u6570\u636e\u7c7b\u578b\u3002\u5f53\u7136\uff0c\u5b83\u91cc\u9762\u8fd8\u5305\u542b\u4e86\u5217\u7ea7\u522b\u7684\u4e00\u4e9b\u805a\u5408\u7684\u7ed3\u679c\uff0c \u6bd4\u5982\uff1acount, min, max, and sum</li> <li>postscript\uff1a\u8bb0\u5f55\u4e86 file footer \u7684\u957f\u5ea6</li> </ul> <p>\u4f7f\u7528 ORC File\uff1a</p> <pre><code>CREATE TABLE ... STORED AS ORC\nALTER TABLE ... [PARTITION partition_spec] SET FILEFORMAT ORC\nSET hive.default.fileformat=Orc\n</code></pre> <pre><code>create table Addresses ( name string, street string, city string, state string, zip int )\nstored as orc tblproperties (\"orc.compress\"=\"NONE\")\n</code></pre>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#parquet","title":"Parquet","text":"<p>\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u4f7f\u7528\u6570\u636e\u6a21\u578b\u901a\u5e38\u90fd\u662f\u6241\u5e73\u5f0f\u7684\uff0c\u4f46\u662f\u5728\u5927\u6570\u636e\u73af\u5883\u4e0b\uff0c\u901a\u5e38\u6570\u636e\u7684\u6765\u6e90\u662f\u670d\u52a1\u7aef\u7684\u57cb\u70b9\u6570\u636e\uff0c\u5f88\u53ef\u80fd\u9700\u8981\u628a\u7a0b\u5e8f\u4e2d\u7684\u67d0\u4e9b\u5bf9\u8c61\u5185\u5bb9\u4f5c\u4e3a\u8f93\u51fa\u7684\u4e00\u90e8\u5206\uff0c\u800c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u53ef\u80fd\u662f\u5d4c\u5957\u7684\uff0c\u6240\u4ee5\u5982\u679c\u80fd\u591f\u539f\u751f\u7684\u652f\u6301\u8fd9\u79cd\u6570\u636e\uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u989d\u5916\u7684\u89e3\u6790\u4fbf\u80fd\u83b7\u5f97\u60f3\u8981\u7684\u7ed3\u679c\u3002</p> <p>Parquet \u7684\u7075\u611f\u6765\u81ea\u4e8e 2010 \u5e74 Google \u53d1\u8868\u7684 Dremel \u8bba\u6587\uff0c\u6587\u4e2d\u4ecb\u7ecd\u4e86\u4e00\u79cd\u652f\u6301\u5d4c\u5957\u7ed3\u6784\u7684\u5b58\u50a8\u683c\u5f0f\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u5217\u5f0f\u5b58\u50a8\u7684\u65b9\u5f0f\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002Parquet \u4ec5\u4ec5\u662f\u4e00\u79cd\u5b58\u50a8\u683c\u5f0f\uff0c\u5b83\u662f\u8bed\u8a00\u3001\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u548c\u4efb\u4f55\u4e00\u79cd\u6570\u636e\u5904\u7406\u6846\u67b6\u7ed1\u5b9a\u3002\u8fd9\u4e5f\u662f parquet \u76f8\u8f83\u4e8e ORC \u7684\u4ec5\u6709\u4f18\u52bf\uff1a\u652f\u6301\u5d4c\u5957\u7ed3\u6784\u3002Parquet \u6ca1\u6709\u592a\u591a\u5176\u4ed6\u53ef\u5708\u53ef\u70b9\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u4ed6\u4e0d\u652f\u6301 update \u64cd\u4f5c(\u6570\u636e\u5199\u6210\u540e\u4e0d\u53ef\u4fee\u6539)\uff0c\u4e0d\u652f\u6301 ACID \u7b49\u3002</p> <p>Parquet \u6587\u4ef6\u662f\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u7684\uff0c\u6587\u4ef6\u4e2d\u5305\u62ec\u8be5\u6587\u4ef6\u7684\u6570\u636e\u548c\u5143\u6570\u636e\u3002</p> <p></p> <p>\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a Parquet \u6587\u4ef6\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u6587\u4ef6\u7684\u9996\u5c3e\u90fd\u662f\u8be5\u6587\u4ef6\u7684 Magic Code\uff0c\u7528\u4e8e\u6821\u9a8c\u5b83\u662f\u5426\u662f\u4e00\u4e2a Parquet \u6587\u4ef6\u3002</p> <p>\u9996\u5c3e\u4e2d\u95f4\u7531\u82e5\u5e72\u4e2a Row Group \u548c\u4e00\u4e2a Footer(File Meta Data) \u7ec4\u6210\u3002</p> <p>\u6bcf\u4e2a Row Group \u5305\u542b\u591a\u4e2a Column Chunk\uff0c\u6bcf\u4e2a Column Chunk \u5305\u542b\u591a\u4e2a Page\u3002\u4ee5\u4e0b\u662f Row Group\u3001Column Chunk \u548c Page \u4e09\u4e2a\u6982\u5ff5\u7684\u8bf4\u660e:</p> <ul> <li>\u884c\u7ec4 (Row Group)\uff1a \u4e00\u4e2a\u884c\u7ec4\u5bf9\u5e94\u903b\u8f91\u8868\u4e2d\u7684\u82e5\u5e72\u884c\u3002</li> <li>\u5217\u5757 (Column Chunk)\uff1a \u4e00\u4e2a\u884c\u7ec4\u4e2d\u7684\u4e00\u5217\u4fdd\u5b58\u5728\u4e00\u4e2a\u5217\u5757\u4e2d\u3002</li> <li>\u9875 (Page)\uff1a\u4e00\u4e2a\u5217\u5757\u7684\u6570\u636e\u4f1a\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u9875\u3002</li> </ul> <p>Footer(File Meta Data) \u4e2d\u5b58\u50a8\u4e86\u6bcf\u4e2a\u884c\u7ec4 (Row Group) \u4e2d\u7684\u6bcf\u4e2a\u5217\u5757 (Column Chunk) \u7684\u5143\u6570\u636e\u4fe1\u606f\uff0c\u5143\u6570\u636e\u4fe1\u606f\u5305\u542b\u4e86\u8be5\u5217\u7684\u6570\u636e\u7c7b\u578b\u3001\u8be5\u5217\u7684\u7f16\u7801\u65b9\u5f0f\u3001\u8be5\u7c7b\u7684 Data Page \u4f4d\u7f6e\u7b49\u4fe1\u606f\u3002</p> <p>\u9664\u4e86\u652f\u6301\u5d4c\u5957\u7ed3\u6784\uff0cParquet \u8fd8\u652f\u6301\u4e00\u4e9b\u4f18\u5316\uff1a</p> <ul> <li>\u6620\u5c04\u4e0b\u63a8(Project PushDown)</li> </ul> <p>\u8bf4\u5230\u5217\u5f0f\u5b58\u50a8\u7684\u4f18\u52bf\uff0c\u6620\u5c04\u4e0b\u63a8\u662f\u6700\u7a81\u51fa\u7684\uff0c\u5b83\u610f\u5473\u7740\u5728\u83b7\u53d6\u8868\u4e2d\u539f\u59cb\u6570\u636e\u65f6\u53ea\u9700\u8981\u626b\u63cf\u67e5\u8be2\u4e2d\u9700\u8981\u7684\u5217\uff0c\u7531\u4e8e\u6bcf\u4e00\u5217\u7684\u6240\u6709\u503c\u90fd\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u5206\u533a\u53d6\u51fa\u6bcf\u4e00\u5217\u7684\u6240\u6709\u503c\u5c31\u53ef\u4ee5\u5b9e\u73b0 TableScan \u7b97\u5b50\uff0c\u800c\u907f\u514d\u626b\u63cf\u6574\u4e2a\u8868\u6587\u4ef6\u5185\u5bb9\u3002</p> <p>\u5728 Parquet \u4e2d\u539f\u751f\u5c31\u652f\u6301\u6620\u5c04\u4e0b\u63a8\uff0c\u6267\u884c\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 Configuration \u4f20\u9012\u9700\u8981\u8bfb\u53d6\u7684\u5217\u7684\u4fe1\u606f\uff0c\u6620\u5c04\u6bcf\u6b21\u4f1a\u626b\u63cf\u4e00\u4e2a Row Group \u7684\u6570\u636e\uff0c\u7136\u540e\u4e00\u6b21\u6027\u5f97\u5c06\u8be5 Row Group \u91cc\u6240\u6709\u9700\u8981\u7684\u5217\u7684 Column Chunk \u90fd\u8bfb\u53d6\u5230\u5185\u5b58\u4e2d\uff0c\u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a Row Group \u7684\u6570\u636e\u80fd\u591f\u5927\u5927\u964d\u4f4e\u968f\u673a\u8bfb\u7684\u6b21\u6570\uff0c \u9664\u6b64\u4e4b\u5916\uff0cParquet \u5728\u8bfb\u53d6\u7684\u65f6\u5019\u4f1a\u8003\u8651\u5217\u662f\u5426\u8fde\u7eed\uff0c\u5982\u679c\u67d0\u4e9b\u9700\u8981\u7684\u5217\u662f\u5b58\u50a8\u4f4d\u7f6e\u662f\u8fde\u7eed\u7684\uff0c\u90a3\u4e48\u4e00\u6b21\u8bfb\u64cd\u4f5c\u5c31\u53ef\u4ee5\u628a\u591a\u4e2a\u5217\u7684\u6570\u636e\u8bfb\u53d6\u5230\u5185\u5b58\u3002</p> <ul> <li>\u8c13\u8bcd\u4e0b\u63a8(Predicate PushDown)</li> </ul> <p>\u901a\u8fc7\u5c06\u4e00\u4e9b\u8fc7\u6ee4\u6761\u4ef6\u5c3d\u53ef\u80fd\u7684\u5728\u6700\u5e95\u5c42\u6267\u884c\u53ef\u4ee5\u51cf\u5c11\u6bcf\u4e00\u5c42\u4ea4\u4e92\u7684\u6570\u636e\u91cf\uff0c\u4ece\u800c\u63d0\u5347\u6027\u80fd\u3002Parquet \u505a\u4e86\u66f4\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\uff0c\u4f18\u5316\u7684\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e00\u4e2a Row Group \u7684\u6bcf\u4e00\u4e2a Column Chunk \u5728\u5b58\u50a8\u7684\u65f6\u5019\u90fd\u8ba1\u7b97\u5bf9\u5e94\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5305\u62ec\u8be5 Column Chunk \u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u548c\u7a7a\u503c\u4e2a\u6570\u3002\u901a\u8fc7\u8fd9\u4e9b\u7edf\u8ba1\u503c\u548c\u8be5\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\u53ef\u4ee5\u5224\u65ad\u8be5 Row Group \u662f\u5426\u9700\u8981\u626b\u63cf\u3002\u53e6\u5916 Parquet \u672a\u6765\u8fd8\u4f1a\u589e\u52a0\u8bf8\u5982 Bloom Filter \u548c Index \u7b49\u4f18\u5316\u6570\u636e\uff0c\u66f4\u52a0\u6709\u6548\u7684\u5b8c\u6210\u8c13\u8bcd\u4e0b\u63a8\u3002</p> <p>\u5728\u4f7f\u7528 Parquet \u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e24\u79cd\u7b56\u7565\u63d0\u5347\u67e5\u8be2\u6027\u80fd\uff1a</p> <ul> <li>\u7c7b\u4f3c\u4e8e\u5173\u7cfb\u6570\u636e\u5e93\u7684\u4e3b\u952e\uff0c\u5bf9\u9700\u8981\u9891\u7e41\u8fc7\u6ee4\u7684\u5217\u8bbe\u7f6e\u4e3a\u6709\u5e8f\u7684\uff0c\u8fd9\u6837\u5728\u5bfc\u5165\u6570\u636e\u7684\u65f6\u5019\u4f1a\u6839\u636e\u8be5\u5217\u7684\u987a\u5e8f\u5b58\u50a8\u6570\u636e\uff0c\u8fd9\u6837\u53ef\u4ee5\u6700\u5927\u5316\u7684\u5229\u7528\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u5b9e\u73b0\u8c13\u8bcd\u4e0b\u63a8\u3002</li> <li>\u51cf\u5c0f\u884c\u7ec4\u5927\u5c0f\u548c\u9875\u5927\u5c0f\uff0c\u8fd9\u6837\u589e\u52a0\u8df3\u8fc7\u6574\u4e2a\u884c\u7ec4\u7684\u53ef\u80fd\u6027\uff0c\u4f46\u662f\u6b64\u65f6\u9700\u8981\u6743\u8861\u7531\u4e8e\u538b\u7f29\u548c\u7f16\u7801\u6548\u7387\u4e0b\u964d\u5e26\u6765\u7684 I/O \u8d1f\u8f7d\u3002</li> </ul> <p>\u6027\u80fd\u5bf9\u6bd4\uff1a</p> <p>\u76f8\u6bd4\u4f20\u7edf\u7684\u884c\u5f0f\u5b58\u50a8\uff0cHadoop \u751f\u6001\u5708\u8fd1\u5e74\u6765\u4e5f\u6d8c\u73b0\u51fa\u8bf8\u5982 RC\u3001ORC\u3001Parquet \u7684\u5217\u5f0f\u5b58\u50a8\u683c\u5f0f\uff0c\u5b83\u4eec\u7684\u6027\u80fd\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a</p> <ol> <li>\u66f4\u9ad8\u7684\u538b\u7f29\u6bd4\uff0c\u7531\u4e8e\u76f8\u540c\u7c7b\u578b\u7684\u6570\u636e\u66f4\u5bb9\u6613\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5217\u4f7f\u7528\u9ad8\u6548\u7684\u7f16\u7801\u548c\u538b\u7f29\u65b9\u5f0f\u3002</li> <li>\u66f4\u5c11\u7684 I/O\uff0c\u7531\u4e8e\u6620\u5c04\u4e0b\u63a8\u548c\u8c13\u8bcd\u4e0b\u63a8\u7684\u4f7f\u7528\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e00\u5927\u90e8\u5206\u4e0d\u5fc5\u8981\u7684\u6570\u636e\u626b\u63cf\uff0c\u5c24\u5176\u662f\u8868\u7ed3\u6784\u6bd4\u8f83\u5e9e\u5927\u7684\u65f6\u5019\u66f4\u52a0\u660e\u663e\uff0c\u7531\u6b64\u4e5f\u80fd\u591f\u5e26\u6765\u66f4\u597d\u7684\u67e5\u8be2\u6027\u80fd\u3002</li> </ol> <p>\u5728\u6570\u636e\u5b58\u50a8\u65b9\u9762\uff0cORC \u548c Parquet \u4e24\u79cd\u5b58\u50a8\u683c\u5f0f\u5728\u90fd\u662f\u7528 snappy \u538b\u7f29\u7684\u60c5\u51b5 \u4e0b\u4e24\u79cd\u5b58\u50a8\u683c\u5f0f\u5360\u7528\u7684\u7a7a\u95f4\u76f8\u5dee\u5e76\u4e0d\u5927\uff0c\u800c\u4e14 Parquet \u683c\u5f0f\u7a0d\u597d\u4e8e ORC \u683c\u5f0f\u3002\u4e24\u8005\u5728\u529f\u80fd\u4e0a\u4e5f\u90fd\u6709\u4f18\u7f3a\u70b9\uff0cParquet \u539f\u751f\u652f\u6301\u5d4c\u5957\u5f0f\u6570\u636e\u7ed3\u6784\uff0c\u800c ORC \u5bf9\u6b64\u652f\u6301\u8f83\u5dee\uff0c\u8fd9\u79cd\u590d\u6742\u7684 Schema \u67e5\u8be2\u4e5f\u76f8\u5bf9\u8f83\u5dee\uff1b\u800c Parquet \u4e0d\u652f\u6301\u6570\u636e\u7684\u4fee\u6539\u548c ACID\uff0c\u4f46\u662f ORC \u5bf9\u6b64\u63d0\u4f9b\u652f\u6301\uff0c\u4f46\u662f\u5728 OLAP \u73af\u5883\u4e0b\u5f88\u5c11\u4f1a\u5bf9\u5355\u6761\u6570\u636e\u4fee\u6539\uff0c\u66f4\u591a\u7684\u5219\u662f\u6279\u91cf\u5bfc\u5165\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_10","title":"Hive \u4e2d\u7684\u6570\u636e\u538b\u7f29","text":"<p>\u6570\u636e\u538b\u7f29\u4f18\u70b9\uff1a\u51cf\u5c11\u5b58\u50a8\u78c1\u76d8\u7a7a\u95f4\uff0c\u964d\u4f4e\u5355\u8282\u70b9\u7684\u78c1\u76d8 I/O\u3002\u51cf\u5c11\u7f51\u7edc\u4f20\u8f93\u7684\u5f00\u9500\u3002</p> <p>\u6570\u636e\u538b\u7f29\u7f3a\u70b9\uff1a\u9700\u8981\u82b1\u8d39\u989d\u5916\u7684\u65f6\u95f4/CPU \u505a\u538b\u7f29\u548c\u89e3\u538b\u7f29\u8ba1\u7b97\u3002</p> <p>\u5177\u4f53\u4f7f\u4e0d\u4f7f\u7528\u6570\u636e\u538b\u7f29\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e job \u7c7b\u578b\uff1a\u5bf9\u90a3\u4e9b I/O \u5bc6\u96c6\u578b\u7684\u4f5c\u4e1a\u5e94\u8be5\u4f7f\u7528\u6570\u636e\u538b\u7f29\uff0c\u800c\u5bf9\u4e8e CPU \u5bc6\u96c6\u578b\u7684\u4f5c\u4e1a\uff0c\u4f7f\u7528\u538b\u7f29\u53cd\u800c\u4f1a\u964d\u4f4e\u6027\u80fd\u3002</p> <p>\u6570\u636e\u538b\u7f29\u53ef\u7528\u4e8e\uff1a</p> <ul> <li>\u8868\u6570\u636e</li> <li>Map \u9636\u6bb5\u8f93\u51fa</li> <li>Reduce \u9636\u6bb5\u8f93\u51fa</li> </ul> <p>\u5bf9\u4e8e\u4e00\u4e2a\u538b\u7f29\u7b97\u6cd5\uff0c\u6211\u4eec\u901a\u5e38\u4ece\u538b\u7f29\u6bd4\u3001\u538b\u7f29\u89e3\u538b\u7f29\u901f\u5ea6\u3001\u538b\u7f29\u540e\u6587\u4ef6\u662f\u5426\u53ef\u4ee5\u5206\u5272\u6765\u8fdb\u884c\u8bc4\u4ef7\u3002</p> \u538b\u7f29\u65b9\u5f0f \u538b\u7f29\u6bd4 \u538b\u7f29\u901f\u5ea6 \u89e3\u538b\u7f29\u901f\u5ea6 \u662f\u5426\u53ef\u5206\u5272 gzip 13.4% 21 MB/s 118 MB/s \u5426 bzip2 13.2% 2.4MB/s 9.5MB/s \u662f lzo 20.5% 135 MB/s 410 MB/s \u662f snappy 22.2% 172 MB/s 409 MB/s \u5426 <p>GZip \u548c BZip2 \u538b\u7f29\u53ef\u4ee5\u4fdd\u8bc1\u6700\u5c0f\u7684\u538b\u7f29\u6587\u4ef6\uff0c\u4f46\u662f\u8fc7\u4e8e\u6d88\u8017\u65f6\u95f4\uff1bSnappy \u548c LZO \u538b\u7f29\u548c\u89e3\u538b\u7f29\u5f88\u5feb\uff0c\u4f46\u662f\u538b\u7f29\u7684\u6587\u4ef6\u8f83\u5927\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hive_11","title":"Hive \u8c03\u4f18","text":"<p>\u5bf9\u4e8e Hive \u4e2d\u7684\u8c03\u4f18\u95ee\u9898\uff0c\u5e94\u8be5\u4f18\u5148\u8003\u8651 Join\u3001\u5206\u7ec4\u805a\u5408\u548c\u6570\u636e\u503e\u659c\u7684\u4f18\u5316\u3002\u5176\u6b21\u662f\u4ece Hadoop/MR \u7684\u89d2\u5ea6\u3002\u7136\u540e\u662f Hive \u7684\u4e00\u4e9b\u8bbe\u7f6e\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#join","title":"Join \u7684\u4f18\u5316","text":"<p>\u5bf9\u4e8e\u4e24\u8868\u4e4b\u95f4\u7684 Join\uff0c\u6211\u4eec\u5e94\u8be5\u4f18\u5148\u8003\u8651\u662f\u5426\u53ef\u4ee5\u5728 Map \u7aef\u6267\u884c Join\uff0c\u907f\u514d Shuffle \u548c Reduce \u9636\u6bb5\uff0c\u4ece\u800c\u51cf\u5c11 I/O \u548c\u7f51\u7edc\u4f20\u8f93\u7684\u5f00\u9500\u3002</p> <ul> <li>\u5bf9\u4e8e\u5c0f\u8868 Join \u5927\u8868\u7684\u60c5\u51b5\uff0cHive \u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u8f6c\u6362\u4e3a Map Join</li> <li>\u5bf9\u4e8e\u5927\u8868 Join \u5927\u8868\u7684\u60c5\u51b5\uff0c\u5982\u679c\u4e24\u5f20\u8868\u90fd\u662f\u5206\u6876\u8868\uff0c\u5e76\u4e14\u8fde\u63a5\u5b57\u6bb5\u662f\u5206\u6876\u5b57\u6bb5\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 Bucket Map Join\uff0cJoin \u7b97\u6cd5\u4e3a Hash Join</li> <li>\u5bf9\u4e8e\u5927\u8868 Join \u5927\u8868\u7684\u60c5\u51b5\uff0c\u5982\u679c\u4e24\u5f20\u8868\u90fd\u662f\u5206\u6876\u8868\uff0c\u5e76\u4e14\u8fde\u63a5\u5b57\u6bb5\u662f\u5206\u6876\u5b57\u6bb5\uff0c\u5e76\u4e14\u8fd8\u662f\u6709\u5e8f\u7684\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 SMB Join\uff0cJoin \u7b97\u6cd5\u4e3a Sort Merge Join</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_7","title":"\u5206\u7ec4\u805a\u5408\u7684\u4f18\u5316","text":"<p>Group By \u7684\u4f18\u5316\uff1a</p> <p>\u5206\u7ec4\u805a\u5408\u548c Join \u540c\u7406\uff0c\u4e5f\u662f\u4f18\u5148\u8003\u8651\u662f\u5426\u53ef\u4ee5\u5728 Map \u7aef\u6267\u884c\u805a\u5408\uff0c\u4ece\u800c\u51cf\u5c11 Shuffle \u9636\u6bb5\u7684\u6570\u636e\u91cf\u3002</p> <p>Hive \u4e2d\u672a\u7ecf\u4f18\u5316\u7684\u5206\u7ec4\u805a\u5408\uff0c\u662f\u901a\u8fc7\u4e00\u4e2a MapReduce Job \u5b9e\u73b0\u7684\u3002Map \u7aef\u8d1f\u8d23\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u6309\u7167\u5206\u7ec4\u5b57\u6bb5\u5206\u533a\uff0c\u901a\u8fc7 Shuffle\uff0c\u5c06\u6570\u636e\u53d1\u5f80 Reduce \u7aef\uff0c\u5404\u7ec4\u6570\u636e\u5728 Reduce \u7aef\u5b8c\u6210\u6700\u7ec8\u7684\u805a\u5408\u8fd0\u7b97\u3002</p> <p>Hive \u5bf9\u5206\u7ec4\u805a\u5408\u7684\u4f18\u5316\u4e3b\u8981\u56f4\u7ed5\u7740\u51cf\u5c11 Shuffle \u6570\u636e\u91cf\u8fdb\u884c\uff0c\u5177\u4f53\u505a\u6cd5\u662f map-side \u805a\u5408\u3002\u6240\u8c13 map-side \u805a\u5408\uff0c\u5c31\u662f\u5728 map \u7aef\u7ef4\u62a4\u4e00\u4e2a\uff08\u5185\u5b58\u4e2d\u7684\uff09\u54c8\u5e0c\u8868\uff0c\u5229\u7528\u5176\u5b8c\u6210\u90e8\u5206\u7684\u805a\u5408\uff0c\u7136\u540e\u5c06\u90e8\u5206\u805a\u5408\u7684\u7ed3\u679c\uff0c\u6309\u7167\u5206\u7ec4\u5b57\u6bb5\u5206\u533a\uff0c\u53d1\u9001\u81f3 reduce \u7aef\uff0c\u5b8c\u6210\u6700\u7ec8\u7684\u805a\u5408\u3002map-side \u805a\u5408\u80fd\u6709\u6548\u51cf\u5c11 shuffle \u7684\u6570\u636e\u91cf\uff0c\u63d0\u9ad8\u5206\u7ec4\u805a\u5408\u8fd0\u7b97\u7684\u6548\u7387\u3002</p> <p>COUNT(DISTINCT) \u7684\u4f18\u5316\uff1a</p> <p>\u6570\u636e\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e COUNT DISTINCT \u64cd\u4f5c\u9700\u8981\u7528\u4e00\u4e2a Reduce Task \u6765\u5b8c\u6210\uff0c\u8fd9\u4e00\u4e2a Reduce \u9700\u8981\u5904\u7406\u7684\u6570\u636e\u91cf\u592a\u5927\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6574\u4e2a Job \u5f88\u96be\u5b8c\u6210\uff0c\u4e00\u822c COUNT DISTINCT \u4f7f\u7528\u5148 GROUP BY \u518d COUNT \u7684\u65b9\u5f0f\u66ff\u6362\u3002</p> <pre><code>--\u76f4\u63a5\u53bb\u91cd\nselect count(distinct id) from bigtable;\n--\u6539\u5199\u540e\u53bb\u91cd\nselect count(id) from (select id from bigtable group by id) a;\n</code></pre> <p>\u867d\u7136\u4f1a\u591a\u7528\u4e00\u4e2a Job \u6765\u5b8c\u6210\uff0c\u4f46\u5728\u6570\u636e\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0cgroup by \u4f9d\u65e7\u662f\u53bb\u91cd\u7684\u4e00\u4e2a\u4f18\u5316\u624b\u6bb5\u3002\u5982\u679c\u8bf4\u9700\u8981\u7edf\u8ba1\u7684\u5b57\u6bb5\u6709 Null \u503c\uff0c\u6700\u540e\u53ea\u9700\u8981 null \u503c\u5355\u72ec\u5904\u7406\u540e union \u5373\u53ef\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_8","title":"\u6570\u636e\u503e\u659c\u7684\u4f18\u5316","text":"<p>\u6570\u636e\u503e\u659c\u95ee\u9898\uff0c\u901a\u5e38\u662f\u6307\u53c2\u4e0e\u8ba1\u7b97\u7684\u6570\u636e\u5206\u5e03\u4e0d\u5747\uff0c\u5373\u67d0\u4e2a key \u6216\u8005\u67d0\u4e9b key \u7684\u6570\u636e\u91cf\u8fdc\u8d85\u5176\u4ed6 key\uff0c\u5bfc\u81f4\u5728 shuffle \u9636\u6bb5\uff0c\u5927\u91cf\u76f8\u540c key \u7684\u6570\u636e\u88ab\u53d1\u5f80\u540c\u4e00\u4e2a Reducer\uff0c\u8fdb\u800c\u5bfc\u81f4\u8be5 Reducer \u6240\u9700\u7684\u65f6\u95f4\u8fdc\u8d85\u5176\u4ed6 Reducer\uff0c\u6210\u4e3a\u6574\u4e2a\u4efb\u52a1\u7684\u74f6\u9888\u3002</p> <p>Hive \u4e2d\u7684\u6570\u636e\u503e\u659c\u5e38\u51fa\u73b0\u5728\u5206\u7ec4\u805a\u5408\u548c Join \u64cd\u4f5c\u7684\u573a\u666f\u4e2d\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#group-by","title":"Group By \u4ea7\u751f\u6570\u636e\u503e\u659c","text":"<p>\u4f7f\u7528 Hive \u5bf9\u6570\u636e\u505a\u5206\u7ec4\u805a\u5408\u7684\u65f6\u5019\u67d0\u79cd\u7c7b\u578b\u7684\u6570\u636e\u91cf\u7279\u522b\u591a\uff0c\u800c\u5176\u4ed6\u7c7b\u578b\u6570\u636e\u7684\u6570\u636e\u91cf\u7279\u522b\u5c11\u3002</p> <p>Hive \u4e2d\u672a\u7ecf\u4f18\u5316\u7684\u5206\u7ec4\u805a\u5408\uff0c\u662f\u901a\u8fc7\u4e00\u4e2a MapReduce Job \u5b9e\u73b0\u7684\u3002Map \u7aef\u8d1f\u8d23\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u6309\u7167\u5206\u7ec4\u5b57\u6bb5\u5206\u533a\uff0c\u901a\u8fc7 Shuffle\uff0c\u5c06\u6570\u636e\u53d1\u5f80 Reduce \u7aef\uff0c\u5404\u7ec4\u6570\u636e\u5728 Reduce \u7aef\u5b8c\u6210\u6700\u7ec8\u7684\u805a\u5408\u8fd0\u7b97\u3002</p> <p>\u5982\u679c group by \u5206\u7ec4\u5b57\u6bb5\u7684\u503c\u5206\u5e03\u4e0d\u5747\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u5927\u91cf\u76f8\u540c\u7684 key \u8fdb\u5165\u540c\u4e00 Reducer\uff0c \u4ece\u800c\u5bfc\u81f4\u6570\u636e\u503e\u659c\u95ee\u9898\u3002</p> <p>\u7531\u5206\u7ec4\u805a\u5408\u5bfc\u81f4\u7684\u6570\u636e\u503e\u659c\u95ee\u9898\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u89e3\u51b3\u601d\u8def:</p> <ul> <li>Map-Side \u805a\u5408</li> </ul> <p>\u5f00\u542f Map-Side \u805a\u5408\u540e\uff0c\u6570\u636e\u4f1a\u73b0\u5728 Map \u7aef\u5b8c\u6210\u90e8\u5206\u805a\u5408\u5de5\u4f5c\u3002\u8fd9\u6837\u7ecf\u8fc7 Map \u7aef\u7684\u521d\u6b65\u805a\u5408\u540e\uff0c\u53ef\u4ee5\u7f13\u89e3\u53d1\u5f80 Reducer \u7684\u6570\u636e\u7684\u503e\u659c\u7a0b\u5ea6\u3002\u6700\u4f73\u72b6\u6001\u4e0b\uff0cMap \u7aef\u805a\u5408\u80fd\u5b8c\u5168\u5c4f\u853d\u6570\u636e\u503e\u659c\u95ee\u9898\u3002</p> <ul> <li>Skew-GroupBy \u4f18\u5316</li> </ul> <p>Skew-GroupBy \u7684\u539f\u7406\u662f\u542f\u52a8\u4e24\u4e2a MR \u4efb\u52a1\uff0c\u7b2c\u4e00\u4e2a MR \u6309\u7167\u968f\u673a\u6570\u5206\u533a\uff0c\u5c06\u6570\u636e\u5206\u6563\u53d1\u9001\u5230 Reducer\uff0c\u5b8c\u6210\u90e8\u5206\u805a\u5408\uff0c\u7b2c\u4e8c\u4e2a MR \u6309\u7167\u5206\u7ec4\u5b57\u6bb5\u5206\u533a\uff0c\u5b8c\u6210\u6700\u7ec8\u805a\u5408\u3002</p> <pre><code>--\u542f\u7528\u5206\u7ec4\u805a\u5408\u6570\u636e\u503e\u659c\u4f18\u5316\nset hive.groupby.skewindata=true;\n</code></pre> <ul> <li>\u6839\u636e\u4e1a\u52a1\uff0c\u5408\u7406\u8c03\u6574\u5206\u7ec4\u7ef4\u5ea6</li> </ul> <p>\u53ef\u4ee5\u5355\u72ec\u5c06\u503e\u659c\u7a0b\u5ea6\u5927\u7684\u5b57\u6bb5\u5355\u62ce\u51fa\u6765\u8ba1\u7b97\uff0c\u518d union \u7ed3\u679c\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#countdistinct","title":"count(distinct) \u4ea7\u751f\u6570\u636e\u503e\u659c","text":"<p>\u5982\u679c\u6570\u636e\u91cf\u975e\u5e38\u5927\uff0c\u6267\u884c\u5982 <code>select a, count(distinct b) from t group by a;</code> \u7c7b\u578b\u7684 SQL \u65f6\uff0c\u4f1a\u51fa\u73b0\u6570\u636e\u503e\u659c\u7684\u95ee\u9898\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <ul> <li>\u4f7f\u7528 sum ... group by \u4ee3\u66ff\u3002</li> </ul> <pre><code>select a, sum(1) from (select a,b from t group by a,b) group by a;\n</code></pre> <p>\u8be6\u89c1\u4e0a\u6587 count(distinct) \u4f18\u5316</p> <ul> <li>\u5728\u4e1a\u52a1\u903b\u8f91\u4f18\u5316\u6548\u679c\u7684\u4e0d\u5927\u60c5\u51b5\u4e0b\uff0c\u6709\u4e9b\u65f6\u5019\u662f\u53ef\u4ee5\u5c06\u503e\u659c\u7684\u6570\u636e\u5355\u72ec\u62ff\u51fa\u6765\u5904\u7406\uff0c\u6700\u540e union \u56de\u53bb\u3002</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#join_1","title":"Join \u4ea7\u751f\u6570\u636e\u503e\u659c","text":"<p>\u672a\u7ecf\u4f18\u5316\u7684 Join \u64cd\u4f5c\uff0c\u9ed8\u8ba4\u662f\u4f7f\u7528 common join \u7b97\u6cd5\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u4e00\u4e2a MapReduce Job \u5b8c\u6210\u8ba1\u7b97\u3002Map \u7aef\u8d1f\u8d23\u8bfb\u53d6 join \u64cd\u4f5c\u6240\u9700\u8868\u7684\u6570\u636e\uff0c\u5e76\u6309\u7167\u5173\u8054\u5b57\u6bb5\u8fdb\u884c\u5206\u533a\uff0c\u901a\u8fc7 Shuffle\uff0c\u5c06\u5176\u53d1\u9001\u5230 Reduce \u7aef\uff0c\u76f8\u540c key \u7684\u6570\u636e\u5728 Reduce \u7aef\u5b8c\u6210\u6700\u7ec8\u7684 Join \u64cd\u4f5c\u3002</p> <p>\u5982\u679c\u5173\u8054\u5b57\u6bb5\u7684\u503c\u5206\u5e03\u4e0d\u5747\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u5927\u91cf\u76f8\u540c\u7684 key \u8fdb\u5165\u540c\u4e00 Reducer\uff0c\u4ece\u800c\u5bfc\u81f4\u6570\u636e\u503e\u659c\u95ee\u9898\u3002</p> <p>\u7531 Join \u5bfc\u81f4\u7684\u6570\u636e\u503e\u659c\u95ee\u9898\uff0c\u6709\u5982\u4e0b\u4e09\u79cd\u89e3\u51b3\u65b9\u6848\uff1a</p> <ul> <li>Map Join</li> </ul> <p>\u4f7f\u7528 map join \u7b97\u6cd5\uff0cjoin \u64cd\u4f5c\u4ec5\u5728 map \u7aef\u5c31\u80fd\u5b8c\u6210\uff0c\u6ca1\u6709 shuffle \u64cd\u4f5c\uff0c\u6ca1\u6709 reduce \u9636\u6bb5\uff0c\u81ea\u7136\u4e0d\u4f1a\u4ea7\u751f reduce \u7aef\u7684\u6570\u636e\u503e\u659c\u3002\u8be5\u65b9\u6848\u9002\u7528\u4e8e\u5927\u8868 join \u5c0f\u8868\u65f6\u53d1\u751f\u6570\u636e\u503e\u659c\u7684\u573a\u666f\u3002</p> <ul> <li>Skew Join</li> </ul> <p>Skew Join \u7684\u539f\u7406\u662f\uff0c\u4e3a\u503e\u659c\u7684\u5927 key \u5355\u72ec\u542f\u52a8\u4e00\u4e2a map join \u4efb\u52a1\u8fdb\u884c\u8ba1\u7b97\uff0c\u5176\u4f59 key \u8fdb\u884c\u6b63\u5e38\u7684 common join\u3002\u539f\u7406\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u6ce8\u610f\uff1a\u5728\u6570\u636e\u503e\u659c\u65f6\uff0c\u5982\u679c\u662f\u5927\u8868 Join \u5927\u8868\uff0c\u90a3\u4e48\u4e5f\u65e0\u6cd5\u4f7f\u7528 Bucket Map Join\uff0c\u56e0\u4e3a\u5206\u6876\uff08\u8fc7\u7a0b\u4e3a MR\uff09\u4e5f\u662f\u503e\u659c\u7684\u3002\u6b64\u65f6\u9700\u8981\u4f7f\u7528 Skew Join\u3002</p> <pre><code>--\u542f\u7528 skew join \u4f18\u5316\nset hive.optimize.skewjoin=true;\n--\u89e6\u53d1 skew join \u7684\u9608\u503c\uff0c\u82e5\u67d0\u4e2a key \u7684\u884c\u6570\u8d85\u8fc7\u8be5\u53c2\u6570\u503c\uff0c\u5219\u89e6\u53d1\nset hive.skewjoin.key=100000;\n</code></pre> <p>\u8fd9\u79cd\u65b9\u6848\u5bf9\u53c2\u4e0e join \u7684\u6e90\u8868\u5927\u5c0f\u6ca1\u6709\u8981\u6c42\uff0c\u4f46\u662f\u5bf9\u4e24\u8868\u4e2d\u503e\u659c\u7684 key \u7684\u6570\u636e\u91cf\u6709\u8981\u6c42\uff0c \u8981\u6c42\u4e00\u5f20\u8868\u4e2d\u7684\u503e\u659c key \u7684\u6570\u636e\u91cf\u6bd4\u8f83\u5c0f (\u65b9\u4fbf\u8d70 map join)\u3002</p> <ul> <li>\u8c03\u6574 SQL \u8bed\u53e5</li> </ul> <p>\u82e5\u53c2\u4e0e join \u7684\u4e24\u8868\u5747\u4e3a\u5927\u8868\uff0c\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u6570\u636e\u662f\u503e\u659c\u7684\uff0c\u6b64\u65f6\u4e5f\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5bf9 SQL \u8bed\u53e5\u8fdb\u884c\u76f8\u5e94\u7684\u8c03\u6574\u3002</p> <p>\u5047\u8bbe\u539f\u59cb SQL \u8bed\u53e5\u5982\u4e0b\uff1aA\uff0cB \u4e24\u8868\u5747\u4e3a\u5927\u8868\uff0c\u4e14\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u6570\u636e\u662f\u503e\u659c\u7684\u3002</p> <pre><code>select *\nfrom A join B\non A.id=B.id;\n</code></pre> <p></p> <p>\u56fe\u4e2d 1001 \u4e3a\u503e\u659c\u7684\u5927 key\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u88ab\u53d1\u5f80\u4e86\u540c\u4e00\u4e2a Reduce \u8fdb\u884c\u5904\u7406\u3002</p> <p>\u8c03\u6574 SQL \u8bed\u53e5\u5982\u4e0b\uff1a</p> <pre><code>select\n    *\nfrom(\n    select --\u6253\u6563\u64cd\u4f5c\n        concat(id,'_',cast(rand()*2 as int)) id, value\n    from A\n)ta join(\n    select --\u6269\u5bb9\u64cd\u4f5c\n        concat(id,'_',0) id, value\n    from B\n    union all\n    select\n        concat(id,'_',1) id, value\n    from B\n)tb\non ta.id=tb.id;\n</code></pre> <p>\u8c03\u6574\u4e4b\u540e\u7684 SQL \u8bed\u53e5\u6267\u884c\u8ba1\u5212\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_9","title":"\u7a7a\u503c\u4ea7\u751f\u6570\u636e\u503e\u659c","text":"<p>\u9047\u5230\u9700\u8981\u8fdb\u884c join \u7684\u4f46\u662f\u5173\u8054\u5b57\u6bb5\u6709\u6570\u636e\u4e3a\u7a7a\u3002\u5982\u65e5\u5fd7\u4e2d\uff0c\u5e38\u4f1a\u6709\u4fe1\u606f\u4e22\u5931\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u65e5\u5fd7\u4e2d\u7684 user_id\uff0c\u5982\u679c\u53d6\u5176\u4e2d\u7684 user_id \u548c\u7528\u6237\u8868\u4e2d \u7684 user_id \u5173\u8054\uff0c\u4f1a\u78b0\u5230\u6570\u636e\u503e\u659c\u7684\u95ee\u9898\u3002\u6570\u636e\u91cf\u5927\u65f6\u4e5f\u4f1a\u4ea7\u751f\u6570\u636e\u503e\u659c\uff0c\u5982\u8868\u4e00\u7684 id \u9700\u8981\u548c\u8868\u4e8c\u7684 id \u8fdb\u884c\u5173\u8054\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <ul> <li>\u5355\u72ec\u628a\u7a7a\u503c\u62ce\u51fa\u6765\u518d union</li> </ul> <pre><code>select a.* from log a join users b\non a.user_id is not null and a.user_id = b.user_id\nunion all\nselect a.* from log a where a.user_id is null;\n</code></pre> <ul> <li>\u7ed9\u7a7a\u503c\u5206\u914d\u968f\u673a\u7684 key \u503c</li> </ul> <pre><code>select * from log a left outer join users b\non case when a.user_id is null then\nconcat('hive', rand()) else a.user_id end = b.user_id;\n</code></pre> <p>\u4e00\u822c\u5206\u914d\u968f\u673a key \u503c\u5f97\u65b9\u6cd5\u66f4\u597d\u4e00\u4e9b\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_10","title":"\u5176\u4ed6\u4f18\u5316","text":""},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_11","title":"\u5206\u533a\u88c1\u526a\u3001\u5217\u88c1\u526a","text":"<p>\u5c3d\u53ef\u80fd\u65e9\u5730\u8fc7\u6ee4\u6389\u4e0d\u9700\u8981\u7684\u6570\u636e\u3002</p>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#fetch","title":"Fetch \u6293\u53d6","text":"<p>Fetch \u6293\u53d6\u662f\u6307\uff0cHive \u4e2d\u5bf9\u67d0\u4e9b\u60c5\u51b5\u7684\u67e5\u8be2\u53ef\u4ee5\u4e0d\u5fc5\u4f7f\u7528 MapReduce \u8ba1\u7b97\u3002\u4f8b\u5982\uff1a<code>select * from emp;</code> \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cHive \u53ef\u4ee5\u7b80\u5355\u5730\u8bfb\u53d6 emp \u5bf9\u5e94\u7684\u5b58\u50a8\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u7136\u540e\u8f93\u51fa\u67e5\u8be2\u7ed3\u679c\u5230\u63a7\u5236\u53f0\u3002</p> <pre><code>--\u662f\u5426\u5728\u7279\u5b9a\u573a\u666f\u8f6c\u6362\u4e3a fetch \u4efb\u52a1\n--\u8bbe\u7f6e\u4e3a none \u8868\u793a\u4e0d\u8f6c\u6362\n--\u8bbe\u7f6e\u4e3a minimal \u8868\u793a\u652f\u6301 select *\uff0c\u5206\u533a\u5b57\u6bb5\u8fc7\u6ee4\uff0cLimit \u7b49\n--\u8bbe\u7f6e\u4e3a more \u8868\u793a\u652f\u6301 select \u4efb\u610f\u5b57\u6bb5, \u5305\u62ec\u51fd\u6570\uff0c\u8fc7\u6ee4\uff0c\u548climit\u7b49\nset hive.fetch.task.conversion=more;\n</code></pre>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_12","title":"\u672c\u5730\u6a21\u5f0f","text":"<p>\u6709\u65f6 Hive \u7684\u8f93\u5165\u6570\u636e\u91cf\u662f\u975e\u5e38\u5c0f\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e3a\u67e5\u8be2\u89e6\u53d1\u6267\u884c\u4efb\u52a1\u6d88\u8017\u7684\u65f6\u95f4\u53ef\u80fd\u4f1a\u6bd4\u5b9e\u9645 job \u7684\u6267\u884c\u65f6\u95f4\u8981\u591a\u7684\u591a\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u8fd9\u79cd\u60c5\u51b5\uff0cHive \u53ef\u4ee5\u901a\u8fc7\u672c\u5730\u6a21\u5f0f\u5728\u5355\u53f0\u673a\u5668\u4e0a\u5904\u7406\u6240\u6709\u7684\u4efb\u52a1\u3002\u5bf9\u4e8e\u5c0f\u6570\u636e\u96c6\uff0c\u6267\u884c\u65f6\u95f4\u53ef\u4ee5\u660e\u663e\u88ab\u7f29\u77ed\u3002</p> <pre><code>--\u5f00\u542f\u81ea\u52a8\u8f6c\u6362\u4e3a\u672c\u5730\u6a21\u5f0f\nset hive.exec.mode.local.auto=true;\n\n--\u8bbe\u7f6e local MapReduce \u7684\u6700\u5927\u8f93\u5165\u6570\u636e\u91cf\uff0c\u5f53\u8f93\u5165\u6570\u636e\u91cf\u5c0f\u4e8e\u8fd9\u4e2a\u503c\u65f6\u91c7\u7528 local MapReduce\u7684\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u4e3a134217728\uff0c\u5373128M\nset hive.exec.mode.local.auto.inputbytes.max=50000000;\n\n--\u8bbe\u7f6e local MapReduce \u7684\u6700\u5927\u8f93\u5165\u6587\u4ef6\u4e2a\u6570\uff0c\u5f53\u8f93\u5165\u6587\u4ef6\u4e2a\u6570\u5c0f\u4e8e\u8fd9\u4e2a\u503c\u65f6\u91c7\u7528 local MapReduce \u7684\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u4e3a 4\nset hive.exec.mode.local.auto.input.files.max=10;\n</code></pre>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_13","title":"\u4e25\u683c\u6a21\u5f0f","text":"<p>\u4e25\u683c\u6a21\u5f0f\u53ef\u4ee5\u9632\u6b62\u67d0\u4e9b\u5371\u9669\u64cd\u4f5c\uff1a</p> <ul> <li>\u5206\u533a\u8868\u4e0d\u4f7f\u7528\u5206\u533a\u8fc7\u6ee4</li> <li>\u4f7f\u7528 order by \u6ca1\u6709 limit \u8fc7\u6ee4</li> <li>\u7b1b\u5361\u5c14\u79ef</li> </ul>"},{"location":"Hive/2.%20Hive%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_14","title":"\u5e76\u884c\u6267\u884c","text":"<p>Hive \u4f1a\u5c06\u4e00\u4e2a SQL \u8bed\u53e5\u8f6c\u5316\u6210\u4e00\u4e2a\u6216\u8005\u591a\u4e2a Stage\uff0c\u6bcf\u4e2a Stage \u5bf9\u5e94\u4e00\u4e2a MR Job\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cHive \u540c\u65f6\u53ea\u4f1a\u6267\u884c\u4e00\u4e2a Stage\u3002\u4f46\u662f\u67d0 SQL \u8bed\u53e5\u53ef\u80fd\u4f1a\u5305\u542b\u591a\u4e2a Stage\uff0c\u4f46\u8fd9\u591a\u4e2a Stage \u53ef\u80fd\u5e76\u975e\u5b8c\u5168\u4e92\u76f8\u4f9d\u8d56\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u4e9b Stage \u662f\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u7684\u3002\u6b64\u5904\u63d0\u5230\u7684\u5e76\u884c\u6267\u884c\u5c31\u662f\u6307\u8fd9\u4e9b Stage \u7684\u5e76\u884c\u6267\u884c\u3002\u76f8\u5173\u53c2\u6570\u5982\u4e0b\uff1a</p> <pre><code>--\u542f\u7528\u5e76\u884c\u6267\u884c\u4f18\u5316\uff0c\u9ed8\u8ba4\u662f false\nset hive.exec.parallel=true;\n\n--\u540c\u4e00\u4e2a sql \u5141\u8bb8\u6700\u5927\u5e76\u884c\u5ea6\uff0c\u9ed8\u8ba4\u4e3a 8\nset hive.exec.parallel.thread.number=8;\n</code></pre>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/","title":"Hive \u51fd\u6570\u76f8\u5173","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#udf","title":"UDF","text":"<p>\u4e00\u5bf9\u4e00\u7684\u8f93\u5165\u8f93\u51fa\uff0c\u53ea\u80fd\u8f93\u5165\u4e00\u6761\u8bb0\u5f55\u5f53\u4e2d\u7684\u6570\u636e\uff0c\u540c\u65f6\u8fd4\u56de\u4e00\u6761\u5904\u7406\u7ed3\u679c\u3002\u5c5e\u4e8e\u6700\u5e38\u89c1\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u3002Hive \u7684 UDF \u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\u6216\u8005\u5b9e\u73b0\u7684 API\uff0c\u4e00\u79cd\u662f UDF \u6bd4\u8f83\u7b80\u5355\uff0c\u4e00\u79cd\u662f GenericUDF \u6bd4\u8f83\u590d\u6742\u3002</p> <p>\u5982\u679c\u6240\u64cd\u4f5c\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f\u57fa\u7840\u6570\u636e\u7c7b\u578b\uff0c\u5982\uff08Hadoop&amp;Hive \u57fa\u672c writable \u7c7b\u578b\uff0c\u5982 Text, IntWritable, LongWriable, DoubleWritable \u7b49\uff09\u3002\u90a3\u4e48\u7b80\u5355\u7684 <code>org.apache.hadoop.hive.ql.exec.UDF</code> \u5c31\u53ef\u4ee5\u505a\u5230\u3002 \u5177\u4f53\u5730\uff0c\u9700\u8981\u7ee7\u627f <code>org.apache.hadoop.hive.ql.UDF</code>\uff0c\u5e76\u5b9e\u73b0 evaluate \u65b9\u6cd5\u3002</p> <p>\u5982\u679c\u6240\u64cd\u4f5c\u7684\u6570\u636e\u7c7b\u578b\u662f\u5185\u5d4c\u6570\u636e\u7ed3\u6784\uff0c\u5982 Map\uff0cList \u548c Set\uff0c\u90a3\u4e48\u8981\u91c7\u7528 <code>org.apache.hadoop.hive.ql.udf.generic.GenericUDF</code>\u3002 \u5177\u4f53\u5730\uff0c\u9700\u8981\u7ee7\u627f <code>org.apache.hadoop.hive.ql.udf.generic.GenericUDF</code>\uff0c\u5e76\u5b9e\u73b0\u4e09\u4e2a\u65b9\u6cd5\uff1a</p> <ol> <li>initialize\uff1a\u53ea\u8c03\u7528\u4e00\u6b21\uff0c\u5728\u4efb\u4f55 evaluate() \u8c03\u7528\u4e4b\u524d\u53ef\u4ee5\u63a5\u6536\u5230\u4e00\u4e2a\u53ef\u4ee5\u8868\u793a\u51fd\u6570\u8f93\u5165\u53c2\u6570\u7c7b\u578b\u7684 ObjectInspectors \u6570\u7ec4\u3002initialize \u7528\u6765\u9a8c\u8bc1\u8be5\u51fd\u6570\u662f\u5426\u63a5\u6536\u6b63\u786e\u7684\u53c2\u6570\u7c7b\u578b\u548c\u53c2\u6570\u4e2a\u6570\uff0c\u6700\u540e\u63d0\u4f9b\u6700\u540e\u7ed3\u679c\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\u3002</li> <li>evaluate\uff1a\u771f\u6b63\u7684\u903b\u8f91\uff0c\u8bfb\u53d6\u8f93\u5165\u6570\u636e\uff0c\u5904\u7406\u6570\u636e\uff0c\u8fd4\u56de\u7ed3\u679c\u3002</li> <li>getDisplayString\uff1a\u8fd4\u56de\u63cf\u8ff0\u8be5\u65b9\u6cd5\u7684\u5b57\u7b26\u4e32\uff0c\u6ca1\u6709\u592a\u591a\u4f5c\u7528\u3002</li> </ol>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#udaf","title":"UDAF","text":"<p>\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <ol> <li>\u81ea\u5b9a\u4e49\u4e00\u4e2a Java \u7c7b\uff0c\u7ee7\u627f UDAF \u7c7b</li> <li>\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u9759\u6001\u7c7b\uff0c\u5b9e\u73b0 UDAFEvaluator \u63a5\u53e3</li> <li>\u5b9e\u73b0 init(), iterate(), terminatePartial(), merge(), terminate()\uff0c\u5171 5 \u4e2a\u65b9\u6cd5</li> </ol> <p></p>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#ntile","title":"NTILE","text":"<p>NTILE(n)\uff0c\u7528\u4e8e\u5c06\u5206\u7ec4\u6570\u636e\u6309\u7167\u987a\u5e8f\u5207\u5206\u6210 n \u7247\uff0c\u8fd4\u56de\u5f53\u524d\u5207\u7247\u503c\u3002\u5982\u679c\u5207\u7247\u4e0d\u5747\u5300\uff0c\u9ed8\u8ba4\u589e\u52a0\u7b2c\u4e00\u4e2a\u5207\u7247\u7684\u5206\u5e03\u3002</p> <pre><code>SELECT *\nFROM geeks_demo;\n</code></pre> ID 1 2 3 4 5 6 7 8 9 10 <pre><code>SELECT ID,\nNTILE (3) OVER (\nORDER BY ID\n) Group_number\nFROM geeks_demo;\n</code></pre> ID Group_number 1 1 2 1 3 1 4 1 5 2 6 2 7 2 8 3 9 3 10 3 <pre><code>SELECT\n    category_name,\n    month,\n    FORMAT(net_sales,'C','en-US') net_sales,\n    NTILE(4) OVER(\n        PARTITION BY category_name\n        ORDER BY net_sales DESC\n    ) net_sales_group\nFROM\n    sales.vw_netsales_2017;\n</code></pre> <p></p>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#lag","title":"LAG","text":"<p>LAG(col, n, DEFAULT) \u7528\u4e8e\u7edf\u8ba1\u7a97\u53e3\u5185\u5f80\u4e0a\u7b2c n \u884c\u503c\u3002</p> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5217\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u5f80\u4e0a\u7b2c n \u884c\uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u4e3a 1\uff09\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570 \u4e3a\u9ed8\u8ba4\u503c\uff08\u5f53\u5f80\u4e0a\u7b2c n \u884c\u4e3a NULL \u65f6\u5019\uff0c\u53d6\u9ed8\u8ba4\u503c\uff0c\u5982\u4e0d\u6307\u5b9a\uff0c\u5219\u4e3a NULL\uff09\u3002</p>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#_1","title":"\u65e5\u671f\u76f8\u5173\u51fd\u6570","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#datediff","title":"DATEDIFF()","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#date_add-date_sub","title":"DATE_ADD() &amp; DATE_SUB()","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#unix_timestamp","title":"UNIX_TIMESTAMP()","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#dayofweek","title":"DAYOFWEEK()","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#date_format","title":"DATE_FORMAT()","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#concat_ws","title":"CONCAT_WS()","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#_2","title":"\u591a\u7ef4\u7ec4\u5408\u67e5\u8be2","text":"<p>\u6d4b\u8bd5\u6570\u636e\uff1a</p> <pre><code>2021-03,2021-03-10,userid1\n2021-03,2021-03-10,userid5\n2021-03,2021-03-12,userid7\n2021-04,2021-04-12,userid3\n2021-04,2021-04-13,userid2\n2021-04,2021-04-13,userid4\n2021-04,2021-04-16,userid4\n2021-03,2021-03-10,userid2\n2021-03,2021-03-10,userid3\n2021-04,2021-04-12,userid5\n2021-04,2021-04-13,userid6\n2021-04,2021-04-15,userid3\n2021-04,2021-04-15,userid2\n2021-04,2021-04-16,userid1\n</code></pre>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#grouping-sets","title":"GROUPING SETS","text":"<p>Enhanced Aggregation, Cube, Grouping and Rollup - Apache Hive</p> <p> Hive SQL - Analytics with GROUP BY and GROUPING SETS, Cubes, Rollups</p> <p>\u56e0\u4e3a GROUP BY \u7684\u7ef4\u5ea6\u662f\u5355\u4e00\u7684\uff0c\u5c31\u662f\u5b83\u53ea\u80fd\u8ba1\u7b97\u67d0\u4e2a\u7ef4\u5ea6\u7684\u4fe1\u606f\uff0c\u800c\u4e0d\u80fd\u540c\u65f6\u8ba1\u7b97\u591a\u4e2a\u7ef4\u5ea6\uff0c\u5728\u4e00\u4e2a GROUPING SETS \u67e5\u8be2\u4e2d\uff0c\u6839\u636e\u4e0d\u540c\u7684\u5355\u7ef4\u5ea6\u7ec4\u5408\u8fdb\u884c\u805a\u5408\uff0c\u7b49\u4ef7\u4e8e\u5c06\u4e0d\u540c\u7ef4\u5ea6\u7684 GROUP BY \u7ed3\u679c\u8fdb\u884c UNION ALL \u64cd\u4f5c\u3002 GROUPING SETS \u5c31\u662f\u4e00\u79cd\u5c06\u591a\u4e2a GROUP BY \u903b\u8f91 UNION \u5199\u5728\u4e00\u4e2a HIVE SQL \u8bed\u53e5\u4e2d\u7684\u4fbf\u5229\u5199\u6cd5\u3002GROUPING SETS \u4f1a\u628a\u5728\u5355\u4e2a GROUP BY \u903b\u8f91\u4e2d\u6ca1\u6709\u53c2\u4e0e GROUP BY \u7684\u90a3\u4e00\u5217\u7f6e\u4e3a NULL \u503c\uff0c\u8fd9\u6837\u805a\u5408\u51fa\u6765\u7684\u7ed3\u679c\uff0c\u672a\u88ab GROUP BY \u7684\u5217\u5c06\u663e\u793a\u4e3a NULL\u3002</p> <pre><code>SELECT month, day, COUNT(DISTINCT userid) AS uv, GROUPING__ID\nFROM user_visit\nGROUP BY month, day\nGROUPING SETS (month, day)\nORDER BY GROUPING__ID;\n</code></pre> <p></p> <pre><code>SELECT month, day, COUNT(DISTINCT userid) AS uv, GROUPING__ID\nFROM user_visit\nGROUP BY month, day\nGROUPING SETS (month, day, (month, day))\nORDER BY GROUPING__ID;\n</code></pre> <p></p>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#cube","title":"CUBE","text":"<p>Cube \u53ef\u4ee5\u5b9e\u73b0 hive \u591a\u4e2a\u4efb\u610f\u7ef4\u5ea6\u7684\u7ec4\u5408\u67e5\u8be2\uff0c<code>cube(a,b,c)</code> \u9996\u5148\u4f1a\u5bf9 <code>(a,b,c)</code> \u8fdb\u884c group by\uff0c\u7136\u540e\u4f9d\u6b21\u662f <code>(a,b),(a,c),(a),(b,c),(b),(c)</code>\uff0c\u6700\u540e\u5728\u5bf9\u5168\u8868\u8fdb\u884c group by\uff0c\u4ed6\u4f1a\u7edf\u8ba1\u6240\u9009\u5217\u4e2d\u503c\u7684\u6240\u6709\u7ec4\u5408\u7684\u805a\u5408\u3002</p> <p>Cubes can be used to calculate subtotal of all possible combinations of the set of column in GROUP BY. For instance, <code>GROUP BY acct, txn_date WITH CUBE</code> is equivalent to <code>GROUP BY acct, txn_date GROUPING SETS ( (acct, txn_date), acct, txn_date, ( ))</code>.</p> <pre><code>SELECT month, day, COUNT(DISTINCT userid) AS uv, GROUPING__ID\nFROM user_visit\nGROUP BY month, day\nWITH CUBE\nORDER BY GROUPING__ID;\n</code></pre> <p></p> <p>\u901a\u5e38\u5728\u4f01\u4e1a\u4e2d\uff0c\u6211\u4eec\u4f1a\u5c06\u7ec4\u5408\u540e\u7684\u7ed3\u679c\u8fdb\u884c\u89e3\u6790\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4f7f\u7528\u3002\u89e3\u6790\u811a\u672c\u5982\u4e0b\uff1a</p> <pre><code>select case when id &amp; 1 = 1 then a.month else 'all' end                 as month,\n       case when id &amp; 2 = 2 then a.day else 'all' end                   as day,\n       concat(if(id &amp; 1 = 1, 'month-', ''), if(id &amp; 2 = 2, 'day-', '')) as flag,\n       uv\nfrom (select month, day, count(distinct userid) as uv, cast(grouping__id as int) as id\n      from user_visit\n      group by month, day\n      with cube) as a;\n</code></pre>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#rollup","title":"ROLLUP","text":"<p>ROLLUP clause is used with GROUP BY to compute the aggregations at the hierarchy levels of a dimension. For example, <code>GROUP BY a, b, c with ROLLUP</code> assumes that the hierarchy is \"a\" drilling down to \"b\" drilling down to \"c\". <code>GROUP BY a, b, c, WITH ROLLUP</code> is equivalent to <code>GROUP BY a, b, c GROUPING SETS ( (a, b, c), (a, b), (a), ( ))</code>.</p> <p>Rollup \u53ef\u4ee5\u5b9e\u73b0\u4ece\u53f3\u5230\u5de6\u7684\u9012\u51cf\u591a\u7ea7\u7684\u7edf\u8ba1\uff0c\u663e\u793a\u7edf\u8ba1\u67d0\u4e00\u5c42\u6b21\u7ed3\u6784\u7684\u805a\u5408\u3002\u5b83\u662f CUBE \u7684\u5b50\u96c6\uff0c\u4ee5\u6700\u5de6\u4fa7\u7684\u7ef4\u5ea6\u4e3a\u4e3b\uff0c\u4ece\u8be5\u7ef4\u5ea6\u8fdb\u884c\u5c42\u7ea7\u805a\u5408\u3002</p> <p>\u6bd4\u5982\u4ee5 month \u7ef4\u5ea6\u8fdb\u884c\u5c42\u7ea7\u805a\u5408\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u6837\u7684\u4e0a\u5377\u8fc7\u7a0b\uff1a\u6708\u5929\u7684 UV -&gt; \u6708\u7684 UV -&gt; \u603b UV</p> <p>\u4ece\u7ec6\u7c92\u5ea6\u5230\u7c97\u7c92\u5ea6\u8fdb\u884c\u7edf\u8ba1\u3002</p> <pre><code>SELECT month, day, COUNT(DISTINCT userid) AS uv, GROUPING__ID\nFROM user_visit\nGROUP BY month, day\nWITH ROLLUP\nORDER BY GROUPING__ID;\n</code></pre> <p>\u7b49\u4ef7\u4e8e</p> <pre><code>SELECT month, day, COUNT(DISTINCT userid) AS uv, 3 AS GROUPING__ID\nFROM user_visit\nGROUP BY month, day\nUNION ALL\nSELECT month, NULL, COUNT(DISTINCT userid) AS uv, 1 AS GROUPING__ID\nFROM user_visit\nGROUP BY month\nUNION ALL\nSELECT NULL, NULL, COUNT(DISTINCT userid) AS uv, 0 AS GROUPING__ID\nFROM user_visit\n</code></pre>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#grouping__id","title":"<code>GROUPING__ID</code>","text":"<p>\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u4f4d\u5411\u91cf\uff0c\u8be5\u4f4d\u5411\u91cf\u5bf9\u5e94\u4e8e\u6bcf\u4e00\u5217\u662f\u5426\u5b58\u5728\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u5982\u679c\u7ed3\u679c\u96c6\u4e2d\u7684\u67d0\u4e00\u884c\u5df2\u7ecf\u805a\u5408\u4e86\u8be5\u5217\uff0c\u5219\u7ed3\u679c\u96c6\u4e2d\u7684\u67d0\u4e00\u884c\u7684\u503c\u4e3a\u201c1\u201d\uff0c\u5426\u5219\u8be5\u503c\u4e3a\u201c0\u201d\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5728\u6570\u636e\u4e2d\u6709\u7a7a\u503c\u65f6\u8fdb\u884c\u533a\u5206\u3002</p> <p><code>grouping__id</code>\u662f\u4e3a\u4e86\u533a\u5206\u6bcf\u6761\u8f93\u51fa\u7ed3\u679c\u662f\u5c5e\u4e8e\u54ea\u4e00\u4e2a group by \u7684\u6570\u636e\u3002\u5b83\u662f\u6839\u636e group by \u540e\u9762\u58f0\u660e\u7684\u987a\u5e8f\u5b57\u6bb5\u662f\u5426\u5b58\u5728\u4e8e\u5f53\u524d group by \u4e2d\u7684\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u7ec4\u5408\u6570\u636e\u3002</p> <ul> <li><code>grouping__id</code> \u4e3a 0 \u7684\u662f group by \u4e2d\u6240\u6709\u5217\u90fd\u88ab\u9009\u4e2d\u4e86\uff0c\u4e8c\u8fdb\u5236 00\uff0c\u6240\u4ee5\u6807\u8bc6\u4e3a 0</li> <li><code>grouping__id</code> \u4e3a 1 \u7684\u662f group by \u4e2d\u53ea\u6709\u4e00\u5217\u88ab\u9009\u4e2d\u4e86\uff0c\u4e8c\u8fdb\u5236 01\uff0c\u6240\u4ee5\u6807\u8bc6\u4e3a 1</li> <li><code>grouping__id</code> \u4e3a 3 \u7684\u662f group by \u4e2d\u6ca1\u6709\u4e00\u5217\u88ab\u9009\u4e2d\uff0c\u4e8c\u8fdb\u5236 11\uff0c\u6240\u4ee5\u6807\u8bc6\u4e3a 3</li> </ul>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#_3","title":"\u603b\u7ed3","text":"<p><code>GROUPING SETS</code>\u3001<code>WITH CUBE</code>\u3001<code>WITH ROLLUP</code> \u8fd9\u4e09\u79cd\u591a\u7ef4\u7ec4\u5408\u65b9\u5f0f\u76ee\u7684\u90fd\u662f\u4e3a\u4e86\u5728\u4e0d\u4f7f\u7528 UNION \u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u591a\u79cd group by \u6761\u4ef6\uff0c\u80fd\u591f\u5927\u91cf\u964d\u4f4e SQL \u8bed\u53e5\u7684\u957f\u5ea6\u3002</p> <ul> <li><code>GROUPING SETS</code>\uff1a\u624b\u52a8\u6307\u5b9a\u60f3\u8981\u7684 group by \u6761\u4ef6\u7ec4\u5408</li> <li><code>WITH CUBE</code>\uff1a\u81ea\u52a8\u5b9e\u73b0\u6240\u6709\u53ef\u80fd\u7684 group by \u6761\u4ef6\u7ec4\u5408\uff082^k \u4e2a\u7ec4\u5408\uff09</li> <li><code>WITH ROLLUP</code>\uff1a\u5b9e\u73b0\u6839\u636e group by \u540e\u9762\u7684\u5b57\u6bb5\u4e0d\u65ad\u5220\u53bb\u6700\u53f3\u8fb9\u7684\u5b57\u6bb5\u7684 group by \u6761\u4ef6\u7ec4\u5408\uff0c\u4ece\u7ec6\u7c92\u5ea6\u5230\u7c97\u7c92\u5ea6\uff08k+1 \u4e2a\u7ec4\u5408\uff09</li> </ul>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#_4","title":"\u8fde\u7eed\u767b\u5f55\u95ee\u9898","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#1454","title":"1454. \u6d3b\u8dc3\u7528\u6237","text":"<p>1454. \u6d3b\u8dc3\u7528\u6237</p> <p>\u9898\u89e3</p> <pre><code>select distinct id, name\nfrom (select id,\n             subdate(login_date, rn) first_login_date\n      from (select distinct id,\n                            login_date,\n                            dense_rank() over (partition by id order by login_date) as rn\n            from Logins) t1\n      group by id, first_login_date\n      having count(*) &gt;= 5) t2\nleft join accounts using (id);\n</code></pre> <p>\u6267\u884c\u65f6\u95f4\uff1a834 ms</p> <pre><code>select distinct ac.id, ac.name\nfrom (select a.id, a.login_date\n      from Logins a\n      join Logins b\n      on a.id = b.id\n      and b.login_date between a.login_date and date_add(a.login_date, interval 4 day)\n      group by a.id, a.login_date\n      having count(distinct b.login_date) &gt;= 5) t\ninner join accounts ac on t.id = ac.id\norder by ac.id;\n</code></pre> <p>\u6267\u884c\u65f6\u95f4\uff1a994 ms</p>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#_5","title":"\u7edf\u8ba1\u6700\u957f\u8fde\u7eed\u6d3b\u8dc3\u5929\u6570","text":"<p>\u6570\u636e\u548c\u4e0a\u9898\u76f8\u540c\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u7528\u6237\u8fde\u7eed\u767b\u5f55\u7684\u6700\u957f\u5929\u6570\u3002</p> <p>\u601d\u8def\uff1a\u5148\u501f\u52a9\u7a97\u53e3\u51fd\u6570\u751f\u6210\u4e00\u5217\u8fde\u7eed\u9012\u589e\u7684\u6570\u5b57\uff1b\u5c06\u65e5\u671f\u4e0e\u6570\u5b57\u5217\u76f8\u51cf\uff0c\u5982\u679c\u65e5\u671f\u662f\u8fde\u7eed\u7684\uff0c\u90a3\u5dee\u503c\u5c31\u662f\u4e00\u6837\u7684\uff1b\u7edf\u8ba1\u5dee\u503c\u5217\u76f8\u540c\u53d6\u503c\u7684\u6700\u5927\u4e2a\u6570\u5c31\u662f\u6700\u957f\u8fde\u7eed\u4ea4\u6613\u5929\u6570\u3002</p> <pre><code>select id, max(times) as max_times\nfrom (select t2.id,\n             t2.date_diff,\n             count(1) as times\n      from (select id,\n                   t1.login_date,\n                   subdate(login_date, rn) date_diff\n            from (select id,\n                         login_date,\n                         dense_rank() over (partition by id order by login_date) as rn\n                  from Logins) t1) t2\n      group by t2.id, t2.date_diff) t3\ngroup by id;\n</code></pre>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#_6","title":"\u884c\u8f6c\u5217\uff08\u805a\u5408\u6570\u636e\uff09","text":""},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#case-1","title":"Case 1","text":"<p>\u6570\u636e\uff1a</p> user_id order_id 104399 1715131 104399 2105395 104399 1758844 104399 981085 104399 2444143 104399 1458638 104399 968412 104400 1609001 104400 2986088 104400 1795054 <p>\u67e5\u770b\u6bcf\u4e2a\u7528\u6237\u7684\u4e0b\u5355\u5217\u8868\u3002</p> <pre><code>select user_id,\n       concat_ws(',', collect_list(order_id))\nfrom user_order\ngroup by user_id;\n</code></pre> <p><code>collect_list()</code> \u548c <code>collect_set()</code> \u7528\u4e8e\u5206\u7ec4\u65f6\u5c06\u4e00\u5217\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u3002</p> <p><code>concat_ws(seperator, list)</code> \u7528\u4e8e\u5c06 list \u7528 seperator \u95f4\u9694\uff0c\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> <p>\u8fd9\u4e2a\u5b9e\u73b0\u5bf9\u5e94 MySQL \u4e2d\u7684 <code>group_concat()</code>\uff1a</p> <pre><code>select user_id,\n       group_concat(order_id)\nfrom user_order\ngroup by user_id;\n</code></pre> <p>\u7ed3\u679c\uff1a</p> user_id orders 104399 1715131,2105395,1758844,981085,2444143,1458638,968412 104400 1609001,2986088,1795054"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#case-2","title":"Case 2","text":"<p>\u6570\u636e\uff1a</p> id stuid course score 1 1 chinese 43 2 1 math 55 3 1 english 55 4 2 chinese 77 5 2 math 88 6 2 english 88 7 3 chinese 98 8 3 math 65 9 3 english 80 <p>\u8981\u6c42\uff1a\u67e5\u8be2\u8bed\u6587\u6210\u7ee9\u5927\u4e8e\u82f1\u8bed\u6210\u7ee9\u7684\u5b66\u751f\u7684\u5b66\u53f7</p> <pre><code>select stuid,\n       max(chinese_score) as chinese_score,\n       max(math_score)    as math_score,\n       max(english_score) as english_score\nfrom (select stuid,\n             if(course = 'chinese', score, 0) as chinese_score,\n             if(course = 'math', score, 0)    as math_score,\n             if(course = 'english', score, 0) as english_score\n      from scores) t\ngroup by stuid\nhaving chinese_score &gt; english_score;\n</code></pre> <p>\u6ce8\u610f\u8fd9\u4e2a\u5b50\u67e5\u8be2\uff1a</p> <pre><code>select stuid,\n       if(course = 'chinese', score, 0) as chinese_score,\n       if(course = 'math', score, 0)    as math_score,\n       if(course = 'english', score, 0) as english_score\nfrom scores\n</code></pre> <p>\u7ed3\u679c\uff1a</p> stuid chinese_score math_score english_score 1 43 0 0 1 0 55 0 1 0 0 55 2 77 0 0 2 0 88 0 2 0 0 88 3 98 0 0 3 0 65 0 3 0 0 80"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#lateral-view","title":"\u5217\u8f6c\u884c\uff08lateral view\uff09","text":"<p>\u6570\u636e\uff1a</p> user_id orders 104399 1715131,2105395,1758844,981085,2444143,1458638,968412 104400 1609001,2986088,1795054 <p>\u8981\u67e5\u770b\u7528\u6237\u4e0e\u8ba2\u5355\u7684\u6620\u5c04\u5173\u7cfb\u3002</p> <pre><code>select user_id, order_id\nfrom data_source\nlateral view explode(split(orders, ',')) t as order_id;\n</code></pre> <p>\u7ed3\u679c\uff1a</p> user_id order_id 104399 1715131 104399 2105395 104399 1758844 104399 981085 104399 2444143 104399 1458638 104399 968412 104400 1609001 104400 2986088 104400 1795054"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#topk","title":"TOPK \u95ee\u9898","text":"<p>184. \u90e8\u95e8\u5de5\u8d44\u6700\u9ad8\u7684\u5458\u5de5</p> <pre><code>select d.name as Department, t2.name as Employee, t2.salary as Salary\nfrom (\n    select *\n    from (\n        select *,\n        dense_rank() over(partition by departmentId order by salary desc) rk\n        from employee e\n    ) t1\n    where t1.rk = 1\n) t2\ninner join department d\non t2.departmentId = d.id\n</code></pre> <p>\u8bf7\u7edf\u8ba1\u6bcf\u4e2a\u5e97\u94fa\u8bbf\u95ee\u6b21\u6570 top3 \u7684\u8bbf\u5ba2\u4fe1\u606f.\u8f93\u51fa\u5e97\u94fa\u540d\u79f0\u3001\u8bbf\u5ba2 id\u3001\u8bbf\u95ee\u6b21\u6570\u3002</p> <p>Visit \u8868\uff1a</p> user_id shop visit_date 1 Shop A 2023-10-01 2 Shop B 2023-10-01 3 Shop A 2023-10-02 1 Shop C 2023-10-02 2 Shop A 2023-10-03 3 Shop B 2023-10-03 1 Shop B 2023-10-03 2 Shop C 2023-10-04 3 Shop C 2023-10-04 1 Shop A 2023-10-04 2 Shop B 2023-10-05 3 Shop A 2023-10-05 1 Shop C 2023-10-05 <pre><code>select shop, user_id, cnt\nfrom (select *,\n             dense_rank() over (partition by shop order by cnt desc) rk\n      from (select user_id,\n                   shop,\n                   count(visit_date) as cnt\n            from Visit\n            group by shop, user_id) t1) t2\nwhere rk &lt;= 3;\n</code></pre>"},{"location":"Hive/Hive%20%E5%87%BD%E6%95%B0%E7%9B%B8%E5%85%B3/#posexplode","title":"posexplode","text":"<p>posexplode table-valued generator function | Databricks on AWS</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/","title":"Hive \u6027\u80fd\u8c03\u4f18","text":""},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#mapreduce","title":"MapReduce","text":""},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#mr","title":"MR \u6d41\u7a0b\u56de\u987e","text":""},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#mr_1","title":"MR \u53c2\u6570\u8c03\u4f18","text":"\u53c2\u6570\u540d\u79f0 \u9ed8\u8ba4\u503c \u8bf4\u660e <code>mapreduce.task.io.sort.mb</code> 100\uff08\u5355\u4f4d MB\uff09 Map \u7aef\u5185\u5b58\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u5efa\u8bae 512MB+ <code>mapreduce.task.io.sort.factor</code> 10 \u6392\u5e8f\u6587\u4ef6\u65f6\uff0c\u4e00\u6b21\u6700\u591a\u542f\u52a8\u5408\u5e76\u7684\u6587\u4ef6\u6d41\u7684\u4e2a\u6570\u3002\u8fd9\u4e2a\u5c5e\u6027\u4e5f\u5728 reduce \u4e2d\u4f7f\u7528\u3002\u5c06\u6b64\u503c\u589e\u52a0\u5230 100 \u662f\u5f88\u5e38\u89c1\u7684\u3002\u5e76\u884c\u5408\u5e76\u66f4\u591a\u6587\u4ef6\u53ef\u51cf\u5c11\u5408\u5e76\u6392\u5e8f\u8fed\u4ee3\u6b21\u6570\u5e76\u901a\u8fc7\u6d88\u9664\u78c1\u76d8 I/O \u63d0\u9ad8\u8fd0\u884c\u65f6\u95f4\uff0c\u4f46\u4e5f\u4f1a\u4f7f\u7528\u66f4\u591a\u7684\u5185\u5b58\u3002 <code>mapreduce.map.output.compress</code> false \u662f\u5426\u538b\u7f29 map \u7684\u8f93\u51fa <code>mapreduce.reduce.shuffle.parallelcopies</code> 5 \u7528\u4e8e\u628a map \u8f93\u51fa\u590d\u5236\u5230 reducer \u7684\u7ebf\u7a0b\u6570 <code>mapreduce.job.reduce.slowstart.completedmaps</code> 0.05 \u8868\u793a\u5728\u5f00\u59cb\u6267\u884c reduce \u4efb\u52a1\u4e4b\u524d\uff0c\u9700\u8981\u5b8c\u6210\u7684 map \u4efb\u52a1\u7684\u6bd4\u4f8b\u3002\u9ed8\u8ba4\u503c\u4e3a 0.05\uff0c\u5373 map \u4efb\u52a1\u5b8c\u6210 5% \u65f6\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u6267\u884c reduce \u4efb\u52a1\u4e86\uff08\u5f00\u59cb copy \u6570\u636e\uff09\u3002"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#yarn","title":"Yarn \u56de\u987e","text":"<p>Yarn \u662f\u7ecf\u5178\u7684\u4e3b\u4ece\uff08master/slave\uff09\u67b6\u6784\u3002\u4e3b\u8981\u7531 ResourceManager\u3001NodeManager\u3001ApplicationMaster \u548c Container \u7b49\u7ec4\u4ef6\u6784\u6210\u3002</p> <p>YARN \u53ef\u4ee5\u770b\u51fa\u4e00\u4e2a\u5927\u7684\u4e91\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u8d1f\u8d23\u4e3a\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8 ApplicationMaster\uff08\u76f8\u5f53\u4e8e\u4e3b\u7ebf\u7a0b\uff09\uff0c\u7136\u540e\u518d\u7531 ApplicationMaster \u8d1f\u8d23\u6570\u636e\u5207\u5206\u3001\u4efb\u52a1\u5206\u914d\u3001 \u542f\u52a8\u548c\u76d1\u63a7\u7b49\u5de5\u4f5c\uff0c\u800c\u7531 ApplicationMaster \u542f\u52a8\u7684\u5404\u4e2a Task\uff08\u76f8\u5f53\u4e8e\u5b50\u7ebf\u7a0b\uff09\u4ec5\u8d1f\u8d23\u81ea\u5df1\u7684\u8ba1\u7b97\u4efb\u52a1\u3002\u5f53\u6240\u6709\u4efb\u52a1\u8ba1\u7b97\u5b8c\u6210\u540e\uff0cApplicationMaster \u8ba4\u4e3a\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5b8c\u6210\uff0c\u7136\u540e\u9000\u51fa\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#yarn_1","title":"Yarn \u65e5\u5fd7","text":"<p>Yarn \u63d0\u4f9b\u4e86\u4e24\u79cd\u65e5\u5fd7\u67e5\u770b\u65b9\u5f0f\uff1a</p> <ul> <li>ResourceManager Web UI\uff1a\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u4ee5\u53ca\u90e8\u5206\u5386\u53f2\u4efb\u52a1</li> <li>Job history UI\uff1a\u53ef\u4ee5\u67e5\u770b\u4e00\u5b9a\u5468\u671f\u7684\u5386\u53f2\u4efb\u52a1\uff08\u53ea\u6709 MR \u4efb\u52a1\uff0cSpark \u4efb\u52a1\u8981\u53bb Spark History UI \u770b\uff09</li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_1","title":"\u53c2\u6570\u8c03\u4f18","text":""},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#mapperreducer","title":"Mapper/Reducer \u5185\u5b58\u4e0e\u6838\u6570","text":"<p>\u53c2\u6570\u4e00\uff1a\u8bbe\u7f6e\u6bcf\u4e2a map \u7684\u5185\u5b58\u548c\u6838\u6570</p> <ul> <li><code>set mapreduce.map.memory.mb=2048;</code> \u9ed8\u8ba4\u4e3a 1024</li> <li><code>set mapreduce.map.cpu.vcores=1;</code> \u9ed8\u8ba4\u4e3a 1</li> </ul> <p>\u53c2\u6570\u4e8c\uff1a\u8bbe\u7f6e\u6bcf\u4e2a reduce \u7684\u5185\u5b58\u5927\u5c0f</p> <ul> <li><code>set mapreduce.reduce.memory.mb=6144;</code> \u9ed8\u8ba4\u4e3a 1024</li> <li><code>set mapreduce.reduce.cpu.vcores=2;</code> \u9ed8\u8ba4\u4e3a 1</li> </ul> <p>\u6709\u4e9b\u65f6\u5019\u62a5 OOM\u3001\u5806\u5185\u5b58\u6ea2\u51fa\u7b49\u9519\u8bef\u65f6\uff0c\u53ef\u4ee5\u9002\u8c03\u5927\u8fd9\u51e0\u4e2a\u53c2\u6570\uff0c\u901a\u8fc7\u589e\u52a0\u5185\u5b58 cpu \u7684\u65b9\u5f0f\u63d0\u9ad8 task \u8fd0\u884c\u901f\u5ea6\uff0c\u4f46\u662f\u574f\u5904\u662f\u53ef\u80fd\u9020\u6210\u8d44\u6e90\u7684\u6d6a\u8d39\u3002\u4ee5\u4e0a\u5173\u4e8e map/reduce \u7684\u53c2\u6570\u90fd\u53ef\u4ee5\u901a\u8fc7\u5ba2\u6237\u7aef\u76f4\u63a5\u8bbe\u7f6e\u751f\u6548\uff0c\u4f1a\u8986\u76d6\u96c6\u7fa4\u5c42\u9762\u7684\u53c2\u6570\u3002</p> <p>\u5e38\u89c1\u5bf9\u5e94\u62a5\u9519\uff1a</p> <ul> <li>\u7b2c\u4e00\u79cd\u62a5\u9519\uff1a\"java.lang.OutOfMemoryError: GC overhead limit exceeded\"</li> <li>\u7b2c\u4e8c\u79cd\u62a5\u9519\uff1a\"java.lang.OutOfMemoryError: Java heap space\"</li> <li>\u7b2c\u4e09\u79cd\u62a5\u9519\uff1a\"running beyondphysical memory limits. Current usage: 4.3 GB of 4.3 GB physical memory used; 7.4 GB of 13.2 GB virtual memory used. Killing container\"</li> </ul> <p>\u4ee5\u4e0a\u5e38\u89c1\u7684\u4e09\u79cd\u62a5\u9519\uff0c\u4e00\u822c\u90fd\u662f\u7531\u4e8e map task \u6216 reduce task \u5728 container \u4e2d\u8fd0\u884c\u65f6\u5904\u7406\u6570\u636e\u9700\u8981\u7684\u5185\u5b58\u8d44\u6e90\u4e0e\u7533\u8bf7\u5206\u914d\u5230\u7684\u8d44\u6e90\u4e0d\u5339\u914d\u9020\u6210\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4eba\u4e3a\u589e\u52a0\u8d44\u6e90\u8fdb\u884c\u5c1d\u8bd5\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#map","title":"\u5982\u4f55\u63a7\u5236 Map \u4e2a\u6570\u4e0e\u6027\u80fd\u8c03\u4f18","text":"<p>\u867d\u7136\u5728 Hive \u4e2d\u53ef\u4ee5\u914d\u7f6e <code>set mapred.map.tasks=2</code>\uff0c\u4f46\u662f\u8fd9\u4e2a\u53c2\u6570\u662f\u4e0d\u751f\u6548\u7684\uff0c\u56e0\u4e3a Hive \u4f1a\u6839\u636e <code>\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f/split-size</code> \u81ea\u52a8\u51b3\u5b9a map \u4e2a\u6570\u3002\u7cbe\u9ad3\u662f\u8c03\u6574 split-size\u3002</p> <pre><code>defaultNum=totalSize/blockSize\nexpNum=mapred.map.tasks(2)\nexpMaxNum=max(expNum, defaultNum)//\u671f\u671b\u5927\u5c0f\u53ea\u6709\u5927\u4e8e\u9ed8\u8ba4\u5927\u5c0f\u624d\u4f1a\u751f\u6548\uff1b\nrealSplitNum=totalSize/max(mapred.min.split.size, blockSize)\n\u5b9e\u9645\u7684map\u4e2a\u6570=min(realSplitNum, expMaxNum)\n</code></pre> <p>\u589e\u52a0\u5207\u7247\u5927\u5c0f\uff0c\u51cf\u5c11 map \u4e2a\u6570\u3002</p> <p>\u6848\u4f8b\uff1a\u4e00\u4e2a\u5206\u533a\u4e2d\u6709 2000 \u4e2a\u5c0f\u6587\u4ef6\uff081.+MB\uff09\uff0c\u539f\u5148 79 \u4e2a Map\uff0c\u73b0\u5728 19 \u4e2a\u3002</p> <pre><code>set hive.input.format = org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;\nset mapred.max.split.size=256000000;\nset mapred.min.split.size=128000000;\nset mapred.min.split.size.per.node=128000000;\nset mapred.min.split.size.per.rack=128000000;\n</code></pre> <p>\u4e00\u822c\u6211\u4eec\u8bbe\u7f6e <code>max.split.size</code> &gt;= <code>min.split.size</code> &gt; <code>min.size.per.rack</code> = <code>min.size.per.node</code></p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#reduce","title":"\u5982\u4f55\u63a7\u5236 Reduce \u4e2a\u6570\u4e0e\u6027\u80fd\u8c03\u4f18","text":"<p>\u53c2\u6570\u4e00\uff1a\u76f4\u63a5\u6307\u5b9a reduce \u4e2a\u6570</p> <pre><code>set mapred.reduce.tasks/mapreduce.job.reduces=10;\n</code></pre> <p>\u53c2\u6570\u4e8c\uff1a\u901a\u8fc7 reduce \u5904\u7406\u7684\u6570\u636e\u91cf\uff0c\u63a8\u65ad reduce \u4e2a\u6570</p> <pre><code>set hive.exec.reducers.bytes.per.reducer=1000000000;\n</code></pre> <p>\u8bbe\u7f6e\u6bcf\u4e2a Reducer \u6240\u80fd\u5904\u7406\u7684\u6570\u636e\u91cf\uff0c\u5728 Hive0.14 \u7248\u672c\u4ee5\u524d\u9ed8\u8ba4\u662f 1GB\uff0cHive0.14 \u53ca\u4e4b\u540e\u7684\u7248\u672c\u9ed8\u8ba4\u662f 256MB\u3002</p> <p>reduce \u8ba1\u7b97\u65b9\u5f0f\uff1a\u8ba1\u7b97 reducer \u6570\u7684\u516c\u5f0f\u5f88\u7b80\u5355\uff1a<code>num=min(hive.exec.reducers.max, (map \u8f93\u51fa\u6570\u636e\u5927\u5c0f)/hive.exec.reducers.bytes.per.reducer)</code></p> <p>\u53c2\u6570\u4e09\uff1a\u5355\u4e2a job \u53ef\u4ee5\u4f7f\u7528\u7684\u6700\u5927 reduce \u6570\u91cf</p> <pre><code>set hive.exec.reducers.max=2999;\n</code></pre>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#hive-task","title":"Hive Task \u4efb\u52a1\u5bb9\u9519\u673a\u5236","text":"<p>Map/Reduce Task \u5bb9\u9519\u4e0e\u91cd\u8bd5\u673a\u5236\uff1a</p> <p>\u5982\u4e0b\u4efb\u52a1 yarn \u754c\u9762\u5f88\u5e38\u89c1\uff0c\u6bd4\u5982 reduce \u51fa\u73b0\u4e86 2 \u4e2a failed\uff0c17 killed\u3002</p> <p></p> <p>Task \u6307\u7684\u662f\u5177\u4f53\u7684 map/reduce task\u3002\u800c\u5b9e\u9645\u4e00\u4e2a task \u5141\u8bb8\u5c1d\u8bd5\u591a\u6b21\u8fd0\u884c\uff0c\u6bcf\u6b21\u8fd0\u884c\u5c1d\u8bd5\u7684\u5b9e\u4f8b\u5c31\u88ab\u79f0 Task Attempt\uff0c\u4e5f\u5c31\u662f Yarn \u4efb\u52a1\u65e5\u5fd7\u754c\u9762 Attempt Type \u91cc\u7edf\u8ba1\u7684\u6570\u636e\u3002</p> <p>\u5b9e\u9645\u751f\u4ea7\u4e2d\uff0cmap/reduce task \u4f1a\u56e0\u4e3a\u591a\u65b9\u9762\u539f\u56e0\u5982\u673a\u5668\u8001\u5316\uff0c\u8d44\u6e90\u4e0d\u8db3\uff0c\u8fdb\u7a0b\u5d29\u6e83\uff0c\u5e26\u5bbd\u9650\u5236\u7b49\u51fa\u73b0\u90e8\u5206 map/reduce task \u5b9e\u4f8b\u5931\u8d25\u7684\u60c5\u51b5\uff0c\u8fd9\u662f\u6781\u5176\u6b63\u5e38\u4e14\u5bb9\u6613\u53d1\u751f\u7684\u4e8b\u3002\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u6574\u4e2a\u4efb\u52a1\u5c31\u76f4\u63a5\u62a5\u9519\u4e86\uff0c\u90a3\u4e48\u4ee3\u4ef7\u5c31\u592a\u5927\u4e86\u3002\u6240\u4ee5 Hadoop \u5c31\u5f15\u5165\u4e86 task \u5bb9\u9519\u673a\u5236\uff08\u5176\u5b9e\u4e5f\u5c31\u662f task \u91cd\u8bd5\u673a\u5236\uff09 \u3002map/reduce \u5b9e\u4f8b\u5931\u8d25\u540e\uff0c\u5728\u9000\u51fa\u4e4b\u524d\u5411 APPMaster \u53d1\u9001\u9519\u8bef\u62a5\u544a\uff0c\u9519\u8bef\u62a5\u544a\u4f1a\u88ab\u8bb0\u5f55\u8fdb\u7528\u6237\u65e5\u5fd7\uff0cAPPMaster \u7136\u540e\u5c06\u8fd9\u4e2a\u4efb\u52a1\u5b9e\u4f8b\u6807\u4e3a failed\uff0c\u5c06\u5176 containner \u8d44\u6e90\u91ca\u653e\u7ed9\u5176\u4ed6\u4efb\u52a1\u4f7f\u7528\u3002</p> <p>\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u53c2\u6570\u63a7\u5236 map/reduce \u7684 task \u4e00\u65e6\u5931\u8d25\u4e86 map/reduce \u5b9e\u4f8b\u53ef\u4ee5\u91cd\u8bd5\u7684\u6b21\u6570\uff1a</p> <pre><code>// \u63a7\u5236 Map Task \u5931\u8d25\u6700\u5927\u5c1d\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c 4\nset mapreduce.map.maxattempts=4;\n//\u63a7\u5236 Reduce Task \u5931\u8d25\u6700\u5927\u5c1d\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c 4\nset mapreduce.reduce.maxattempts =4;\n</code></pre> <p>AppMaster \u5bb9\u9519\u4e0e\u91cd\u8bd5\u673a\u5236\uff1a</p> <p>AppMaster \u4e5f\u63d0\u4f9b\u4e86\u91cd\u8bd5\u673a\u5236\uff0cYARN \u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u5931\u8d25\u4e4b\u540e\uff0c\u6700\u591a\u5c1d\u8bd5\u6b21\u6570\u7531 <code>mapred-site.xml</code> \u6587\u4ef6\u4e2d\u7684 <code>mapreduce.am.max-attempts</code> \u5c5e\u6027\u914d\u7f6e\uff1a\u5c1d\u8bd5\u6b21\u6570\u9ed8\u8ba4\u503c\u4e3a 2\uff0c\u5373\u5f53 AppMaster \u5931\u8d25 2 \u6b21\u4e4b\u540e\uff0c\u8fd0\u884c\u7684\u4efb\u52a1\u5c06\u4f1a\u5931\u8d25\u3002</p> <p>APPMaster \u7684\u91cd\u8bd5\u6b21\u6570\u8fd8\u53d7 YARN \u7684\u53c2\u6570\u9650\u5236\uff0c\u5728 MapReduce \u5185\u90e8\uff0cYARN \u6846\u67b6\u5bf9 AppMaster \u7684\u6700\u5927\u5c1d\u8bd5\u6b21\u6570\u505a\u4e86\u9650\u5236\u3002\u5176\u4e2d\uff0c\u6bcf\u4e2a\u5728 YARN \u4e2d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u8d85\u8fc7\u8fd9\u4e2a\u6570\u91cf\u9650\u5236\uff0c\u5177\u4f53\u9650\u5236\u7531 <code>yarn-site.xml</code> \u6587\u4ef6\u4e2d\u7684 <code>yarn.resourcemanager.am.max-attempts</code> \u5c5e\u6027\u63a7\u5236\uff08\u9ed8\u8ba4\u4e3a 2\uff09\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#hive-failedkilled","title":"Hive \u4efb\u52a1\u5b9e\u4f8b failed/killed \u7684\u573a\u666f","text":"<p>\u4efb\u52a1\u5b9e\u4f8b\u51fa\u73b0 failed \u7684\u573a\u666f\uff1a</p> <p>\u4efb\u52a1\u5b9e\u4f8b attempt \u957f\u65f6\u95f4\u6ca1\u6709\u5411 MRAppMaster \u62a5\u544a\uff0c\u540e\u8005\u4e00\u76f4\u6ca1\u6536\u5230\u5176\u8fdb\u5ea6\u7684\u66f4\u65b0\uff0c\u4e00\u822c attempt \u5b9e\u4f8b\u4e0e AppMaster \u6bcf 3s \u901a\u4fe1\u4e00\u6b21\uff0c\u524d\u8005\u50cf\u540e\u8005\u62a5\u544a\u4efb\u52a1\u8fdb\u5ea6\u548c\u72b6\u6001\uff1b\u8d85\u51fa\u9608\u503c\uff0810 \u5206\u949f\uff09 \uff0c\u4efb\u52a1\u53d8\u4f1a\u88ab\u8ba4\u4e3a\u201c\u50f5\u6b7b\u201d\u88ab\u6807\u8bb0\u5931\u8d25 failed\uff0c\u7136\u540e MRAppMaster \u4f1a\u5c06\u5176 JVM \u6740\u6b7b\uff0c\u91ca\u653e\u8d44\u6e90\u3002\u7136\u540e\u91cd\u65b0\u5c1d\u8bd5\u5728\u5176\u4ed6\u8282\u70b9\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\u5b9e\u4f8b\uff08\u9075\u5faa\u672c\u5730\u5316\u539f\u5219\uff09\u3002</p> <p>\u8fd9\u79cd\u60c5\u51b5\u751f\u4ea7\u96c6\u7fa4\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\uff0c\u6bd4\u5982 task \u8fd0\u884c\u7684 NM \u8282\u70b9\u5f02\u5e38\uff0c\u4e3b\u673a\u5b95\u673a\uff0c\u7f51\u7edc\u901a\u4fe1\u5f02\u5e38\u7b49\u3002</p> <p>\u4efb\u52a1\u5b9e\u4f8b\u51fa\u73b0 killed \u7684\u573a\u666f\uff1a</p> <p>\u4e00\u4e2a\u4efb\u52a1\u5b9e\u4f8b attempt \u88ab killed \u4e00\u822c\u5c31\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u4e00\u662f\u5ba2\u6237\u7aef\u4e3b\u52a8\u8bf7\u6c42\u6740\u6b7b\u4efb\u52a1\uff0c\u6bd4\u5982\u5ba2\u6237\u7aef\u901a\u8fc7 <code>yarn application -kill</code>\uff0c\u6216\u8005\u5173\u95ed\u6267\u884c\u7a97\u53e3\u7b49</li> <li>\u4e8c\u662f\u6846\u67b6\u4e3b\u52a8\u6740\u6b7b\u4efb\u52a1\uff0c\u5373 AppMaster \u53d1\u51fa\u4efb\u52a1 kill \u7684\u6307\u4ee4</li> </ul> <p>\u5bf9\u4e8e\u540e\u8005\uff0c\u4e00\u822c\u662f\u7531\u4e8e\u4f5c\u4e1a\u88ab\u6740\u6b7b\u6216\u8005\u8be5\u4efb\u52a1\u7684\u5907\u4efb\u4efb\u52a1\uff08\u63a8\u6d4b\u6267\u884c\uff09\u5df2\u7ecf\u6267\u884c\u5b8c\u6210\uff0c\u8fd9\u4e2a\u4efb\u52a1\u4e0d\u9700\u8981\u7ee7\u7eed\u6267\u884c\u4e86\uff0c\u6240\u4ee5\u88ab killed\u3002\u6bd4\u5982 NodeManager \u8282\u70b9\u6545\u969c\u6216\u8005\u5931\u8d25\u4efb\u52a1\u6570\u8fc7\u591a\uff0c\u6bd4\u5982\u505c\u6b62\u7b49\uff0c\u8fd9\u65f6\u5019\u4e0a\u9762\u7684\u6240\u6709\u4efb\u52a1\u5b9e\u4f8b\u90fd\u4f1a\u88ab\u6807\u8bb0\u4e3a killed\u3002</p> <p>\u751f\u4ea7\u4e2d\u6211\u4eec\u66f4\u5173\u6ce8 failed \u7684 task\uff0c\u8fd9\u4e2a\u6709\u65f6\u5019\u76f4\u63a5\u5f71\u54cd\u6211\u4eec\u4efb\u52a1\u7684\u6210\u529f\u4e0e\u5426\u3002killed \u4e00\u822c\u4e0d\u5f71\u54cd\u4efb\u52a1\u7684\u5931\u8d25\u548c\u6210\u529f\uff0c\u4f46\u662f\u8fc7\u591a\u7684 killed \u6211\u4eec\u4e5f\u9700\u8981\u5173\u6ce8\uff0c\u56e0\u4e3a killed \u6d6a\u8d39\u8d44\u6e90\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#hive_1","title":"Hive \u4efb\u52a1\u63a8\u6d4b\u6267\u884c","text":"<p>\u5b9e\u9645\u5f00\u53d1\u4e2d\u67e5\u770b yarn \u65e5\u5fd7\u53ef\u80fd\u4f1a\u9047\u5230\uff0c\u663e\u793a\u6709 257 \u4e2a reduce \u6ca1\u8dd1\u5b8c\uff0c\u4f46\u662f\u4e0b\u9762 attempt \u91cc\u5374\u6709 261 \u4e2a reduce \u5904\u4e8e running \u72b6\u6001\u7684\u60c5\u51b5\u3002</p> <p>\u4efb\u52a1\u63a8\u6d4b\u6267\u884c\uff08speculative execution\uff09\uff1a</p> <p>MRAppMaster \u5f53\u76d1\u63a7\u5230\u4e00\u4e2a\u4efb\u52a1\u5b9e\u4f8b\u7684\u8fd0\u884c\u901f\u5ea6\u6162\u4e8e\u5176\u4ed6\u4efb\u52a1\u5b9e\u4f8b\u65f6\uff0c\u4f1a\u4e3a\u8be5\u4efb\u52a1\u542f\u52a8\u4e00\u4e2a\u5907\u4efd\u4efb\u52a1\u5b9e\u4f8b\uff0c\u8ba9\u8fd9\u4e2a\u4e24\u4e2a\u4efb\u52a1\u540c\u65f6\u5904\u7406\u4e00\u4efd\u6570\u636e\uff0c\u5982 map/reduce\u3002\u8c01\u5148\u5904\u7406\u5b8c\uff0c\u6210\u529f\u63d0\u4ea4\u7ed9 MRappMaster \u5c31\u91c7\u7528\u8c01\u7684\uff0c\u53e6\u4e00\u4e2a\u5219\u4f1a\u88ab killed\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u90a3\u4e9b\u957f\u5c3e\u4efb\u52a1\u62d6\u540e\u817f\u3002</p> <p>\u4efb\u52a1\u63a8\u6d4b\u6267\u884c\u7684\u597d\u5904\u5c31\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u9632\u6b62\u957f\u5c3e\u4efb\u52a1\u62d6\u540e\u817f\u3002\u4efb\u52a1\u63a8\u6d4b\u7684\u574f\u5904\u5c31\u662f\u4e24\u4e2a\u91cd\u590d\u4efb\u52a1\uff0c\u6d6a\u8d39\u8d44\u6e90\uff0c\u964d\u4f4e\u96c6\u7fa4\u7684\u6548\u7387\uff0c\u5c24\u5176 reduce \u4efb\u52a1\u7684\u63a8\u6d4b\u6267\u884c\uff0c\u62c9\u53d6 map \u6570\u636e\u52a0\u5927\u7f51\u7edc I/O\uff0c\u800c\u4e14\u63a8\u6d4b\u4efb\u52a1\u53ef\u80fd\u4f1a\u76f8\u4e92\u7ade\u4e89\u3002</p> <p>\u6ce8\u610f\uff1a\u9ed8\u8ba4\u96c6\u7fa4\u5f00\u542f\u63a8\u6d4b\u6267\u884c\uff0c\u53ef\u4ee5\u57fa\u4e8e\u96c6\u7fa4\u8ba1\u7b97\u6846\u67b6\uff0c\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u4efb\u52a1\u7c7b\u578b\u5355\u72ec\u5f00\u542f\uff0c\u9ed8\u8ba4 map/reduce \u7b49\u63a8\u6d4b\u6267\u884c\u90fd\u662f\u5f00\u542f\u7684\u3002map \u4efb\u52a1\u5efa\u8bae\u5f00\u542f\uff0creduce \u53ef\u4ee5\u7ed3\u5408\u5b9e\u9645\u8c28\u614e\u5f00\u542f\u3002</p> <p>\u63a8\u6d4b\u6267\u884c\u672c\u8d28\u662f\u901a\u8fc7\u63d0\u9ad8\u4e2a\u522b\u6162 task \u7684\u901f\u5ea6\u8fdb\u800c\u63d0\u9ad8\u6574\u4f53\u7684\u8fd0\u884c\u6548\u7387\u3002\u4f46\u63a8\u6d4b\u6267\u884c\u7684\u4f7f\u7528\u4e0d\u597d\u5efa\u8bae\u662f\u5426\u5f00\u542f\uff0c\u6bd4\u5982\u8fd0\u884c\u7684 map/reduce \u4efb\u52a1\u8f93\u5165\u6570\u636e\u91cf\u5f88\u5927\u6216\u8005\u672c\u8eab\u6267\u884c\u65f6\u95f4\u5f88\u957f\u7684\u65f6\u5019\uff0c\u5982\u679c\u4f60\u518d\u5f00\u542f\u63a8\u6d4b\u6267\u884c\u4f1a\u9020\u6210\u5927\u91cf\u7684\u8d44\u6e90\u6d6a\u8d39\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_2","title":"\u5c0f\u6587\u4ef6\u95ee\u9898","text":"<p>\u5927\u91cf\u5c0f\u6587\u4ef6\u95ee\u9898\u7684\u5371\u5bb3\uff1a</p> <ul> <li>\u5360\u7528\u5927\u91cf NameNode \u5185\u5b58</li> <li>\u5bfc\u81f4 DataNode \u7684\u78c1\u76d8\u5bfb\u5740\u6548\u7387\u4f4e\u4e0b</li> <li>Block \u662f\u6700\u5c0f\u7c92\u5ea6\u7684\u6570\u636e\u5904\u7406\u5355\u5143\uff0c\u5927\u91cf\u5c0f\u6587\u4ef6\uff0c\u5927\u91cf\u7684\u5757\uff0c\u610f\u5473\u7740\u66f4\u591a\u4efb\u52a1\u8c03\u5ea6\u3001\u4efb\u52a1\u521b\u5efa\u5f00\u9500\uff0c\u4ee5\u53ca\u66f4\u591a\u7684\u4efb\u52a1\u7ba1\u7406\u5f00\u9500</li> </ul> <p>\u6ce8\uff1a\u867d\u7136\u53ef\u4ee5\u5f00\u542f map \u524d\u6587\u4ef6\u5408\u5e76\uff0c\u4f46\u662f\u8fd9\u4e5f\u9700\u8981\u4e0d\u505c\u5730\u4ece\u4e0d\u540c\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff0c\u6570\u636e\u8bfb\u53d6\uff0c\u7f51\u7edc\u4f20\u8f93\uff0c\u7136\u540e\u8fdb\u884c\u5408\u5e76\uff0c\u540c\u6837\u4f1a\u589e\u52a0\u6d88\u8017\u8d44\u6e90\u548c\u589e\u52a0\u8ba1\u7b97\u65f6\u95f4\uff0c\u6210\u672c\u4e5f\u5f88\u9ad8\u3002</p> <p>\u5c0f\u6587\u4ef6\u4ea7\u751f\u7684\u9014\u5f84\uff1a</p> <ul> <li>\u6d41\u5f0f\u6570\u636e\uff0c\u5982 Kafka, SparkStreaming, flink \u7b49\uff0c\u6d41\u5f0f\u589e\u91cf\u6587\u4ef6\uff0c\u5c0f\u7a97\u53e3\u6587\u4ef6\uff0c\u5982\u51e0\u5206\u949f\u4e00\u6b21\u7b49\u3002</li> <li>MapReduce \u5f15\u64ce\u4efb\u52a1\uff1a\u5982\u679c\u7eaf map \u4efb\u52a1\uff0c\u5927\u91cf\u7684 map\uff1b\u5982\u679c mapreduce \u4efb\u52a1\uff0c\u5927\u91cf\u7684 reduce\uff1b\u4e24\u8005\u90fd\u4f1a\u9020\u6210\u5927\u91cf\u7684\u6587\u4ef6\u3002\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u5f88\u591a\uff0c\u6bd4\u5982\u5206\u533a\u8868\u7684\u8fc7\u5ea6\u5206\u533a\uff0c\u52a8\u6001\u5206\u533a\uff0c\u8f93\u5165\u5927\u91cf\u7684\u5c0f\u6587\u4ef6\uff0c\u53c2\u6570\u8bbe\u7f6e\u7684\u4e0d\u5408\u7406\u7b49\uff0c\u8f93\u51fa\u6ca1\u6709\u6587\u4ef6\u5408\u5e76\u7b49\u3002</li> <li>Spark \u4efb\u52a1\u8fc7\u5ea6\u5e76\u884c\u5316\uff0cSpark \u5206\u533a\u8d8a\u591a\uff0c\u5199\u5165\u7684\u6587\u4ef6\u5c31\u8d8a\u591a\u3002</li> </ul> <p>\u5c0f\u6587\u4ef6\u95ee\u9898\u53c2\u6570\u4f18\u5316\uff1a</p> <p>\u53c2\u6570\u4e00\uff1a\u5f00\u542f map \u524d\u5c0f\u6587\u4ef6\u5408\u5e76\uff0c\u9ed8\u8ba4\u5f00\u542f</p> <pre><code>set hive.input.format = org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;\n</code></pre> <p>\u53c2\u6570\u4e8c\uff1a\u5408\u5e76 MR \u8f93\u51fa\u6587\u4ef6</p> <p>\u8fd9\u4e2a\u53c2\u6570\u8868\u793a\u5f53\u4e00\u4e2a MR \u4f5c\u4e1a\u7684\u5e73\u5747\u8f93\u51fa\u6587\u4ef6\u5927\u5c0f\u5c0f\u4e8e\u8fd9\u4e2a\u6570\u5b57\u65f6\uff0cHive \u5c06\u542f\u52a8\u4e00\u4e2a\u989d\u5916\u7684 Map \u4efb\u52a1(\u6572\u91cd\u70b9\uff0c\u8fd9\u91cc\u6709\u4e2a\u5751)\uff0c\u5c06\u8f93\u51fa\u6587\u4ef6\u5408\u5e76\u4e3a\u66f4\u5927\u7684\u6587\u4ef6\u3002</p> <pre><code>-- \u5f53\u8f93\u51fa\u6587\u4ef6\u5c0f\u4e8e 32Mb \u65f6\u6211\u4eec\u8fdb\u884c\u5408\u5e76\u3002\nset hive.merge.smallfiles.avgsize=32000000;\n-- \u96c6\u7fa4\u5c42\u9762\u9ed8\u8ba4\u5f00\u542f map-only \u4efb\u52a1\u7684\u5c0f\u6587\u4ef6\u5408\u5e76\nset hive.merge.mapfiles=true;\n-- \u6ce8\u610f\u96c6\u7fa4\u5c42\u9762\u9ed8\u8ba4\u4e0d\u5f00\u542f map-reduce \u4efb\u52a1\u7684\u5c0f\u6587\u4ef6\u5408\u5e76,\u5982\u679c\u9700\u8981\u5408\u5e76\u9700\u8981\u624b\u52a8\u5f00\u542f\uff1b\nset hive.merge.mapredfiles=true;\n-- \u4f5c\u4e1a\u7ed3\u675f\u65f6\u5408\u5e76\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u4e00\u822c\u6700\u597d\u8ddf\u751f\u4ea7\u96c6\u7fa4\u7684 block \u5927\u5c0f\u4e00\u81f4\u5408\u9002\nset hive.merge.size.per.task=25600000;\n</code></pre> <p>\u6848\u4f8b\uff1a\u4e00\u5f20\u8868\u67d0\u4e2a\u5206\u533a\u5927\u91cf\u5c0f\u6587\u4ef6\uff0c1000 \u4e2a kb \u7ea7\u522b\u6587\u4ef6\uff0c\u603b\u5b58\u50a8\u5927\u5c0f 15.3Mb\uff08\u5355\u526f\u672c\uff09</p> <pre><code>set hive.input.format = org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;\nset hive.merge.mapfiles = true;\nset hive.merge.mapredfiles = true;\nset hive.merge.smallfiles.avgsize = 32000000;\nset hive.merge.size.per.task = 256000000;\n\ncreate table test as\nselect\n*\nfrom table_name\nwhere dt = '20221030'\n</code></pre> <p>\u5e26\u5751\u6848\u4f8b\uff1a\u4e00\u5f20\u8868\u67d0\u4e2a\u5206\u533a\u5927\u91cf Mb \u7ea7\u522b\u5c0f\u6587\u4ef6\uff0c\u603b\u5b58\u50a8\u5927\u5c0f 6GB\uff08\u5355\u526f\u672c\uff09</p> <p>\u8dd1\u5b8c\u4ee5\u540e\u5408\u8ba1\u751f\u6210 177 \u4e2a\u6587\u4ef6\uff0c\u5927\u5c0f 4.1GB\uff0c\u5e73\u5747\u6587\u4ef6\u5927\u5c0f 4.1GB*1024/177=23Mb\uff0c\u6ca1\u6709\u8fbe\u5230\u7684\u9884\u671f\u5e73\u5747\u6587\u4ef6\u5927\u5c0f 32Mb\uff0c\u4e3a\u4ec0\u4e48\uff1f</p> <p>\u6211\u4eec\u4e4b\u524d\u8bf4\u8fc7\uff0cmap \u7684\u4e2a\u6570\u4e0e\u5207\u7247\u5927\u5c0f\u6709\u5173\uff1a</p> <pre><code>set hive.input.format = org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;\nset mapred.max.split.size=256000000;\nset mapred.min.split.size=128000000;\nset mapred.min.split.size.per.node=128000000;\nset mapred.min.split.size.per.rack=128000000;\n</code></pre> <p>\u56e0\u6b64\uff0c\u5982\u679c\u8981\u5728 MR \u4e4b\u540e\u53e6\u8d77\u4e00\u4e2a Map Task \u5408\u5e76\u8f93\u51fa\u6587\u4ef6\uff0c<code>mapred.min.split.size.per.rack</code> \u548c <code>mapred.min.split.size.per.node</code>\uff0c\u4ee5\u53ca <code>mapred.min.split.size</code> \u53c2\u6570\u7684\u6700\u5c0f\u503c\u8981\u5927\u4e8e\u7b49\u4e8e <code>hive.merge.smallfiles.avgsize</code> \u624d\u4f1a\u5b9e\u9645\u751f\u6548\u3002</p> <pre><code>set hive.input.format = org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;\n--\u5f00\u542f\u5c0f\u6587\u4ef6\u5408\u5e76\uff0c\u4ee5\u53ca\u5c0f\u6587\u4ef6\u5927\u5c0f\nset hive.merge.mapfiles = true;\nset hive.merge.mapredfiles = true;\nset hive.merge.smallfiles.avgsize=32000000;\nset hive.merge.size.per.task=25600000;\n--\u63a7\u5236 map \u7684\u8f93\u5165\u5927\u5c0f\uff0c\u5b9e\u73b0\u771f\u6b63\u7684\u5c0f\u6587\u4ef6\u5408\u5e76\nset mapred.max.split.size=256000000;\nset mapred.min.split.size=32000000;\nset mapred.min.split.size.per.node=32000000;\nset mapred.min.split.size.per.rack=32000000;\n\ndrop table if exists paas_test.tmp_map_split_files_test_06;\ncreate table ds_test.tmp_map_split_files_test_06\nas\nselect\n*\nfrom ds_master.dwd_device_app_runtimes_sec_di\nwhere day='20201211';\n-- \u6570\u636e\u6587\u4ef6 4.1GB,\u6587\u4ef6\u6570 65\u4e2a\uff0c\u5e73\u5747\u6587\u4ef6\u5927\u5c0f 4.1*1024/65=65Mb\uff0c\u6ee1\u8db3\u8981\u6c42\uff1b\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5408\u5e76\u5c0f\u6587\u4ef6\u4e0d\u4ec5\u53ef\u4ee5\u51cf\u5c11\u5bf9 NameNode \u7684\u5f71\u54cd\uff0c\u51cf\u5c11\u8ba1\u7b97\u8d44\u6e90\u7b49\uff0c\u8fd8\u53ef\u4ee5\u964d\u4f4e\u8868\u7684\u603b\u5b58\u50a8\uff0c\u5c24\u5176\u5217\u5f0f\u5b58\u50a8\u8868\uff0c\u5408\u5e76\u5c0f\u6587\u4ef6\uff0c\u53d8\u6210\u4e00\u4e2a\u5927\u6587\u4ef6\u540e\u53ef\u4ee5\u63d0\u9ad8\u6587\u4ef6\u7684\u538b\u7f29\u7387\uff0c\u8fdb\u800c\u964d\u4f4e\u5b58\u50a8\u3002</li> <li>Map-only \u4efb\u52a1\uff0cmap \u6570\u51b3\u5b9a\u4e86\u8f93\u51fa\u6587\u4ef6\u6570\u3002Map-reduce \u4efb\u52a1\uff0creduce \u4e2a\u6570\u51b3\u5b9a\u4e86\u8f93\u51fa\u7684\u6587\u4ef6\u4e2a\u6570\u3002</li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_3","title":"\u5e76\u884c\u6267\u884c","text":"<p>\u4e00\u6bb5 HQL \u4f1a\u5206\u6210\u591a\u4e2a job/stage \u6267\u884c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cHive \u4e00\u6b21\u53ea\u4f1a\u6267\u884c\u4e00\u4e2a\u9636\u6bb5\u3002\u4e0d\u8fc7\uff0c\u67d0\u4e2a\u7279\u5b9a\u7684 job \u53ef\u80fd\u5305\u542b\u4f17\u591a\u7684\u9636\u6bb5\uff0c\u800c\u8fd9\u4e9b\u9636\u6bb5\u53ef\u80fd\u5e76\u975e\u5b8c\u5168\u4e92\u76f8\u4f9d\u8d56\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u4e9b\u9636\u6bb5\u662f\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u7684\uff0c\u8fd9\u6837\u53ef\u80fd\u4f7f\u5f97\u6574\u4e2a job \u7684\u6267\u884c\u65f6\u95f4\u7f29\u77ed\u3002\u5982\u679c\u6709\u66f4\u591a\u7684\u9636\u6bb5\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u90a3\u4e48 job \u53ef\u80fd\u5c31\u8d8a\u5feb\u5b8c\u6210\u3002</p> <pre><code>-- \u9ed8\u8ba4\u4e0d\u5f00\u542f\nset hive.exec.parallel=true;\n-- how many jobs at most can be executed in parallel\nset hive.exec.parallel.thread.number=8;\n</code></pre> <p>\u573a\u666f\u4e00\uff1aunion all</p> <p>\u573a\u666f\u4e8c\uff1amulti-insert</p> <pre><code>FROM staged_employees se\nINSERT INTO TABLE us_employees\n    AS SELECT * WHERE se.cnty = 'US'\nINSERT INTO TABLE ca_employees\n    AS SELECT * WHERE se.cnty = 'CA'\n</code></pre> <p>\u573a\u666f\u4e09\uff1a\u4e0d\u540c\u5b50\u67e5\u8be2\u7684 join</p> <pre><code>SELECT t1.column1, t2.column2\nFROM\n  (SELECT column1, column2 FROM table1) t1\nJOIN\n  (SELECT column1, column2 FROM table2) t2\nON (t1.column1 = t2.column1);\n</code></pre> <p>\u6ce8\u610f\uff1a\u5982\u679c job \u56e0\u4e3a\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u53ea\u80fd\u987a\u5e8f\u6267\u884c\uff0c\u90a3\u4e48\u5f00\u542f\u8fd9\u4e2a\u53c2\u6570\u4e5f\u6ca1\u7528\u3002\u540c\u65f6\uff0c\u96c6\u7fa4\u5982\u679c\u7e41\u5fd9\u7684\u65f6\u5019\u4f1a\u52a0\u5267\u96c6\u7fa4\u8d44\u6e90\u4e89\u62a2\uff0c\u53ef\u80fd\u662f\u5f71\u54cd\u522b\u4eba\u4efb\u52a1\uff0c\u4e0d\u8fc7\u5982\u679c\u96c6\u7fa4\u7a7a\u95f2\u7684\u8bdd\u53ef\u4ee5\u589e\u52a0\u8d44\u6e90\u5229\u7528\u7387\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#jvm","title":"JVM \u91cd\u7528","text":"<p>Hadoop 1.x \u7248\u672c\u4e2d\u7684 JVM \u91cd\u7528\uff1a</p> <p>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cMapReduce \u542f\u52a8\u7684 JVM \u5728\u5b8c\u6210\u4e00\u4e2a task \u4e4b\u540e\u5c31\u9000\u51fa\u4e86\uff0c\u4f46\u662f\u5982\u679c\u4efb\u52a1\u82b1\u8d39\u65f6\u95f4\u5f88\u77ed\uff0c\u53c8\u8981\u591a\u6b21\u542f\u52a8 JVM \u7684\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u5bf9\u5f88\u5927\u6570\u636e\u91cf\u8fdb\u884c\u8ba1\u6570\u64cd\u4f5c\uff09\uff0cJVM \u7684\u542f\u52a8\u65f6\u95f4\u5c31\u4f1a\u53d8\u6210\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684 overhead\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 jvm \u91cd\u7528\u7684\u53c2\u6570\uff1a\u4ed6\u7684\u4f5c\u7528\u662f\u8ba9\u4e00\u4e2a JVM \u8fd0\u884c\u591a\u6b21\u4efb\u52a1\u4e4b\u540e\u518d\u9000\u51fa\uff0c\u8fd9\u6837\u4e00\u6765\u4e5f\u80fd\u8282\u7ea6\u4e0d\u5c11 JVM \u542f\u52a8\u65f6\u95f4\u3002</p> <p>Hadoop 2.x \u7248\u672c\u4e2d\u7684 JVM \u91cd\u7528\uff1aUberTask</p> <p>With \"Uber\" mode enabled, you'll run everything within the container of the AppMaster itself. \u8fd9\u6837 AppMaster \u4e0d\u4f1a\u518d\u4e3a\u6bcf\u4e00\u4e2a task \u5411 RM \u7533\u8bf7\u5355\u72ec\u7684 container\uff0c\u800c\u662f\u76f4\u63a5\u5728\u81ea\u5df1\u7684 container \u4e2d\u8fd0\u884c task\uff0c\u6700\u7ec8\u8fbe\u5230 JVM \u91cd\u7528\u7684\u76ee\u7684\u3002</p> <p>\u6ce8\u610f\uff1aUberTask \u9002\u7528\u4e8e\u5c0f\u6570\u636e\u91cf\u7684\u4efb\u52a1\uff0c\u5927\u6570\u636e\u91cf\u7684\u4efb\u52a1\u4e0d\u9002\u5408\u4f7f\u7528 UberTask\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#fetch","title":"Fetch \u6293\u53d6","text":"<p>Fetch \u6293\u53d6\u662f\u6307\uff0cHive \u4e2d\u5bf9\u67d0\u4e9b\u60c5\u51b5\u7684\u67e5\u8be2\u53ef\u4ee5\u4e0d\u5fc5\u4f7f\u7528 MapReduce \u8ba1\u7b97\u3002 \u4f8b\u5982\uff1a<code>select * from user_base_info;</code> \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cHive \u53ef\u4ee5\u7b80\u5355\u5730\u8bfb\u53d6 user_base_info \u5bf9\u5e94\u7684\u5b58\u50a8\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c \u7136\u540e\u8f93\u51fa\u67e5\u8be2\u7ed3\u679c\u5230\u63a7\u5236\u53f0\u3002Hive \u9ed8\u8ba4\u542f\u7528\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_4","title":"\u672c\u5730\u6a21\u5f0f","text":"<p>\u6709\u65f6 Hive \u7684\u8f93\u5165\u6570\u636e\u91cf\u662f\u975e\u5e38\u5c0f\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e3a\u67e5\u8be2\u89e6\u53d1\u6267\u884c MR \u4efb\u52a1\u65f6\u6d88\u8017\u53ef\u80fd\u4f1a\u6bd4\u5b9e\u9645 job \u7684\u6267\u884c\u65f6\u95f4\u8981\u591a\u7684\u591a\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u8fd9\u79cd\u60c5\u51b5\uff0cHive \u53ef\u4ee5\u901a\u8fc7\u672c\u5730\u6a21\u5f0f\u5728\u5355\u53f0\u673a\u5668\u4e0a\u5904\u7406\u6240\u6709\u7684\u4efb\u52a1\u3002\u5bf9\u4e8e\u5c0f\u6570\u636e\u96c6\uff0c\u6267\u884c\u65f6\u95f4\u53ef\u4ee5\u660e\u663e\u88ab\u7f29\u77ed\u3002 \u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e <code>hive.exec.mode.local.auto</code> \u7684\u503c\u4e3a true\uff0c\u6765\u8ba9 Hive \u5728\u9002\u5f53\u7684\u65f6\u5019\u81ea\u52a8\u542f\u52a8\u8fd9\u4e2a\u4f18\u5316\u3002</p> <pre><code>--\u5f00\u542f\u672c\u5730 mr\nset hive.exec.mode.local.auto=true;\n--\u8bbe\u7f6e local mr \u7684\u6700\u5927\u8f93\u5165\u6570\u636e\u91cf\uff0c\u5f53\u8f93\u5165\u6570\u636e\u91cf\u5c0f\u4e8e\u8fd9\u4e2a\u503c\u65f6\u91c7\u7528 local mr \u7684\u65b9\u5f0f\uff0c \u9ed8\u8ba4\u4e3a 134217728\uff0c\u5373 128M\nset hive.exec.mode.local.auto.inputbytes.max=50000000;\n--\u8bbe\u7f6e local mr \u7684\u6700\u5927\u8f93\u5165\u6587\u4ef6\u4e2a\u6570\uff0c\u5f53\u8f93\u5165\u6587\u4ef6\u4e2a\u6570\u5c0f\u4e8e\u8fd9\u4e2a\u503c\u65f6\u91c7\u7528 local mr \u7684\u65b9\u5f0f\uff0c \u9ed8\u8ba4\u4e3a 4\nset hive.exec.mode.local.auto.input.files.max=8;\n</code></pre>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_5","title":"\u4e25\u683c\u6a21\u5f0f","text":"<p>\u9ed8\u8ba4\u5f00\u542f\u3002</p> <ul> <li>\u5206\u533a\u8868\u67e5\u8be2\uff1a\u5f00\u542f\u4e25\u683c\u6a21\u5f0f\u540e\uff0c\u5728\u67e5\u8be2\u4e00\u4e2a\u5206\u533a\u8868\u65f6\uff0c\u5982\u679c\u67e5\u8be2\u6761\u4ef6\u4e2d\u6ca1\u6709\u5305\u542b\u5206\u533a\u5b57\u6bb5\uff0cHive \u4f1a\u76f4\u63a5\u62a5\u9519\u3002</li> <li>order by\uff1a\u5f00\u542f\u4e25\u683c\u6a21\u5f0f\u540e\uff0c\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b order by \u5b50\u53e5\uff0c\u4f46\u662f\u6ca1\u6709\u5305\u542b limit \u5b50\u53e5\uff0cHive \u4f1a\u76f4\u63a5\u62a5\u9519\u3002</li> <li>\u7b1b\u5361\u5c14\u79ef\uff1a\u5f00\u542f\u4e25\u683c\u6a21\u5f0f\u540e\uff0c\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b\u7b1b\u5361\u5c14\u79ef\uff0cHive \u4f1a\u76f4\u63a5\u62a5\u9519\u3002</li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_6","title":"\u5411\u91cf\u5316\u6a21\u5f0f","text":"<p>Hive \u7684\u77e2\u91cf\u5316\u662f\u4e00\u6b21\u5904\u7406\u4e00\u6279\u6b21\u884c\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u5904\u7406\u4e00\u884c\u3002\u4e0e\u57fa\u4e8e\u884c\u7684\u6267\u884c\u76f8\u6bd4\uff0c\u5411\u91cf\u5316\u6267\u884c\u907f\u514d\u4e86\u5927\u91cf\u7684\u865a\u51fd\u6570\u8c03\u7528\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6307\u4ee4\u548c\u6570\u636e\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u5b83\u4eec\u4e00\u8d77\u5904\u7406\u4e00\u6279\u884c\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u5904\u7406\u4e00\u884c\u3002\u4e0e\u57fa\u4e8e\u884c\u7684\u6267\u884c\u76f8\u6bd4\uff0c\u5411\u91cf\u5316\u6267\u884c\u907f\u514d\u4e86\u5927\u91cf\u7684\u865a\u51fd\u6570\u8c03\u7528\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6307\u4ee4\u548c\u6570\u636e\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u3002</p> <p>\u4f46\u662f\u77e2\u91cf\u5316\u7684\u4f7f\u7528\u662f\u6709\u9650\u5236\u7684\uff0c\u4e0d\u662f\u5bf9\u6240\u6709\u7684\u8bed\u6cd5\u90fd\u662f\u652f\u6301\uff0c\u4f7f\u7528\u4e0d\u5f53\u4f1a\u9002\u5f97\u5176\u53cd\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u5565\u77e2\u91cf\u5316\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\uff0c\u9700\u8981\u624b\u52a8\u5f00\u542f\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u76ee\u524d MapReduce \u8ba1\u7b97\u5f15\u64ce\u53ea\u652f\u6301 Map \u7aef\u7684\u5411\u91cf\u5316\u6267\u884c\u6a21\u5f0f\uff0cTez \u548c Spark \u8ba1\u7b97\u5f15\u64ce\u53ef\u4ee5\u652f\u6301 Map \u548c Reduce \u7aef\u7684\u5411\u91cf\u5316\u6267\u884c\u6a21\u5f0f\u3002\u8fd9\u4e2a\u53c2\u6570\u56e0\u4e3a\u6709\u5751\uff0c\u5efa\u8bae\u5927\u6570\u636e\u96c6\u7fa4\u5c42\u9762\u5173\u95ed\uff0c\u5927\u6570\u636e\u5f00\u53d1\u53ef\u4ee5\u7ed3\u5408\u5b9e\u9645\u4efb\u52a1\u8fdb\u884c\u5f00\u542f\u4f7f\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\uff0c\u4f46\u9700\u6ce8\u610f\u4f7f\u7528\u573a\u666f\uff1b</li> <li>\u82e5\u8981\u4f7f\u7528\u5411\u91cf\u5316\u67e5\u8be2\u6267\u884c\uff0c\u5fc5\u987b\u5c06\u6570\u636e\u5b58\u50a8\u4e3a ORC \u683c\u5f0f\uff0c\u672c\u8d28\u5c31\u662f\u4e00\u6b21\u8bfb\u53d6\u4e00\u884c\uff0c\u53d8\u6210\u4e00\u6b21\u8bfb\u53d6 1024 \u884c\u5904\u7406\u3002</li> <li>\u5728 Hive \u4e2d\u63d0\u4f9b\u7684\u5411\u91cf\u6a21\u5f0f\uff0c\u5e76\u4e0d\u662f\u91cd\u5199\u4e86 Mapper \u4e2d\u7684\u51fd\u6570\uff0c\u800c\u662f\u901a\u8fc7\u5b9e\u73b0 Inputformat \u63a5\u53e3\uff0c\u521b\u5efa VertorizedOrcInputFormat \u7c7b\uff0c\u6765\u6784\u9020\u4e00\u4e2a\u6279\u91cf\u7684\u8f93\u5165\u6570\u7ec4</li> <li>\u5411\u91cf\u5316\u67e5\u8be2\u6700\u597d\u53ea\u5728\u7b80\u5355\u903b\u8f91\u65f6\u5019\u4f7f\u7528\uff1b\u53d1\u73b0\u4e0d\u5c11\u5411\u91cf\u5316\u67e5\u8be2\u7684\u5751\uff0c\u5305\u62ec\uff1agroup by \u4e0d\u80fd\u4f7f\u7528\u5411\u91cf\u5316\u67e5\u8be2\uff0c\u5168\u5b57\u6bb5 group by \u7ed3\u679c\u5374\u6709\u91cd\u590d\u7684\uff08group by, join \u7b49\u590d\u6742\u8bed\u53e5\u4e0d\u8981\u4f7f\u7528\uff09\uff0c\u53d1\u73b0\u4f1a\u628a\u7a7a\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a null\u3002</li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_7","title":"\u52a8\u6001\u5206\u533a","text":"<p>\u52a8\u6001\u5206\u533a\u662f\u6307\u5728\u63d2\u5165\u6570\u636e\u65f6\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u5206\u533a\u5b57\u6bb5\u7684\u503c\uff0c\u800c\u662f\u7531 Hive \u81ea\u52a8\u57fa\u4e8e\u67e5\u8be2\u53c2\u6570\u7684\u4f4d\u7f6e\u53bb\u63a8\u65ad\u5206\u533a\u7684\u540d\u79f0\uff0c\u4ece\u800c\u5efa\u7acb\u5206\u533a\u3002</p> <pre><code>-- \u9ed8\u8ba4 false\nset hive.exec.dynamic.partition = true;\n-- \u9ed8\u8ba4 strict \u6a21\u5f0f\uff0c\u8868\u793a\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u81f3\u5c11\u4e00\u4e2a\u9759\u6001\u5206\u533a\u5b57\u6bb5\uff0c\u4ee5\u9632\u7528\u6237\u8986\u76d6\u6240\u6709\n-- \u5206\u533a\u3002Nonstrict \u6a21\u5f0f\u8868\u793a\u5141\u8bb8\u6240\u6709\u5206\u533a\u90fd\u53ef\u4ee5\u76f4\u63a5\u52a8\u6001\u5206\u533a\nset hive.exec.dynamic.partition.mode = nonstrict;\n-- \u9ed8\u8ba4 100\uff0c\u4e00\u822c\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e00\u70b9\uff0c\u6bd4\u5982 1000\uff0c\u8868\u793a\u6bcf\u4e2a maper \u6216 reducer \u53ef\n-- \u4ee5\u5141\u8bb8\u521b\u5efa\u7684\u6700\u5927\u52a8\u6001\u5206\u533a\u4e2a\u6570\nset hive.exec.max.dynamic.partitions.pernode = 100;\n-- \u8868\u793a\u4e00\u4e2a\u52a8\u6001\u5206\u533a\u8bed\u53e5\u53ef\u4ee5\u521b\u5efa\u7684\u6700\u5927\u52a8\u6001\u5206\u533a\u4e2a\u6570\nset hive.exec.max.dynamic.partitions = 1000;\n-- (\u9ed8\u8ba4) \u5168\u5c40\u53ef\u4ee5\u521b\u5efa\u7684\u6700\u5927\u6587\u4ef6\u4e2a\u6570\uff0c\u8d85\u51fa\u62a5\u9519\nset hive.exec.max.created.files = 10000;\n</code></pre> <p>\u6ce8\u610f\uff1a</p> <ul> <li> <p>\u52a8\u6001\u5206\u533a\u662f\u57fa\u4e8e\u67e5\u8be2\u5b57\u6bb5\u7684\uff08\u4e2a\u6570\uff09\u4f4d\u7f6e\u53bb\u63a8\u65ad\u5206\u533a\u7684\u540d\u79f0\uff0c\u6240\u4ee5\u52a8\u6001\u5206\u533a\u7684\u5b57\u6bb5\u9700\u8981\u653e\u5230\u4e1a\u52a1\u6570\u636e\u7684\u540e\u9762\u3002\u67e5\u8be2\u7684\u5b57\u6bb5\u4e2a\u6570\u5fc5\u987b\u548c\u76ee\u6807\u7684\u5b57\u6bb5\u4e2a\u6570\u76f8\u540c\uff0c\u4e0d\u80fd\u591a\uff0c\u4e5f\u4e0d\u80fd\u5c11\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4f46\u662f\u5982\u679c\u5b57\u6bb5\u7684\u7c7b\u578b\u4e0d\u4e00\u81f4\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528 null \u503c\u586b\u5145\uff0c\u4e0d\u4f1a\u62a5\u9519\u3002</p> </li> <li> <p>\u5408\u7406\u7684\u5206\u533a\u65b9\u6848\u9996\u5148\u5e94\u8be5\u662f\u5206\u533a\u6570\u4e0d\u80fd\u8fc7\u591a\uff0c\u4ea7\u751f\u8fc7\u591a\u7684\u6587\u4ef6\u6570\u548c\u76ee\u5f55\u6570\uff0c\u6bd4\u5982\u6bcf\u4e2a\u76ee\u5f55\u4e0b\u6587\u4ef6\u7684\u5927\u5c0f\u603b\u548c\u6700\u8d77\u7801\u8981\u662f block \u5927\u5c0f\u7684\u6570\u500d\u3002\u5176\u6b21\u5408\u7406\u7684\u5206\u533a\u8981\u662f\u53ef\u9884\u6d4b\u7684\uff0c\u5206\u533a\u7684\u589e\u957f\u8981\u5747\u5300\u548c\u7a33\u5b9a\u7684\u3002</p> </li> <li> <p>\u52a8\u6001\u5206\u533a\u5f0a\u7aef\u53ef\u80fd\u9020\u6210\u5927\u91cf\u6587\u4ef6\u548c\u76ee\u5f55\u6570\uff0c\u5927\u91cf\u5c0f\u6587\u4ef6\uff0c\u589e\u52a0\u5143\u6570\u636e\u538b\u529b\uff1b\u5176\u6b21\u4e0d\u5229\u4e8e\u6570\u636e\u538b\u7f29\u5408\u5e76\uff0c\u6574\u4f53\u4f1a\u589e\u52a0\u6570\u636e\u5b58\u50a8\u3002</p> </li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#join","title":"Join \u7684\u4f18\u5316","text":""},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#hive-join","title":"Hive \u539f\u751f\u652f\u6301\u7684 Join \u7c7b\u578b","text":"<p>Hive \u652f\u6301\u7684 join \u7c7b\u578b\u6709\uff1a</p> <ul> <li>Inner Join</li> <li>Left/Right/Full Outer Join</li> <li>Left Semi Join</li> <li>Cross Join</li> </ul> <p>Hive \u62e5\u6709\u591a\u79cd join \u7b97\u6cd5\uff0c\u5305\u62ec Common Join\uff0cMap Join\uff0cBucket Map Join\uff0cSort Merge Buckt Map Join \u7b49\uff0c\u4e0b\u9762\u5bf9\u6bcf\u79cd join \u7b97\u6cd5\u505a\u7b80\u8981\u8bf4\u660e\uff1a</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#common-join","title":"Common Join","text":"<p>Common Join \u662f Hive \u4e2d\u6700\u7a33\u5b9a\u7684 join \u7b97\u6cd5\uff0c\u5176\u901a\u8fc7\u4e00\u4e2a MapReduce Job \u5b8c\u6210\u4e00\u4e2a join \u64cd\u4f5c\u3002Map \u7aef\u8d1f\u8d23\u8bfb\u53d6 join \u64cd\u4f5c\u6240\u9700\u8868\u7684\u6570\u636e\uff0c\u5e76\u6309\u7167\u5173\u8054\u5b57\u6bb5\u8fdb\u884c\u5206\u533a\uff0c\u901a\u8fc7 Shuffle\uff0c\u5c06\u5176\u53d1\u9001\u5230 Reduce \u7aef\uff0c\u76f8\u540c key \u7684\u6570\u636e\u5728 Reduce \u7aef\u5b8c\u6210\u6700\u7ec8\u7684 Join \u64cd\u4f5c\u3002</p> <p>Shuffle \u9636\u6bb5\u4ee3\u4ef7\u975e\u5e38\u6602\u8d35\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u6392\u5e8f\u548c\u5408\u5e76\u3002\u51cf\u5c11 Shuffle \u548c Reduce \u9636\u6bb5\u7684\u4ee3\u4ef7\u53ef\u4ee5\u63d0\u9ad8\u4efb\u52a1\u6027\u80fd\u3002</p> <p></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0csql \u8bed\u53e5\u4e2d\u7684 join \u64cd\u4f5c\u548c\u6267\u884c\u8ba1\u5212\u4e2d\u7684 Common Join \u4efb\u52a1\u5e76\u975e\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff0c\u4e00\u4e2a sql \u8bed\u53e5\u4e2d\u7684\u76f8\u90bb\u7684\u4e14\u5173\u8054\u5b57\u6bb5\u76f8\u540c\u7684\u591a\u4e2a join \u64cd\u4f5c\u53ef\u4ee5\u5408\u5e76\u4e3a\u4e00\u4e2a Common Join \u4efb\u52a1\u3002</p> <pre><code>select a.val,\n       b.val,\n       c.val\nfrom a\njoin b on a.key = b.key1\njoin c on c.key = b.key1\n</code></pre> <p>\u4e0a\u8ff0 sql \u8bed\u53e5\u4e2d\u4e24\u4e2a join \u64cd\u4f5c\u7684\u5173\u8054\u5b57\u6bb5\u5747\u4e3a b \u8868\u7684 key1 \u5b57\u6bb5\uff0c\u5219\u8be5\u8bed\u53e5\u4e2d\u7684\u4e24\u4e2a join \u64cd\u4f5c\u53ef\u7531\u4e00\u4e2a Common Join \u4efb\u52a1\u5b9e\u73b0\uff0c\u4e5f\u5c31\u662f\u53ef\u901a\u8fc7\u4e00\u4e2a Map Reduce \u4efb\u52a1\u5b9e\u73b0\u3002</p> <pre><code>select a.val,\n       b.val,\n       c.val\nfrom a\njoin b on a.key = b.key1\njoin c on c.key = b.key2\n</code></pre> <p>\u4e0a\u8ff0 sql \u8bed\u53e5\u4e2d\u7684\u4e24\u4e2a join \u64cd\u4f5c\u5173\u8054\u5b57\u6bb5\u5404\u4e0d\u76f8\u540c\uff0c\u5219\u8be5\u8bed\u53e5\u7684\u4e24\u4e2a join \u64cd\u4f5c\u9700\u8981\u5404\u81ea\u901a\u8fc7\u4e00\u4e2a Common Join \u4efb\u52a1\u5b9e\u73b0\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u4e24\u4e2a Map Reduce \u4efb\u52a1\u5b9e\u73b0\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#map-join","title":"Map Join","text":"<p>Map Join \u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u53ea\u6709 map \u9636\u6bb5\u7684 Job \u5b8c\u6210\u4e00\u4e2a join \u64cd\u4f5c\u3002\u5176\u9002\u7528\u573a\u666f\u4e3a\u5927\u8868 join \u5c0f\u8868\u3002\u82e5\u67d0 join \u64cd\u4f5c\u6ee1\u8db3\u8981\u6c42\uff0c\u5219\u7b2c\u4e00\u4e2a Job \u4f1a\u8bfb\u53d6\u5c0f\u8868\u6570\u636e\uff0c\u5c06\u5176\u5236\u4f5c\u4e3a\u54c8\u5e0c\u8868\u6587\u4ef6\uff0c\u5e76\u4e0a\u4f20\u81f3 Hadoop \u5206\u5e03\u5f0f\u7f13\u5b58 (\u672c\u8d28\u4e0a\u662f\u4e0a\u4f20\u81f3 HDFS)\u3002\u7b2c\u4e8c\u4e2a Job \u4f1a\u5148\u628a\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u7684\u54c8\u5e0c\u8868\u6587\u4ef6\u53d1\u9001\u7ed9\u5404\u4e2a Mapper\uff0c\u5404\u4e2a Mapper \u5c06\u6b64\u6587\u4ef6\u52a0\u8f7d\u8fdb\u5185\u5b58\uff0c\u7136\u540e\u626b\u63cf\u5927\u8868\u6570\u636e\uff0c\u8fd9\u6837\u5728 map \u7aef\u5373\u53ef\u5b8c\u6210 join \u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5982\u679c\u591a\u4e2a Mapper \u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u5219\u5206\u5e03\u5f0f\u7f13\u5b58\u53ea\u9700\u5c06\u54c8\u5e0c\u8868\u6587\u4ef6\u7684\u4e00\u4e2a\u526f\u672c\u53d1\u9001\u5230\u8fd9\u53f0\u673a\u5668\u4e0a\u3002</p> <ul> <li> <p>Job1\uff08\u672c\u5730\u4efb\u52a1\uff0c\u4e0d\u4f1a\u63d0\u4ea4 Yarn\uff09\uff1a\u8bfb\u53d6\u5c0f\u8868\u6570\u636e \u2192 \u5236\u4f5c\u54c8\u5e0c\u8868 \u2192 \u4e0a\u4f20\u81f3\u5206\u5e03\u5f0f\u7f13\u5b58</p> </li> <li> <p>Job2\uff1a\u5206\u5e03\u5f0f\u7f13\u5b58\u53d1\u9001\u54c8\u5e0c\u8868\u6587\u4ef6\u7ed9 Mapper \u2192 \u52a0\u8f7d\u81f3\u5185\u5b58 \u2192 \u5b8c\u6210 join</p> </li> </ul> <p></p> <p>\u89e6\u53d1 Map Join\uff1a</p> <ul> <li> <p>\u5728 SQL \u8bed\u53e5\u4e2d\u589e\u52a0 hint \u63d0\u793a\uff08\u5df2\u8fc7\u65f6\uff09</p> </li> <li> <p>Hive \u4f18\u5316\u5668\u6839\u636e\u8868\u7684\u5927\u5c0f\u81ea\u52a8\u63a8\u65ad</p> </li> </ul> <pre><code>-- \u5f00\u542f mapjoin \u81ea\u52a8\u63a8\u65ad\nset hive.auto.convert.join=true;\n-- \u8bbe\u7f6e\u5c0f\u8868\u9608\u503c\uff0c\u9ed8\u8ba4\u503c\u4e3a 25MB\nset hive.mapjoin.smalltable.filesize=25000000;\n</code></pre> <p>\u6ce8\u610f\uff1a</p> <ul> <li>Map Join \u5bf9 full outer join \u4e0d\u751f\u6548</li> <li>\u5bf9\u4e8e\u9700\u8981\u4fdd\u7559\u5c0f\u8868\u5168\u91cf\u7684\u60c5\u51b5\u4e0d\u751f\u6548\uff0c\u5982 <code>smalltable left join bigtable</code>\uff0c\u56e0\u4e3a\u5982\u679c\u6bcf\u4e2a maptask \u90fd\u4fdd\u7559\u4e00\u4e2a\u5168\u91cf\u5c0f\u8868\uff0cmap \u7aef\u805a\u5408\u540e\u76f4\u63a5\u5199\u6587\u4ef6\u4e86\uff0c\u6ca1\u6cd5\u5bf9\u6bcf\u4e2a map \u90fd\u5168\u4fdd\u7559\u7684\u5c0f\u8868\u8fdb\u884c\u53bb\u91cd\uff0c\u8fd9\u6837\u4f1a\u9020\u6210\u6570\u636e\u81a8\u80c0</li> </ul> <p>\u81ea\u52a8\u63a8\u65ad\uff1a</p> <p>Hive \u5728\u7f16\u8bd1 SQL \u8bed\u53e5\u9636\u6bb5\uff0c\u8d77\u521d\u6240\u6709\u7684 Join \u64cd\u4f5c\u5747\u91c7\u7528 Common Join \u7b97\u6cd5\u5b9e\u73b0\u3002</p> <p>\u4e4b\u540e\u5728\u7269\u7406\u4f18\u5316\u9636\u6bb5\uff0cHive \u4f1a\u6839\u636e\u6bcf\u4e2a Common Join \u4efb\u52a1\u6240\u9700\u8868\u7684\u5927\u5c0f\u5224\u65ad\u8be5 Common Join \u4efb\u52a1\u662f\u5426\u80fd\u591f\u8f6c\u6362\u4e3a Map Join \u4efb\u52a1\uff0c\u82e5\u6ee1\u8db3\u8981\u6c42\uff0c\u4fbf\u5c06 Common Join \u4efb\u52a1\u81ea\u52a8\u8f6c\u6362\u4e3a Map Join \u4efb\u52a1\u3002\u5224\u65ad\u6807\u51c6\u4e3a\u5c0f\u8868\u5927\u5c0f\u4e0e\u7528\u6237\u8bbe\u7f6e\u7684\u9608\u503c\uff08MapTask \u5185\u5b58\uff09\u6bd4\u8f83\u3002</p> <p>\u4f46\u6709\u4e9b Common Join \u4efb\u52a1\u6240\u9700\u7684\u8868\u5927\u5c0f\uff0c\u5728 SQL \u7684\u7f16\u8bd1\u9636\u6bb5\u662f\u672a\u77e5\u7684\uff08\u6bd4\u5982\u5b50\u67e5\u8be2\u751f\u6210\u7684\u4e2d\u95f4\u8868\uff09\uff0c\u6240\u4ee5\u8fd9\u79cd Common Join \u4efb\u52a1\u662f\u5426\u80fd\u8f6c\u6362\u6210 Map Join \u4efb\u52a1\u5728\u7f16\u8bd1\u9636\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\u3002</p> <p>\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0cHive \u4f1a\u5728\u7f16\u8bd1\u9636\u6bb5\u751f\u6210\u4e00\u4e2a\u6761\u4ef6\u4efb\u52a1 (Conditional Task)\uff0c\u5176\u4e0b\u4f1a\u5305\u542b\u4e00\u4e2a\u8ba1\u5212\u5217\u8868\uff0c\u8ba1\u5212\u5217\u8868\u4e2d\u5305\u542b\u8f6c\u6362\u540e\u7684 Map Join \u4efb\u52a1\u4ee5\u53ca\u539f\u6709\u7684 Common Join \u4efb\u52a1\u3002 \u6700\u7ec8\u5177\u4f53\u91c7\u7528\u54ea\u4e2a\u8ba1\u5212\uff0c\u662f\u5728\u8fd0\u884c\u65f6\u51b3\u5b9a\u7684\u3002\u5927\u81f4\u601d\u8def\u5982\u4e0b\u56fe\u6240\u793a:</p> <p>\u5047\u8bbe\u6211\u4eec\u6709 A \u548c B \u4e24\u5f20\u8868\uff0c\u4e24\u5f20\u8868\u7684\u5927\u5c0f\u90fd\u672a\u77e5\uff0c\u90a3\u4e48\u6b64\u65f6 Map Join \u6709 2 \u79cd\u60c5\u51b5\uff1a</p> <ul> <li> <p>\u7f13\u5b58 A \u8868\uff0c\u626b\u63cf B \u8868</p> </li> <li> <p>\u7f13\u5b58 B \u8868\uff0c\u626b\u63cf A \u8868</p> </li> </ul> <p>\u56e0\u6b64\u4f1a\u751f\u6210\u591a\u79cd\u6267\u884c\u8ba1\u5212\u3002</p> <p></p> <p>Hive \u5982\u4f55\u5224\u65ad\u6267\u884c\u8ba1\u5212\u4e2d\u7684 Common Join Task \u80fd\u5426\u8f6c\u6362\u4e3a Map Join Task\uff1f</p> <p></p> <p>\u6ce8\u610f\uff1a</p> <ul> <li> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u300c\u5bfb\u627e\u5927\u8868\u5019\u9009\u4eba\u300d\u8fd9\u4e00\u6b65\uff1a\u8981\u8003\u8651 SQL \u8bed\u53e5\u4e2d\u5177\u4f53\u4f7f\u7528\u7684\u662f\u54ea\u79cd Join\u3002\u4f8b\uff1aA left join B\uff0c\u90a3\u4e48\u5927\u8868\u5fc5\u987b\u662f A\uff1b\u5982\u679c\u662f A full outer join B\uff0c\u5219\u6839\u672c\u4e0d\u80fd\u505a Map Join\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u300chive.auto.conver.join.noconditionaltask\u300d\u7684 false \u5206\u652f\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1aA inner join B inner join C \u5173\u8054\u76f8\u540c\u7684\u5b57\u6bb5\uff0c\u6b64\u65f6\u6709\u4e00\u4e2a Map Join \u8ba1\u5212\u5c1d\u8bd5\u5c06 A \u4f5c\u4e3a\u5927\u8868\uff0cB \u548c C \u4f5c\u4e3a\u5c0f\u8868\u7f13\u5b58\uff0cC \u7684\u5927\u5c0f\u672a\u77e5\uff0cB \u7684\u5927\u5c0f\u5df2\u77e5\u4f46\u592a\u5927\u65e0\u6cd5\u7f13\u5b58\uff08\u8d85\u8fc7\u5c0f\u8868\u9608\u503c\uff09\uff0c\u5219\u8fd9\u79cd Map Join \u8ba1\u5212\u4e00\u5b9a\u53ef\u4ee5\u6392\u9664\u3002\u5373\u6392\u9664\u6389\u4e00\u5b9a\u4e0d\u53ef\u80fd\u6210\u529f\u7684 Map Join \u8ba1\u5212\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u300chive.auto.conver.join.noconditionaltask\u300d\u7684 true \u5206\u652f\uff0c\u6b64\u65f6\u5fc5\u987b\u8981\u4fdd\u8bc1\u5927\u8868\u5916\u7684\u6240\u6709\u8868\u7684\u5927\u5c0f\u90fd\u5df2\u77e5\uff0c\u5e76\u4e14\u603b\u548c\u5c0f\u4e8e\u5c0f\u8868\u9608\u503c\uff0c\u624d\u80fd\u751f\u6210\u6700\u4f18\u7684 Map Join \u8ba1\u5212\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u300c\u751f\u6210\u6700\u4f18 Map Join \u8ba1\u5212\u300d\u7684\u4e0b\u4e00\u6b65\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1aA join B join C on \u4e0d\u540c\u5b57\u6bb5\uff0c\u7406\u8bba\u4e0a\u9700\u8981 2 \u4e2a Common Join\uff0c\u5148\u628a A join B \u5f97\u5230\u4e34\u65f6\u8868 T\uff0c\u518d\u7528 T join C\u3002\u5982\u679c B \u548c C \u8868\u7684\u5927\u5c0f\u90fd\u975e\u5e38\u5c0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a B \u548c C \u90fd\u7f13\u5b58\u5230 Mapper \u5185\u5b58\u4e2d\uff0c\u8fdb\u884c\u4e24\u6b21 Map Join\u3002</p> </li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#bucket-map-join","title":"Bucket Map Join","text":"<p>Bucket Map Join \u662f\u5bf9 Map Join \u7684\u6539\u8fdb\uff0c\u5176\u6253\u7834\u4e86 Map Join \u53ea\u9002\u7528\u4e8e\u5927\u8868 join \u5c0f\u8868\u7684\u9650\u5236\uff0c\u53ef\u7528\u4e8e\u5927\u8868 join \u5927\u8868\u7684\u573a\u666f\u3002\u4f46\u662f\u73b0\u5728\u5927\u8868 Join \u5927\u8868\u7684\u573a\u666f\u5728 Hive \u4e2d\u5df2\u7ecf\u88ab SMB Map Join \u53d6\u4ee3\u3002</p> <p>\u5206\u6876\u7684\u539f\u7406\uff1a\u5bf9\u5206\u6876\u5b57\u6bb5\u8fdb\u884c hash partition\uff0c\u62c6\u5206\u4e3a\u82e5\u5e72\u4e2a\u6587\u4ef6\u3002</p> <p>Bucket Map Join \u7684\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u82e5\u80fd\u4fdd\u8bc1\uff1a</p> <ol> <li>\u53c2\u4e0e join \u7684\u8868\u5747\u4e3a\u5206\u6876\u8868</li> <li>\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u5206\u6876\u6570\u91cf\u662f\u53e6\u5916\u4e00\u5f20\u8868\u5206\u6876\u6570\u91cf\u7684\u6574\u6570\u500d</li> <li>\u5173\u8054\u5b57\u6bb5\u4e3a\u5206\u6876\u5b57\u6bb5\uff0c\u5373 join key = cluster by key</li> </ol> <p>\u5c31\u80fd\u4fdd\u8bc1\u53c2\u4e0e join \u7684\u4e24\u5f20\u8868\u7684\u5206\u6876\u4e4b\u95f4\u5177\u6709\u660e\u786e\u7684\u5173\u8054\u5173\u7cfb\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5728\u4e24\u8868\u7684\u5206\u6876\u95f4\u8fdb\u884c Map Join \u64cd\u4f5c\u4e86\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u7b2c\u4e8c\u4e2a Job \u7684 Map \u7aef\u5c31\u65e0\u9700\u518d\u7f13\u5b58\u5c0f\u8868\u7684\u5168\u8868\u6570\u636e\u4e86\uff0c\u800c\u53ea\u9700\u7f13\u5b58\u5176\u6240\u9700\u7684\u5206\u6876\u5373\u53ef\u3002</p> <p></p> <p></p> <p>\u5206\u6876\u4e4b\u540e\u5c31\u548c Map Join \u7684\u64cd\u4f5c\u4e00\u81f4\uff1a</p> <ul> <li> <p>Job1\uff1a\u5148\u7531\u672c\u5730 Map \u4efb\u52a1\u5c06\u76f8\u5bf9\u5c0f\u4e00\u70b9\u7684\u8868\u7684\u6bcf\u4e2a\u6876\u5404\u5236\u4f5c\u4e00\u5f20\u54c8\u5e0c\u8868\uff0c\u5c06\u6240\u6709\u54c8\u5e0c\u8868\u4e0a\u4f20\u81f3\u5206\u5e03\u5f0f\u7f13\u5b58</p> </li> <li> <p>Job2\uff1a\u6309\u7167 BucketInputFormat \u8bfb\u53d6\u5927\u8868\u6570\u636e\uff0c\u4e00\u4e2a\u6876\u4e00\u4e2a\u5207\u7247\uff0c\u6bcf\u4e00\u4e2a Mapper \u53ea\u9700\u8981\u5904\u7406\u5927\u8868\u4e2d\u7684\u4e00\u4e2a\u6876\u5373\u53ef\u3002\u540c\u65f6\uff0c\u6839\u636e\u6876\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bcf\u4e2a Mapper \u53ea\u9700\u8981\u4ece\u5206\u5e03\u5f0f\u7f13\u5b58\u4e2d\u8bfb\u53d6\u81ea\u5df1\u9700\u8981\u7684\u5c0f\u8868\u7684\u6876\u7684\u54c8\u5e0c\u8868\u5373\u53ef\u3002\u4f8b\u5982\uff0cMapper1 \u88ab\u5206\u5230\u4e86 Bucket A-0\uff0c\u56e0\u6b64\uff0cMapper1 \u53ea\u9700\u8981\u53bb\u5206\u5e03\u5f0f\u7f13\u5b58\u8bfb\u53d6 Bucket B-0 \u5373\u53ef\u3002</p> </li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#sort-merge-bucket-map-join","title":"Sort Merge Bucket Map Join","text":"<p>SMB Map Join \u662f\u6876\u8868\u7684\u4e3b\u8981\u4f7f\u7528\u65b9\u5f0f\u3002</p> <p>SMB Map Join \u8981\u6c42\uff1a</p> <ol> <li>\u53c2\u4e0e join \u7684\u8868\u5747\u4e3a\u5206\u6876\u8868\uff0c\u4e14\u9700\u4fdd\u8bc1\u5206\u6876\u5185\u7684\u6570\u636e\u662f\u6709\u5e8f\u7684</li> <li>\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u5206\u6876\u6570\u91cf\u662f\u53e6\u5916\u4e00\u5f20\u8868\u5206\u6876\u6570\u91cf\u7684\u6574\u6570\u500d</li> <li>join key = cluster by key = sort by key</li> </ol> <p>SMB Map Join \u540c Bucket Join \u4e00\u6837\uff0c\u540c\u6837\u662f\u5229\u7528\u4e24\u8868\u5404\u5206\u6876\u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb\uff0c\u5728\u5206\u6876\u4e4b\u95f4\u8fdb\u884c join \u64cd\u4f5c\uff0c\u4e0d\u540c\u7684\u662f\u5206\u6876\u4e4b\u95f4\u7684 join \u64cd\u4f5c\u7684\u5b9e\u73b0\u539f\u7406\u3002Bucket Map Join\uff0c\u4e24\u4e2a\u5206\u6876\u4e4b\u95f4\u7684 join \u5b9e\u73b0\u539f\u7406\u4e3a Hash Join \u7b97\u6cd5\uff1b\u800c SMB Map Join\uff0c\u4e24\u4e2a\u5206\u6876\u4e4b\u95f4\u7684 join \u5b9e\u73b0\u539f\u7406\u4e3a Sort Merge Join \u7b97\u6cd5\u3002</p> <p>Hash Join \u548c Sort Merge Join \u5747\u4e3a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u5e38\u89c1\u7684 Join \u5b9e\u73b0\u7b97\u6cd5\u3002Hash Join \u7684\u539f\u7406\u76f8\u5bf9\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u53c2\u4e0e join \u7684\u4e00\u5f20\u8868\u6784\u5efa hash table\uff0c\u7136\u540e\u626b\u63cf\u53e6\u5916\u4e00\u5f20\u8868\uff0c \u7136\u540e\u8fdb\u884c\u9010\u884c\u5339\u914d\u3002Sort Merge Join \u9700\u8981\u5728\u4e24\u5f20\u6309\u7167\u5173\u8054\u5b57\u6bb5\u6392\u597d\u5e8f\u7684\u8868\u4e2d\u8fdb\u884c\uff0c\u5176\u539f\u7406\u5982\u56fe\u6240\u793a\uff1a</p> <p></p> <p>SMB Map Join VS Bucket Map Join</p> <ul> <li> <p>\u4e0d\u9700\u8981\u5236\u4f5c\u54c8\u5e0c\u8868</p> </li> <li> <p>\u4e0d\u9700\u8981\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u54c8\u5e0c\u8868\uff08\u4e00\u4e2a\u6876\uff09\uff0c\u56e0\u6b64\u5bf9\u6876\u7684\u5927\u5c0f\u6ca1\u6709\u8981\u6c42</p> </li> </ul> <p>Hive \u4e2d\u7684 SMB Map Join \u5c31\u662f\u5bf9\u4e24\u4e2a\u5206\u6876\u7684\u6570\u636e\u6309\u7167\u4e0a\u8ff0\u601d\u8def\u8fdb\u884c Join \u64cd\u4f5c\u3002\u53ef\u4ee5\u770b\u51fa\uff0cSMB Map Join \u4e0e Bucket Map Join \u76f8\u6bd4\uff0c\u5728\u8fdb\u884c Join \u64cd\u4f5c\u65f6\uff0cMap \u7aef\u662f\u65e0\u9700\u5bf9\u6574\u4e2a Bucket \u6784\u5efa hash table\uff0c\u4e5f\u65e0\u9700\u5728 Map \u7aef\u7f13\u5b58\u6574\u4e2a Bucket \u6570\u636e\u7684\uff0c\u6bcf\u4e2a Mapper \u53ea\u9700\u6309\u987a\u5e8f\u9010\u4e2a key \u8bfb\u53d6\u4e24\u4e2a\u5206\u6876\u7684\u6570\u636e\u8fdb\u884c join \u5373\u53ef\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>SMB Mapjoin \u53ea\u6709 map\uff0c\u6ca1\u6709 reduce\uff0cmap \u4e2a\u6570\u7b49\u4e8e\u6700\u5927\u5206\u6876\u6570\uff0cmap \u7ed3\u675f\u76f4\u63a5\u6570\u5199\u5165 hive \u8868</li> <li>SMB Mapjoin \u7684\u542f\u52a8\u4e0d\u53d7 mapjoin \u7684\u5927\u5c0f\u8868\u9650\u5236\uff0c\u9002\u5408\u5927\u8868 join \u5927\u8868\uff0c\u524d\u63d0\u662f\u9700\u8981\u63d0\u524d\u8bbe\u8ba1\u597d\u751f\u6210\u597d\u5bf9\u5e94\u7684\u6876\u6392\u5e8f\u8868</li> <li>SMB Mapjoin \u5f0a\u7aef\u4e5f\u5f88\u660e\u663e\uff0c\u5373\u4e0d\u591f\u7075\u6d3b\uff0c\u6bd4\u5982\u6362\u4e2a\u8868\uff0c\u6362\u4e2a join key \u5219\u65e0\u6cd5\u751f\u6548</li> <li>SMB Mapjoin \u4e5f\u6709\u597d\u5904\uff1a\u6bd4\u5982\u5bf9\u4e8e\u56fa\u5b9a\u7684\u5927\u8868 join \u5927\u8868\u4e00\u822c\u53ef\u4ee5\u63d0\u9ad8 join \u6548\u7387\u3002\u540c\u65f6\u7edd\u5bf9\u8981\u6bd4\u975e\u5206\u6876\u8868\u5177\u6709\u66f4\u5feb\u7684\u62bd\u6837\u6548\u7387\uff1b\u4f46\u662f\u662f\u5426\u6bd4\u975e\u5206\u6876\u8868\u4e00\u5b9a\u8282\u7701\u65f6\u95f4\uff0c\u5219\u4e0d\u4e00\u5b9a</li> <li>SMB MapJoin \u5efa\u8bae\u4f7f\u7528\u573a\u666f\uff1a\u5927\u8868\u4e0e\u5927\u8868 join \u65f6\uff0c\u5982\u679c key \u5206\u5e03\u5747\u5300\uff0c\u5355\u7eaf\u56e0\u4e3a\u6570\u636e\u91cf\u8fc7\u5927\uff0c\u5bfc\u81f4\u4efb\u52a1\u5931\u8d25\u6216\u8fd0\u884c\u65f6\u95f4\u8fc7\u957f\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u5927\u8868\u5206\u6876\uff0c\u6765\u4f18\u5316\u4efb\u52a1</li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#skewed-map-join","title":"Skewed Map Join","text":"<p>\u6574\u4f53\u601d\u8def\u662f\u4f7f\u7528\u72ec\u7acb\u7684\u4f5c\u4e1a\u548c mapjoin \u6765\u5904\u7406\u503e\u659c\u7684\u952e\u3002\u6240\u4ee5\u5f53 Join \u64cd\u4f5c\u4e2d\u67d0\u4e2a\u8868\u4e2d\u7684\u4e00\u4e9b Key \u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u5176\u4ed6\uff08\u5305\u542b\u7a7a\u503c null \u503c\uff09\uff0c\u5219\u5904\u7406\u8be5 Key \u7684 Reduce \u5c06\u6210\u4e3a\u4efb\u52a1\u5355\u74f6\u9888\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f00\u542f Skewed join \u6765\u5b9e\u73b0\u5728 map \u7aef\u5bf9\u503e\u659c\u5065\u8fdb\u884c\u805a\u5408\u3002</p> <p>Skew Join \u7684\u539f\u7406\u662f\uff0c\u4e3a\u503e\u659c\u7684\u5927 key \u5355\u72ec\u542f\u52a8\u4e00\u4e2a map join \u4efb\u52a1\u8fdb\u884c\u8ba1\u7b97\uff0c\u5176\u4f59 key \u8fdb\u884c\u6b63\u5e38\u7684 common join\u3002</p> <p>\u6ce8\u610f\uff1a</p> <ul> <li>Skewed Map join \u4f7f\u7528\u4f18\u5316\u4f7f\u7528\u573a\u666f\u5f88\u6709\u9650\uff0c\u53ea\u6709 INNER JOIN \u7684\u6570\u636e\u503e\u659c\u624d\u53ef\u4ee5\u5b9e\u73b0\u4f18\u5316\u3002\u5bf9\u5176\u4ed6 JOIN \u5982 LEFT/RIGHT JOIN, FULL OUTER JOIN \u5219\u65e0\u6cd5\u4f7f\u7528</li> <li>Skewed map join \u6709\u4e2a\u5de8\u5751\u5c31\u662f\u8fd9\u4e2a\u53c2\u6570\u548c parallel \u5e76\u884c\u540c\u65f6\u5f00\u542f\u65f6\u4f1a\u51fa\u73b0\u4e22\u6570\u636e\u7684\u95ee\u9898 issue</li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#group-by","title":"Group By \u4f18\u5316","text":"<p>\u9488\u5bf9 group by \u7684\u4f18\u5316\u9700\u8981\u91cd\u70b9\u8003\u8651\u4e24\u65b9\u9762</p> <ol> <li>Map \u7aef\u805a\u5408</li> <li>\u8d1f\u8f7d\u5747\u8861\uff08\u503e\u659c\u4f18\u5316\uff09</li> </ol> <p>Hive \u4e2d\u672a\u7ecf\u4f18\u5316\u7684\u5206\u7ec4\u805a\u5408\uff0c\u662f\u901a\u8fc7\u4e00\u4e2a MapReduce Job \u5b9e\u73b0\u7684\u3002Map \u7aef\u8d1f\u8d23\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u6309\u7167\u5206\u7ec4\u5b57\u6bb5\u5206\u533a\uff0c\u901a\u8fc7 Shuffle\uff0c\u5c06\u6570\u636e\u53d1\u5f80 Reduce \u7aef\uff0c\u5404\u7ec4\u6570\u636e\u5728 Reduce \u7aef\u5b8c\u6210\u6700\u7ec8\u7684\u805a\u5408\u8fd0\u7b97\u3002</p> <p>Hive \u5bf9\u5206\u7ec4\u805a\u5408\u7684\u4f18\u5316\u4e3b\u8981\u56f4\u7ed5\u7740\u51cf\u5c11 Shuffle \u6570\u636e\u91cf\u8fdb\u884c\uff0c\u5177\u4f53\u505a\u6cd5\u662f map-side \u805a\u5408\u3002\u6240\u8c13 map-side \u805a\u5408\uff0c\u5c31\u662f\u5728 map \u7aef\u7ef4\u62a4\u4e00\u4e2a\uff08\u5185\u5b58\u4e2d\u7684\uff09 hash table\uff0c\u5229\u7528\u5176\u5b8c\u6210\u90e8\u5206\u7684\u805a\u5408\uff0c\u7136\u540e\u5c06\u90e8\u5206\u805a\u5408\u7684\u7ed3\u679c\uff0c\u6309\u7167\u5206\u7ec4\u5b57\u6bb5\u5206\u533a\uff0c\u53d1\u9001\u81f3 reduce \u7aef\uff0c\u5b8c\u6210\u6700\u7ec8\u7684\u805a\u5408\u3002map-side \u805a\u5408\u80fd\u6709\u6548\u51cf\u5c11 shuffle \u7684\u6570\u636e\u91cf\uff0c\u63d0\u9ad8\u5206\u7ec4\u805a\u5408\u8fd0\u7b97\u7684\u6548\u7387\u3002</p> <pre><code>--\u662f\u5426\u5728 Map \u7aef\u8fdb\u884c\u805a\u5408\uff0c \u9ed8\u8ba4\u4e3a True\nset hive.map.aggr = true;\n--\u5728 Map \u7aef\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\u7684\u6761\u76ee\u6570\u76ee\nset hive.groupby.mapaggr.checkinterval = 100000;\n--\u6709\u6570\u636e\u503e\u659c\u7684\u65f6\u5019\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff08\u9ed8\u8ba4\u662f false\uff09\nset hive.groupby.skewindata = true;\n</code></pre> <p>\u4e0a\u9762\u7684 <code>set hive.groupby.skewindata = true;</code> \u5f53\u9009\u9879\u8bbe\u5b9a\u4e3a true\uff0c\u751f\u6210\u7684\u67e5\u8be2\u8ba1\u5212\u4f1a\u6709\u4e24\u4e2a MR Job\u3002\u7b2c\u4e00\u4e2a MR Job \u4e2d\uff0cMap \u7684\u8f93\u51fa\u7ed3\u679c\u4f1a\u968f\u673a\u5206\u5e03\u5230 Reduce \u4e2d\uff0c\u6bcf\u4e2a Reduce \u505a\u90e8\u5206\u805a\u5408\u64cd\u4f5c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd9\u6837\u5904\u7406\u7684\u7ed3\u679c\u662f\u76f8\u540c\u7684 Group By Key \u6709\u53ef\u80fd\u88ab\u5206\u53d1\u5230\u4e0d\u540c\u7684 Reduce \u4e2d\uff0c\u4ece\u800c\u8fbe\u5230\u8d1f\u8f7d\u5747\u8861\u7684\u76ee\u7684\uff1b\u7b2c\u4e8c\u4e2a MR Job \u518d\u6839\u636e\u9884\u5904\u7406\u7684\u6570\u636e\u7ed3\u679c\u6309\u7167 Group By Key \u5206\u5e03\u5230 Reduce \u4e2d\uff08\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u4fdd\u8bc1\u76f8\u540c\u7684 Group By Key \u88ab\u5206\u5e03\u5230\u540c\u4e00\u4e2a Reduce \u4e2d\uff09\uff0c\u6700\u540e\u5b8c\u6210\u6700\u7ec8\u7684\u805a\u5408\u64cd\u4f5c\u3002</p> <p>\u6ce8\u610f\uff1a\u8fd9\u4e2a\u573a\u666f\u5bf9 count(distinct) \u7684\u573a\u666f\u4e0d\u9002\u7528\uff0c\u56e0\u4e3a count(distinct) \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5168\u5c40\u805a\u5408\u64cd\u4f5c\uff0c\u65e0\u6cd5\u5728 Map \u7aef\u5b8c\u6210\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#group-by_1","title":"Group By \u7684\u56db\u79cd\u6267\u884c\u8ba1\u5212\u6a21\u5f0f","text":"<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a<code>hive.map.aggr</code> \u548c <code>hive.groupby.skewindata</code> \u4e24\u4e2a\u53c2\u6570\u540c\u65f6\u5f00\u542f\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f bug\uff0c\u8ba1\u7b97\u51fa\u9519\u8bef\u7684\u7ed3\u679c\u3002\u8be6\u89c1\uff1aissue \u548c blog</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li><code>count(distinct)</code> \u64cd\u4f5c\u6bd4\u8f83\u7279\u6b8a\uff0c\u65e0\u6cd5\u8fdb\u884c\u4e2d\u95f4\u7684\u805a\u5408\u64cd\u4f5c\uff0c\u56e0\u6b64\u8be5 <code>hive.map.aggr=true</code> \u53c2\u6570\u5bf9\u6709 <code>count(distinct)</code> \u64cd\u4f5c\u7684 sql \u4e0d\u9002\u7528\u3002</li> <li>\u5bf9\u4e8e <code>hive.map.aggr=true</code> \u53c2\u6570\u5efa\u8bae\u96c6\u7fa4\u5c42\u9762\u4fdd\u6301\u5b98\u65b9\u9ed8\u8ba4\u503c true \u5373\u53ef\u3002\u4f46\u662f\u5bf9\u4e8e <code>hive.groupby.skewindata</code> \u5efa\u8bae\u614e\u7528\uff0c\u53ef\u80fd\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\uff08\u5efa\u8bae\u901a\u8fc7\u6539\u9020 SQL \u4ee3\u7801\u7684\u65b9\u5f0f\u624b\u52a8\u5b9e\u73b0 <code>hive.groupby.skewindata</code> \u7684\u529f\u80fd\uff09\u3002</li> <li>Hive \u7684 Map \u7aef\u805a\u5408\u7c7b\u4f3c Combiner \u529f\u80fd\uff0c\u4f46\u4e0d\u540c\uff0c\u672c\u8d28\u662f\u4f7f\u7528\u54c8\u5e0c\u8868\u6765\u7f13\u5b58\u6570\u636e\uff0c\u805a\u5408\u6570\u636e\u3002\u4f7f\u7528 Map \u805a\u5408\u5f80\u5f80\u662f\u4e3a\u4e86\u51cf\u5c11 Map \u4efb\u52a1\u7684\u8f93\u51fa\uff0c \u51cf\u5c11\u4f20\u8f93\u5230\u4e0b\u6e38\u4efb\u52a1\u7684 Shuffle \u6570\u636e\u91cf\uff0c\u4f46\u5982\u679c\u6570\u636e\u7ecf\u8fc7\u805a\u5408\u540e\u4e0d\u80fd\u660e\u663e\u51cf\u5c11\uff0c\u90a3\u65e0\u7591\u5c31\u662f\u6d6a\u8d39\u673a\u5668\u7684 I/O \u8d44\u6e90\uff0c\u6bd4\u5982\u5bf9\u4e8e\u6570\u636e\u91cd\u590d\u7387\u5f88\u4f4e\u7684 map \u7aef\u805a\u5408\u5176\u5b9e\u662f\u65e0\u6548\u7684\u3002</li> </ul> <p>\u624b\u52a8\u52a0\u76d0\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>select date,\n       app_id,\n       count(uid) as pv\nfrom source_tb\ngroup by date,\n         app_id;\n</code></pre> <p>\u67d0\u4e2a app \u6d41\u91cf\u8fdc\u8d85\u5176\u4ed6 app \u5c31\u53ef\u80fd\u503e\u659c\uff0c\u56e0\u6b64\u53ef\u4ee5\u6539\u5199\uff1a</p> <pre><code>with t1 as (select date,\n                   -- \u52a0\u968f\u673a\u524d\u7f00\uff0c\u7528 \u201c_\u201d \u8fde\u63a5\n                   concat(cast(cast(RAND() * 100 as int) as string), \"_\", app_id) as new_app_id,\n                   uid\n            from source_tb),\n     t2 as (select date,\n                   new_app_id,\n                   count(uid) as pv\n            from t1\n            group by date,\n                     new_app_id)\nselect date,\n       -- \u7528 \u201c_\u201d \u62c6\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u7b2c\u4e8c\u4e2a\u90e8\u5206\u4e3a\u539f\u59cb\u7684 app_id\n       split(new_app_id, '_')[1] as app_id,\n       sum(pv)                   as pv\nfrom t2\ngroup by date,\n         split(new_app_id, '_')[1]\n</code></pre>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#countdistinct","title":"count(distinct) \u4f18\u5316","text":"<p>\u6570\u636e\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e COUNT DISTINCT \u64cd\u4f5c\u9700\u8981\u7528\u4e00\u4e2a Reduce Task \u6765\u5b8c\u6210\uff0c\u8fd9\u4e00\u4e2a Reduce \u9700\u8981\u5904\u7406\u7684\u6570\u636e\u91cf\u592a\u5927\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6574\u4e2a Job \u5f88\u96be\u5b8c\u6210\uff0c\u4e00\u822c COUNT DISTINCT \u4f7f\u7528\u5148 GROUP BY \u518d COUNT \u7684\u65b9\u5f0f\u66ff\u6362\u3002</p> <pre><code>--\u76f4\u63a5\u53bb\u91cd\nselect count(distinct id) from bigtable;\n--\u6539\u5199\u540e\u53bb\u91cd\nselect count(id) from (select id from bigtable group by id) a;\n</code></pre> <p>\u867d\u7136\u4f1a\u591a\u7528\u4e00\u4e2a Job \u6765\u5b8c\u6210\uff0c\u4f46\u5728\u6570\u636e\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0cgroup by \u4f9d\u65e7\u662f\u53bb\u91cd\u7684\u4e00\u4e2a\u4f18\u5316\u624b\u6bb5\u3002\u5982\u679c\u8bf4\u9700\u8981\u7edf\u8ba1\u7684\u5b57\u6bb5\u6709 Null \u503c\uff0c\u6700\u540e\u53ea\u9700\u8981 null \u503c\u5355\u72ec\u5904\u7406\u540e union \u5373\u53ef\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#hive-sql","title":"Hive SQL \u4f18\u5316","text":""},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#hive-sql_1","title":"Hive SQL \u6267\u884c\u987a\u5e8f","text":"<p>Map \u7aef\uff1a</p> <ol> <li>\u9996\u5148\u6267\u884c FROM\uff0c\u8fdb\u884c\u8868\u7684 scan \u67e5\u627e\u4e0e\u52a0\u8f7d;</li> <li>\u7136\u540e\u6267\u884c WHERE \u64cd\u4f5c\uff0cHive \u5bf9\u8bed\u53e5\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5982\u679c\u7b26\u5408\u8c13\u8bcd\u4e0b\u63a8\uff0c\u5219\u8fdb\u884c\u8c13\u8bcd\u4e0b\u63a8\u3002\u8fd9\u4e5f\u662f\u6307\u5b9a\u5206\u533a\u540e\u4e0d\u4f1a\u5168\u8868\u626b\u63cf\u7684\u539f\u56e0\u3002</li> <li>\u7136\u540e\u6267\u884c JOIN \u8bed\u53e5\uff0c\u6309\u7167 on \u91cc\u9762\u7684 join-key \u8fdb\u884c shuffle \u6570\u636e\uff0c\u6ce8\u610f\u53ea\u6709\u4f7f\u7528\u5230\u5217\u624d\u4f1a\u8bfb\u53d6 shuffle \u51fa\u53bb\uff0cshuffle \u7684 key \u662f join-key(\u652f\u6301\u7ec4\u5408\u952e)\u3002\uff08\u6ce8\u610f\u8fd9\u91cc\u5148\u4e0d\u8003\u8651 map-join\uff0cgroupby \u7684 map \u805a\u5408\u7b49\u4f18\u5316\u64cd\u4f5c\uff09</li> </ol> <p>Reduce \u7aef\uff1a</p> <ol> <li>\u5982\u679c on \u91cc\u6709\u975e\u7b49\u503c\u7684\u8fc7\u6ee4\u8868\u8fbe\u5f0f\u5982 <code>t1.db != 'abc'</code>\uff0c\u6ce8\u610f\u4e0d\u662f\u975e\u7b49\u503c\u94fe\u63a5\u3002\u5728\u5b9e\u9645 join \u5173\u8054\u524d\u5148\u8fc7\u6ee4 on \u91cc\u9762\u7684\u8c13\u8bcd\uff1b</li> <li>\u5176\u4ed6\u7136\u540e\u624d\u662f group by, having, order by, limit \u7b49\u3002\u6ce8\u610f\u5b9e\u9645\u6267\u884c\u8ba1\u5212\u9700\u8981\u770b explain\uff0c\u4f1a\u56e0\u4e3a\u4e0d\u540c\u7248\u672c\u548c\u6267\u884c\u4f18\u5316\u7ec6\u8282\u4e0a\u6709\u5dee\u5f02\u3002</li> </ol> <p>\u8fc7\u6ee4\u6761\u4ef6\u653e on \u548c where \u7684\u533a\u522b</p> <ul> <li>\u8fc7\u6ee4\u6761\u4ef6\u653e where \u4e2d\u662f\u8868\u8fde\u63a5\u4e4b\u540e\u518d\u8fc7\u6ee4\uff0c\u800c\u653e\u5728 on \u4e2d\u662f\u5728\u8868\u8fde\u63a5\u4e4b\u524d\u8fc7\u6ee4\u3002</li> <li>\u5bf9\u4e8e inner join \u6765\u8bf4\uff0c\u4e8c\u8005\u5b8c\u5168\u76f8\u540c\u3002</li> <li>\u5bf9\u4e8e left join \u6765\u8bf4\uff0con \u6761\u4ef6\u662f\u5728\u751f\u6210\u4e34\u65f6\u8868\u65f6\u4f7f\u7528\u7684\u6761\u4ef6\uff0c\u5b83\u4e0d\u7ba1 on \u4e2d\u7684\u6761\u4ef6\u662f\u5426\u4e3a\u771f\uff0c\u90fd\u4f1a\u8fd4\u56de\u5de6\u8fb9\u8868\u4e2d\u7684\u8bb0\u5f55\u3002\u800c where \u6761\u4ef6\u662f\u5728\u4e34\u65f6\u8868\u751f\u6210\u597d\u540e\uff0c\u518d\u5bf9\u4e34\u65f6\u8868\u8fdb\u884c\u8fc7\u6ee4\u7684\u6761\u4ef6\u3002\u8fd9\u65f6\u5df2\u7ecf\u6ca1\u6709 left join \u7684\u542b\u4e49\uff08\u5fc5\u987b\u8fd4\u56de\u5de6\u8fb9\u8868\u7684\u8bb0\u5f55\uff09\u4e86\uff0c\u6761\u4ef6\u4e0d\u4e3a\u771f\u7684\u5c31\u5168\u90e8\u8fc7\u6ee4\u6389\u3002</li> </ul> <p>\u603b\u7ed3\uff1a</p> <p>Hive SQL \u4e2d LEFT JOIN \u5355\u72ec\u9488\u5bf9\u5de6\u8868\u7684\u8fc7\u6ee4\u6761\u4ef6\u5fc5\u987b\u653e\u5728 WHERE \u4e0a\uff0c\u653e\u5728 ON \u4e0a\u7684\u6548\u679c\u662f\u4e0d\u53ef\u9884\u671f\u7684\uff08\u653e\u5728 on \u91cc\u7684\u65f6\u5019\u5728 reduce \u9636\u6bb5\u6267\u884c\uff09\uff0c\u5355\u72ec\u9488\u5bf9\u53f3\u8868\u7684\u67e5\u8be2\u6761\u4ef6\u653e\u5728 ON \u4e0a\u662f\u5148\u8fc7\u6ee4\u53f3\u8868\uff0c\u518d\u548c\u5de6\u8868\u8054\u8868\uff0c\u653e\u5728 WHERE \u6761\u4ef6\u4e0a\u5219\u662f\u5148\u8054\u8868\u518d\u8fc7\u6ee4\uff0c\u8bed\u4e49\u4e0a\u5b58\u5728\u5dee\u522b\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#hive-sql_2","title":"Hive SQL \u4f18\u5316\u601d\u8def","text":"<p>Hive SQL \u672c\u8d28\u4e0a\u53ef\u4ee5\u88ab\u5206\u6210 3 \u79cd\u6a21\u5f0f\uff0c \u5373\u8fc7\u6ee4\u6a21\u5f0f\u3001 \u805a\u5408\u6a21\u5f0f\u548c\u8fde\u63a5\u6a21\u5f0f\u3002</p> <ol> <li>\u8fc7\u6ee4\u6a21\u5f0f\uff1a\u4ece\u8fc7\u6ee4\u7684\u7c92\u5ea6\u6765\u770b\uff0c\u4e3b\u8981\u5206\u4e3a\uff1a\u884c\u8fc7\u6ee4\u3001 \u6570\u636e\u5217\u8fc7\u6ee4\u3001\u6587\u4ef6\u8fc7\u6ee4\u548c\u76ee\u5f55\u8fc7\u6ee4 4 \u79cd\u65b9\u5f0f\u3002\u5177\u4f53 SQL \u8bed\u6cd5\u4e0a\u4f53\u73b0\u5728 where\uff0chaving\uff0cdistinct \u8bed\u53e5\u4e0a\uff1b</li> <li>\u805a\u5408\u6a21\u5f0f\uff1adistinct \u805a\u5408\uff0ccount \u8ba1\u6570\u805a\u5408\uff0c\u6570\u503c\u76f8\u5173\u7684\u805a\u5408\u6a21\u5f0f\uff0c\u884c\u8f6c\u5217\u805a\u5408\u6a21\u5f0f\u3002</li> <li>Join \u6a21\u5f0f\uff1a\u6709 shuffle \u7684 join \u548c\u65e0 shuffle \u7684 join\u3002</li> </ol>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_8","title":"\u5206\u533a\u88c1\u526a","text":"<p>\u5206\u533a\u88c1\u526a\u672c\u8d28\u662f\u4e3a\u4e86\u51cf\u5c11\u6570\u636e\u91cf\uff0c\u907f\u514d\u5168\u8868\u626b\u63cf\u3002\u867d\u7136\u5206\u533a\u8fc7\u6ee4\u6761\u4ef6\u6211\u4eec\u5199\u5728 where \u5b50\u53e5\u91cc\uff0c\u4f46\u662f\u5206\u533a\u8fc7\u6ee4\u662f\u53d1\u751f\u5728 map \u4e4b\u524d\uff0c\u8fd9\u5c31\u662f\u5206\u533a\u8868\u76ee\u5f55\u7ed3\u6784\u7684\u4f18\u52bf\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u6307\u5b9a\u8def\u5f84\u8bfb\u53d6\u6587\u4ef6\u4e86\u3002</p> <p>\u5206\u533a\u88c1\u526a\u6709\u65f6\u5019\u4f1a\u6709\u5931\u6548\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u4f7f\u7528 udf \u51fd\u6570\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u65f6\uff0c\u53ef\u80fd\u5b58\u5728\u5206\u533a\u88c1\u526a\u5931\u6548\u7684\u60c5\u51b5\uff0c\u5177\u4f53\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 explain \u547d\u4ee4\u67e5\u770b\u3002</p> <p></p> <p></p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5982\u679c\u662f left join \u5206\u533a\u88c1\u526a\u6761\u4ef6\u4e00\u822c\u653e\u5230 where \u91cc\u4e3b\u8868\u751f\u6548\uff0c\u653e\u5230 on \u91cc\u4ece\u8868\u751f\u6548\u3002\u5982\u679c\u60f3\u540c\u65f6\u4e0a\u7ebf\u5217\u88c1\u526a\uff0c\u90a3\u4e48\u5c31\u628a\u4e3b\u8868\u7684\u5206\u533a\u88c1\u526a\u653e\u5230 where \u5b50\u53e5\u91cc\uff0c\u628a\u4ece\u8868\u7684\u5206\u533a\u88c1\u526a\u653e\u5230 on \u91cc\u3002\u540c\u7406 right join \u53cd\u8fc7\u6765\u5373\u53ef\u3002</li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_9","title":"\u8c13\u8bcd\u4e0b\u63a8","text":"<p>Predicate\uff08\u8c13\u8bcd\uff09\u5373\u6761\u4ef6\u8868\u8fbe\u5f0f\uff0cSQL \u4e2d\u7684\u8c13\u8bcd\u4e3b\u8981\u6709 LIKE\u3001BETWEEN\u3001IS NULL\u3001IS NOT NULL\u3001IN\u3001EXISTS \u5176\u7ed3\u679c\u4e3a\u5e03\u5c14\u503c\uff0c\u5373 true \u6216 false\u3002</p> <p>\u8c13\u8bcd\u4e0b\u63a8\u5bf9 SQL \u4ee3\u7801\u7f16\u5199\u7684\u53c2\u8003\u4f9d\u636e\uff1awiki</p> <ol> <li>\u5bf9\u4e8e Inner Join\u3001Full Join\uff0c\u6761\u4ef6\u5199\u5728 on \u540e\u9762\uff0c\u8fd8\u662f where \u540e\u9762\uff0c\u6027\u80fd\u4e0a\u9762\u6ca1\u6709\u533a\u522b\uff1b</li> <li>\u5bf9\u4e8e Left Join \uff0c\u53f3\u4fa7\u7684\u8868\u5199\u5728 on \u540e\u9762\u3001\u5de6\u4fa7\u7684\u8868\u5199\u5728 where \u540e\u9762\uff0c\u6027\u80fd\u4e0a\u6709\u63d0\u9ad8\uff1b</li> <li>\u5bf9\u4e8e Right Join\uff0c\u5de6\u4fa7\u7684\u8868\u5199\u5728 on \u540e\u9762\u3001\u53f3\u4fa7\u7684\u8868\u5199\u5728 where \u540e\u9762\uff0c\u6027\u80fd\u4e0a\u6709\u63d0\u9ad8\uff1b</li> </ol>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#order-by","title":"Order By \u4f18\u5316","text":"<p>Order by \u7531\u4e8e\u5168\u5c40\u6392\u5e8f\uff0c\u6570\u636e\u5168\u90e8\u53d1\u5f80\u4e00\u4e2a Reducer\uff0c\u901a\u5e38\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 distribute by + sort by \u7684\u65b9\u5f0f\u6765\u4f18\u5316\u3002</p> <pre><code>SELECT *\nFROM (\n  SELECT *\n  FROM your_table\n  DISTRIBUTE BY column_name\n  SORT BY column_name ASC\n) subquery\nORDER BY column_name ASC\nLIMIT 100;\n</code></pre>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_10","title":"\u6570\u636e\u503e\u659c\u95ee\u9898","text":"<p>\u6570\u636e\u503e\u659c\u95ee\u9898\uff0c\u901a\u5e38\u662f\u6307\u53c2\u4e0e\u8ba1\u7b97\u7684\u6570\u636e\u5206\u5e03\u4e0d\u5747\uff0c\u5373\u67d0\u4e2a key \u6216\u8005\u67d0\u4e9b key \u7684\u6570\u636e\u91cf\u8fdc\u8d85\u5176\u4ed6 key\uff0c\u5bfc\u81f4\u5728 shuffle \u9636\u6bb5\uff0c\u5927\u91cf\u76f8\u540c key \u7684\u6570\u636e\u88ab\u53d1\u5f80\u540c\u4e00\u4e2a Reducer\uff0c\u8fdb\u800c\u5bfc\u81f4\u8be5 Reducer \u6240\u9700\u7684\u65f6\u95f4\u8fdc\u8d85\u5176\u4ed6 Reducer\uff0c\u6210\u4e3a\u6574\u4e2a\u4efb\u52a1\u7684\u74f6\u9888\u3002</p> <p>Hive \u4e2d\u7684\u6570\u636e\u503e\u659c\u5e38\u51fa\u73b0\u5728\u5206\u7ec4\u805a\u5408\u548c Join \u64cd\u4f5c\u7684\u573a\u666f\u4e2d\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#group-by_2","title":"Group By \u4ea7\u751f\u6570\u636e\u503e\u659c","text":"<p>\u4f7f\u7528 Hive \u5bf9\u6570\u636e\u505a\u5206\u7ec4\u805a\u5408\u7684\u65f6\u5019\u67d0\u79cd\u7c7b\u578b\u7684\u6570\u636e\u91cf\u7279\u522b\u591a\uff0c\u800c\u5176\u4ed6\u7c7b\u578b\u6570\u636e\u7684\u6570\u636e\u91cf\u7279\u522b\u5c11\u3002</p> <p>Hive \u4e2d\u672a\u7ecf\u4f18\u5316\u7684\u5206\u7ec4\u805a\u5408\uff0c\u662f\u901a\u8fc7\u4e00\u4e2a MapReduce Job \u5b9e\u73b0\u7684\u3002Map \u7aef\u8d1f\u8d23\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u6309\u7167\u5206\u7ec4\u5b57\u6bb5\u5206\u533a\uff0c\u901a\u8fc7 Shuffle\uff0c\u5c06\u6570\u636e\u53d1\u5f80 Reduce \u7aef\uff0c\u5404\u7ec4\u6570\u636e\u5728 Reduce \u7aef\u5b8c\u6210\u6700\u7ec8\u7684\u805a\u5408\u8fd0\u7b97\u3002</p> <p>\u5982\u679c group by \u5206\u7ec4\u5b57\u6bb5\u7684\u503c\u5206\u5e03\u4e0d\u5747\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u5927\u91cf\u76f8\u540c\u7684 key \u8fdb\u5165\u540c\u4e00 Reducer\uff0c \u4ece\u800c\u5bfc\u81f4\u6570\u636e\u503e\u659c\u95ee\u9898\u3002</p> <p>\u7531\u5206\u7ec4\u805a\u5408\u5bfc\u81f4\u7684\u6570\u636e\u503e\u659c\u95ee\u9898\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u89e3\u51b3\u601d\u8def:</p> <ul> <li>Map-Side \u805a\u5408</li> </ul> <p>\u5f00\u542f Map-Side \u805a\u5408\u540e\uff0c\u6570\u636e\u4f1a\u73b0\u5728 Map \u7aef\u5b8c\u6210\u90e8\u5206\u805a\u5408\u5de5\u4f5c\u3002\u8fd9\u6837\u7ecf\u8fc7 Map \u7aef\u7684\u521d\u6b65\u805a\u5408\u540e\uff0c\u53ef\u4ee5\u7f13\u89e3\u53d1\u5f80 Reducer \u7684\u6570\u636e\u7684\u503e\u659c\u7a0b\u5ea6\u3002\u6700\u4f73\u72b6\u6001\u4e0b\uff0cMap \u7aef\u805a\u5408\u80fd\u5b8c\u5168\u5c4f\u853d\u6570\u636e\u503e\u659c\u95ee\u9898\u3002</p> <ul> <li>Skew-GroupBy \u4f18\u5316</li> </ul> <p>Skew-GroupBy \u7684\u539f\u7406\u662f\u542f\u52a8\u4e24\u4e2a MR \u4efb\u52a1\uff0c\u7b2c\u4e00\u4e2a MR \u6309\u7167\u968f\u673a\u6570\u5206\u533a\uff0c\u5c06\u6570\u636e\u5206\u6563\u53d1\u9001\u5230 Reducer\uff0c\u5b8c\u6210\u90e8\u5206\u805a\u5408\uff0c\u7b2c\u4e8c\u4e2a MR \u6309\u7167\u5206\u7ec4\u5b57\u6bb5\u5206\u533a\uff0c\u5b8c\u6210\u6700\u7ec8\u805a\u5408\u3002</p> <pre><code>--\u542f\u7528\u5206\u7ec4\u805a\u5408\u6570\u636e\u503e\u659c\u4f18\u5316\nset hive.groupby.skewindata=true;\n</code></pre> <ul> <li>\u6839\u636e\u4e1a\u52a1\uff0c\u5408\u7406\u8c03\u6574\u5206\u7ec4\u7ef4\u5ea6</li> </ul> <p>\u53ef\u4ee5\u5355\u72ec\u5c06\u503e\u659c\u7a0b\u5ea6\u5927\u7684\u5b57\u6bb5\u5355\u62ce\u51fa\u6765\u8ba1\u7b97\uff0c\u518d union \u7ed3\u679c\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#countdistinct_1","title":"count(distinct) \u4ea7\u751f\u6570\u636e\u503e\u659c","text":"<p>\u5982\u679c\u6570\u636e\u91cf\u975e\u5e38\u5927\uff0c\u6267\u884c\u5982 <code>select a, count(distinct b) from t group by a;</code> \u7c7b\u578b\u7684 SQL \u65f6\uff0c\u4f1a\u51fa\u73b0\u6570\u636e\u503e\u659c\u7684\u95ee\u9898\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <ul> <li>\u4f7f\u7528 group by \u4ee3\u66ff\u3002</li> </ul> <pre><code>select a, count(1)\nfrom (select a, b from t group by a, b)\ngroup by a;\n</code></pre> <p>\u8be6\u89c1\u4e0a\u6587 count(distinct) \u4f18\u5316</p> <ul> <li>\u5728\u4e1a\u52a1\u903b\u8f91\u4f18\u5316\u6548\u679c\u7684\u4e0d\u5927\u60c5\u51b5\u4e0b\uff0c\u6709\u4e9b\u65f6\u5019\u662f\u53ef\u4ee5\u5c06\u503e\u659c\u7684\u6570\u636e\u5355\u72ec\u62ff\u51fa\u6765\u5904\u7406\uff0c\u6700\u540e union \u56de\u53bb\u3002</li> </ul>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#join_1","title":"Join \u4ea7\u751f\u6570\u636e\u503e\u659c","text":"<p>\u672a\u7ecf\u4f18\u5316\u7684 Join \u64cd\u4f5c\uff0c\u9ed8\u8ba4\u662f\u4f7f\u7528 common join \u7b97\u6cd5\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u4e00\u4e2a MapReduce Job \u5b8c\u6210\u8ba1\u7b97\u3002Map \u7aef\u8d1f\u8d23\u8bfb\u53d6 join \u64cd\u4f5c\u6240\u9700\u8868\u7684\u6570\u636e\uff0c\u5e76\u6309\u7167\u5173\u8054\u5b57\u6bb5\u8fdb\u884c\u5206\u533a\uff0c\u901a\u8fc7 Shuffle\uff0c\u5c06\u5176\u53d1\u9001\u5230 Reduce \u7aef\uff0c\u76f8\u540c key \u7684\u6570\u636e\u5728 Reduce \u7aef\u5b8c\u6210\u6700\u7ec8\u7684 Join \u64cd\u4f5c\u3002</p> <p>\u5982\u679c\u5173\u8054\u5b57\u6bb5\u7684\u503c\u5206\u5e03\u4e0d\u5747\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u5927\u91cf\u76f8\u540c\u7684 key \u8fdb\u5165\u540c\u4e00 Reduce\uff0c\u4ece\u800c\u5bfc\u81f4\u6570\u636e\u503e\u659c\u95ee\u9898\u3002</p> <p>\u7531 Join \u5bfc\u81f4\u7684\u6570\u636e\u503e\u659c\u95ee\u9898\uff0c\u6709\u5982\u4e0b\u4e09\u79cd\u89e3\u51b3\u65b9\u6848\uff1a</p> <ul> <li>Map Join</li> </ul> <p>\u4f7f\u7528 map join \u7b97\u6cd5\uff0cjoin \u64cd\u4f5c\u4ec5\u5728 map \u7aef\u5c31\u80fd\u5b8c\u6210\uff0c\u6ca1\u6709 shuffle \u64cd\u4f5c\uff0c\u6ca1\u6709 reduce \u9636\u6bb5\uff0c\u81ea\u7136\u4e0d\u4f1a\u4ea7\u751f reduce \u7aef\u7684\u6570\u636e\u503e\u659c\u3002\u8be5\u65b9\u6848\u9002\u7528\u4e8e\u5927\u8868 join \u5c0f\u8868\u65f6\u53d1\u751f\u6570\u636e\u503e\u659c\u7684\u573a\u666f\u3002</p> <ul> <li>Skew Join</li> </ul> <p>Skew Join \u7684\u539f\u7406\u662f\uff0c\u4e3a\u503e\u659c\u7684\u5927 key \u5355\u72ec\u542f\u52a8\u4e00\u4e2a map join \u4efb\u52a1\u8fdb\u884c\u8ba1\u7b97\uff0c\u5176\u4f59 key \u8fdb\u884c\u6b63\u5e38\u7684 common join\u3002\u539f\u7406\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u6ce8\u610f\uff1a\u5728\u6570\u636e\u503e\u659c\u65f6\uff0c\u5982\u679c\u662f\u5927\u8868 Join \u5927\u8868\uff0c\u90a3\u4e48\u4e5f\u65e0\u6cd5\u4f7f\u7528 Bucket Map Join\uff0c\u56e0\u4e3a\u5206\u6876\uff08\u8fc7\u7a0b\u4e3a MR\uff09\u4e5f\u662f\u503e\u659c\u7684\u3002\u6b64\u65f6\u9700\u8981\u4f7f\u7528 Skew Join\u3002</p> <pre><code>--\u542f\u7528 skew join \u4f18\u5316\nset hive.optimize.skewjoin=true;\n--\u89e6\u53d1 skew join \u7684\u9608\u503c\uff0c\u82e5\u67d0\u4e2a key \u7684\u884c\u6570\u8d85\u8fc7\u8be5\u53c2\u6570\u503c\uff0c\u5219\u89e6\u53d1\nset hive.skewjoin.key=100000;\n</code></pre> <p>\u8fd9\u79cd\u65b9\u6848\u5bf9\u53c2\u4e0e join \u7684\u6e90\u8868\u5927\u5c0f\u6ca1\u6709\u8981\u6c42\uff0c\u4f46\u662f\u5bf9\u4e24\u8868\u4e2d\u503e\u659c\u7684 key \u7684\u6570\u636e\u91cf\u6709\u8981\u6c42\uff0c \u8981\u6c42\u4e00\u5f20\u8868\u4e2d\u7684\u503e\u659c key \u7684\u6570\u636e\u91cf\u6bd4\u8f83\u5c0f (\u65b9\u4fbf\u8d70 map join)\u3002</p> <ul> <li>\u8c03\u6574 SQL \u8bed\u53e5</li> </ul> <p>\u82e5\u53c2\u4e0e join \u7684\u4e24\u8868\u5747\u4e3a\u5927\u8868\uff0c\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u6570\u636e\u662f\u503e\u659c\u7684\uff0c\u6b64\u65f6\u4e5f\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5bf9 SQL \u8bed\u53e5\u8fdb\u884c\u76f8\u5e94\u7684\u8c03\u6574\u3002</p> <p>\u5047\u8bbe\u539f\u59cb SQL \u8bed\u53e5\u5982\u4e0b\uff1aA\uff0cB \u4e24\u8868\u5747\u4e3a\u5927\u8868\uff0c\u4e14\u5176\u4e2d\u4e00\u5f20\u8868\u7684\u6570\u636e\u662f\u503e\u659c\u7684\u3002</p> <pre><code>select *\nfrom A join B\non A.id=B.id;\n</code></pre> <p></p> <p>\u56fe\u4e2d 1001 \u4e3a\u503e\u659c\u7684\u5927 key\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u88ab\u53d1\u5f80\u4e86\u540c\u4e00\u4e2a Reduce \u8fdb\u884c\u5904\u7406\u3002</p> <p>\u8c03\u6574 SQL \u8bed\u53e5\u5982\u4e0b\uff1a</p> <pre><code>select\n    *\nfrom(\n    select --\u6253\u6563\u64cd\u4f5c\n        concat(id,'_',cast(rand()*2 as int)) id, value\n    from A\n)ta join(\n    select --\u6269\u5bb9\u64cd\u4f5c\n        concat(id,'_',0) id, value\n    from B\n    union all\n    select\n        concat(id,'_',1) id, value\n    from B\n)tb\non ta.id=tb.id;\n</code></pre> <p>\u8c03\u6574\u4e4b\u540e\u7684 SQL \u8bed\u53e5\u6267\u884c\u8ba1\u5212\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#_11","title":"\u7a7a\u503c\u4ea7\u751f\u6570\u636e\u503e\u659c","text":"<p>\u5982\u679c\u8868\u4e2d\u6709\u5927\u91cf\u7684 null \u503c\uff0c\u6240\u6709\u7684 null \u503c\u90fd\u4f1a\u88ab\u5206\u914d\u5230\u540c\u4e00\u4e2a reducer \u4e0a\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u6570\u636e\u503e\u659c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6570\u636e\u88ab\u5206\u53d1\u5230\u540c\u4e00\u4e2a reducer \u7684\u539f\u56e0\u5e76\u4e0d\u662f\u80fd\u4e0d\u80fd join \u4e0a\uff0c\u800c\u662f Shuffle \u9636\u6bb5\u7684 hash \u64cd\u4f5c\uff0c\u53ea\u8981 hash \u7ed3\u679c\u76f8\u540c\uff0c\u5c31\u4f1a\u88ab\u5206\u53d1\u5230\u540c\u4e00\u4e2a reducer \u4e0a\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <ul> <li>\u5355\u72ec\u628a\u7a7a\u503c\u62ce\u51fa\u6765\u518d union</li> </ul> <pre><code>select a.*\nfrom log a\njoin users b\non a.user_id is not null and a.user_id = b.user_id\nunion all\nselect a.*\nfrom log a\nwhere a.user_id is null;\n</code></pre> <ul> <li>\u7ed9\u7a7a\u503c\u5206\u914d\u968f\u673a\u7684 key \u503c</li> </ul> <pre><code>select *\nfrom log a\nleft join users b\non coalesce(a.user_id, concat('hive', rand())) = b.user_id;\n</code></pre> <p>\u4e00\u822c\u5206\u914d\u968f\u673a key \u503c\u5f97\u65b9\u6cd5\u66f4\u597d\u4e00\u4e9b\u3002</p>"},{"location":"Hive/Hive%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/#hive-sql_3","title":"Hive SQL \u4f18\u5316\u601d\u8def\u603b\u7ed3","text":"<p>\u6838\u5fc3\u601d\u60f3\uff1a\u51cf\u5c11\u6570\u636e\u91cf\u3001\u51cf\u5c11 job \u6570\u3001\u907f\u514d\u6570\u636e\u503e\u659c\u3002</p> <ol> <li>\u5206\u533a\u88c1\u526a\uff1a\u5c3d\u91cf\u4f7f\u7528\u5206\u533a\u5b57\u6bb5\u8fdb\u884c\u8fc7\u6ee4\uff0c\u907f\u514d\u5168\u8868\u626b\u63cf</li> <li>\u5217\u88c1\u526a\uff1a\u4e0d\u4f1a\u51cf\u5c11\u8bfb\u53d6\u7684\u6570\u636e\u91cf\uff0c\u4f46\u662f\u80fd\u51cf\u5c11\u540e\u7eed\u5904\u7406\u7684\u6570\u636e\u91cf</li> <li>\u8c13\u8bcd\u4e0b\u63a8\uff0c\u63d0\u524d\u8fc7\u6ee4</li> <li>Join \u7684\u8868\u4e0d\u5b9c\u8fc7\u591a\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e2d\u95f4\u8868</li> <li>Join \u65f6\u5c06\u76f8\u540c\u8fde\u63a5\u6761\u4ef6\u7684\u653e\u5728\u4e00\u8d77\uff0c\u51cf\u5c11 job \u6570</li> <li>\u907f\u514d\u6570\u636e\u503e\u659c\uff1a\u5927 join key \u6253\u6563\u3001\u6dfb\u52a0\u968f\u673a\u6570\u3001\u4f7f\u7528 skew join \u7b49</li> <li>sort by + distribute by \u4ee3\u66ff order by</li> <li>group by \u4ee3\u66ff distinct</li> <li>\u907f\u514d\u4f7f\u7528\u7b1b\u5361\u5c14\u79ef</li> <li>\u4f7f\u7528 CTE \u5c06\u4e00\u4e9b\u516c\u5171\u5b50\u67e5\u8be2\u63d0\u53d6\u51fa\u6765\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97</li> </ol>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/","title":"SQL \u5237\u9898","text":""},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#_1","title":"\u672a\u5206\u7c7b","text":""},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql215","title":"SQL215 \u67e5\u627e\u5728\u804c\u5458\u5de5\u81ea\u5165\u804c\u4ee5\u6765\u7684\u85aa\u6c34\u6da8\u5e45\u60c5\u51b5","text":"<p>\u5148\u901a\u8fc7 CTE \u8fc7\u6ee4\u51fa\u5f53\u524d\u8fd8\u5728\u804c\u7684\u5458\u5de5\u4fe1\u606f\uff08<code>to_date = '9999-01-01'</code>\uff09\uff0c\u518d\u7528\u7a97\u53e3\u51fd\u6570 <code>first_value()</code> \u627e\u5230\u6bcf\u4e2a\u5458\u5de5\u5165\u804c\u65f6\u7684\u85aa\u6c34\uff0c\u4e8c\u8005\u7684\u5dee\u5c31\u662f\u7b54\u6848\u3002</p> <pre><code>with cte as (select *\n             from salaries s1\n             where exists (select 1\n                           from salaries s2\n                           where s2.emp_no = s1.emp_no\n                             and s2.to_date = '9999-01-01'))\nselect emp_no,\n       salary - prev_salary as growth\nfrom (select *,\n             first_value(salary) over (partition by emp_no order by to_date) as prev_salary\n      from cte) t\nwhere to_date = '9999-01-01'\norder by growth\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql254-salary-running_total","title":"SQL254 \u7edf\u8ba1 salary \u7684\u7d2f\u8ba1\u548c running_total","text":"<pre><code>select emp_no,\n       salary,\n       sum(salary) over (order by emp_no) as running_total\nfrom salaries\nwhere to_date = '9999-01-01'\n</code></pre> <pre><code>select emp_no,\n       salary,\n       sum(salary) over (order by emp_no rows between unbounded preceding and current row) as running_total\nfrom salaries\nwhere to_date = '9999-01-01'\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql261","title":"SQL261 \u725b\u5ba2\u6bcf\u4e2a\u4eba\u6700\u8fd1\u7684\u767b\u5f55\u65e5\u671f(\u4e8c)","text":"<pre><code>select u.name, c.name, t1.date\nfrom (select *,\n             row_number() over (partition by user_id order by date desc) as rn\n      from login) t1\ninner join user u\non u.id = t1.user_id\ninner join client c\non t1.client_id = c.id\nwhere t1.rn = 1\norder by u.name\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql262","title":"SQL262 \u725b\u5ba2\u6bcf\u4e2a\u4eba\u6700\u8fd1\u7684\u767b\u5f55\u65e5\u671f(\u4e09)","text":"<p>\u65b9\u6cd5\u4e00\uff1a</p> <pre><code>-- \u5728\u6240\u6709\u9996\u65e5\u767b\u5f55\u7684\u7528\u6237\u4e2d\uff0c\u8ba1\u7b97\u7b2c\u4e8c\u5929\u767b\u5f55\u7684\u7528\u6237\u7684\u6bd4\u4f8b\nselect round(sum(date = date_add(t.d, interval 1 day)) / sum(date = t.d), 3)\nfrom (select *,\n             min(date) over (partition by user_id) d\n      from login) t -- \u7b5b\u9009\u51fa\u6bcf\u4e2a\u7528\u6237\u7684\u9996\u65e5\u767b\u5f55\u65e5\u671f\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a</p> <pre><code>select round(count(l2.date) / count(*), 3) p\nfrom (select user_id, min(date) first_date\n      from login\n      group by user_id) l1\nleft join login l2 on l1.user_id = l2.user_id and l2.date = date_add(l1.first_date, interval 1 day)\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql263","title":"SQL263 \u725b\u5ba2\u6bcf\u4e2a\u4eba\u6700\u8fd1\u7684\u767b\u5f55\u65e5\u671f(\u56db)","text":"<pre><code>select date,\n       sum(rk = '1') as new\nfrom (select *,\n             row_number() over (partition by user_id order by date) as rk\n      from login) t\ngroup by date\norder by date\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql264","title":"SQL264 \u725b\u5ba2\u6bcf\u4e2a\u4eba\u6700\u8fd1\u7684\u767b\u5f55\u65e5\u671f(\u4e94)","text":"<p> \u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\u7684\u901a\u7528\u65b9\u6cd5\uff1a</p> <p>\u65b9\u6cd5\u4e00\uff1a\u7ea6\u675f\u6761\u4ef6\u653e\u5728 from left join \u4e2d</p> <pre><code>select date, ifnull(round(count() / count(), 3), 0)\nfrom \uff08select \u53bb\u91cd\u7684\u65e5\u671f\u8868\uff09\n    left join on \uff08select \u65b0\u7528\u6237\u7684\u9996\u6b21\u767b\u9646\u65e5\u671f\u8868 \uff09\n    left join on \uff08select \u65b0\u7528\u6237\u7684\u6b21\u65e5\u767b\u5f55\u65e5\u671f\u8868 \uff09\ngroup by date\norder by date\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u7ea6\u675f\u6761\u4ef6\u76f4\u63a5\u653e\u5728\u5206\u5b50\u5206\u6bcd\u4e2d</p> <pre><code>select date, ifnull(round(sum(CASE WHEN ...) / sum(CASE WHEN ...), 3), 0)\nfrom login\ngroup by date\norder by date\n</code></pre> <p>\u65b9\u6cd5\u4e00\uff1a</p> <pre><code>select t0.date,\n       ifnull(round(count(distinct t2.user_id) / count(t1.user_id), 3), 0) as p\nfrom (select date\n      from login\n      group by date) t0 -- step1: \u65e5\u671f\u53bb\u91cd\n         left join (select user_id, min(date) as first_login\n                    from login\n                    group by user_id) t1\n                   on t0.date = t1.first_login -- step2: \u6bcf\u4e2a\u7528\u6237\u7684\u9996\u6b21\u767b\u5f55\u65e5\u671f\n         left join login as t2\n                   on t1.user_id = t2.user_id and\n                      t2.date = date_add(t1.first_login, interval 1 day) -- step3: \u6bcf\u4e2a\u7528\u6237\u7684\u6b21\u65e5\u767b\u5f55\u65e5\u671f\ngroup by t0.date\norder by t0.date;\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a</p> <pre><code>-- \u5206\u5b50\uff1a\u5f53\u524d\u65e5\u671f\u4f5c\u4e3a\u524d\u4e00\u5929\u6709\u8be5\u7528\u6237\u7684\u767b\u5f55\u8bb0\u5f55\uff0c\u5e76\u4e14\u524d\u4e00\u5929\u662f\u7b2c\u4e00\u6b21\u767b\u5f55\u3002\n-- \u5206\u6bcd\uff1a\u5f53\u524d\u65e5\u671f\u65b0\u7528\u6237\u7684\u7279\u5f81\u662f\uff1a\u5f53\u524d\u65e5\u671f=\u8be5\u7528\u6237\u6240\u6709\u767b\u5f55\u65e5\u671f\u7684\u6700\u5c0f\u503c\nselect date,\n       ifnull(round(sum(IF((user_id, date) in\n                           (select user_id, date_add(date, interval -1 day) from login) and\n                           (user_id, date) in (select user_id, min(date) from login group by user_id), 1, 0)) /\n                    sum(IF((user_id, date) in (select user_id, min(date) from login group by user_id), 1, 0)), 3),\n              0) as p\nfrom login\ngroup by date\norder by date;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql265","title":"SQL265 \u725b\u5ba2\u6bcf\u4e2a\u4eba\u6700\u8fd1\u7684\u767b\u5f55\u65e5\u671f(\u516d)","text":"<pre><code>select name as u_n,\n       date,\n       sum(number) over (partition by user_id order by date) as ps_num\nfrom (select u.name, l.user_id, l.date, p.number\n      from login l\n               inner join passing_number p\n                          on l.user_id = p.user_id and l.date = p.date\n               inner join user u\n                          on l.user_id = u.id) t\norder by date, name;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#_2","title":"\u56fd\u5e86\u671f\u95f4\u6bcf\u7c7b\u89c6\u9891\u70b9\u8d5e\u91cf\u548c\u8f6c\u53d1\u91cf","text":"<p> \u6ed1\u52a8\u7a97\u53e3</p> <p>MySQL:</p> <pre><code>select *\nfrom (select t1.tag,\n             t1.dt,\n             sum(t1.if_like_sum) over (partition by t1.tag order by t1.dt rows 6 preceding)    as sum_like_cnt_7d,\n             max(t1.if_retweet_sum) over (partition by t1.tag order by t1.dt rows 6 preceding) as max_retweet_cnt_7d\n      from (select tag,\n                   date(start_time) as dt,\n                   sum(if_like)     as if_like_sum,\n                   sum(if_retweet)  as if_retweet_sum\n            from tb_user_video_log l\n                     inner join tb_video_info v on l.video_id = v.video_id\n            group by tag, dt) t1) t2\nwhere t2.dt between '2021-10-01' and '2021-10-03'\norder by t2.tag desc, t2.dt asc;\n</code></pre> <p>HQL:</p> <pre><code>select *\nfrom (select t1.tag,\n             t1.dt,\n             sum(t1.if_like_sum) over (partition by t1.tag order by t1.dt rows 6 preceding)    as sum_like_cnt_7d,\n             max(t1.if_retweet_sum) over (partition by t1.tag order by t1.dt rows 6 preceding) as max_retweet_cnt_7d\n      from (select tag,\n                   to_date(start_time) as dt,\n                   sum(if_like)        as if_like_sum,\n                   sum(if_retweet)     as if_retweet_sum\n            from tb_user_video_log l\n                     inner join tb_video_info v on l.video_id = v.video_id\n            group by tag, to_date(start_time)) t1) t2\nwhere t2.dt between '2021-10-01' and '2021-10-03'\norder by t2.tag desc, t2.dt asc;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#top3","title":"\u8fd1\u4e00\u4e2a\u6708\u53d1\u5e03\u7684\u89c6\u9891\u4e2d\u70ed\u5ea6\u6700\u9ad8\u7684 top3 \u89c6\u9891","text":"<p>MySQL:</p> <pre><code>SELECT video_id,\n       ROUND((100 * comp_play_rate + 5 * like_cnt + 3 * comment_cnt + 2 * retweet_cnt)\n                 / (TIMESTAMPDIFF(DAY, recently_end_date, cur_date) + 1), 0) as hot_index\nFROM (SELECT video_id,\n             AVG(IF(TIMESTAMPDIFF(SECOND, start_time, end_time)\n                        &gt;= duration, 1, 0)) as comp_play_rate,\n             SUM(if_like)                   as like_cnt,\n             COUNT(comment_id)              as comment_cnt,\n             SUM(if_retweet)                as retweet_cnt,\n             MAX(DATE(end_time))            as recently_end_date, -- \u6700\u8fd1\u88ab\u64ad\u653e\u65e5\u671f\n             MAX(DATE(release_time))        as release_date,      -- \u53d1\u5e03\u65e5\u671f\n             MAX(cur_date)                  as cur_date           -- \u975e\u5206\u7ec4\u5217\uff0c\u52a0MAX\u907f\u514d\u8bed\u6cd5\u9519\u8bef\n      FROM tb_user_video_log\n               JOIN tb_video_info USING (video_id)\n               LEFT JOIN (SELECT MAX(DATE(end_time)) as cur_date\n                          FROM tb_user_video_log) as t_max_date ON 1\n      GROUP BY video_id\n      HAVING TIMESTAMPDIFF(DAY, release_date, cur_date) &lt; 30) as t_video_info\nORDER BY hot_index DESC\nLIMIT 3;\n</code></pre> <p>HQL:</p> <pre><code>with cte as (select *\n             from (select l.*,\n                          v.duration,\n                          v.release_time,\n                          tmp.cur\n                   from tb_video_info v\n                            inner join tb_user_video_log l on v.video_id = l.video_id\n                            left join (select max(to_date(l.end_time)) as cur from tb_user_video_log l) tmp on 1 = 1) t\n             where to_date(release_time) between date_sub(cur, 29) and cur)\nselect video_id,\n       round((100 * finished_rate + 5 * like_cnt + 3 * comment_cnt + 2 * retweet_cnt)\n                 / recent_interval, 0) as hot_index\nfrom (select video_id,\n             sum(if(unix_timestamp(end_time) -\n                    unix_timestamp(start_time) &gt;= duration, 1, 0)) / count(1) as finished_rate,\n             sum(if_like)                                                     as like_cnt,\n             count(comment_id)                                                as comment_cnt,\n             sum(if_retweet)                                                  as retweet_cnt,\n             datediff(max(cur), max(to_date(end_time))) + 1                   as recent_interval\n      from cte\n      group by video_id) t\norder by hot_index desc\nlimit 3;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#_3","title":"\u7edf\u8ba1\u6d3b\u8dc3\u95f4\u9694\u5bf9\u7528\u6237\u5206\u7ea7\u7ed3\u679c","text":"<p>MySQL:</p> <pre><code>with cte as (select uid,\n                    date(in_time)              as in_date,\n                    date(out_time)             as out_date,\n                    max(date(in_time)) over () as today\n             from tb_user_log\n             order by uid, in_date, out_date)\nselect user_grade,\n       round(count(1) / max(tmp.total), 2) as ratio\nfrom (select *,\n             case\n                 when df_latest &gt;= 30 then \"\u6d41\u5931\u7528\u6237\"\n                 when df_latest &gt;= 7 then \"\u6c89\u7761\u7528\u6237\"\n                 when df_earliest &lt; 7 then \"\u65b0\u664b\u7528\u6237\"\n                 else \"\u5fe0\u5b9e\u7528\u6237\" end as user_grade\n      from (select uid,\n                   datediff(max(today), min(in_date)) + 1 as df_earliest,\n                   datediff(max(today), max(in_date)) + 1 as df_latest\n            from cte\n            group by uid) t1) t2\n         left join (select count(distinct uid) as total from tb_user_log) tmp on 1 = 1\ngroup by user_grade\norder by ratio desc, user_grade asc;\n</code></pre> <p>HQL:</p> <pre><code>with cte as (select uid,\n                    to_date(in_time)              as in_date,\n                    to_date(out_time)             as out_date,\n                    max(to_date(in_time)) over () as today\n             from tb_user_log\n             order by uid, in_date, out_date)\nselect user_grade,\n       round(count(1) / max(tmp.total), 2) as ratio\nfrom (select *,\n             case\n                 when df_latest &gt;= 30 then \"\u6d41\u5931\u7528\u6237\"\n                 when df_latest &gt;= 7 then \"\u6c89\u7761\u7528\u6237\"\n                 when df_earliest &lt; 7 then \"\u65b0\u664b\u7528\u6237\"\n                 else \"\u5fe0\u5b9e\u7528\u6237\" end as user_grade\n      from (select uid,\n                   datediff(max(today), min(in_date)) + 1 as df_earliest,\n                   datediff(max(today), max(in_date)) + 1 as df_latest\n            from cte\n            group by uid) t1) t2\n         left join (select count(distinct uid) as total from tb_user_log) tmp on 1 = 1\ngroup by user_grade\norder by ratio desc, user_grade asc;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql218-manager","title":"SQL218 \u83b7\u53d6\u6240\u6709\u975e manager \u5458\u5de5\u5f53\u524d\u7684\u85aa\u6c34\u60c5\u51b5","text":"<pre><code>select de.dept_no, e.emp_no, s.salary\nfrom employees e\ninner join dept_emp de\nusing (emp_no)\ninner join salaries s\nusing (emp_no)\nwhere not exists (\n    select 1\n    from dept_manager dm\n    where e.emp_no = dm.emp_no\n)\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql219-manager","title":"SQL219 \u83b7\u53d6\u5458\u5de5\u5176\u5f53\u524d\u7684\u85aa\u6c34\u6bd4\u5176 manager \u5f53\u524d\u85aa\u6c34\u8fd8\u9ad8\u7684\u76f8\u5173\u4fe1\u606f","text":"<pre><code>select emp_no, manager_no, emp_salary, manager_salary\nfrom (\n    select s.emp_no, dept_no, salary as emp_salary\n    from dept_emp de\n    inner join salaries s\n    using (emp_no)\n) t1\n\ninner join (\n    select dm.emp_no as manager_no, dept_no, salary as manager_salary\n    from dept_manager dm\n    inner join salaries\n    using (emp_no)\n) t2\n\non t1.dept_no = t2.dept_no and\nt1.emp_salary &gt; t2.manager_salary\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql247-dept_no","title":"SQL247 \u6309\u7167 dept_no \u8fdb\u884c\u6c47\u603b","text":"<pre><code>select dept_no,\n       group_concat(emp_no)\nfrom dept_emp\ngroup by dept_no\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql253","title":"SQL253 \u83b7\u53d6\u6709\u5956\u91d1\u7684\u5458\u5de5\u76f8\u5173\u4fe1\u606f","text":"<pre><code>select e.emp_no,\n       e.first_name,\n       e.last_name,\n       b.btype,\n       s.salary,\n       case\n           when b.btype = 1 then s.salary * 0.1\n           when b.btype = 2 then s.salary * 0.2\n           else s.salary * 0.3\n           end as bonus\nfrom employees e\n         join salaries s on e.emp_no = s.emp_no\n         join emp_bonus b on e.emp_no = b.emp_no\nwhere s.to_date = '9999-01-01';\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql259","title":"SQL259 \u5f02\u5e38\u7684\u90ae\u4ef6\u6982\u7387","text":"<pre><code>select date,\n       round(sum(type = 'no_completed') / count(*), 3) as p\nfrom email e\n         inner join user u1 on e.send_id = u1.id and u1.is_blacklist = 0\n         inner join user u2 on e.receive_id = u2.id and u2.is_blacklist = 0\ngroup by date\norder by date;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#_4","title":"\u9a8c\u8bc1\u5237\u9898\u6548\u679c\uff0c\u8f93\u51fa\u9898\u76ee\u771f\u5b9e\u901a\u8fc7\u7387","text":"<p>MySQL:</p> <pre><code>select user_id,\n       count(distinct if(result_info = 1, question_id, null)) / count(distinct question_id) as question_pass_rate,\n       sum(result_info) / count(result_info) as pass_rate,\n       count(result_info) / count(distinct question_id) as question_per_cnt\nfrom done_questions_record\ngroup by user_id\nhaving question_pass_rate &gt; 0.6\norder by user_id;\n</code></pre> <p>HQL:</p> <pre><code>select user_id,\n       count(distinct if(result_info = 1, question_id, null)) / count(distinct question_id) as question_pass_rate,\n       sum(result_info) / count(result_info) as pass_rate,\n       count(result_info) / count(distinct question_id) as question_per_cnt\nfrom done_questions_record\ngroup by user_id\nhaving count(distinct if(result_info = 1, question_id, null)) / count(distinct question_id) &gt; 0.6\norder by user_id\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#1","title":"\u672a\u5b8c\u6210\u8bd5\u5377\u6570\u5927\u4e8e 1 \u7684\u6709\u6548\u7528\u6237","text":"<p>HQL:</p> <pre><code>select uid,\n       sum(if(submit_time is null, 1, 0))                            as incomplete_cnt,\n       sum(if(submit_time is not null, 1, 0))                        as complete_cnt,\n       collect_set(concat_ws(':', string(to_date(start_time)), tag)) as detail\nfrom exam_record er\n         inner join examination_info ei\n                    on er.exam_id = ei.exam_id\nwhere year(start_time) = 2021\ngroup by uid\nhaving complete_cnt &gt; 1\n   and incomplete_cnt &gt; 1\n   and incomplete_cnt &lt; 5\norder by incomplete_cnt desc;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#_5","title":"\u8fde\u7eed\u4e24\u6b21\u4f5c\u7b54\u8bd5\u5377\u7684\u6700\u5927\u65f6\u95f4\u7a97","text":"<p>MySQL:</p> <pre><code>with t1 as (select *,\n                   datediff(date(start_time), lag(start_time) over (partition by uid order by start_time)) +\n                   1 as diff\n            from exam_record\n            where year(start_time) = '2021')\nselect uid,\n       days_window,\n       round(avg_cnt * days_window, 2) as avg_exam_cnt\nfrom (select uid,\n             max(diff)                                                            as days_window,\n             count(start_time) / (datediff(max(start_time), min(start_time)) + 1) as avg_cnt\n      from t1\n      group by uid\n      having count(distinct date(start_time)) &gt;= 2) t\norder by days_window desc, avg_exam_cnt desc\n</code></pre> <p>HQL:</p> <p>Hive \u4e0d\u652f\u6301 <code>having count(distinct date(start_time)) &gt;= 2</code></p> <pre><code>with cte as (select *,\n                    datediff(to_date(start_time), lag(start_time) over (partition by uid order by start_time)) +\n                    1 as diff\n             from exam_record\n             where year(start_time) = '2021')\nselect uid,\n       days_window,\n       round(avg_cnt * days_window, 2) as avg_exam_cnt\nfrom (select *\n      from (select uid,\n                   max(diff)                                                            as days_window,\n                   count(start_time) / (datediff(max(start_time), min(start_time)) + 1) as avg_cnt,\n                   count(distinct to_date(start_time))                                  as cnt\n            from cte\n            group by uid) t1) t2\nwhere cnt &gt;= 2\norder by days_window desc, avg_exam_cnt desc\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#50","title":"\u672a\u5b8c\u6210\u7387\u8f83\u9ad8\u7684 50%\u7528\u6237\u8fd1\u4e09\u4e2a\u6708\u7b54\u5377\u60c5\u51b5","text":"<p>MySQL:</p> <pre><code># \u7edf\u8ba1SQL\u8bd5\u5377\u4e0a\u7528\u6237\u672a\u5b8c\u6210\u7387\u53ca\u767e\u5206\u6bd4\u6392\u4f4d:\nwith t1 as (select *,\n                   percent_rank() over (order by incomplete_rate desc) as prk\n            from (select uid,\n                         sum(if(submit_time is null, 1, 0)) / count(start_time) as incomplete_rate\n                  from exam_record er\n                           inner join examination_info ei on er.exam_id = ei.exam_id\n                  where tag = 'SQL'\n                  group by uid) tmp),\n# \u6709\u8bd5\u5377\u4f5c\u7b54\u8bb0\u5f55\u7684\u8fd1\u4e09\u4e2a\u6708\n     t2 as (select er.uid,\n                   date_format(start_time, '%Y%m')                                   as start_month,\n                   dense_rank() over (order by date_format(start_time, '%Y%m') desc) as drk,\n                   submit_time\n            from exam_record er)\nselect uid,\n       start_month,\n       count(start_month) as total_cnt,\n       count(submit_time) as complete_cnt\nfrom t2\nwhere uid in (select uid from t1 where prk &lt;= 0.5)\n  and uid in (select uid from user_info where level = 6 or level = 7)\n  and drk &lt;= 3\ngroup by uid, start_month\norder by uid, start_month;\n</code></pre> <p>Spark SQL:</p> <pre><code>with t1 as (select *,\n                   percent_rank() over (order by incomplete_rate desc) as prk\n            from (select uid,\n                         sum(if(submit_time is null, 1, 0)) / count(start_time) as incomplete_rate\n                  from exam_record er\n                           inner join examination_info ei on er.exam_id = ei.exam_id\n                  where tag = 'SQL'\n                  group by uid) tmp),\n     t2 as (select er.uid,\n                   date_format(start_time, 'yyyy-MM')                                   as start_month,\n                   dense_rank() over (order by date_format(start_time, 'yyyy-MM') desc) as drk,\n                   submit_time\n            from exam_record er)\nselect uid,\n       start_month,\n       count(start_month) as total_cnt,\n       count(submit_time) as complete_cnt\nfrom t2\nwhere uid in (select uid from t1 where prk &lt;= 0.5)\n  and uid in (select uid from user_info where level = 6 or level = 7)\n  and drk &lt;= 3\ngroup by uid, start_month\norder by uid, start_month;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#_6","title":"\u6bcf\u6708\u53ca\u622a\u6b62\u5f53\u6708\u7684\u7b54\u9898\u60c5\u51b5","text":"<p>MySQL:</p> <pre><code>with cte as (select uid,\n                    start_month,\n                    sum(if(rn = 1, 1, 0)) as is_first\n             from (select uid,\n                          date_format(start_time, '%Y%m')                          as start_month,\n                          row_number() over (partition by uid order by start_time) as rn\n                   from exam_record) t\n             group by start_month, uid)\nselect *,\n       max(month_add_uv) over (order by start_month) as max_month_add_uv,\n       sum(month_add_uv) over (order by start_month) as sum_month_add_uv\nfrom (select start_month,\n             count(distinct uid) as mau,\n             sum(is_first)       as month_add_uv\n      from cte\n      group by start_month) t1\norder by start_month;\n</code></pre> <p>HQL:</p> <pre><code>with cte as (select uid,\n                    start_month,\n                    sum(if(rn = 1, 1, 0)) as is_first\n             from (select uid,\n                          date_format(start_time, 'yyyyMM')                        as start_month,\n                          row_number() over (partition by uid order by start_time) as rn\n                   from exam_record) t\n             group by start_month, uid)\nselect *,\n       max(month_add_uv) over (order by start_month) as max_month_add_uv,\n       sum(month_add_uv) over (order by start_month) as sum_month_add_uv\nfrom (select start_month,\n             count(distinct uid) as mau,\n             sum(is_first)       as month_add_uv\n      from cte\n      group by start_month) t1\norder by start_month;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#_7","title":"\u6839\u636e\u6307\u5b9a\u8bb0\u5f55\u662f\u5426\u5b58\u5728\u8f93\u51fa\u4e0d\u540c\u60c5\u51b5","text":"<p>\u4f7f\u7528 EXISTS \u548c NOT EXISTS \u6765\u5b9e\u73b0\u4e92\u65a5\u6761\u4ef6\u3002</p> <p>MySQL:</p> <pre><code>with cte as (select ui.uid,\n                    level,\n                    count(start_time)                                                                 as total_cnt,\n                    count(start_time) - count(submit_time)                                            as incomplete_cnt,\n                    round(ifnull((count(start_time) - count(submit_time)) / count(start_time), 0), 3) as incomplete_rate\n             from user_info ui\n                      left join exam_record er on er.uid = ui.uid\n             group by ui.uid)\nselect uid,\n       incomplete_cnt,\n       incomplete_rate\nfrom cte\nwhere exists(select 1\n             from cte\n             where level = 0\n               and incomplete_cnt &gt; 2)\n  and level = 0\nunion all\nselect uid,\n       incomplete_cnt,\n       incomplete_rate\nfrom cte\nwhere not exists(select 1\n                 from cte\n                 where level = 0\n                   and incomplete_cnt &gt; 2)\n  and total_cnt &gt; 0\norder by incomplete_rate;\n</code></pre> <p>HQL:</p> <p>\u6ce8\u610f\uff1aHive \u4e2d\u7684\u4f7f\u7528 EXISTS \u5fc5\u987b\u6dfb\u52a0\u76f8\u5173\u6027\u6761\u4ef6\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002</p> <pre><code>with t1 as (select ui.uid,\n                   max(level)                                                                     as level,\n                   count(start_time)                                                              as total_cnt,\n                   count(start_time) - count(submit_time)                                         as incomplete_cnt,\n                   round(nvl((count(start_time) - count(submit_time)) / count(start_time), 0), 3) as incomplete_rate\n            from user_info ui\n                     left join exam_record er on er.uid = ui.uid\n            group by ui.uid),\n     t2 as (select *\n            from t1\n            where level = 0 and incomplete_cnt &gt; 2)\nselect uid,\n       incomplete_cnt,\n       incomplete_rate\nfrom t1\nwhere exists (select 1\n              from t2\n              where t2.uid = t1.uid) -- \u6dfb\u52a0\u76f8\u5173\u6027\u6761\u4ef6\n  and level = 0\nunion all\nselect uid,\n       incomplete_cnt,\n       incomplete_rate\nfrom t1\nwhere not exists (select 1\n                  from t2\n                  where t2.uid = t1.uid) -- \u6dfb\u52a0\u76f8\u5173\u6027\u6761\u4ef6\n  and total_cnt &gt; 0\norder by incomplete_rate;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#10","title":"10 \u6708\u7684\u65b0\u6237\u5ba2\u5355\u4ef7\u548c\u83b7\u5ba2\u6210\u672c","text":"SQLHQL <pre><code>with t1 as (select order_id,\n                  uid,\n                  date(event_time)                                         as order_date,\n                  row_number() over (partition by uid order by event_time) as rn,\n                  total_amount\n            from tb_order_overall),\nt2 as (select *\n            from t1\n            where rn = 1\n            and date_format(order_date, '%Y-%m') = '2021-10')\nselect round(avg(amount), 1) as avg_amount,\n      round(avg(cost), 1)   as avg_cost\nfrom (select avg(total_amount)                                                    as amount,\n            (sum(price * cnt) - max(total_amount)) / count(distinct t2.order_id) as cost\n      from t2\n            inner join tb_order_detail tod on t2.order_id = tod.order_id\n      group by t2.order_id) t;\n</code></pre> <pre><code>with t1 as (select order_id,\n                  uid,\n                  to_date(event_time)                                      as order_date,\n                  row_number() over (partition by uid order by event_time) as rn,\n                  total_amount\n            from tb_order_overall),\nt2 as (select *\n            from t1\n            where rn = 1\n            and date_format(order_date, 'yyyy-MM') = '2021-10')\nselect round(avg(amount), 1) as avg_amount,\n      round(avg(cost), 1)   as avg_cost\nfrom (select avg(total_amount)                                                    as amount,\n            (sum(price * cnt) - max(total_amount)) / count(distinct t2.order_id) as cost\n      from t2\n            inner join tb_order_detail tod on t2.order_id = tod.order_id\n      group by t2.order_id) t;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#_8","title":"\u5de5\u4f5c\u65e5\u5404\u65f6\u6bb5\u53eb\u8f66\u91cf\u3001\u7b49\u5f85\u63a5\u5355\u65f6\u95f4\u548c\u8c03\u5ea6\u65f6\u95f4","text":"SQLHQL <pre><code>with t1 as (select tcr.uid,\n                  tcr.event_time, -- \u4e0b\u5355\u65f6\u95f4\n                  tcr.order_id,\n                  tco.order_time, -- \u63a5\u5355\u65f6\u95f4\n                  tco.start_time, -- \u5f00\u59cb\u65f6\u95f4\n                  tco.finish_time,\n                  case\n                  when hour(tcr.event_time) in (7, 8) then '\u65e9\u9ad8\u5cf0'\n                  when hour(tcr.event_time) between 9 and 16 then '\u5de5\u4f5c\u65f6\u95f4'\n                  when hour(tcr.event_time) in (17, 18, 19) then '\u665a\u9ad8\u5cf0'\n                  else '\u4f11\u606f\u65f6\u95f4' end as period\n            from tb_get_car_record tcr\n                  inner join tb_get_car_order tco on tcr.order_id = tco.order_id\n            where dayofweek(tcr.event_time) between 2 and 6)\nselect period,\n      count(1)                                                                      as get_car_num,\n      round(avg((unix_timestamp(order_time) - unix_timestamp(event_time)) / 60), 1) as avg_wait_time,\n      round(avg((unix_timestamp(start_time) - unix_timestamp(order_time)) / 60), 1) as avg_dispatch_time\nfrom t1\ngroup by period\norder by get_car_num;\n</code></pre> <pre><code>with t1 as (select tcr.uid,\n                  tcr.event_time, -- \u4e0b\u5355\u65f6\u95f4\n                  tcr.order_id,\n                  tco.order_time, -- \u63a5\u5355\u65f6\u95f4\n                  tco.start_time, -- \u5f00\u59cb\u65f6\u95f4\n                  tco.finish_time,\n                  case\n                  when hour(tcr.event_time) in (7, 8) then '\u65e9\u9ad8\u5cf0'\n                  when hour(tcr.event_time) between 9 and 16 then '\u5de5\u4f5c\u65f6\u95f4'\n                  when hour(tcr.event_time) in (17, 18, 19) then '\u665a\u9ad8\u5cf0'\n                  else '\u4f11\u606f\u65f6\u95f4' end as period\n            from tb_get_car_record tcr\n                  inner join tb_get_car_order tco on tcr.order_id = tco.order_id\n            where dayofweek(tcr.event_time) between 2 and 6)\nselect period,\n      count(1)                                                          as get_car_num,\n      round(avg((unix_timestamp(order_time) - unix_timestamp(event_time)) / 60), 1) as avg_wait_time,\n      round(avg((unix_timestamp(start_time) - unix_timestamp(order_time)) / 60), 1) as avg_dispatch_time\nfrom t1\ngroup by period\norder by get_car_num;\n</code></pre>"},{"location":"SQL/SQL%20%E5%88%B7%E9%A2%98/#sql179","title":"SQL179 \u5404\u57ce\u5e02\u6700\u5927\u540c\u65f6\u7b49\u8f66\u4eba\u6570","text":"<p>\u8fdb\u5165\u65f6\u95f4\uff1aevent_time\uff0c\u5f00\u59cb\u6253\u8f66\u7684\u65f6\u95f4\u5373\u4e3a\u7b49\u8f66\u5f00\u59cb\u3002</p> <p>\u79bb\u5f00\u65f6\u95f4\uff1a\u6709 3 \u79cd\u60c5\u51b5</p> <ul> <li>\u72b6\u6001 1\uff1a\u53f8\u673a\u63a5\u5355\u524d\u53d6\u6d88\uff0c\u5219\u6ca1\u6709\u751f\u6210 order_id\uff0c\u8fd9\u79cd\u60c5\u51b5 order_id IS NULL \u8bb0\u5f55 end_time</li> <li>\u72b6\u6001 2\uff1a\u53f8\u673a\u63a5\u5355\u540e\u53d6\u6d88\uff0c\u5219\u6ca1\u6709\u4e0a\u8f66\u65f6\u95f4\uff0cstart_time IS NULL \u8bb0\u5f55 finish_time</li> <li>\u72b6\u6001 3\uff1a\u6b63\u5e38\u4e0a\u8f66\uff0c\u8bb0\u5f55 start_time\uff0cstart_time IS NOT NULL</li> </ul> <p>\u72b6\u6001 2 \u548c 3 \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 ifnull() \u5408\u5e76\uff0cifnull(start_time,finish_time) \u5982\u679c start_time \u7a7a\u5219\u8fd4\u56de finish_time\uff0c\u4e0d\u7a7a\u5219 start_time</p> <p>\u5b9a\u4e49\u5b8c\u7528\u6237\u8fdb\u5165\u7b49\u8f66\u548c\u79bb\u5f00\u7b49\u8f66\u8fd9\u4e24\u79cd\u4e8b\u4ef6\u4e4b\u540e\uff0c\u5173\u8054\u6240\u6709\u8868\u683c\uff0c\u4f7f\u7528\u7a97\u53e3\u51fd\u6570\u6392\u5e8f\u7d2f\u52a0\u5373\u53ef\u3002</p> SQLHQL <pre><code>with t1 as (select city, event_time as uv_time, 1 as uv -- \u8fdb\u5165\u7b49\u8f66\u72b6\u6001\n            from tb_get_car_record\n            union all\n            select city, coalesce(start_time, finish_time, end_time) as uv_time, -1 as uv -- \u79bb\u5f00\u7b49\u8f66\u72b6\u6001\uff08start_time\uff1a\u4e0a\u8f66\u65f6\u95f4\uff0cfinish_time\uff1a\u8ba2\u5355\u5b8c\u6210\u65f6\u95f4\uff0cend_time\uff1a\u6253\u8f66\u7ed3\u675f\u65f6\u95f4\uff09\n            from tb_get_car_order tco\n                  left join tb_get_car_record tcr on tcr.order_id = tco.order_id),\nt2 as (select city,\n                  sum(uv) over (partition by city order by uv_time, uv desc) as uv_cnt -- \u6bcf\u4e2a\u57ce\u5e02\u7b49\u8f66\u77ac\u65f6UV\uff08\u626b\u63cf\u7ebf\u7b97\u6cd5\uff09\n            from t1\n            where date_format(uv_time, '%Y-%m') = '2021-10')\nselect city,\n      max(uv_cnt) as max_wait_uv -- \u6bcf\u4e2a\u57ce\u5e02\u7b49\u8f66UV\u5cf0\u503c\nfrom t2\ngroup by city\norder by max_wait_uv, city;\n</code></pre> <pre><code>with t1 as (select city, event_time as uv_time, 1 as uv -- \u8fdb\u5165\u7b49\u8f66\u72b6\u6001\n            from tb_get_car_record\n            union all\n            select city, coalesce(start_time, finish_time, end_time) as uv_time, -1 as uv -- \u79bb\u5f00\u7b49\u8f66\u72b6\u6001\uff08start_time\uff1a\u4e0a\u8f66\u65f6\u95f4\uff0cfinish_time\uff1a\u8ba2\u5355\u5b8c\u6210\u65f6\u95f4\uff0cend_time\uff1a\u6253\u8f66\u7ed3\u675f\u65f6\u95f4\uff09\n            from tb_get_car_order tco\n                  left join tb_get_car_record tcr on tcr.order_id = tco.order_id),\nt2 as (select city,\n                  sum(uv) over (partition by city order by uv_time, uv desc) as uv_cnt -- \u6bcf\u4e2a\u57ce\u5e02\u7b49\u8f66\u77ac\u65f6UV\uff08\u626b\u63cf\u7ebf\u7b97\u6cd5\uff09\n            from t1\n            where date_format(uv_time, 'yyyy-MM') = '2021-10')\nselect city,\n      max(uv_cnt) as max_wait_uv -- \u6bcf\u4e2a\u57ce\u5e02\u7b49\u8f66UV\u5cf0\u503c\nfrom t2\ngroup by city\norder by max_wait_uv, city;\n</code></pre>"},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/","title":"Hive/Spark SQL \u76f8\u5173\u77e5\u8bc6","text":""},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#hive-sql","title":"Hive SQL \u8bed\u53e5\u7684\u6267\u884c\u539f\u7406","text":""},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#join","title":"Join \u7684\u5b9e\u73b0\u539f\u7406","text":"<pre><code>select u.name, o.orderid\nfrom order o\njoin user u\non o.uid = u.uid;\n</code></pre> <p>\u5728 map \u7684\u8f93\u51fa value \u4e2d\u4e3a\u4e0d\u540c\u8868\u7684\u6570\u636e\u6253\u4e0a tag \u6807\u8bb0\uff0c\u5728 reduce \u9636\u6bb5\u6839\u636e tag \u5224\u65ad\u6570\u636e\u6765\u6e90\u3002</p> <p></p>"},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#group-by","title":"Group By \u7684\u5b9e\u73b0\u539f\u7406","text":"<pre><code>select rank, isonline, count(*)\nfrom city\ngroup by rank, isonline;\n</code></pre> <p>\u5c06 Group By \u7684\u5b57\u6bb5\u7ec4\u5408\u4e3a map \u7684\u8f93\u51fa key \u503c\uff0c\u5229\u7528 MapReduce \u7684\u6392\u5e8f\uff0c\u5728 reduce \u9636\u6bb5\u4fdd\u5b58 LastKey \u533a\u5206\u4e0d\u540c\u7684 key\u3002</p> <p></p>"},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#distinct","title":"Distinct \u7684\u5b9e\u73b0\u539f\u7406","text":"<pre><code>select dealid, count(distinct uid) as num\nfrom order\ngroup by dealid;\n</code></pre> <p>\u5f53\u53ea\u6709\u4e00\u4e2a distinct \u5b57\u6bb5\u65f6\uff0c\u5982\u679c\u4e0d\u8003\u8651 Map \u9636\u6bb5\u7684 Hash GroupBy\uff0c\u53ea\u9700\u8981\u5c06 Group By \u5b57\u6bb5\u548c Distinct \u5b57\u6bb5\u7ec4\u5408\u4e3a map \u8f93\u51fa key\uff0c\u5229\u7528 mapreduce \u7684\u6392\u5e8f\uff0c\u540c\u65f6\u5c06 Group By \u5b57\u6bb5\u4f5c\u4e3a reduce \u7684 key\uff0c\u5728 reduce \u9636\u6bb5\u4fdd\u5b58 LastKey \u5373\u53ef\u5b8c\u6210\u53bb\u91cd\u3002</p> <p></p>"},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#spark-distinct","title":"Spark Distinct \u7684\u5b9e\u73b0\u539f\u7406","text":""},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#with-one-count-distinct","title":"with one count distinct","text":"<p>\u4e00\u6587\u641e\u61c2 with one count distinct \u6267\u884c\u539f\u7406</p> <p>Aggregate \u51fd\u6570\u7684\u51e0\u79cd mode\uff1a</p> <ul> <li>Partial\uff1a\u5c40\u90e8\u6570\u636e\u7684\u805a\u5408\u3002\u4f1a\u6839\u636e\u8bfb\u5165\u7684\u539f\u59cb\u6570\u636e\u66f4\u65b0\u5bf9\u5e94\u7684\u805a\u5408\u7f13\u51b2\u533a\uff0c\u5f53\u5904\u7406\u5b8c\u6240\u6709\u7684\u8f93\u5165\u6570\u636e\u540e\uff0c\u8fd4\u56de\u7684\u662f\u5c40\u90e8\u805a\u5408\u7684\u7ed3\u679c</li> <li>PartialMerge\uff1a\u4e3b\u8981\u662f\u5bf9 Partial \u8fd4\u56de\u7684\u805a\u5408\u7f13\u51b2\u533a\uff08\u5c40\u90e8\u805a\u5408\u7ed3\u679c\uff09\u8fdb\u884c\u5408\u5e76\uff0c\u4f46\u6b64\u65f6\u4ecd\u4e0d\u662f\u6700\u7ec8\u7ed3\u679c\uff0c\u8fd8\u8981\u7ecf\u8fc7 Final \u624d\u662f\u6700\u7ec8\u7ed3\u679c(count distinct \u7c7b\u578b)</li> <li>Final\uff1a\u8d77\u5230\u7684\u4f5c\u7528\u662f\u5c06\u805a\u5408\u7f13\u51b2\u533a\u7684\u6570\u636e\u8fdb\u884c\u5408\u5e76\uff0c\u7136\u540e\u8fd4\u56de\u6700\u7ec8\u7684\u7ed3\u679c</li> <li>Complete\uff1a\u4e0d\u8fdb\u884c\u5c40\u90e8\u805a\u5408\u8ba1\u7b97\uff0c\u5e94\u7528\u5728\u4e0d\u652f\u6301 Partial \u6a21\u5f0f\u7684\u805a\u5408\u51fd\u6570\u4e0a\uff08\u6bd4\u5982\u6c42\u767e\u5206\u4f4d percentile_approx\uff09</li> </ul> <p>\u975e distinct \u7c7b\u7684\u805a\u5408\u51fd\u6570\u7684\u8def\u7ebf\uff1aPartial --&gt; Final</p> <p>distinct \u7c7b\u7684\u805a\u5408\u51fd\u6570\u7684\u8def\u7ebf\uff1aPartial\u00a0--&gt; PartialMerge --&gt; Partial --&gt; Final</p>"},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#more-than-one-count-distinct","title":"more than one count distinct","text":"<p>more than one count distinct</p>"},{"location":"SQL/SQL%20%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#sql","title":"\u9012\u5f52 SQL","text":"<p>\u4e00\u7bc7\u5b66\u4f1a SQL \u4e2d\u7684\u9012\u5f52\u7684\u7528\u6cd5</p>"},{"location":"SQL/Spark%20SQL%20%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/","title":"Spark SQL \u5e38\u7528\u51fd\u6570\u6574\u7406","text":""},{"location":"SQL/Spark%20SQL%20%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/#date-and-timestamp-functions","title":"Date and Timestamp Functions","text":""},{"location":"SQL/Spark%20SQL%20%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/#_1","title":"\u5f53\u524d\u65f6\u95f4\u7c7b","text":"Function Description current_date() Returns the current date at the start of query evaluation. All calls of current_date within the same query return the same value. current_timestamp() Returns the current timestamp at the start of query evaluation. All calls of current_timestamp within the same query return the same value. unix_timestamp([timeExp[, fmt]]) Returns the UNIX timestamp of current or specified time. now() Returns the current timestamp at the start of query evaluation. <pre><code>SELECT current_date();\n+--------------+\n|current_date()|\n+--------------+\n|2024-11-30    |\n+--------------+\n\nSELECT current_timestamp();\n+--------------------------+\n|current_timestamp()       |\n+--------------------------+\n|2024-11-30 16:50:03.427195|\n+--------------------------+\n\nSELECT unix_timestamp();\n+--------------------------------------------------------+\n|unix_timestamp(current_timestamp(), yyyy-MM-dd HH:mm:ss)|\n+--------------------------------------------------------+\n|1732959282                                              |\n+--------------------------------------------------------+\n\nSELECT now();\n+--------------------------+\n|now()                     |\n+--------------------------+\n|2024-11-30 17:35:00.331006|\n+--------------------------+\n</code></pre>"},{"location":"SQL/Spark%20SQL%20%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/#_2","title":"\u65f6\u95f4\u63d0\u53d6\u7c7b","text":"Function Description year(date) Returns the year component of the date/timestamp. quarter(date) Returns the quarter of the year for date, in the range 1 to 4. month(date) Returns the month component of the date/timestamp. day(date) Returns the day of month of the date/timestamp. hour(timestamp) Returns the hour component of the string/timestamp. minute(timestamp) Returns the minute component of the string/timestamp. second(timestamp) Returns the second component of the string/timestamp. weekofyear(date) Returns the week of the year of the given date. dayofyear(date) Returns the day of year of the date/timestamp. dayofmonth(date) Returns the day of month of the date/timestamp. dayofweek(date) Returns the day of the week for date/timestamp (1 = Sunday, 2 = Monday, ..., 7 = Saturday). date_trunc(fmt, ts) Returns timestamp <code>ts</code> truncated to the unit specified by the format model <code>fmt</code>. <pre><code>select date_trunc('YEAR', '2024-11-30');\n+----------------------------+\n|date_trunc(YEAR, 2024-11-30)|\n+----------------------------+\n|2024-01-01 00:00:00         |\n+----------------------------+\n\n+-----------------------------+\n|date_trunc(MONTH, 2024-11-30)|\n+-----------------------------+\n|2024-11-01 00:00:00          |\n+-----------------------------+\n\n+---------------------------+\n|date_trunc(DAY, 2024-11-30)|\n+---------------------------+\n|2024-11-30 00:00:00        |\n+---------------------------+\n\n+--------------------------------------------+\n|date_trunc(HOUR, 2024-11-30 17:07:58.078219)|\n+--------------------------------------------+\n|2024-11-30 17:00:00                         |\n+--------------------------------------------+\n\n+----------------------------------------------+\n|date_trunc(MINUTE, 2024-11-30 17:07:58.078219)|\n+----------------------------------------------+\n|2024-11-30 17:07:00                           |\n+----------------------------------------------+\n\n+----------------------------------------------+\n|date_trunc(SECOND, 2024-11-30 17:07:58.078219)|\n+----------------------------------------------+\n|2024-11-30 17:07:58                           |\n+----------------------------------------------+\n</code></pre>"},{"location":"SQL/Spark%20SQL%20%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/#_3","title":"\u65f6\u95f4\u8ba1\u7b97\u7c7b","text":"Function Description date_add(start_date, num_days) Returns the date that is <code>num_days</code> after <code>start_date</code>. date_sub(start_date, num_days) Returns the date that is <code>num_days</code> before <code>start_date</code>. datediff(endDate, startDate) Returns the number of days from <code>startDate</code> to <code>endDate</code>. timestampdiff(time_unit, start_timestamp, end_timestamp) \u8fd4\u56de\u65f6\u95f4\u5dee\u503c in time_unit. <code>time_unit</code>\uff1a\u6307\u5b9a\u65f6\u95f4\u5355\u4f4d\uff0c\u53ef\u4ee5\u662f\u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1a<code>SECOND</code>, <code>MINUTE</code>, <code>HOUR</code>, <code>DAY</code>, <code>WEEK</code>, <code>MONTH</code>, <code>QUARTER</code>, <code>YEAR</code>\u3002 add_months(start_date, num_months) Returns the date that is <code>num_months</code> after <code>start_date</code>. months_between(timestamp1, timestamp2[, roundOff]) Returns the number of months between two timestamps. <pre><code>SELECT timestampdiff(SECOND, '2024-03-01 10:00:00', '2024-03-01 10:05:30');\n+---------------------------------------------------------------+\n|timestampdiff(SECOND, 2024-03-01 10:00:00, 2024-03-01 10:05:30)|\n+---------------------------------------------------------------+\n|330                                                            |\n+---------------------------------------------------------------+\n\nSELECT timestampdiff(MINUTE, '2024-03-01 10:00:00', '2024-03-01 10:05:30');\n+---------------------------------------------------------------+\n|timestampdiff(MINUTE, 2024-03-01 10:00:00, 2024-03-01 10:05:30)|\n+---------------------------------------------------------------+\n|5                                                              |\n+---------------------------------------------------------------+\n\nSELECT timestampdiff(HOUR, '2024-03-01 10:00:00', '2024-03-01 10:05:30');\n+-------------------------------------------------------------+\n|timestampdiff(HOUR, 2024-03-01 10:00:00, 2024-03-01 10:05:30)|\n+-------------------------------------------------------------+\n|0                                                            |\n+-------------------------------------------------------------+\n\nSELECT timestampdiff(WEEK, '2024-03-01', '2024-03-11');\n+-------------------------------------------+\n|timestampdiff(WEEK, 2024-03-01, 2024-03-11)|\n+-------------------------------------------+\n|1                                          |\n+-------------------------------------------+\n\nSELECT timestampdiff(MONTH, '2024-03-01', '2024-04-11');\n+--------------------------------------------+\n|timestampdiff(MONTH, 2024-03-01, 2024-04-11)|\n+--------------------------------------------+\n|1                                           |\n+--------------------------------------------+\n\nSELECT months_between('1997-02-28 10:30:00', '1996-10-30');\n+-----------------------------------------------------+\n|months_between(1997-02-28 10:30:00, 1996-10-30, true)|\n+-----------------------------------------------------+\n|3.94959677                                           |\n+-----------------------------------------------------+\n</code></pre>"},{"location":"SQL/Spark%20SQL%20%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/#_4","title":"\u65f6\u95f4\u683c\u5f0f\u5316\u7c7b","text":"Function Description date_format(timestamp, fmt) Converts <code>timestamp</code> to a value of string in <code>fmt</code>. to_date(date_str[, fmt]) Parses the <code>date_str</code> expression with the <code>fmt</code> expression to a date. from_unixtime(unix_time[, fmt]) Returns <code>unix_time</code> in the specified <code>fmt</code>. to_timestamp(timestamp_str[, fmt]) Parses the <code>timestamp_str</code> expression with the <code>fmt</code> expression to a timestamp. to_unix_timestamp(timeExp[, fmt]) Returns the UNIX timestamp of the given time. unix_timestamp([timeExp[, fmt]]) Returns the UNIX timestamp of current or specified time. <pre><code>SELECT from_unixtime(1732960246, 'yyyy-MM-dd HH:mm:ss');\n+----------------------------------------------+\n|from_unixtime(1732960246, yyyy-MM-dd HH:mm:ss)|\n+----------------------------------------------+\n|2024-11-30 17:50:46                           |\n+----------------------------------------------+\n\nSELECT to_timestamp('2016-12-31 00:12:00');\n+---------------------------------+\n|to_timestamp(2016-12-31 00:12:00)|\n+---------------------------------+\n|2016-12-31 00:12:00              |\n+---------------------------------+\n\nSELECT to_timestamp('2016-12-31', 'yyyy-MM-dd');\n+------------------------------------+\n|to_timestamp(2016-12-31, yyyy-MM-dd)|\n+------------------------------------+\n|2016-12-31 00:00:00                 |\n+------------------------------------+\n\nSELECT to_unix_timestamp('2016-04-08', 'yyyy-MM-dd');\n+-----------------------------------------+\n|to_unix_timestamp(2016-04-08, yyyy-MM-dd)|\n+-----------------------------------------+\n|1460044800                               |\n+-----------------------------------------+\n\nSELECT unix_timestamp();\n+--------------------------------------------------------+\n|unix_timestamp(current_timestamp(), yyyy-MM-dd HH:mm:ss)|\n+--------------------------------------------------------+\n|1732960597                                              |\n+--------------------------------------------------------+\n\nSELECT unix_timestamp('2016-04-08', 'yyyy-MM-dd');\n+--------------------------------------+\n|unix_timestamp(2016-04-08, yyyy-MM-dd)|\n+--------------------------------------+\n|1460044800                            |\n+--------------------------------------+\n</code></pre> <p>\u65f6\u95f4\u8f6c\u6362\u603b\u7ed3\uff1a</p> <p></p> <pre><code>SELECT to_timestamp('2024-11-30');\n+------------------------+\n|to_timestamp(2024-11-30)|\n+------------------------+\n|2024-11-30 00:00:00     |\n+------------------------+\n\nSELECT to_date('2024-11-30 18:03:43.358491');\n+-----------------------------------+\n|to_date(2024-11-30 18:03:43.358491)|\n+-----------------------------------+\n|2024-11-30                         |\n+-----------------------------------+\n\nSELECT unix_timestamp('2024-11-30 18:03:43.358491', 'yyyy-MM-dd HH:mm:ss.SSSSSS');\n+----------------------------------------------------------------------+\n|unix_timestamp(2024-11-30 18:03:43.358491, yyyy-MM-dd HH:mm:ss.SSSSSS)|\n+----------------------------------------------------------------------+\n|1732961023                                                            |\n+----------------------------------------------------------------------+\n\nSELECT from_unixtime(1732961023);\n+----------------------------------------------+\n|from_unixtime(1732961023, yyyy-MM-dd HH:mm:ss)|\n+----------------------------------------------+\n|2024-11-30 18:03:43                           |\n+----------------------------------------------+\n</code></pre>"},{"location":"SQL/Spark%20SQL%20%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%95%B4%E7%90%86/#_5","title":"\u65e5\u671f\u7ef4\u8868\u5e38\u7528","text":"Function Description make_date(year, month, day) Creates a date from the given year, month, and day. make_timestamp(year, month, day, hour, min, sec[, timezone]) Creates a timestamp from the given year, month, day, hour, minute, and second. next_day(start_date, day_of_week) \u8fd4\u56de <code>start_date</code> \u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a <code>day_of_week</code>. last_day(date) Returns the last day of the month which the date belongs to. sequence(start, end[, step]) Generates a sequence of integers from <code>start</code> to <code>end</code> with a step of <code>step</code>. <pre><code>SELECT make_date(2013, 7, 15);\n+----------------------+\n|make_date(2013, 7, 15)|\n+----------------------+\n|2013-07-15            |\n+----------------------+\n\nSELECT make_timestamp(2014, 12, 28, 6, 30, 45.887);\n+-------------------------------------------+\n|make_timestamp(2014, 12, 28, 6, 30, 45.887)|\n+-------------------------------------------+\n|2014-12-28 06:30:45.887                    |\n+-------------------------------------------+\n\nSELECT next_day('2024-11-30', 'Monday');\n+----------------------------+\n|next_day(2024-11-30, Monday)|\n+----------------------------+\n|2024-12-02                  |\n+----------------------------+\n\nSELECT last_day('2024-11-01');\n+--------------------+\n|last_day(2024-11-01)|\n+--------------------+\n|2024-11-30          |\n+--------------------+\n\nSELECT sequence(to_date('2024-11-01'), to_date('2024-11-05'), interval 1 day);\n+--------------------------------------------------------------------+\n|sequence(to_date(2024-11-01), to_date(2024-11-05), INTERVAL '1' DAY)|\n+--------------------------------------------------------------------+\n|[2024-11-01, 2024-11-02, 2024-11-03, 2024-11-04, 2024-11-05]        |\n+--------------------------------------------------------------------+\n\nSELECT sequence(to_timestamp('2024-11-01 00:00:00'), to_timestamp('2024-11-01 03:00:00'), interval 1 hour);\n+--------------------------------------------------------------------------------------------------+\n|sequence(to_timestamp(2024-11-01 00:00:00), to_timestamp(2024-11-01 03:00:00), INTERVAL '01' HOUR)|\n+--------------------------------------------------------------------------------------------------+\n|[2024-11-01 00:00:00, 2024-11-01 01:00:00, 2024-11-01 02:00:00, 2024-11-01 03:00:00]              |\n+--------------------------------------------------------------------------------------------------+\n</code></pre> <pre><code>-- \u672c\u5e74\u7b2c\u4e00\u5929\nSELECT trunc(current_date(), 'YEAR');\n-- \u672c\u5e74\u6700\u540e\u4e00\u5929\nSELECT last_day(trunc(current_date(), 'YEAR'));\n\n-- \u672c\u5b63\u5ea6\u7b2c\u4e00\u5929\nSELECT trunc(current_date(), 'QUARTER');\n-- \u672c\u5b63\u5ea6\u6700\u540e\u4e00\u5929\nSELECT last_day(trunc(current_date(), 'QUARTER'));\n\n-- \u672c\u6708\u7b2c\u4e00\u5929\nSELECT trunc(current_date(), 'MONTH');\n-- \u672c\u6708\u6700\u540e\u4e00\u5929\nSELECT last_day(trunc(current_date(), 'MONTH'));\n\n-- \u672c\u5468\u4e00\nSELECT date_sub(next_day(current_date(), 'Monday'), 7);\n-- \u672c\u5468\u65e5\nSELECT date_sub(next_day(current_date(), 'Monday'), 1);\n\n-- \u4e0a\u5468\u4e00\nSELECT date_sub(next_day(current_date(), 'Monday'), 14);\n-- \u4e0a\u5468\u65e5\nSELECT date_sub(next_day(current_date(), 'Monday'), 8);\n</code></pre>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/","title":"UDF \u5f00\u53d1","text":"<p>\u5728 Hive \u4e2d\u4e00\u5171\u6709\u4e09\u79cd\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\uff1a</p> <ol> <li>UDF\uff1a\u4e00\u884c\u8f93\u5165\uff08\u53ef\u4ee5\u4f20\u5165\u591a\u4e2a\u53c2\u6570\uff09\uff0c\u8fd4\u56de\u4e00\u4e2a\uff08\u4e00\u884c\u4e00\u5217\uff09\u7ed3\u679c</li> <li>UDTF\uff1a\u8868\u751f\u6210\u51fd\u6570\uff0c\u4e00\u884c\u8f93\u5165\uff0c\u8f93\u51fa\u591a\u884c\u7ed3\u679c</li> <li>UDAF\uff1a\u805a\u5408\u51fd\u6570\uff0c\u591a\u884c\u8f93\u5165\uff0c\u4e00\u884c\u8f93\u51fa</li> </ol>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#_1","title":"\u5f00\u53d1\u6b65\u9aa4","text":""},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#_2","title":"\u521b\u5efa\u9879\u76ee\u3001\u5bfc\u5165\u4f9d\u8d56","text":"pom.xml<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.hive&lt;/groupId&gt;\n    &lt;artifactId&gt;hive-exec&lt;/artifactId&gt;\n    &lt;version&gt;2.3.9&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- \u5982\u679c\u4f7f\u7528 Spark --&gt;\n&lt;!-- &lt;dependency&gt;\n    &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;\n    &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;\n    &lt;version&gt;3.3.1&lt;/version&gt;\n&lt;/dependency&gt; --&gt;\n</code></pre>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#udf_1","title":"\u7f16\u5199 UDF \u903b\u8f91","text":"<p>Hive \u63d0\u4f9b\u4e86\u4e24\u4e2a\u5b9e\u73b0 UDF \u7684\u65b9\u5f0f\uff1a</p> <p>\u7b2c\u4e00\u79cd\uff1a\u7ee7\u627f UDF \u7c7b</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u5b9e\u73b0\u7b80\u5355</li> <li>\u652f\u6301 Hive \u7684\u57fa\u672c\u7c7b\u578b\u3001\u6570\u7ec4\u548c Map</li> <li>\u652f\u6301\u51fd\u6570\u91cd\u8f7d</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u53ea\u9002\u5408\u7528\u4e8e\u5b9e\u73b0\u7b80\u5355\u7684\u51fd\u6570</li> </ul> <p>\u7b2c\u4e8c\u79cd\uff1a\u7ee7\u627f GenericUDF \u7c7b</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u652f\u6301\u4efb\u610f\u957f\u5ea6\u3001\u4efb\u610f\u7c7b\u578b\u7684\u53c2\u6570</li> <li>\u53ef\u4ee5\u6839\u636e\u53c2\u6570\u4e2a\u6570\u548c\u7c7b\u578b\u5b9e\u73b0\u4e0d\u540c\u7684\u903b\u8f91</li> <li>\u53ef\u4ee5\u5b9e\u73b0\u521d\u59cb\u5316\u548c\u5173\u95ed\u8d44\u6e90\u7684\u903b\u8f91(initialize\u3001close)</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u5b9e\u73b0\u6bd4\u7ee7\u627f UDF \u8981\u590d\u6742\u4e00\u4e9b</li> </ul> <p>\u4e0e\u7ee7\u627f UDF \u76f8\u6bd4\uff0cGenericUDF \u66f4\u52a0\u7075\u6d3b\uff0c\u53ef\u4ee5\u5b9e\u73b0\u66f4\u4e3a\u590d\u6742\u7684\u51fd\u6570</p> <p>\u5173\u4e8e\u4e24\u8005\u7684\u9009\u62e9</p> <p>\u5982\u679c\u51fd\u6570\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff0c\u4f18\u5148\u7ee7\u627f UDF \u7c7b\uff1a</p> <ul> <li>\u903b\u8f91\u7b80\u5355\uff0c\u6bd4\u5982\u82f1\u6587\u8f6c\u5c0f\u5199\u51fd\u6570</li> <li>\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u7b80\u5355\uff0c\u90fd\u662f Hive \u7684\u57fa\u672c\u7c7b\u578b\u3001\u6570\u7ec4\u6216 Map</li> <li>\u6ca1\u6709\u521d\u59cb\u5316\u6216\u5173\u95ed\u8d44\u6e90\u7684\u9700\u6c42</li> </ul> <p>\u5426\u5219\u8003\u8651\u7ee7\u627f GenericUDF \u7c7b</p>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#_3","title":"\u6253\u5305\u5e76\u4e0a\u4f20","text":"<p>\u5c06\u4ee3\u7801\u6253\u5305\u6210 jar\uff0c\u5e76\u5c06 jar \u4e0a\u4f20\u5230 Hive \u670d\u52a1\u5668\u3002</p> <p>\u6253\u5305\u65f6\uff0c\u9700\u8981\u628a\u4f9d\u8d56\u6253\u5165 jar \u5305\uff0c\u4f46\u4e0d\u9700\u8981 hive-exec\uff0c\u5728 pom.xml \u4e2d\uff0c\u5c06\u5176 scope \u8bbe\u4e3a provided\u3002\u56e0\u4e3a Hive \u7684 lib \u76ee\u5f55\u4e0b\u5df2\u7ecf\u5305\u62ec\u4e86 hive-exec \u7684 jar\uff0cHive \u4f1a\u81ea\u52a8\u5c06\u5176\u52a0\u8f7d\u3002</p>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#_4","title":"\u521b\u5efa\u51fd\u6570","text":"<p>\u5728 Hive \u4e2d\u521b\u5efa\u51fd\u6570\uff0c\u6307\u5b9a\u51fd\u6570\u7684\u7c7b\u540d\u548c jar \u5305\u8def\u5f84\u3002</p> <pre><code>add jar &lt;\u6253\u5305\u597d\u7684jar\u7684\u5168\u8def\u5f84&gt;;\ncreate [temporary] function &lt;\u51fd\u6570\u540d&gt; as 'UDF\u5165\u53e3\u7c7b\u5168\u8def\u5f84';\ndrop [temporary] function [if exists] &lt;\u51fd\u6570\u540d&gt;;\n</code></pre>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#udf_2","title":"UDF \u5f00\u53d1\u624b\u518c","text":""},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#udf_3","title":"\u7ee7\u627f UDF \u7c7b","text":"<p>\u7b2c\u4e00\u79cd\u65b9\u5f0f\u7684\u4ee3\u7801\u5b9e\u73b0\u6700\u4e3a\u7b80\u5355\uff0c\u53ea\u9700\u65b0\u5efa\u4e00\u4e2a\u7c7b\u7ee7\u627f UDF \u7c7b\uff0c\u7136\u540e\u5b9e\u73b0 <code>evaluate()</code> \u7684\u5177\u4f53\u903b\u8f91\u5373\u53ef\u3002</p> <p>\u652f\u6301\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b\uff1a\u652f\u6301 Hive \u57fa\u672c\u7c7b\u578b\u3001\u6570\u7ec4\u548c Map</p> <pre><code>import org.apache.hadoop.hive.ql.exec.UDF;\n\npublic class SimpleUDF extends UDF {\n    /**\n     * \u8981\u6c42\u5982\u4e0b\uff1a\n     * 1. \u51fd\u6570\u540d\u5fc5\u987b\u4e3a evaluate\n     * 2. \u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u53ef\u4ee5\u4e3a\uff1aJava\u57fa\u672c\u7c7b\u578b\u3001Java\u5305\u88c5\u7c7b\u3001org.apache.hadoop.io.Writable\u7b49\u7c7b\u578b\u3001List\u3001Map\n     * 3. \u51fd\u6570\u4e00\u5b9a\u8981\u6709\u8fd4\u56de\u503c\uff0c\u4e0d\u80fd\u4e3a void\n     */\n    public int evaluate(int a, int b) {\n        return a + b;\n    }\n\n    // \u652f\u6301\u51fd\u6570\u91cd\u8f7d\n    public Integer evaluate(Integer a, Integer b, Integer c) {\n        if (a == null || b == null || c == null)\n            return 0;\n        return a + b + c;\n    }\n}\n</code></pre> <p>Note</p> <p>\u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b\uff0c\u6700\u597d\u4e0d\u8981\u4f7f\u7528 Java \u539f\u59cb\u7c7b\u578b\uff0c\u5f53 null \u4f20\u7ed9 Java \u539f\u59cb\u7c7b\u578b\u53c2\u6570\u65f6\uff0cUDF \u4f1a\u62a5\u9519\u3002Java \u5305\u88c5\u7c7b\u8fd8\u53ef\u4ee5\u7528\u4e8e null \u503c\u5224\u65ad\u3002</p> Hive \u7c7b\u578b Java \u539f\u59cb\u7c7b\u578b Java \u5305\u88c5\u7c7b hadoop.io.Writable tinyint byte Byte ByteWritable smallint short Short ShortWritable int int Integer IntWritable bigint long Long LongWritable string String - Text boolean boolean Boolean BooleanWritable float float Float FloatWritable double double Double DoubleWritable Hive \u7c7b\u578b Java \u7c7b\u578b array List Map Map"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#genericudf","title":"\u7ee7\u627f GenericUDF \u7c7b","text":"<p>\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u7684\u4ee3\u7801\u5b9e\u73b0\u76f8\u5bf9\u590d\u6742\u4e00\u4e9b\uff0c\u9700\u8981\u5b9e\u73b0 <code>initialize()</code>\u3001<code>evaluate()</code>\u3001<code>close()</code> \u4e09\u4e2a\u65b9\u6cd5\u3002</p>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#initialize","title":"initialize()","text":"<pre><code>/**\n * @param arguments \u81ea\u5b9a\u4e49UDF\u53c2\u6570\u7684 ObjectInspector \u5b9e\u4f8b\n * @throws UDFArgumentException \u53c2\u6570\u4e2a\u6570\u6216\u7c7b\u578b\u9519\u8bef\u65f6\uff0c\u629b\u51fa\u8be5\u5f02\u5e38\n * @return \u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\n*/\npublic abstract ObjectInspector initialize(ObjectInspector[] arguments)\n    throws UDFArgumentException;\n</code></pre> <p><code>initialize()</code> \u5728\u51fd\u6570\u5728 GenericUDF \u521d\u59cb\u5316\u65f6\u88ab\u8c03\u7528\u4e00\u6b21\uff0c\u6267\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u5224\u65ad\u51fd\u6570\u53c2\u6570\u4e2a\u6570</li> <li>\u5224\u65ad\u51fd\u6570\u53c2\u6570\u7c7b\u578b</li> <li>\u786e\u5b9a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b</li> </ul> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u7528\u6237\u5728\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u505a\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u6bd4\u5982\u521d\u59cb\u5316 HDFS \u5ba2\u6237\u7aef\u7b49\u3002</p> <p>\u5176\u4e00\uff1a\u5224\u65ad\u51fd\u6570\u53c2\u6570\u4e2a\u6570</p> <p>\u53ef\u901a\u8fc7 arguments \u6570\u7ec4\u7684\u957f\u5ea6\u6765\u5224\u65ad\u51fd\u6570\u53c2\u6570\u7684\u4e2a\u6570\uff1a</p> <pre><code>// 1. \u53c2\u6570\u4e2a\u6570\u68c0\u67e5\uff0c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\nif (arguments.length != 1) // \u51fd\u6570\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\n    throw new UDFArgumentException(\"\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u53c2\u6570\"); // \u5f53\u81ea\u5b9a\u4e49UDF\u53c2\u6570\u4e0e\u9884\u671f\u4e0d\u7b26\u65f6\uff0c\u629b\u51fa\u5f02\u5e38\n</code></pre> <p>\u5176\u4e8c\uff1a\u5224\u65ad\u51fd\u6570\u53c2\u6570\u7c7b\u578b</p> <p>ObjectInspector \u53ef\u7528\u4e8e\u4fa6\u6d4b\u53c2\u6570\u6570\u636e\u7c7b\u578b\uff0c\u5176\u5185\u90e8\u6709\u4e00\u4e2a\u679a\u4e3e\u7c7b Category\uff0c\u4ee3\u8868\u4e86\u5f53\u524d ObjectInspector \u7684\u7c7b\u578b\uff1a</p> <pre><code>public interface ObjectInspector extends Cloneable {\n    public static enum Category {\n        PRIMITIVE, // Hive \u539f\u59cb\u7c7b\u578b\n        LIST, // Hive \u6570\u7ec4\n        MAP, // Hive Map\n        STRUCT, // \u7ed3\u6784\u4f53\n        UNION // \u8054\u5408\u4f53\n    };\n}\n</code></pre> <p>Hive \u539f\u59cb\u7c7b\u578b\u53c8\u7ec6\u5206\u4e86\u591a\u79cd\u5b50\u7c7b\u578b\uff0cPrimitiveObjectInspector \u5b9e\u73b0\u4e86 ObjectInspector\uff0c\u53ef\u4ee5\u66f4\u52a0\u5177\u4f53\u7684\u8868\u793a\u5bf9\u5e94\u7684 Hive \u539f\u59cb\u7c7b\u578b\uff1a</p> <pre><code>public interface PrimitiveObjectInspector extends ObjectInspector {\n  /**\n   * The primitive types supported by Hive.\n   */\n  public static enum PrimitiveCategory {\n    VOID, BOOLEAN, BYTE, SHORT, INT, LONG, FLOAT, DOUBLE, STRING,\n    DATE, TIMESTAMP, BINARY, DECIMAL, VARCHAR, CHAR, INTERVAL_YEAR_MONTH, INTERVAL_DAY_TIME,\n    UNKNOWN\n  };\n}\n</code></pre> <pre><code>// 2. \u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff0c\u53c2\u6570\u7c7b\u578b\u4e3aString\nif (arguments[0].getCategory() != ObjectInspector.Category.PRIMITIVE // \u53c2\u6570\u662fHive\u539f\u59cb\u7c7b\u578b\n        || !PrimitiveObjectInspector.PrimitiveCategory.STRING.equals(((PrimitiveObjectInspector)arguments[0]).getPrimitiveCategory())) // \u53c2\u6570\u662fHive\u7684string\u7c7b\u578b\n    throw new UDFArgumentException(\"\u51fd\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\"); // \u5f53\u81ea\u5b9a\u4e49UDF\u53c2\u6570\u4e0e\u9884\u671f\u4e0d\u7b26\u65f6\uff0c\u629b\u51fa\u5f02\u5e38\n</code></pre> <p>\u5176\u4e09\uff1a\u786e\u5b9a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b</p> <p>initialize() \u9700\u8981 return \u4e00\u4e2a ObjectInspector \u5b9e\u4f8b\uff0c\u7528\u4e8e\u8868\u793a\u81ea\u5b9a\u4e49 UDF \u8fd4\u56de\u503c\u7c7b\u578b\u3002<code>initialize()</code> \u7684\u8fd4\u56de\u503c\u51b3\u5b9a\u4e86 <code>evaluate()</code> \u7684\u8fd4\u56de\u503c\u7c7b\u578b\u3002</p> <p>ObjectInspector \u7684\u6e90\u7801\u4e2d\uff0c\u6709\u8fd9\u4e48\u4e00\u6bb5\u6ce8\u91ca\uff0c\u5176\u5927\u610f\u662f ObjectInspector \u7684\u5b9e\u4f8b\u5e94\u8be5\u7531\u5bf9\u5e94\u7684\u5de5\u5382\u7c7b\u83b7\u53d6\uff0c\u4ee5\u4fdd\u8bc1\u5b9e\u4f8b\u7684\u5355\u4f8b\u7b49\u5c5e\u6027\u3002</p> <pre><code>/**\n * An efficient implementation of ObjectInspector should rely on factory, so\n * that we can make sure the same ObjectInspector only has one instance. That\n * also makes sure hashCode() and equals() methods of java.lang.Object directly\n * works for ObjectInspector as well.\n */\npublic interface ObjectInspector extends Cloneable { }\n</code></pre> <p>\u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b(byte\u3001short\u3001int\u3001long\u3001float\u3001double\u3001boolean\u3001string)\uff0c\u53ef\u4ee5\u901a\u8fc7 PrimitiveObjectInspectorFactory \u7684\u9759\u6001\u5b57\u6bb5\u76f4\u63a5\u83b7\u53d6\uff1a</p> Hive \u7c7b\u578b Writable \u7c7b\u578b Java \u5305\u88c5\u7c7b\u578b tinyint writable ByteObjectInspector smallint writable ShortObjectInspector int writable IntObjectInspector bigint writable LongObjectInspector string writable StringObjectInspector boolean writable BooleanObjectInspector float writable FloatObjectInspector double writable DoubleObjectInspector <p>\u6ce8\u610f\uff0c\u57fa\u672c\u7c7b\u578b\u8fd4\u56de\u503c\u6709\u4e24\u79cd\uff1aWritable \u7c7b\u578b \u548c Java \u5305\u88c5\u7c7b\u578b\uff1a</p> <ul> <li>\u5728 initialize \u6307\u5b9a\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Writable \u7c7b\u578b \u65f6\uff0c\u5728 evaluate() \u4e2d return \u7684\u5c31\u5e94\u8be5\u662f\u5bf9\u5e94\u7684 Writable \u5b9e\u4f8b</li> <li>\u5728 initialize \u6307\u5b9a\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Java \u5305\u88c5\u7c7b\u578b \u65f6\uff0c\u5728 evaluate() \u4e2d return \u7684\u5c31\u5e94\u8be5\u662f\u5bf9\u5e94\u7684 Java \u5305\u88c5\u7c7b\u5b9e\u4f8b</li> </ul> <p>Array\u3001Map&lt;K, V&gt; \u7b49\u590d\u6742\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 ObjectInspectorFactory \u7684\u9759\u6001\u65b9\u6cd5\u83b7\u53d6\uff1a</p> Hive \u7c7b\u578b ObjectInspectorFactory \u7684\u9759\u6001\u65b9\u6cd5 \u8fd4\u56de\u503c\u7c7b\u578b Array getStandardListObjectInspector(T t) List Map getStandardMapObjectInspector(K k, V v) Map <p>\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Map&lt;String, int&gt; \u7684\u793a\u4f8b\uff1a</p> <pre><code>// 3. \u81ea\u5b9a\u4e49UDF\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Map&lt;String, int&gt;\nreturn ObjectInspectorFactory.getStandardMapObjectInspector(\n        PrimitiveObjectInspectorFactory.javaStringObjectInspector, // Key \u662f String\n        PrimitiveObjectInspectorFactory.javaIntObjectInspector // Value \u662f int\n);\n</code></pre> <p>\u5b8c\u6574\u7684 <code>initialize()</code> \u65b9\u6cd5\uff1a</p> <pre><code>@Override\npublic ObjectInspector initialize(ObjectInspector[] arguments) throws UDFArgumentException {\n    // 1. \u53c2\u6570\u4e2a\u6570\u68c0\u67e5\uff0c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\n    if (arguments.length != 1) // \u51fd\u6570\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\n        throw new UDFArgumentException(\"\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u53c2\u6570\"); // \u5f53\u81ea\u5b9a\u4e49UDF\u53c2\u6570\u4e0e\u9884\u671f\u4e0d\u7b26\u65f6\uff0c\u629b\u51fa\u5f02\u5e38\n\n    // 2. \u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff0c\u53c2\u6570\u7c7b\u578b\u4e3aString\n    if (arguments[0].getCategory() != ObjectInspector.Category.PRIMITIVE // \u53c2\u6570\u662fHive\u539f\u59cb\u7c7b\u578b\n            || !PrimitiveObjectInspector.PrimitiveCategory.STRING.equals(((PrimitiveObjectInspector)arguments[0]).getPrimitiveCategory())) // \u53c2\u6570\u662fHive\u7684string\u7c7b\u578b\n        throw new UDFArgumentException(\"\u51fd\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\"); // \u5f53\u81ea\u5b9a\u4e49UDF\u53c2\u6570\u4e0e\u9884\u671f\u4e0d\u7b26\u65f6\uff0c\u629b\u51fa\u5f02\u5e38\n\n    // 3. \u81ea\u5b9a\u4e49UDF\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Map&lt;String, int&gt;\n    return ObjectInspectorFactory.getStandardMapObjectInspector(\n            PrimitiveObjectInspectorFactory.javaStringObjectInspector, // Key \u662f String\n            PrimitiveObjectInspectorFactory.javaIntObjectInspector // Value \u662f int\n    );\n}\n</code></pre>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#evaluate","title":"evaluate()","text":"<p>\u6838\u5fc3\u65b9\u6cd5\uff0c\u81ea\u5b9a\u4e49 UDF \u7684\u5b9e\u73b0\u903b\u8f91\uff0c\u4ee3\u7801\u5b9e\u73b0\u6b65\u9aa4\u53ef\u4ee5\u5206\u4e3a\u4e09\u90e8\u5206\uff1a</p> <ol> <li>\u53c2\u6570\u63a5\u6536</li> <li>\u81ea\u5b9a\u4e49 UDF \u6838\u5fc3\u903b\u8f91</li> <li>\u8fd4\u56de\u5904\u7406\u7ed3\u679c</li> </ol> <p>\u7b2c\u4e00\u6b65\uff1a\u53c2\u6570\u63a5\u6536</p> <pre><code>/**\n * Evaluate the GenericUDF with the arguments.\n *\n * @param arguments\n *          The arguments as DeferedObject, use DeferedObject.get() to get the\n *          actual argument Object. The Objects can be inspected by the\n *          ObjectInspectors passed in the initialize call.\n */\npublic abstract Object evaluate(DeferredObject[] arguments)\n  throws HiveException;\n</code></pre> <p>\u901a\u8fc7\u6e90\u7801\u6ce8\u91ca\u53ef\u77e5\uff0c<code>DeferedObject.get()</code> \u53ef\u4ee5\u83b7\u53d6\u53c2\u6570\u7684\u503c\u3002\u518d\u770b\u770b DeferredObject \u7684\u6e90\u7801\uff0c<code>DeferedObject.get()</code> \u8fd4\u56de\u7684\u662f Object\uff0c\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u540c\uff0c\u4f1a\u662f\u4e0d\u540c\u7684 Java \u7c7b\u578b\uff0c\u4ee5\u4e0b\u662f Hive \u5e38\u7528\u53c2\u6570\u7c7b\u578b\u5bf9\u5e94\u7684 Java \u7c7b\u578b\uff1a</p> <p>\u5bf9\u4e8e Hive \u57fa\u672c\u7c7b\u578b\uff0c\u4f20\u5165\u7684\u90fd\u662f Writable \u7c7b\u578b</p> Hive \u7c7b\u578b Java \u7c7b\u578b tinyint ByteWritable smallint ShortWritable int IntWritable bigint LongWritable string Text boolean BooleanWritable float FloatWritable double DoubleWritable Array ArrayList Map HashMap <p>\u53c2\u6570\u63a5\u6536\u793a\u4f8b\uff1a</p> <pre><code>// \u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff1aMap&lt;String, int&gt;\n\n// 1. \u53c2\u6570\u4e3anull\u65f6\u7684\u7279\u6b8a\u5904\u7406\nif (arguments[0] == null)\n    return ...\n\n// 2. \u63a5\u6536\u53c2\u6570\nMap&lt;Text, IntWritable&gt; map = (Map&lt;Text, IntWritable&gt;)arguments[0].get();\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff1a\u81ea\u5b9a\u4e49 UDF \u6838\u5fc3\u903b\u8f91</p> <p>\u5728 evaluate() \u4e2d\u5b9e\u73b0\u81ea\u5b9a\u4e49 UDF \u7684\u6838\u5fc3\u903b\u8f91\u5373\u53ef\uff0c\u6bd4\u5982\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff1a</p> <pre><code>@Override\npublic Object evaluate(DeferredObject[] arguments) throws HiveException {\n    // 1. \u53c2\u6570\u63a5\u6536\n    if (arguments[0] == null)\n        return new HashMap&lt;&gt;();\n    String str = ((Text) arguments[0].get()).toString();\n\n    // 2. \u81ea\u5b9a\u4e49UDF\u6838\u5fc3\u903b\u8f91\n    // \u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5e76\u5c06\u5176\u8bb0\u5f55\u5728Map\u4e2d\n    Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\n    for (char ch : str.toCharArray()) {\n        String key = String.valueOf(ch);\n        Integer count = map.getOrDefault(key, 0);\n        map.put(key, count + 1);\n    }\n    // 3. \u8fd4\u56de\u5904\u7406\u7ed3\u679c\n    return map;\n}\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff1a\u8fd4\u56de\u5904\u7406\u7ed3\u679c</p> <p>\u8fd9\u4e00\u6b65\u548c <code>initialize()</code> \u7684\u8fd4\u56de\u503c\u4e00\u4e00\u5bf9\u5e94\u3002</p> <p>\u57fa\u672c\u7c7b\u578b\u8fd4\u56de\u503c\u6709\u4e24\u79cd\uff1aWritable \u7c7b\u578b \u548c Java \u5305\u88c5\u7c7b\u578b\uff1a</p> <ul> <li>\u5728 initialize \u6307\u5b9a\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Writable \u7c7b\u578b \u65f6\uff0c\u5728 evaluate() \u4e2d return \u7684\u5c31\u5e94\u8be5\u662f\u5bf9\u5e94\u7684 Writable \u5b9e\u4f8b</li> <li>\u5728 initialize \u6307\u5b9a\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Java \u5305\u88c5\u7c7b\u578b \u65f6\uff0c\u5728 evaluate() \u4e2d return \u7684\u5c31\u5e94\u8be5\u662f\u5bf9\u5e94\u7684 Java \u5305\u88c5\u7c7b\u5b9e\u4f8b</li> </ul> <p>Hive \u6570\u7ec4\u548c Map \u7684\u8fd4\u56de\u503c\u7c7b\u578b\u5982\u4e0b\uff1a</p> Hive \u7c7b\u578b Java \u7c7b\u578b Array List Map Map"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#getdisplaystring","title":"getDisplayString()","text":"<p><code>getDisplayString()</code> \u8fd4\u56de\u7684\u662f explain \u65f6\u5c55\u793a\u7684\u4fe1\u606f\u3002</p> <p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u80fd return null\uff0c\u5426\u5219\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38\uff0c\u800c\u4e14\u8fd9\u4e2a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u8fd8\u4e0d\u5bb9\u6613\u6392\u67e5\u3002</p>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#close","title":"close()","text":"<p>\u8d44\u6e90\u5173\u95ed\u56de\u8c03\u51fd\u6570\uff0c\u4e0d\u662f\u62bd\u8c61\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4e0d\u5b9e\u73b0\u3002</p>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#_5","title":"\u5b8c\u6574\u793a\u4f8b","text":"<pre><code>import org.apache.hadoop.hive.ql.exec.UDFArgumentException;\nimport org.apache.hadoop.hive.ql.metadata.HiveException;\nimport org.apache.hadoop.hive.ql.udf.generic.GenericUDF;\nimport org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;\nimport org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;\nimport org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;\nimport org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;\nimport org.apache.hadoop.io.Text;\n\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class SimpleGenericUDF extends GenericUDF {\n    @Override\n    public ObjectInspector initialize(ObjectInspector[] arguments) throws UDFArgumentException {\n        // 1. \u53c2\u6570\u4e2a\u6570\u68c0\u67e5\n        if (arguments.length != 1) // \u51fd\u6570\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\n            throw new UDFArgumentException(\"\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u53c2\u6570\"); // \u5f53\u81ea\u5b9a\u4e49UDF\u53c2\u6570\u4e0e\u9884\u671f\u4e0d\u7b26\u65f6\uff0c\u629b\u51fa\u5f02\u5e38\n\n        // 2. \u53c2\u6570\u7c7b\u578b\u68c0\u67e5\n        if (arguments[0].getCategory() != ObjectInspector.Category.PRIMITIVE // \u53c2\u6570\u662fHive\u539f\u59cb\u7c7b\u578b\n                || !PrimitiveObjectInspector.PrimitiveCategory.STRING.equals(((PrimitiveObjectInspector)arguments[0]).getPrimitiveCategory())) // \u53c2\u6570\u662fHive\u7684string\u7c7b\u578b\n            throw new UDFArgumentException(\"\u51fd\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\"); // \u5f53\u81ea\u5b9a\u4e49UDF\u53c2\u6570\u4e0e\u9884\u671f\u4e0d\u7b26\u65f6\uff0c\u629b\u51fa\u5f02\u5e38\n\n        // 3. \u81ea\u5b9a\u4e49UDF\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a Map&lt;String, int&gt;\n        return ObjectInspectorFactory.getStandardMapObjectInspector(\n                PrimitiveObjectInspectorFactory.javaStringObjectInspector, // Key \u662f String\n                PrimitiveObjectInspectorFactory.javaIntObjectInspector // Value \u662f int\n        );\n    }\n\n    @Override\n    public Object evaluate(DeferredObject[] arguments) throws HiveException {\n        // 1. \u53c2\u6570\u63a5\u6536\n        if (arguments[0] == null)\n            return new HashMap&lt;&gt;();\n        String str = ((Text) arguments[0].get()).toString();\n\n        // 2. \u81ea\u5b9a\u4e49UDF\u6838\u5fc3\u903b\u8f91\n        // \u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5e76\u5c06\u5176\u8bb0\u5f55\u5728Map\u4e2d\n        Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\n        for (char ch : str.toCharArray()) {\n            String key = String.valueOf(ch);\n            Integer count = map.getOrDefault(key, 0);\n            map.put(key, count + 1);\n        }\n\n        // 3. \u8fd4\u56de\u5904\u7406\u7ed3\u679c\n        return map;\n    }\n\n    @Override\n    public String getDisplayString(String[] children) {\n        return \"\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u81ea\u5b9a\u4e49UDF~\";\n    }\n}\n</code></pre>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#udaf","title":"UDAF \u5f00\u53d1\u624b\u518c","text":"<p>UDF \u5f00\u53d1\u624b\u518c - UDAF</p>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#udtf","title":"UDTF \u5f00\u53d1\u624b\u518c","text":"<p>UDF \u5f00\u53d1\u624b\u518c - UDTF</p>"},{"location":"SQL/UDF%20%E5%BC%80%E5%8F%91/#hive-bitmap-udf","title":"hive-bitmap-udf","text":"<p>\u53ef\u4ee5\u53c2\u8003\u5b66\u4e60\u8fd9\u4e2a\u9879\u76ee\u91cc\u9762\u5bf9 Bitmap \u76f8\u5173 UDF \u7684\u5b9e\u73b0\u3002</p> <p>GitHub - hive-bitmap-udf</p>"},{"location":"Spark/1.Spark%20Core/","title":"Spark Core","text":""},{"location":"Spark/1.Spark%20Core/#spark-vs-hadoop","title":"Spark vs Hadoop","text":"<p>Spark \u662f\u4e00\u79cd\u57fa\u4e8e\u5185\u5b58\u7684\u5feb\u901f\u3001\u901a\u7528\u3001\u53ef\u6269\u5c55\u7684\u5206\u5e03\u5f0f\u5206\u6790\u8ba1\u7b97\u5f15\u64ce\u3002</p> <p>Hadoop \u5c5e\u4e8e\u4e00\u6b21\u6027\u6570\u636e\u8ba1\u7b97\u6846\u67b6\uff1a\u6846\u67b6\u5728\u5904\u7406\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u5b58\u50a8\u4ecb\u8d28\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u8fdb\u884c\u903b\u8f91\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u5904\u7406\u7684\u7ed3\u679c\u91cd\u65b0\u5b58\u50a8\u56de\u4ecb\u8d28\u4e2d\u3002\u901a\u8fc7\u78c1\u76d8 IO \u8fdb\u884c\u4f5c\u4e1a\u4f1a\u6d88\u8017\u5927\u91cf\u8d44\u6e90\u548c\u65f6\u95f4\uff0c\u6548\u7387\u5f88\u4f4e\u3002</p> <p>Spark \u6846\u67b6\u662f\u57fa\u4e8e\u5185\u5b58\u8ba1\u7b97\u7684\uff0c\u5b83\u5c06\u5927\u91cf\u7684\u8f93\u5165\u6570\u636e\u548c\u4e2d\u95f4\u6570\u636e\u90fd\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u80fd\u591f\u6709\u6548\u5730\u63d0\u9ad8\u4ea4\u4e92\u578b Job \u548c\u8fed\u4ee3\u578b Job \u7684\u6267\u884c\u6548\u7387\u3002</p> <p>Spark \u548c Hadoop \u7684\u6839\u672c\u5dee\u5f02\u662f\u591a\u4e2a\u4f5c\u4e1a\u4e4b\u95f4\u7684\u6570\u636e\u901a\u4fe1\u95ee\u9898 : Spark \u591a\u4e2a\u4f5c\u4e1a\u4e4b\u95f4\u6570\u636e\u901a\u4fe1\u662f\u57fa\u4e8e\u5185\u5b58\uff0c\u800c Hadoop \u662f\u57fa\u4e8e\u78c1\u76d8\u3002</p> <p>\u5728\u7edd\u5927\u591a\u6570\u7684\u6570\u636e\u8ba1\u7b97\u573a\u666f\u4e2d\uff0cSpark \u786e\u5b9e\u4f1a\u6bd4 MapReduce \u66f4\u6709\u4f18\u52bf\u3002\u4f46\u662f Spark \u662f\u57fa\u4e8e\u5185\u5b58\u7684\uff0c\u6240\u4ee5\u5728\u5b9e\u9645\u7684\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u5185\u5b58\u7684\u9650\u5236\uff0c\u53ef\u80fd\u4f1a\u7531\u4e8e\u5185\u5b58\u8d44\u6e90\u4e0d\u591f\u5bfc\u81f4 Job \u6267\u884c\u5931\u8d25\uff0c\u6b64\u65f6\uff0cMapReduce \u5176\u5b9e\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\uff0c\u6240\u4ee5 Spark \u5e76\u4e0d\u80fd\u5b8c\u5168\u66ff\u4ee3 MR\u3002</p>"},{"location":"Spark/1.Spark%20Core/#spark","title":"Spark \u6838\u5fc3\u6a21\u5757","text":""},{"location":"Spark/1.Spark%20Core/#spark_1","title":"Spark \u8fd0\u884c\u67b6\u6784","text":"<p>Spark \u6846\u67b6\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u8ba1\u7b97\u5f15\u64ce\uff0c\u6574\u4f53\u6765\u8bf4\uff0c\u5b83\u91c7\u7528\u4e86\u6807\u51c6 master-slave \u7684\u7ed3\u6784\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5b83\u5c55\u793a\u4e86\u4e00\u4e2a Spark \u6267\u884c\u65f6\u7684\u57fa\u672c\u7ed3\u6784\u3002\u56fe\u5f62\u4e2d\u7684 Driver \u8868\u793a master\uff0c \u8d1f\u8d23\u7ba1\u7406\u6574\u4e2a\u96c6\u7fa4\u4e2d\u7684\u4f5c\u4e1a\u4efb\u52a1\u8c03\u5ea6\u3002\u56fe\u5f62\u4e2d\u7684 Executor \u5219\u662f slave\uff0c\u8d1f\u8d23\u5b9e\u9645\u6267\u884c\u4efb\u52a1\u3002</p> <p></p> <p>\u7531\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8e Spark \u6846\u67b6\u6709\u4e24\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1a</p> <ul> <li>Driver</li> <li>Executor</li> </ul> <p>Driver\uff1a</p> <p>Spark Driver\uff0c\u6307\u5b9e\u9645\u8fd0\u884c\u5728 Spark \u5e94\u7528\u4e2d main() \u51fd\u6570\u7684\u8fdb\u7a0b\u3002Driver \u72ec\u7acb\u4e8e Master \u8fdb\u7a0b\uff0c\u5982\u679c\u662f Yarn \u96c6\u7fa4\uff0c\u90a3\u4e48 Driver \u4e5f\u53ef\u80fd\u88ab\u8c03\u5ea6\u5230 Worker \u8282\u70b9\u4e0a\u8fd0\u884c\u3002</p> <p>Driver \u5728 Spark \u4f5c\u4e1a\u6267\u884c\u65f6\u4e3b\u8981\u8d1f\u8d23\uff1a</p> <ul> <li>\u5c06\u7528\u6237\u7a0b\u5e8f\u8f6c\u5316\u4e3a\u4f5c\u4e1a (job)</li> <li>\u5728 Executor \u4e4b\u95f4\u8c03\u5ea6\u4efb\u52a1 (task)</li> <li>\u8ddf\u8e2a Executor \u7684\u6267\u884c\u60c5\u51b5</li> </ul> <p>Executor\uff1a</p> <p>Spark Executor \u5728\u7269\u7406\u4e0a\u662f Worker \u8282\u70b9\u4e2d\u7684\u4e00\u4e2a JVM \u8fdb\u7a0b\uff0c\u8d1f\u8d23\u5728 Spark \u4f5c\u4e1a\u4e2d\u8fd0\u884c\u5177\u4f53\u4efb\u52a1 (Task)\uff0c\u4efb\u52a1\u5f7c\u6b64\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002Spark \u5e94\u7528\u542f\u52a8\u65f6\uff0cExecutor \u8282\u70b9\u88ab\u540c\u65f6\u542f\u52a8\uff0c\u5e76\u4e14\u59cb\u7ec8\u4f34\u968f\u7740\u6574\u4e2a Spark \u5e94\u7528\u7684\u751f\u547d\u5468\u671f\u800c\u5b58\u5728\u3002\u5982\u679c\u6709 Executor \u8282\u70b9\u53d1\u751f\u4e86\u6545\u969c\u6216\u5d29\u6e83\uff0cSpark \u5e94\u7528\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u4f1a\u5c06\u51fa\u9519\u8282\u70b9\u4e0a\u7684\u4efb\u52a1\u8c03\u5ea6\u5230\u5176\u4ed6 Executor \u8282\u70b9\u4e0a\u7ee7\u7eed\u8fd0\u884c\u3002</p> <p>Executor \u6709\u4e24\u4e2a\u6838\u5fc3\u529f\u80fd:</p> <ul> <li>\u8d1f\u8d23\u8fd0\u884c\u7ec4\u6210 Spark \u5e94\u7528\u7684\u4efb\u52a1\uff0c\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9 Driver \u8fdb\u7a0b</li> <li>\u5b83\u4eec\u901a\u8fc7\u81ea\u8eab\u7684\u5757\u7ba1\u7406\u5668 (Block Manager) \u4e3a\u7528\u6237\u7a0b\u5e8f\u4e2d\u8981\u6c42\u7f13\u5b58\u7684 RDD \u63d0\u4f9b\u5185\u5b58\u5f0f\u5b58\u50a8\u3002RDD \u662f\u76f4\u63a5\u7f13\u5b58\u5728 Executor \u8fdb\u7a0b\u5185\u7684\uff0c\u56e0\u6b64\u4efb\u52a1\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u5145\u5206\u5229\u7528\u7f13\u5b58\u6570\u636e\u52a0\u901f\u8fd0\u7b97\u3002</li> </ul>"},{"location":"Spark/1.Spark%20Core/#wordcount","title":"WordCount","text":"<p>\u6ce8\u610f\u4f7f\u7528 Maven \u521b\u5efa\u9879\u76ee\uff0cadd framework support for Scala\uff0c\u7136\u540e\u5728 Maven \u4e2d\u6dfb\u52a0 Spark \u4f9d\u8d56\uff0c\u6ce8\u610f\u5fc5\u987b\u4f7f\u7528 JDK1.8\u3002</p> <pre><code>hello world\nhello spark\nhi java\n\nhello java\nhello spark\nhi spark\n\npackage com.anson\n\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.{SparkConf, SparkContext}\n\nobject Spark01_WordCount {\n  def main(args: Array[String]): Unit = {\n    // \u5efa\u7acb\u548cSpark\u6846\u67b6\u7684\u8fde\u63a5\n    val sparkConf = new SparkConf().setMaster(\"local\").setAppName(\"WordCount\")\n    val sc = new SparkContext(sparkConf)\n\n    // \u6267\u884c\u4e1a\u52a1\u64cd\u4f5c\n    // \u8bfb\u53d6\u6587\u4ef6\uff0c\u83b7\u53d6\u4e00\u884c\u884c\u7684\u6570\u636e\n    val lines: RDD[String] = sc.textFile(\"data\")\n\n    // \u5c06\u4e00\u884c\u884c\u7684\u6570\u636e\u8fdb\u884c\u5206\u8bcd\uff0c\u6241\u5e73\u5316 hello, world, hello, spark\n    val words: RDD[String] = lines.flatMap(_.split(\" \"))\n\n    // \u5206\u7ec4 (hello, hello, hello), (world, world)\n    val wordGroup: RDD[(String, Iterable[String])] = words.groupBy(word =&gt; word)\n\n    // \u5bf9\u5206\u7ec4\u540e\u7684\u6570\u636e\u8f6c\u6362\n    val wordToCount = wordGroup.map {\n      case (word, list) =&gt; {\n        (word, list.size)\n      }\n    }\n\n    // \u5c06\u7ed3\u679c\u6253\u5370\u5230\u63a7\u5236\u53f0\n    val array: Array[(String, Int)] = wordToCount.collect()\n    array.foreach(println)\n\n    // \u5173\u95ed\u8fde\u63a5\n    sc.stop()\n  }\n}\n</code></pre>"},{"location":"Spark/1.Spark%20Core/#spark_2","title":"Spark \u7684\u4e09\u4e2a\u5f00\u53d1\u5165\u95e8\u7c7b","text":"<ul> <li>SparkConf</li> </ul> <p>SparkConf \u662f Spark \u7684\u914d\u7f6e\u7c7b\uff0c\u4f5c\u7528\u662f\u5c06\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 kv \u5bf9\u52a0\u8f7d\u5230\u5185\u5b58\u4e4b\u4e2d\u3002\u53e6\u5916\u6211\u4eec\u770b\u5230\u8be5\u7c7b\u4e2d\u6709\u4e00\u4e2a\u6838\u5fc3\u7684\u6570\u636e\u7ed3\u6784\uff1aConcurrentHashMap\uff0c\u56e0\u6b64\u662f\u4e00\u4e2a\u7ebf\u7a0b\u7ebf\u7a0b\u5b89\u5168\u7684 kv \u7ed3\u6784\u3002\u8be5\u7c7b\u4e2d\u6709\u5927\u91cf\u7684 set \u548c get \u65b9\u6cd5\u3002</p> <p>\u6ce8\u610f\uff1a\u4e00\u65e6 SparkConf \u5bf9\u8c61\u88ab\u4f20\u9012\u7ed9 Spark\uff0c\u5b83\u5c31\u4f1a\u88ab\u514b\u9686\uff0c\u5e76\u4e14\u7528\u6237\u4e0d\u80fd\u518d\u4fee\u6539\u5b83\u3002Spark \u4e0d\u652f\u6301\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u914d\u7f6e\u3002</p> <ul> <li>SparkContext</li> </ul> <p>SparkContext \u662f Spark \u4e2d\u7684\u4e3b\u8981\u5165\u53e3\u70b9\uff0c\u5b83\u662f\u4e0e Spark \u96c6\u7fa4\u901a\u4fe1\u7684\u6838\u5fc3\u5bf9\u8c61\u3002SparkContext \u7684\u6838\u5fc3\u4f5c\u7528\u662f\u521d\u59cb\u5316 Spark \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u6240\u9700\u8981\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u5305\u62ec\u9ad8\u5c42\u8c03\u5ea6\u5668(DAGScheduler)\u3001\u5e95\u5c42\u8c03\u5ea6\u5668(TaskScheduler)\u548c\u8c03\u5ea6\u5668\u7684\u901a\u4fe1\u7ec8\u7aef(SchedulerBackend)\uff0c\u540c\u65f6\u8fd8\u4f1a\u8d1f\u8d23 Spark \u7a0b\u5e8f\u5411 Master \u6ce8\u518c\u7a0b\u5e8f\u7b49\u3002</p> <ul> <li>SparkSession</li> </ul> <p>SparkSession \u4e5f\u662f Spark \u4e2d\u7684\u4e3b\u8981\u5165\u53e3\u70b9\u3002SparkSession \u4e3b\u8981\u7528\u5728 SparkSQL \u4e2d\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u5728\u5176\u4ed6\u573a\u5408\uff0c\u4ed6\u53ef\u4ee5\u4ee3\u66ff SparkContext\u3002SparkSession \u5b9e\u9645\u4e0a\u5c01\u88c5\u4e86 SparkContext\u3002</p>"},{"location":"Spark/1.Spark%20Core/#rdd","title":"RDD \u7b80\u4ecb","text":"<p>RDD(Resilient Distributed Dataset) \u53eb\u505a\u5f39\u6027\u5206\u5e03\u5f0f\u6570\u636e\u96c6\uff0c\u662f Spark \u4e2d\u6700\u57fa\u672c\u7684\u6570\u636e\u5904\u7406\u6a21\u578b\u3002\u4ee3\u7801\u4e2d\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u4ee3\u8868\u4e00\u4e2a\u5f39\u6027\u7684\u3001\u4e0d\u53ef\u53d8\u3001\u53ef\u5206\u533a\u3001\u91cc\u9762\u7684\u5143\u7d20\u53ef\u5e76\u884c\u8ba1\u7b97\u7684\u96c6\u5408\u3002</p> <p>A Resilient Distributed Dataset (RDD), the basic abstraction in Spark. Represents an immutable, partitioned collection of elements that can be operated on in parallel.</p> <p>\u5f39\u6027\uff1a</p> <ul> <li>\u5b58\u50a8\u7684\u5f39\u6027\uff1a\u5185\u5b58\u4e0e\u78c1\u76d8\u7684\u81ea\u52a8\u5207\u6362</li> <li>\u5bb9\u9519\u7684\u5f39\u6027\uff1a\u57fa\u4e8e\u8840\u7f18\u7684\u9ad8\u6548\u5bb9\u9519</li> <li>\u8ba1\u7b97\u7684\u5f39\u6027\uff1aTask \u5931\u8d25\u540e\u7684\u81ea\u52a8\u91cd\u8bd5</li> <li>\u5206\u7247\u7684\u5f39\u6027\uff1a\u53ef\u6839\u636e\u9700\u8981\u91cd\u65b0\u5206\u7247</li> </ul> <p>\u5206\u5e03\u5f0f\uff1a\u6570\u636e\u5b58\u50a8\u5728\u5927\u6570\u636e\u96c6\u7fa4\u4e0d\u540c\u8282\u70b9\u4e0a</p> <p>\u6570\u636e\u96c6\uff1aRDD \u5c01\u88c5\u4e86\u8ba1\u7b97\u903b\u8f91\uff0c\u5e76\u4e0d\u4fdd\u5b58\u6570\u636e</p> <p>\u6570\u636e\u62bd\u8c61\uff1aRDD \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u9700\u8981\u5b50\u7c7b\u5177\u4f53\u5b9e\u73b0</p> <p>\u4e0d\u53ef\u53d8\uff1aRDD \u5c01\u88c5\u4e86\u8ba1\u7b97\u903b\u8f91\uff0c\u662f\u4e0d\u53ef\u4ee5\u6539\u53d8\u7684\u3002\u5982\u679c\u60f3\u8981\u6539\u53d8\uff0c\u53ea\u80fd\u4ea7\u751f\u65b0\u7684 RDD\uff0c\u5728\u65b0\u7684 RDD \u91cc\u9762\u5c01\u88c5\u8ba1\u7b97\u903b\u8f91</p> <p>\u53ef\u5206\u533a\u3001\u5e76\u884c\u8ba1\u7b97</p> <p></p> <p>RDD \u662f Spark \u5bf9\u4e8e\u5206\u5e03\u5f0f\u6570\u636e\u96c6\u7684\u62bd\u8c61\uff0c\u6bcf\u4e00\u4e2a RDD \u90fd\u4ee3\u8868\u7740\u4e00\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u5f62\u6001\u3002\u6bd4\u5982 lineRDD\uff0c\u5b83\u8868\u793a\u6570\u636e\u5728\u96c6\u7fa4\u4e2d\u4ee5\u884c\uff08Line\uff09\u7684\u5f62\u5f0f\u5b58\u5728\uff1b\u800c wordRDD \u5219\u610f\u5473\u7740\u6570\u636e\u7684\u5f62\u6001\u662f\u5355\u8bcd\uff0c\u5206\u5e03\u5728\u8ba1\u7b97\u96c6\u7fa4\u4e2d\u3002</p> <p>RDD \u548c\u666e\u901a\u6570\u636e\u7ed3\u6784/\u5bb9\u5668\u7684\u533a\u522b\uff1f</p> <ol> <li>RDD\u53ea\u662f\u4e00\u4e2a\u903b\u8f91\u6982\u5ff5\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u4e0d\u4f1a\u771f\u6b63\u5730\u4e3a\u67d0\u4e2a RDD \u5206\u914d\u7a7a\u95f4\uff08\u9664\u975e\u9700\u8981\u88ab\u7f13\u5b58\uff09\u3002RDD \u4e2d\u7684\u6570\u636e\u53ea\u4f1a\u5728\u8ba1\u7b97\u4e2d\u4ea7\u751f\uff0c\u800c\u4e14\u5728\u8ba1\u7b97\u5b8c\u6210\u540e\u6d88\u5931\u3002</li> <li>RDD \u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6570\u636e\u5206\u533a\uff0c\u4e0d\u540c\u5206\u533a\u53ef\u4ee5\u7531\u4e0d\u540c\u7684 task \u5728\u4e0d\u540c\u8282\u70b9\u8fdb\u884c\u5904\u7406\u3002</li> </ol>"},{"location":"Spark/1.Spark%20Core/#rdd_1","title":"RDD \u7684\u6838\u5fc3\u5c5e\u6027","text":"<p>Internally, each RDD is characterized by five main properties:</p> <ul> <li>A list of partitions</li> <li>A function for computing each split</li> <li>A list of dependencies on other RDDs</li> <li>Optionally, a Partitioner for key-value RDDs (e.g. to say that the RDD is hash-partitioned)</li> <li>Optionally, a list of preferred locations to compute each split on (e.g. block locations for an HDFS file)</li> </ul> <ul> <li>\u5206\u533a\u5217\u8868\uff1a\u6bcf\u4e2a\u5206\u533a\u4e3a RDD \u7684\u4e00\u90e8\u5206\u6570\u636e\uff0c\u5206\u533a\u7684\u6570\u91cf\u51b3\u5b9a\u4e86 RDD \u7684\u5e76\u884c\u5ea6\u3002</li> <li>\u5206\u533a\u8ba1\u7b97\u51fd\u6570\uff1aSpark \u5728\u8ba1\u7b97\u65f6\uff0c\u662f\u4f7f\u7528\u5206\u533a\u51fd\u6570\u5bf9\u6bcf\u4e00\u4e2a\u5206\u533a\u8fdb\u884c\u8ba1\u7b97\u3002</li> <li>RDD \u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff1aRDD \u662f\u8ba1\u7b97\u6a21\u578b\u7684\u5c01\u88c5\uff0c\u5f53\u9700\u6c42\u4e2d\u9700\u8981\u5c06\u591a\u4e2a\u8ba1\u7b97\u6a21\u578b\u8fdb\u884c\u7ec4\u5408\u65f6\uff0c\u5c31\u9700\u8981\u5c06\u591a\u4e2a RDD \u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\u3002</li> <li>\u5206\u533a\u5668 (\u53ef\u9009) \uff1a\u5f53\u6570\u636e\u4e3a KV \u7c7b\u578b\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u5206\u533a\u5668\uff08Hash/Range/\u81ea\u5b9a\u4e49\uff09\u3002</li> <li>\u9996\u9009\u4f4d\u7f6e (\u53ef\u9009)\uff1a\u8ba1\u7b97\u6570\u636e\u65f6\uff0c\u5224\u65ad\u628a\u8ba1\u7b97\u53d1\u9001\u5230\u54ea\u4e2a\u8282\u70b9\u6548\u7387\u6700\u4f18\uff1a\u79fb\u52a8\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u79fb\u52a8\u6570\u636e\u3002</li> </ul> <p>\u603b\u7ed3\uff1a</p> <ul> <li>RDD \u53ef\u4ee5\u770b\u505a\u662f\u4e00\u7cfb\u5217\u7684\u5206\u533a\uff0c\u6bcf\u4e2a\u5206\u533a\u5c31\u662f\u4e00\u4e2a\u6570\u636e\u96c6\u7247\u6bb5</li> <li>RDD \u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb</li> <li>\u7b97\u5b50\u662f\u4f5c\u7528\u5728\u5206\u533a\u4e4b\u4e0a\u7684</li> <li>\u5206\u533a\u5668\u662f\u4f5c\u7528\u5728 KV \u7c7b\u578b\u7684 RDD \u4e0a\u7684</li> <li>\u79fb\u52a8\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u79fb\u52a8\u6570\u636e</li> </ul>"},{"location":"Spark/1.Spark%20Core/#rdd_2","title":"RDD \u7684\u6267\u884c\u539f\u7406","text":"<p>\u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6\u6765\u8bb2\uff0c\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u9700\u8981\u8ba1\u7b97\u8d44\u6e90 (\u5185\u5b58 &amp; CPU) \u548c\u8ba1\u7b97\u6a21\u578b (\u903b\u8f91)\u3002\u6267\u884c\u65f6\uff0c\u9700\u8981\u5c06\u8ba1\u7b97\u8d44\u6e90\u548c\u8ba1\u7b97\u6a21\u578b\u8fdb\u884c\u534f\u8c03\u548c\u6574\u5408\u3002</p> <p>Spark \u6846\u67b6\u5728\u6267\u884c\u65f6\uff0c\u5148\u7533\u8bf7\u8d44\u6e90\uff0c\u7136\u540e\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u5904\u7406\u903b\u8f91\u5206\u89e3\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u7136\u540e\u5c06\u4efb\u52a1\u53d1\u5230\u5df2\u7ecf\u5206\u914d\u8d44\u6e90\u7684\u8ba1\u7b97\u8282\u70b9\u4e0a\uff0c\u6309\u7167\u6307\u5b9a\u7684\u8ba1\u7b97\u6a21\u578b\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff0c\u6700\u540e\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p></p> <p></p> <p>\u4ece\u4ee5\u4e0a\u6d41\u7a0b\u53ef\u4ee5\u770b\u51fa RDD \u5728\u6574\u4e2a\u6d41\u7a0b\u4e2d\u4e3b\u8981\u7528\u4e8e\u5c06\u903b\u8f91\u8fdb\u884c\u5c01\u88c5\uff0c\u5e76\u751f\u6210 Task \u53d1\u9001\u7ed9 Executor \u8282\u70b9\u6267\u884c\u8ba1\u7b97\u3002</p>"},{"location":"Spark/1.Spark%20Core/#rdd_3","title":"RDD \u7684\u521b\u5efa","text":"<p>\u5728 Spark \u4e2d\u521b\u5efa RDD \u7684\u521b\u5efa\u65b9\u5f0f\uff1a</p> <ul> <li>\u4ece\u96c6\u5408 (\u5185\u5b58) \u4e2d\u521b\u5efa RDD</li> <li>\u4ece\u672c\u5730\u6587\u4ef6\u521b\u5efa RDD</li> <li>\u4ece HDFS \u8bfb\u53d6\u6587\u4ef6\u521b\u5efa RDD</li> </ul> <pre><code>object RDD_Memory {\n  def main(args: Array[String]): Unit = {\n    // \u51c6\u5907\u73af\u5883\n    // [*]\u6307\u5f53\u524d\u673a\u5668\u53ef\u7528\u6838\u5fc3\u6570\uff0c\u59828\u6838\uff0c\u6b64\u65f6Spark\u4f1a\u75288\u4e2a\u7ebf\u7a0b\u6a21\u62df\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"RDD\")\n    val sc = new SparkContext(sparkConf)\n\n    // \u4ece\u5185\u5b58\u4e2d\u521b\u5efaRDD\uff0c\u5c06\u5185\u5b58\u4e2d\u96c6\u5408\u7684\u6570\u636e\u4f5c\u4e3a\u5904\u7406\u7684\u6570\u636e\u6e90\n    val rdd = sc.parallelize(Array(1, 2, 3, 4, 5))\n    // val rdd = sc.makeRDD(Array(1, 2, 3, 4, 5)) // \u5e95\u5c42\u5b9e\u73b0\u5c31\u662f\u8c03\u7528\u4e86RDD\u5bf9\u8c61\u7684parallelize()\u65b9\u6cd5\n    rdd.collect().foreach(println)\n\n    // \u5173\u95ed\u73af\u5883\n    sc.stop()\n  }\n}\nobject RDD_File {\n  def main(args: Array[String]): Unit = {\n    // \u51c6\u5907\u73af\u5883\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"RDD\")\n    val sc = new SparkContext(sparkConf)\n\n    // \u4ece\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u4f5c\u4e3a\u6570\u636e\u6e90\n    // \u8def\u5f84\u9ed8\u8ba4\u4ee5\u5f53\u524d\u73af\u5883\u7684\u6839\u8def\u5f84\u4e3a\u57fa\u51c6\uff0c\u7edd\u5bf9\u3001\u76f8\u5bf9\u8def\u5f84\u90fd\u884c\uff0c\u4e5f\u53ef\u4ee5\u662f\u76ee\u5f55\u540d\n    val rdd = sc.textFile(\"data/1.txt\")\n    rdd.collect().foreach(println)\n\n    // \u5173\u95ed\u73af\u5883\n    sc.stop()\n  }\n}\n</code></pre>"},{"location":"Spark/1.Spark%20Core/#jobstagetask","title":"Job\u3001Stage\u3001Task","text":"<ul> <li>\u4e00\u4e2a Action \u7b97\u5b50\u5bf9\u5e94\u4e00\u4e2a Job</li> <li>Stage \u6309\u7167\u5bbd\u4f9d\u8d56\u5212\u5206</li> <li>\u4e00\u4e2a\u5206\u533a\u5bf9\u5e94\u4e00\u4e2a Task</li> </ul> <p>\u7406\u8bba\u4e0a\uff1a\u6bcf\u4e00\u4e2a Stage \u4e0b\u6709\u591a\u5c11\u4e2a\u5206\u533a\uff0c\u5c31\u6709\u591a\u5c11\u4e2a Task\uff0cTask \u7684\u6570\u91cf\u5c31\u662f\u4efb\u52a1\u7684\u6700\u5927\u5e76\u884c\u5ea6\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4e00\u4e2a Task \u4f7f\u7528\u4e00\u4e2a core\u3002</p> <p>\u5b9e\u9645\u4e0a\uff1a\u6700\u5927\u7684\u5e76\u884c\u5ea6\uff0c\u53d6\u51b3\u4e8e\u4efb\u52a1\u8fd0\u884c\u65f6\u4f7f\u7528\u7684 Executor \u62e5\u6709\u7684\u6700\u5927\u6838\u6570\u3002</p> <p>\u5982\u679c Task \u7684\u6570\u91cf\u8d85\u8fc7\u4e86\u6838\u6570\uff0c\u90a3\u4e48\u591a\u51fa\u6765\u7684 Task \u5c31\u9700\u8981\u7b49\u5f85\u4e4b\u524d\u7684 Task \u6267\u884c\u5b8c\u6bd5\u540e\u624d\u80fd\u6267\u884c\u3002</p>"},{"location":"Spark/1.Spark%20Core/#_1","title":"\u5206\u533a\u4e0e\u5e76\u884c\u5ea6","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpark \u53ef\u4ee5\u5c06\u4e00\u4e2a\u4f5c\u4e1a\u5207\u5206\u591a\u4e2a\u4efb\u52a1\u540e\uff0c\u53d1\u9001\u7ed9 Executor \u8282\u70b9\u5e76\u884c\u8ba1\u7b97\uff0c\u800c\u80fd\u591f\u5e76\u884c\u8ba1\u7b97\u7684\u4efb\u52a1\u6570\u91cf\u6211\u4eec\u79f0\u4e4b\u4e3a\u5e76\u884c\u5ea6\u3002\u8fd9\u4e2a\u6570\u91cf\u53ef\u4ee5\u5728\u6784\u5efa RDD \u65f6\u6307\u5b9a\u3002</p> <p>\u5206\u533a\u6570\uff1a\u662f\u4e00\u4e2a\u9759\u6001\u7684\u6982\u5ff5\uff0c\u5982\u679c\u662f\u5185\u5b58\u6570\u636e\uff0c\u90a3\u4e48\u5206\u533a\u6570\u548c\u8bbe\u7f6e\u7684\u5e76\u884c\u5ea6\u4e00\u81f4\uff1b\u5982\u679c\u662f HDFS \u6587\u4ef6\uff0c\u90a3\u4e48\u5206\u533a\u6570\u5c31\u662f HDFS \u6587\u4ef6 Block \u4e2a\u6570\u3002</p> <p>\u5e76\u884c\u5ea6\uff1a\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u6982\u5ff5\uff0c\u53d6\u51b3\u4e8e\u5f53\u524d\u8d44\u6e90\u7684\u53ef\u7528\u6838\u6570\u3002</p> <p>\u5e76\u884c\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u5206\u533a\u6570\u3002</p> <pre><code>object RDD_Par {\n  def main(args: Array[String]): Unit = {\n    // \u51c6\u5907\u73af\u5883\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"RDD\")\n    val sc = new SparkContext(sparkConf)\n\n    // RDD\u7684\u5e76\u884c\u5ea6\u548c\u5206\u533a\n    // makeRDD\u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u5206\u533a\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3adefaultParallelism\uff08\u9ed8\u8ba4\u5e76\u884c\u5ea6\uff09,\n    // \u662f\u4ece\u4e0a\u9762\u7684sparkConf\u4e2d\u83b7\u53d6\u7684\uff0c\u5373\u5f53\u524d\u73af\u5883\u7684\u6700\u5927\u53ef\u7528\u6838\u6570\n    val rdd = sc.makeRDD(List(1, 2, 3, 4), 2)\n    rdd.saveAsTextFile(\"output\")\n\n    // \u5173\u95ed\u73af\u5883\n    sc.stop()\n  }\n}\n</code></pre> <p>\u8bfb\u53d6\u5185\u5b58\u6570\u636e\u65f6\uff0c\u6570\u636e\u53ef\u4ee5\u6309\u7167\u5e76\u884c\u5ea6\u7684\u8bbe\u5b9a\u8fdb\u884c\u6570\u636e\u7684\u5206\u533a\u64cd\u4f5c\uff0c\u6570\u636e\u5206\u533a\u89c4\u5219\u7684 Spark \u6838\u5fc3\u6e90\u7801\u5982\u4e0b\uff1a</p> <pre><code>def positions(length: Long, numSlices: Int): Iterator[(Int, Int)] = {\n  (0 until numSlices).iterator.map { i =&gt;\n    val start = ((i * length) / numSlices).toInt\n    val end = (((i + 1) * length) / numSlices).toInt\n    (start, end)\n  }\n}\nobject RDD_Par_File {\n  def main(args: Array[String]): Unit = {\n    // \u51c6\u5907\u73af\u5883\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"RDD\")\n    val sc = new SparkContext(sparkConf)\n\n    // textFile\u53ef\u4ee5\u5c06\u6587\u4ef6\u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u9ed8\u8ba4\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5206\u533a\uff08\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09\n    // minPartitions\uff1a\u6700\u5c0f\u5206\u533a\u6570\u91cf\n    // math.min(defaultParallelism, 2)\n    val rdd = sc.textFile(\"data/1.txt\", 2)\n    rdd.saveAsTextFile(\"output\")\n\n    // \u5173\u95ed\u73af\u5883\n    sc.stop()\n  }\n}\n</code></pre> <p>\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u65f6\uff0c\u5206\u533a\u4e2a\u6570\u9ed8\u8ba4 = HDFS \u6587\u4ef6\u5207\u7247\u7684\u4e2a\u6570\u3002</p> <p>\u5047\u8bbe\u6587\u4ef6\u6709 7 \u4e2a\u5b57\u8282\uff0c<code>totalSize = 7</code> \uff0c<code>goalSize = 7/2 = 3</code> \uff0c<code>7/3 = 2 ... 1</code> \uff0c\u4e5f\u5c31\u662f\u8bf4 2 \u4e2a\u5206\u533a\u591f\u88c5 6 \u4e2a\u5b57\u8282\uff0c\u8fd8\u6709\u5269\u4f59 1 \u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u6b64\u65f6\u8fd9\u4e00\u4e2a\u5b57\u8282 <code>1/3 = 33.3% &gt; 10%</code> \uff0c\u8d85\u8fc7\u4e86 hadoop \u7684 1.1 \u500d\u539f\u5219\uff0c\u4f1a\u591a\u521b\u5efa\u4e00\u4e2a\u5206\u533a\uff0c\u56e0\u6b64\u6700\u7ec8\u4f1a\u521b\u5efa 3 \u4e2a\u5206\u533a\u3002</p> <p>Spark \u5206\u533a\u6570\u636e\u7684\u5206\u914d\uff1a</p> <ul> <li>Spark \u8bfb\u53d6\u6587\u4ef6\uff0c\u91c7\u53d6\u7684\u662f hadoop \u7684\u65b9\u5f0f\u8bfb\u53d6\uff0c\u5373\u4e00\u884c\u4e00\u884c\u5730\u8bfb\u53d6\uff0c\u548c\u5b57\u8282\u6570\u65e0\u5173\u3002</li> <li>\u6570\u636e\u8bfb\u53d6\u65f6\u4ee5\u504f\u79fb\u91cf\u4e3a\u5355\u4f4d\u3002</li> </ul>"},{"location":"Spark/1.Spark%20Core/#spark_3","title":"Spark \u8c03\u5ea6\u7cfb\u7edf","text":"<p>\u4ece\u5168\u5c40\u89c6\u89d2\u6765\u770b\uff0cDAGScheduler \u662f\u4efb\u52a1\u8c03\u5ea6\u7684\u53d1\u8d77\u8005\uff0cDAGScheduler \u4ee5 TaskSet \u4e3a\u7c92\u5ea6\uff0c\u5411 TaskScheduler \u63d0\u4ea4\u4efb\u52a1\u8c03\u5ea6\u8bf7\u6c42\u3002TaskScheduler \u5728\u521d\u59cb\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u521b\u5efa\u4efb\u52a1\u8c03\u5ea6\u961f\u5217\uff0c\u4efb\u52a1\u8c03\u5ea6\u961f\u5217\u7528\u4e8e\u7f13\u5b58 DAGScheduler \u63d0\u4ea4\u7684 TaskSets\u3002TaskScheduler \u7ed3\u5408 SchedulerBackend \u63d0\u4f9b\u7684 WorkerOffer\uff0c\u6309\u7167\u9884\u5148\u8bbe\u7f6e\u7684\u8c03\u5ea6\u7b56\u7565\u4f9d\u6b21\u5bf9\u961f\u5217\u4e2d\u7684\u4efb\u52a1\u8fdb\u884c\u8c03\u5ea6\u3002</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0cDAGScheduler \u624b\u91cc\u6709\u201c\u6d3b\u513f\u201d\uff0cSchedulerBackend \u624b\u91cc\u6709\u201c\u4eba\u529b\u201d\uff0cTaskScheduler \u7684\u6838\u5fc3\u804c\u80fd\uff0c\u5c31\u662f\u628a\u5408\u9002\u7684\u201c\u6d3b\u513f\u201d\u6d3e\u53d1\u5230\u5408\u9002\u7684\u201c\u4eba\u201d\u7684\u624b\u91cc\u3002</p>"},{"location":"Spark/1.Spark%20Core/#dagscheduler","title":"DAGScheduler","text":"<p>DAGScheduler \u7684\u6838\u5fc3\u804c\u8d23\uff0c\u662f\u628a\u8ba1\u7b97\u56fe DAG \u62c6\u5206\u4e3a\u6267\u884c\u9636\u6bb5 Stages\uff0cStages \u6307\u7684\u662f\u4e0d\u540c\u7684\u8fd0\u884c\u9636\u6bb5\uff0c\u540c\u65f6\u8fd8\u8981\u8d1f\u8d23\u628a Stages \u8f6c\u5316\u4e3a\u4efb\u52a1\u96c6\u5408 TaskSets\u3002</p> <p>\u7528\u4e00\u53e5\u8bdd\u6765\u6982\u62ec\u4ece DAG \u5230 Stages \u7684\u62c6\u5206\u8fc7\u7a0b\uff0c\u90a3\u5c31\u662f\uff1a\u4ee5 Actions \u7b97\u5b50\u4e3a\u8d77\u70b9\uff0c\u4ece\u540e\u5411\u524d\u56de\u6eaf DAG\uff0c\u4ee5 Shuffle \u64cd\u4f5c\u4e3a\u8fb9\u754c\u53bb\u5212\u5206 Stages\u3002</p> <p>\u5728 Stages \u521b\u5efa\u5b8c\u6bd5\u4e4b\u540e\uff0c\u5c31\u5230\u4e86\u89e6\u53d1\u8ba1\u7b97\u7684\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\uff1aSpark \u4ece\u540e\u5411\u524d\uff0c\u4ee5\u9012\u5f52\u7684\u65b9\u5f0f\uff0c\u4f9d\u6b21\u63d0\u8bf7\u6267\u884c\u6240\u6709\u7684 Stages\u3002</p> <p></p> <p>\u5bf9\u4e8e\u63d0\u8bf7\u6267\u884c\u7684\u6bcf\u4e00\u4e2a Stage\uff0cDAGScheduler \u6839\u636e Stage \u5185 RDD \u7684 partitions \u5c5e\u6027\u521b\u5efa\u5206\u5e03\u5f0f\u4efb\u52a1\u96c6\u5408 TaskSet\u3002TaskSet \u5305\u542b\u4e00\u4e2a\u53c8\u4e00\u4e2a\u5206\u5e03\u5f0f\u4efb\u52a1 Task\uff0cRDD \u6709\u591a\u5c11\u6570\u636e\u5206\u533a\uff0cTaskSet \u5c31\u5305\u542b\u591a\u5c11\u4e2a Task\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cTask \u4e0e RDD \u7684\u5206\u533a\uff0c\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002</p> <p>Task \u5bf9\u8c61\u7684\u91cd\u8981\u5c5e\u6027\uff1a</p> <p></p> <p>\u4e0d\u96be\u53d1\u73b0\uff0ctaskBinary\u3001partition \u548c locs \u8fd9\u4e09\u4e2a\u5c5e\u6027\uff0c\u4e00\u8d77\u63cf\u8ff0\u4e86\u8fd9\u6837\u4e00\u4ef6\u4e8b\u60c5\uff1aTask \u5e94\u8be5\u5728\u54ea\u91cc\uff08locs\uff09\u4e3a\u8c01\uff08partition\uff09\u6267\u884c\u4ec0\u4e48\u4efb\u52a1\uff08taskBinary\uff09\u3002</p> <p>DAGScheduler \u7684\u4e3b\u8981\u804c\u8d23</p> <ul> <li>\u6839\u636e\u7528\u6237\u4ee3\u7801\u6784\u5efa DAG\uff1b</li> <li>\u4ee5 Shuffle \u4e3a\u8fb9\u754c\u5207\u5272 Stages\uff1b</li> <li>\u57fa\u4e8e Stages \u521b\u5efa TaskSets\uff0c\u5e76\u5c06 TaskSets \u63d0\u4ea4\u7ed9 TaskScheduler \u8bf7\u6c42\u8c03\u5ea6\u3002</li> </ul>"},{"location":"Spark/1.Spark%20Core/#schedulerbackend","title":"SchedulerBackend","text":"<p>\u5bf9\u4e8e\u96c6\u7fa4\u4e2d\u53ef\u7528\u7684\u8ba1\u7b97\u8d44\u6e90\uff0cSchedulerBackend \u7528\u4e00\u4e2a\u53eb\u505a ExecutorDataMap \u7684\u6570\u636e\u7ed3\u6784\uff0c\u6765\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u8ba1\u7b97\u8282\u70b9\u4e2d Executors \u7684\u8d44\u6e90\u72b6\u6001\u3002</p> <p>\u8fd9\u91cc\u7684 ExecutorDataMap \u662f\u4e00\u79cd HashMap\uff0c\u5b83\u7684 Key \u662f\u6807\u8bb0 Executor \u7684\u5b57\u7b26\u4e32\uff0cValue \u662f\u4e00\u79cd\u53eb\u505a ExecutorData \u7684\u6570\u636e\u7ed3\u6784\u3002ExecutorData \u7528\u4e8e\u5c01\u88c5 Executor \u7684\u8d44\u6e90\u72b6\u6001\uff0c\u5982 RPC \u5730\u5740\u3001\u4e3b\u673a\u5730\u5740\u3001\u53ef\u7528 CPU \u6838\u6570\u548c\u6ee1\u914d CPU \u6838\u6570\u7b49\u7b49\uff0c\u5b83\u76f8\u5f53\u4e8e\u662f\u5bf9 Executor \u505a\u7684\u201c\u8d44\u6e90\u753b\u50cf\u201d\u3002</p> <p></p> <p>\u6b64\u5916\uff0cSchedulerBackend \u4ee5 WorkerOffer \u4e3a\u7c92\u5ea6\u63d0\u4f9b\u8ba1\u7b97\u8d44\u6e90\u3002\u5176\u4e2d\uff0cWorkerOffer \u5c01\u88c5\u4e86 Executor ID\u3001\u4e3b\u673a\u5730\u5740\u548c CPU \u6838\u6570\uff0c\u5b83\u7528\u6765\u8868\u793a\u4e00\u4efd\u53ef\u7528\u4e8e\u8c03\u5ea6\u4efb\u52a1\u7684\u7a7a\u95f2\u8d44\u6e90\u3002</p> <p>SchedulerBackend \u5982\u4f55\u52a8\u6001\u7ef4\u62a4 ExecutorDataMap\uff1f</p> <p>SchedulerBackend \u4e0e\u96c6\u7fa4\u5185\u6240\u6709 Executors \u4e2d\u7684 ExecutorBackend \u4fdd\u6301\u5468\u671f\u6027\u901a\u4fe1\uff0c\u53cc\u65b9\u901a\u8fc7 LaunchedExecutor\u3001RemoveExecutor\u3001StatusUpdate \u7b49\u6d88\u606f\u6765\u4e92\u901a\u6709\u65e0\u3001\u53d8\u66f4\u53ef\u7528\u8ba1\u7b97\u8d44\u6e90\u3002</p>"},{"location":"Spark/1.Spark%20Core/#taskscheduler","title":"TaskScheduler","text":"<p>\u5bf9\u4e8e SchedulerBackend \u63d0\u4f9b\u7684\u4e00\u4e2a\u4e2a WorkerOffer\uff0cTaskScheduler \u662f\u4f9d\u636e\u4ec0\u4e48\u89c4\u5219\u6765\u6311\u9009 Tasks \u7684\u5462\uff1f</p> <p>\u5bf9\u4e8e\u7ed9\u5b9a\u7684 WorkerOffer\uff0cTaskScheduler \u662f\u6309\u7167\u4efb\u52a1\u7684\u672c\u5730\u503e\u5411\u6027\uff0c\u6765\u9074\u9009\u51fa TaskSet \u4e2d\u9002\u5408\u8c03\u5ea6\u7684 Tasks\u3002</p> \u4efb\u52a1\u7684\u672c\u5730\u503e\u5411\u6027 <p>Task \u4e0e RDD \u7684 partitions \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u5728\u521b\u5efa Task \u7684\u8fc7\u7a0b\u4e2d\uff0cDAGScheduler \u4f1a\u6839\u636e\u6570\u636e\u5206\u533a\u7684\u7269\u7406\u5730\u5740\uff0c\u6765\u4e3a Task \u8bbe\u7f6e locs \u5c5e\u6027\u3002locs \u5c5e\u6027\u8bb0\u5f55\u4e86\u6570\u636e\u5206\u533a\u6240\u5728\u7684\u8ba1\u7b97\u8282\u70b9\u3001\u751a\u81f3\u662f Executor \u8fdb\u7a0b ID\u3002</p> <p>\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5f53\u6211\u4eec\u8c03\u7528 textFile API \u4ece HDFS \u6587\u4ef6\u7cfb\u7edf\u4e2d\u8bfb\u53d6\u6e90\u6587\u4ef6\u65f6\uff0cSpark \u4f1a\u6839\u636e HDFS NameNode \u5f53\u4e2d\u8bb0\u5f55\u7684\u5143\u6570\u636e\uff0c\u83b7\u53d6\u6570\u636e\u5206\u533a\u7684\u5b58\u50a8\u5730\u5740\uff0c\u4f8b\u5982 node0:/rootPath/partition0-replica0\uff0cnode1:/rootPath/partition0-replica1 \u548c node2:/rootPath/partition0-replica2\u3002</p> <p>\u90a3\u4e48\uff0cDAGScheduler \u5728\u4e3a\u8be5\u6570\u636e\u5206\u533a\u521b\u5efa Task0 \u7684\u65f6\u5019\uff0c\u4f1a\u628a\u8fd9\u4e9b\u5730\u5740\u4e2d\u7684\u8ba1\u7b97\u8282\u70b9\u8bb0\u5f55\u5230 Task0 \u7684 locs \u5c5e\u6027\u3002</p> <p>\u5982\u6b64\u4e00\u6765\uff0c\u5f53 TaskScheduler \u9700\u8981\u8c03\u5ea6 Task0 \u8fd9\u4e2a\u5206\u5e03\u5f0f\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u6839\u636e Task0 \u7684 locs \u5c5e\u6027\uff0c\u5b83\u5c31\u77e5\u9053\uff1a\u201cTask0 \u6240\u9700\u5904\u7406\u7684\u6570\u636e\u5206\u533a\uff0c\u5728\u8282\u70b9 node0\u3001node1\u3001node2 \u4e0a\u5b58\u6709\u526f\u672c\uff0c\u56e0\u6b64\uff0c\u5982\u679c WorkOffer \u662f\u6765\u81ea\u8fd9 3 \u4e2a\u8282\u70b9\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u90a3\u5bf9 Task0 \u6765\u8bf4\u5c31\u662f\u6295\u5176\u6240\u597d\u201d\u3002</p> <p></p> <p>\u50cf\u4e0a\u9762\u8fd9\u79cd\u5b9a\u5411\u5230\u8ba1\u7b97\u8282\u70b9\u7c92\u5ea6\u7684\u672c\u5730\u6027\u503e\u5411\uff0cSpark \u4e2d\u7684\u672f\u8bed\u53eb\u505a NODE_LOCAL\u3002\u9664\u4e86\u5b9a\u5411\u5230\u8282\u70b9\uff0cTask \u8fd8\u53ef\u4ee5\u5b9a\u5411\u5230\u8fdb\u7a0b\uff08Executor\uff09\u3001\u673a\u67b6\u3001\u4efb\u610f\u5730\u5740\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u672f\u8bed\u5206\u522b\u662f PROCESS_LOCAL\u3001RACK_LOCAL \u548c ANY\u3002</p> <p>Spark \u8c03\u5ea6\u7cfb\u7edf\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u662f\u201c\u6570\u636e\u4e0d\u52a8\u3001\u4ee3\u7801\u52a8\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4efb\u52a1\u8c03\u5ea6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4e86\u5b8c\u6210\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0cSpark \u503e\u5411\u4e8e\u8ba9\u6570\u636e\u5f85\u5728\u539f\u5730\u3001\u4fdd\u6301\u4e0d\u52a8\uff0c\u800c\u628a\u8ba1\u7b97\u4efb\u52a1\uff08\u4ee3\u7801\uff09\u8c03\u5ea6\u3001\u5206\u53d1\u5230\u6570\u636e\u6240\u5728\u7684\u5730\u65b9\uff0c\u4ece\u800c\u6d88\u9664\u6570\u636e\u5206\u53d1\u5f15\u5165\u7684\u6027\u80fd\u9690\u60a3\u3002\u6bd5\u7adf\uff0c\u76f8\u6bd4\u5206\u53d1\u6570\u636e\uff0c\u5206\u53d1\u4ee3\u7801\u8981\u8f7b\u91cf\u5f97\u591a\u3002</p>"},{"location":"Spark/1.Spark%20Core/#executorbackend","title":"ExecutorBackend","text":"<p>\u6bcf\u5f53 Task \u5904\u7406\u5b8c\u6bd5\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u4fbf\u4f1a\u901a\u8fc7 ExecutorBackend\uff0c\u5411 Driver \u7aef\u7684 SchedulerBackend \u53d1\u9001 StatusUpdate \u4e8b\u4ef6\uff0c\u544a\u77e5 Task \u6267\u884c\u72b6\u6001\u3002\u63a5\u4e0b\u6765\uff0cTaskScheduler \u4e0e SchedulerBackend \u901a\u8fc7\u63a5\u529b\u7684\u65b9\u5f0f\uff0c\u6700\u7ec8\u628a\u72b6\u6001\u6c47\u62a5\u7ed9 DAGScheduler\u3002</p> <p></p>"},{"location":"Spark/1.Spark%20Core/#_2","title":"\u603b\u7ed3","text":"<p>\u4efb\u52a1\u8c03\u5ea6\u5206\u4e3a\u5982\u4e0b 5 \u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>DAGScheduler \u4ee5 Shuffle \u4e3a\u8fb9\u754c\uff0c\u5c06\u5f00\u53d1\u8005\u8bbe\u8ba1\u7684\u8ba1\u7b97\u56fe DAG \u62c6\u5206\u4e3a\u591a\u4e2a\u6267\u884c\u9636\u6bb5 Stages\uff0c\u7136\u540e\u4e3a\u6bcf\u4e2a Stage \u521b\u5efa\u4efb\u52a1\u96c6 TaskSet\u3002</li> <li>SchedulerBackend \u901a\u8fc7\u4e0e Executors \u4e2d\u7684 ExecutorBackend \u7684\u4ea4\u4e92\u6765\u5b9e\u65f6\u5730\u83b7\u53d6\u96c6\u7fa4\u4e2d\u53ef\u7528\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4fe1\u606f\u8bb0\u5f55\u5230 ExecutorDataMap \u6570\u636e\u7ed3\u6784\u3002</li> <li>\u4e0e\u6b64\u540c\u65f6\uff0cSchedulerBackend \u6839\u636e ExecutorDataMap \u4e2d\u53ef\u7528\u8d44\u6e90\u521b\u5efa WorkerOffer\uff0c\u4ee5 WorkerOffer \u4e3a\u7c92\u5ea6\u63d0\u4f9b\u8ba1\u7b97\u8d44\u6e90\u3002</li> <li>\u5bf9\u4e8e\u7ed9\u5b9a WorkerOffer\uff0cTaskScheduler \u7ed3\u5408 TaskSet \u4e2d\u4efb\u52a1\u7684\u672c\u5730\u6027\u503e\u5411\uff0c\u6309\u7167 PROCESS_LOCAL\u3001NODE_LOCAL\u3001RACK_LOCAL \u548c ANY \u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u5bf9 TaskSet \u4e2d\u7684\u4efb\u52a1\u8fdb\u884c\u904d\u5386\uff0c\u4f18\u5148\u8c03\u5ea6\u672c\u5730\u6027\u503e\u5411\u8981\u6c42\u82db\u523b\u7684 Task\u3002</li> <li>\u88ab\u9009\u4e2d\u7684 Task \u7531 TaskScheduler \u4f20\u9012\u7ed9 SchedulerBackend\uff0c\u518d\u7531 SchedulerBackend \u5206\u53d1\u5230 Executors \u4e2d\u7684 ExecutorBackend\u3002Executors \u63a5\u6536\u5230 Task \u4e4b\u540e\uff0c\u5373\u8c03\u7528\u672c\u5730\u7ebf\u7a0b\u6c60\u6765\u6267\u884c\u5206\u5e03\u5f0f\u4efb\u52a1\u3002</li> </ol>"},{"location":"Spark/1.Spark%20Core/#rdd_4","title":"RDD \u7b97\u5b50","text":"<p>RDD Programming Guide - Transformations</p> <p>RDD Programming Guide - Actions</p> <p>\u7b97\u5b50\uff1a\u5373 RDD \u7684\u65b9\u6cd5\u3002</p> <ul> <li>\u5206\u5e03\u5f0f\u96c6\u5408\u5bf9\u8c61\u4e0a\u7684 API \u79f0\u4e4b\u4e3a\u7b97\u5b50\u3002</li> <li>\u672c\u5730\u5bf9\u8c61\u7684 API \u79f0\u4e4b\u4e3a\u65b9\u6cd5\u3002</li> </ul> <p>RDD \u7b97\u5b50\u5206\u4e3a\u4e24\u5927\u7c7b\uff1aTransformation \u548c Action\u3002</p> <ul> <li>Transformation\uff1a\u8f6c\u6362\u7b97\u5b50\uff0c\u5c06\u539f\u6709 RDD \u8f6c\u6362\u4e3a\u65b0\u7684 RDD\uff0c\u61d2\u52a0\u8f7d\uff0c\u4e0d\u4f1a\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002</li> <li>Action\uff1a\u884c\u52a8\u7b97\u5b50\uff0c\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002</li> </ul> <p></p>"},{"location":"Spark/1.Spark%20Core/#rdd_5","title":"RDD \u5e8f\u5217\u5316","text":"<p>\u95ed\u5305\u68c0\u6d4b\uff1a</p> <p>\u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6, \u7b97\u5b50\u4ee5\u5916\u7684\u4ee3\u7801\u90fd\u662f\u5728 Driver \u7aef\u6267\u884c, \u7b97\u5b50\u91cc\u9762\u7684\u4ee3\u7801\u90fd\u662f\u5728 Executor \u7aef\u6267\u884c\u3002\u90a3\u4e48\u5728 scala \u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u5c31\u4f1a\u5bfc\u81f4\u7b97\u5b50\u5185\u7ecf\u5e38\u4f1a\u7528\u5230\u7b97\u5b50\u5916\u7684\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u95ed\u5305\u7684\u6548\u679c\uff0c\u5982\u679c\u4f7f\u7528\u7684\u7b97\u5b50\u5916\u7684\u6570\u636e\u65e0\u6cd5\u5e8f\u5217\u5316\uff0c\u5c31\u610f\u5473\u7740\u65e0\u6cd5\u4f20\u503c\u7ed9 Executor \u7aef\u6267\u884c\uff0c\u5c31\u4f1a\u53d1\u751f\u9519\u8bef\uff0c\u6240\u4ee5\u9700\u8981\u5728\u6267\u884c\u4efb\u52a1\u8ba1\u7b97\u524d\uff0c\u68c0\u6d4b\u95ed\u5305\u5185\u7684\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u6211\u4eec\u79f0\u4e4b\u4e3a\u95ed\u5305\u68c0\u6d4b\u3002</p> <p>\u5e8f\u5217\u5316\u65b9\u6cd5\u548c\u5c5e\u6027\uff1a</p> <p>\u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6, \u7b97\u5b50\u4ee5\u5916\u7684\u4ee3\u7801\u90fd\u662f\u5728 Driver \u7aef\u6267\u884c, \u7b97\u5b50\u91cc\u9762\u7684\u4ee3\u7801\u90fd\u662f\u5728 Executor \u7aef\u6267\u884c\u3002</p> <pre><code>object RDD_Serialize {\n  def main(args: Array[String]): Unit = {\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"Serialize\")\n    val sc = new SparkContext(sparkConf)\n\n    val rdd = sc.makeRDD(List(1, 2, 3, 4))\n    val user = new User()\n\n    rdd.foreach(\n      num =&gt; {\n        println(\"age = \" + (user.age + num))\n      }\n    )\n\n    sc.stop()\n  }\n\n  class User {\n    var age: Int = 30\n  }\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u62a5 Task not serializable \u5f02\u5e38\uff0c\u539f\u56e0\u662f user \u5bf9\u8c61\u6ca1\u6709\u5e8f\u5217\u5316\u3002\u89e3\u51b3\u65b9\u6cd5\u4e00\u662f\u5728 class User \u540e\u9762\u6df7\u5165 Serializable \u7279\u8d28\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u7528\u6837\u4f8b\u7c7b\u4ee3\u66ff class\u3002\u6837\u4f8b\u7c7b\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u81ea\u52a8\u5b8c\u6210\u5e8f\u5217\u5316\u3002</p> <pre><code>case class User() {\n  var age: Int = 30\n}\n</code></pre> <p>Kryo \u5e8f\u5217\u5316\u6846\u67b6\uff1a</p> <p>Java \u7684\u5e8f\u5217\u5316\u80fd\u591f\u5e8f\u5217\u5316\u4efb\u4f55\u7684\u7c7b\u3002\u4f46\u662f\u6bd4\u8f83\u91cd (\u5b57\u8282\u591a)\uff0c\u5e8f\u5217\u5316\u540e\uff0c\u5bf9\u8c61\u7684\u63d0\u4ea4\u4e5f\u6bd4\u8f83\u5927\u3002Spark \u51fa\u4e8e\u6027\u80fd\u7684\u8003\u8651\uff0cSpark2.0 \u5f00\u59cb\u652f\u6301\u53e6\u5916\u4e00\u79cd Kryo \u5e8f\u5217\u5316\u673a\u5236\u3002Kryo \u901f\u5ea6\u662f Serializable \u7684 10 \u500d\u3002\u5f53 RDD \u5728 Shuffle \u6570\u636e\u7684\u65f6\u5019\uff0c\u7b80\u5355\u6570\u636e\u7c7b\u578b\u3001\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u7c7b\u578b\u5df2\u7ecf\u5728 Spark \u5185\u90e8\u4f7f\u7528 Kryo \u6765\u5e8f\u5217\u5316\u3002</p> <p>\u6ce8\u610f\uff1a\u5373\u4f7f\u4f7f\u7528 Kryo \u5e8f\u5217\u5316\uff0c\u4e5f\u8981\u7ee7\u627f Serializable \u63a5\u53e3\u3002</p>"},{"location":"Spark/1.Spark%20Core/#rdd_6","title":"RDD \u4f9d\u8d56\u5173\u7cfb","text":"<p>\u76f8\u90bb\u7684\u4e24\u4e2a RDD \u7684\u5173\u7cfb\u88ab\u79f0\u4e3a\u4f9d\u8d56\u5173\u7cfb\u3002\u591a\u4e2a\u8fde\u7eed\u7684 RDD \u7684\u4f9d\u8d56\u5173\u7cfb\u88ab\u79f0\u4e3a\u8840\u7f18\u5173\u7cfb\u3002</p> <p>\u6bcf\u4e2a RDD \u90fd\u4f1a\u4fdd\u5b58\u8840\u7f18\u5173\u7cfb\u3002\u7531\u4e8e RDD \u662f\u4e0d\u4f1a\u4fdd\u5b58\u6570\u636e\u7684\uff08\u4e0d\u843d\u76d8\uff0c\u901a\u8fc7\u5185\u5b58\u4f20\u9012\uff09\uff0c\u56e0\u6b64\u4e3a\u4e86\u63d0\u4f9b\u5bb9\u9519\u6027\uff0c\u9700\u8981\u5c06 RDD \u95f4\u7684\u5173\u7cfb\u4fdd\u5b58\u4e0b\u6765\uff0c\u4e00\u65e6\u51fa\u73b0\u9519\u8bef\uff0c\u53ef\u4ee5\u6839\u636e\u8840\u7f18\u5173\u7cfb\u91cd\u65b0\u8bfb\u53d6\u8fdb\u884c\u8ba1\u7b97\u3002</p> <p>RDD \u53ea\u652f\u6301\u7c97\u7c92\u5ea6\u8f6c\u6362\uff0c\u5373\u5728\u5927\u91cf\u8bb0\u5f55\u4e0a\u6267\u884c\u7684\u5355\u4e2a\u64cd\u4f5c\u3002\u5c06\u521b\u5efa RDD \u7684\u4e00\u7cfb\u5217 Lineage (\u8840\u7edf) \u8bb0\u5f55\u4e0b\u6765\uff0c\u4ee5\u4fbf\u6062\u590d\u4e22\u5931\u7684\u5206\u533a\u3002RDD \u7684 Lineage \u4f1a\u8bb0\u5f55 RDD \u7684\u5143\u6570\u636e\u4fe1\u606f\u548c\u8f6c\u6362\u884c\u4e3a\uff0c\u5f53\u8be5 RDD \u7684\u90e8\u5206\u5206\u533a\u6570\u636e\u4e22\u5931\u65f6\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u8fd9\u4e9b\u4fe1\u606f\u6765\u91cd\u65b0\u8fd0\u7b97\u548c\u6062\u590d\u4e22\u5931\u7684\u6570\u636e\u5206\u533a\u3002</p> <p>\u901a\u8fc7\u6bcf\u6b21\u751f\u6210 RDD \u4e4b\u540e\u8c03\u7528 <code>rdd.toDebugString</code> \u5373\u53ef\u67e5\u770b\u5f53\u524d RDD \u7684\u8840\u7f18\u5173\u7cfb\u3002\u901a\u8fc7\u8c03\u7528 <code>rdd.dependencies</code> \u53ef\u4ee5\u67e5\u770b\u5f53\u524d RDD \u7684\u4f9d\u8d56\u5173\u7cfb\u3002</p> <p></p> <p>\u5982\u679c\u7236 RDD \u4e2d\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\u53ea\u6d41\u5411\u5b50 RDD \u4e2d\u7684\u4e00\u4e2a\u5206\u533a\uff0c\u8fd9\u79cd\u4f9d\u8d56\u88ab\u79f0\u4e3a\u7a84\u4f9d\u8d56\uff08Narrow Dependency\uff09\u3002</p> <p>\u5982\u679c\u7236 RDD \u4e2d\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\u9700\u8981\u4e00\u90e8\u5206\u6d41\u5165\u5b50 RDD \u7684\u67d0\u4e00\u4e2a\u5206\u533a\uff0c\u53e6\u5916\u4e00\u90e8\u5206\u6d41\u5165\u5b50 RDD \u7684\u53e6\u5916\u5206\u533a\uff0c\u8fd9\u79cd\u4f9d\u8d56\u88ab\u79f0\u4e3a\u5bbd\u4f9d\u8d56\uff08Shuffle Dependency\uff09\u3002</p> <p>Summary</p> <p>\u5982\u679c parent RDD \u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u533a\u4e2d\u7684\u6570\u636e\u9700\u8981\u5168\u90e8\u6d41\u5165 child RDD \u7684\u67d0\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u533a\uff0c\u5219\u662f\u7a84\u4f9d\u8d56\u3002\u5982\u679c parent RDD \u5206\u533a\u4e2d\u7684\u6570\u636e\u9700\u8981\u4e00\u90e8\u5206\u6d41\u5165 child RDD \u7684\u67d0\u4e00\u4e2a\u5206\u533a\uff0c\u53e6\u5916\u4e00\u90e8\u5206\u6d41\u5165 child RDD \u7684\u53e6\u5916\u5206\u533a\uff0c\u5219\u662f\u5bbd\u4f9d\u8d56\u3002</p> <p></p> <p></p>"},{"location":"Spark/1.Spark%20Core/#rdd_7","title":"RDD \u9636\u6bb5\u5212\u5206/\u7269\u7406\u6267\u884c\u8ba1\u5212\u751f\u6210","text":"<p>DAG \u8bb0\u5f55\u4e86 RDD \u7684\u8f6c\u6362\u8fc7\u7a0b\u548c\u4efb\u52a1\u7684\u9636\u6bb5\uff08stage\uff09\u3002</p> <p></p> <p>RDD \u4efb\u52a1\u5207\u5206\u4e2d\u95f4\u5206\u4e3a\uff1aApplication\u3001Job\u3001Stage \u548c Task\u3002</p> <ul> <li>Application\uff1a\u521d\u59cb\u5316\u4e00\u4e2a SparkContext \u5373\u751f\u6210\u4e00\u4e2a Application</li> <li>Job\uff1a\u4e00\u4e2a Action \u7b97\u5b50\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a Job</li> <li>Stage\uff1aStage \u7b49\u4e8e\u5bbd\u4f9d\u8d56 (ShuffleDependency) \u7684\u4e2a\u6570\u52a0 1</li> <li>Task\uff1a\u4e00\u4e2a Stage \u9636\u6bb5\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a RDD \u7684\u5206\u533a\u4e2a\u6570\u5c31\u662f Task \u7684\u4e2a\u6570</li> </ul> <p>\u6240\u8c13 Stage \u5212\u5206\u7b97\u6cd5\u5c31\u662f\uff1a\u4ece\u6700\u540e\u4e00\u4e2a RDD \u5f80\u524d\u63a8\u7b97\uff0c\u9047\u5230\u7a84\u4f9d\u8d56\u5c31\u5c06\u5176\u52a0\u5165\u8be5 Stage\uff0c\u9047\u5230\u5bbd\u4f9d\u8d56\u5219\u65ad\u5f00\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684 Stage\u3002\u6bcf\u4e2a Stage \u91cc Task \u7684\u6570\u91cf\u7531 Stage \u4e2d\u6700\u540e\u4e00\u4e2a RDD \u7684\u5206\u533a\u6570\u91cf\u51b3\u5b9a\u3002</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u5212\u5206\u9636\u6bb5\uff1f</p> <ol> <li>stage \u4e2d\u751f\u6210\u7684 task \u4e0d\u4f1a\u592a\u5927\u4e5f\u4e0d\u4f1a\u592a\u5c0f\uff0c\u800c\u4e14\u662f\u540c\u6784\u7684\uff0c\u4fbf\u4e8e\u5e76\u884c\u6267\u884c</li> <li>\u53ef\u4ee5\u5c06\u591a\u4e2a\u64cd\u4f5c\u653e\u5728\u4e00\u4e2a task \u91cc\u5904\u7406\uff0c\u4f7f\u5f97\u64cd\u4f5c\u53ef\u4ee5\u8fdb\u884c\u4e32\u884c\u3001\u6d41\u6c34\u7ebf\u5f0f\u7684\u5904\u7406\uff0c\u63d0\u9ad8\u6570\u636e\u5904\u7406\u6548\u7387</li> <li>\u65b9\u4fbf\u5bb9\u9519\uff0c\u5982\u4e00\u4e2a stage \u5931\u6548\uff0c\u53ef\u4ee5\u91cd\u65b0\u8fd0\u884c stage \u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8fd0\u884c\u6574\u4e2a job</li> </ol> <p>\u7269\u7406\u8ba1\u5212\u751f\u6210\u8fc7\u7a0b\uff1a</p> <ol> <li>\u6839\u636e action \u7b97\u5b50\u5c06\u5e94\u7528\u5212\u5206\u4e3a\u591a\u4e2a job</li> <li>\u6839\u636e\u5bbd\u4f9d\u8d56\u5c06 job \u5212\u5206\u4e3a\u591a\u4e2a stage</li> <li>\u5728\u6bcf\u4e2a stage \u4e2d\uff0c\u6839\u636e\u6700\u540e\u4e00\u4e2a RDD \u7684\u5206\u533a\u4e2a\u6570\u5c06 stage \u5212\u5206\u4e3a\u591a\u4e2a task</li> </ol>"},{"location":"Spark/1.Spark%20Core/#rdd_8","title":"RDD \u6301\u4e45\u5316","text":"<p>RDD \u7684\u6570\u636e\u662f\u8fc7\u7a0b\u6570\u636e\uff0c\u4e0d\u662f\u7ed3\u679c\u6570\u636e\uff0c\u65b0\u7684 RDD \u751f\u6210\uff0c\u8001\u7684 RDD \u6d88\u5931\u3002\u6240\u4ee5\u5728\u4f7f\u7528 RDD \u65f6\uff0c\u53ef\u6309\u9700\u5c06 RDD \u7684\u6570\u636e\u6301\u4e45\u5316\u5230\u5185\u5b58\u6216\u8005\u78c1\u76d8\u4e2d\uff0c\u4ee5\u4fbf\u540e\u7eed\u4f7f\u7528\u3002</p> <pre><code>flowchart LR;\n    RDD1--&gt;RDD2--&gt;RDD3--&gt;RDD4--&gt;id1[\"collect()\"]\n    RDD3--&gt;RDD5--&gt;RDD6--&gt;id2[\"collect()\"]</code></pre> <p>\u5982\u4e0a\u56fe\uff0cRDD3 \u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u540e\uff0c\u5c31\u4ece\u5185\u5b58\u4e2d\u91ca\u653e\u4e86\uff0c\u7b2c\u4e8c\u6b21\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u57fa\u4e8e\u8840\u7f18\u5173\u7cfb\uff0c\u4ece RDD1 \u5f00\u59cb\u91cd\u65b0\u8ba1\u7b97\u3002\u6b64\u65f6\u53ef\u4ee5\u5c06 RDD3 \u6301\u4e45\u5316\u5230\u5185\u5b58\u4e2d\uff0c\u8fd9\u6837\u7b2c\u4e8c\u6b21\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u3002</p>"},{"location":"Spark/1.Spark%20Core/#rdd_9","title":"RDD \u7f13\u5b58/\u6301\u4e45\u5316","text":"<p>\u7f13\u5b58\u673a\u5236\u7684\u4e3b\u8981\u76ee\u7684\u662f\u52a0\u901f\u8ba1\u7b97\u3002</p> <ul> <li><code>rdd.cache()</code>\uff1a\u5c06 RDD \u6301\u4e45\u5316\u5230\u5185\u5b58\u4e2d</li> <li><code>rdd.persist()</code>\uff1a\u5c06 RDD \u6301\u4e45\u5316\u5230\u5185\u5b58\u6216\u78c1\u76d8\u4e2d</li> <li><code>rdd.unpersist()</code>\uff1a\u5c06 RDD \u4ece\u7f13\u5b58\u4e2d\u79fb\u9664</li> </ul> <p>\u7f13\u5b58\u5728\u8bbe\u8ba1\u4e0a\u662f\u8ba4\u4e3a\u6709\u4e22\u5931\u98ce\u9669\u7684\uff0c\u56e0\u6b64\uff0c\u7f13\u5b58\u4f1a\u4fdd\u7559 RDD \u4e4b\u95f4\u7684\u8840\u7f18\u5173\u7cfb\u3002\u7f13\u5b58\u5982\u679c\u4e22\u5931\uff0c\u5219\u53ef\u4ee5\u6309\u7167\u8840\u7f18\u5173\u7cfb\u91cd\u65b0\u8ba1\u7b97\u3002\u540c\u65f6\uff0c\u7f13\u5b58\u662f\u5206\u6563\u5b58\u50a8\u5728\u5404\u4e2a Executor \u4e0a\u7684\u3002</p> <p>\u7f13\u5b58\u7531 Executor \u7684 blockManager \u7ba1\u7406\uff0c\u4e00\u65e6 Driver \u6267\u884c\u7ed3\u675f\uff0cblockManager \u4e5f\u4f1a\u88ab\u91ca\u653e\uff0c\u56e0\u6b64\u7f13\u5b58\u7684\u6570\u636e\u4e5f\u4f1a\u4e22\u5931\u3002\u7f13\u5b58 RDD \u7684\u5206\u533a\u5b58\u50a8\u5728 blockManager \u7684 memoryStore \u4e2d\uff0cmemoryStore \u5305\u542b\u4e86\u4e00\u4e2a LinkedHashMap\uff0c\u7528\u6765\u5b58\u653e RDD \u7684\u5206\u533a\u3002\u540c\u65f6 Spark \u4e5f\u76f4\u63a5\u5229\u7528\u4e86 LinkedHashMap \u7684 LRU \u529f\u80fd\u5b9e\u73b0\u4e86\u7f13\u5b58\u66ff\u6362\u3002</p> <p>cache() \u662f lazy \u6267\u884c\u7684\uff0c\u53ea\u6709\u9047\u5230 Action \u7b97\u5b50\u65f6\u624d\u4f1a\u6267\u884c\u3002</p> <p>Spark \u4ece\u4e09\u4e2a\u65b9\u9762\u8003\u8651\u4e86\u7f13\u5b58\u7ea7\u522b\uff1a</p> <ul> <li>\u5b58\u50a8\u4f4d\u7f6e\uff1a\u5185\u5b58\u3001\u78c1\u76d8\u3001\u5185\u5b58 + \u78c1\u76d8</li> <li>\u662f\u5426\u5e8f\u5217\u5316\uff1a\u5e8f\u5217\u5316\u51cf\u5c11\u4e86\u5185\u5b58\u5360\u7528\u3001\u65b9\u4fbf\u7f51\u7edc\u4f20\u8f93\uff0c\u4f46\u662f\u589e\u52a0\u4e86\u53cd\u5e8f\u5217\u5316\u7684 CPU \u7684\u5f00\u9500</li> <li>\u5b58\u50a8\u526f\u672c\u6570</li> </ul> <pre><code>rdd.cache()\nrdd.persist(StorageLevel.MEMORY_ONLY)\nrdd.persist(StorageLevel.MEMORY_AND_DISK) # \u5148\u653e\u5185\u5b58\uff0c\u4e0d\u591f\u653e\u78c1\u76d8\nrdd.persist(StorageLevel.DISK_ONLY)\nrdd.persist(StorageLevel.DISK_ONLY_2) # 2 \u4ee3\u8868\u526f\u672c\u6570\nrdd.persist(StorageLevel.DISK_ONLY_3)\n</code></pre>"},{"location":"Spark/1.Spark%20Core/#rdd-checkpoint","title":"RDD Checkpoint","text":"<p>Spark \u7684\u9519\u8bef\u5bb9\u5fcd\u673a\u5236\u7684\u6838\u5fc3\u65b9\u6cd5\uff1a</p> <ol> <li>\u91cd\u65b0\u6267\u884c\u8ba1\u7b97\u4efb\u52a1\uff08\u6839\u636e lineage \u6570\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c\u5728\u9519\u8bef\u53d1\u751f\u65f6\u56de\u6eaf\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u7684\u90e8\u5206\uff09</li> <li>checkpoint \u673a\u5236</li> </ol> <p>\u6240\u8c13\u7684\u68c0\u67e5\u70b9\u5176\u5b9e\u5c31\u662f\u901a\u8fc7\u5c06 RDD \u4e2d\u95f4\u7ed3\u679c\u5199\u5165\u78c1\u76d8\u7531\u4e8e\u8840\u7f18\u4f9d\u8d56\u8fc7\u957f\u4f1a\u9020\u6210\u5bb9\u9519\u6210\u672c\u8fc7\u9ad8\uff0c\u8fd9\u6837\u5c31\u4e0d\u5982\u5728\u4e2d\u95f4\u9636\u6bb5\u505a\u68c0\u67e5\u70b9\u5bb9\u9519\uff0c\u5982\u679c\u68c0\u67e5\u70b9\u4e4b\u540e\u6709\u8282\u70b9\u51fa\u73b0\u95ee\u9898\uff0c\u53ef\u4ee5\u4ece\u68c0\u67e5\u70b9\u5f00\u59cb\u91cd\u505a\u8840\u7f18\uff0c\u51cf\u5c11\u4e86\u5f00\u9500\u3002</p> <p>RDD Checkpoint \u4e5f\u662f\u5c06 RDD \u8fdb\u884c\u6301\u4e45\u5316\uff0c\u4f46\u662f\u53ea\u652f\u6301\u786c\u76d8\u5b58\u50a8\u3002\u548c\u7f13\u5b58\u4e0d\u540c\uff0cCheckpoint \u88ab\u8ba4\u4e3a\u662f\u5b89\u5168\u7684\uff0c\u4f1a\u5207\u65ad RDD \u7684\u8840\u7f18\u5173\u7cfb\u3002</p> <p>\u6211\u4eec\u77e5\u9053\u7f13\u5b58\u662f\u5206\u6563\u5b58\u50a8\u5728\u5404\u4e2a Executor \u4e0a\u7684\uff0cCheckpoint \u662f\u6536\u96c6\u5404\u4e2a\u5206\u533a\u7684\u6570\u636e\uff0c\u96c6\u4e2d\u5b58\u50a8\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u662f HDFS\u3001\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7b49\u3002</p> <p>checkpoint() \u662f\u7b49\u5230 job \u8ba1\u7b97\u7ed3\u675f\u4e4b\u540e\u518d\u91cd\u65b0\u542f\u52a8\u8be5 job \u8ba1\u7b97\u4e00\u904d\uff0c\u5bf9\u5176\u4e2d\u9700\u8981 checkpoint \u7684 RDD \u8fdb\u884c\u6301\u4e45\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u9700\u8981 checkpoint \u7684 RDD \u4f1a\u88ab\u8ba1\u7b97\u4e24\u6b21\u3002</p> <p>\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0cCheckpoint \u4e00\u822c\u548c Cache \u914d\u5408\u4f7f\u7528\uff0c\u5148\u5c06\u6570\u636e Cache \u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u518d\u5c06\u6570\u636e Checkpoint \u5230\u78c1\u76d8\u4e2d\u3002\u8fd9\u6837\u6267\u884c checkpoint \u7684 Job \u53ea\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6548\u7387\u3002</p> <p>Cache VS Checkpoint</p> <ul> <li>\u76ee\u7684\u4e0d\u540c\uff1acache \u7684\u76ee\u7684\u662f\u52a0\u901f\u8ba1\u7b97\uff0ccheckpoint \u7684\u76ee\u7684\u66f4\u591a\u662f\u4e3a\u4e86\u5bb9\u9519\uff0c\u5728 job \u8fd0\u884c\u5931\u8d25\u540e\u80fd\u591f\u5feb\u901f\u6062\u590d</li> <li>\u5b58\u50a8\u6027\u8d28\u548c\u4f4d\u7f6e\u4e0d\u540c\uff1acache \u662f\u4e3a\u4e86\u8bfb\u5199\u901f\u5ea6\u5feb\uff0c\u56e0\u6b64\u4e3b\u8981\u4f7f\u7528\u5185\u5b58\uff1b\u800c checkpoint \u662f\u4e3a\u4e86\u80fd\u591f\u53ef\u9760\u8bfb\u5199\uff0c\u56e0\u6b64\u4e3b\u8981\u4f7f\u7528\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf</li> <li>\u5199\u5165\u901f\u5ea6\u548c\u89c4\u5219\u4e0d\u540c\uff1a\u6570\u636e\u7f13\u5b58\u901f\u5ea6\u8f83\u5feb\uff0c\u5bf9 job \u7684\u6267\u884c\u65f6\u95f4\u5f71\u54cd\u8f83\u5c0f\uff1b\u800c checkpoint \u901f\u5ea6\u8f83\u6162\uff0c\u4f1a\u989d\u5916\u542f\u52a8\u4e13\u95e8\u7684 job \u8fdb\u884c\u6301\u4e45\u5316</li> <li>\u5bf9 lineage \u7684\u5f71\u54cd\u4e0d\u540c\uff1acache \u4e0d\u4f1a\u5207\u65ad RDD \u7684\u8840\u7f18\u5173\u7cfb\uff0ccheckpoint \u4f1a\u5207\u65ad RDD \u7684\u8840\u7f18\u5173\u7cfb</li> <li> <p>\u5e94\u7528\u573a\u666f\u4e0d\u540c\uff1acache \u9002\u5408\u4f1a\u88ab\u591a\u6b21\u8bfb\u53d6\u3001\u5360\u7528\u7a7a\u95f4\u4e0d\u662f\u5f88\u5927\u7684 RDD\uff1bcheckpoint \u9002\u7528\u4e8e\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\u590d\u6742\u3001\u91cd\u65b0\u8ba1\u7b97\u4ee3\u4ef7\u8f83\u9ad8\u7684 RDD</p> </li> <li> <p>cache \u662f\u5206\u6563\u5b58\u50a8\uff0c\u5404\u4e2a Executor \u5e76\u884c\u6267\u884c\uff0c\u6548\u7387\u9ad8</p> </li> <li>checkpoint \u662f\u96c6\u4e2d\u5b58\u50a8\uff0c\u9700\u8981\u5c06\u6570\u636e\u4ece\u5404\u4e2a Executor \u6536\u96c6\u5230 Driver</li> <li>cache \u7684\u6570\u636e\u5728 Driver \u6267\u884c\u7ed3\u675f\u540e\u4f1a\u88ab\u5220\u9664\uff0c\u800c checkpoint \u7684\u6570\u636e\u6301\u4e45\u5316\u5230\u4e86 HDFS \u6216\u672c\u5730\u78c1\u76d8\uff0c\u4e0d\u4f1a\u88ab\u5220\u9664\uff0c\u4e5f\u80fd\u88ab\u5176\u4ed6 Driver program \u4f7f\u7528</li> </ul>"},{"location":"Spark/1.Spark%20Core/#rdd_10","title":"RDD \u5206\u533a\u5668","text":"<p>Spark \u4e2d\u7684\u5206\u533a\u65b9\u6cd5\uff1a</p> <ol> <li>\u6c34\u5e73\u5212\u5206\uff1a\u6309\u7167 record \u7684\u7d22\u5f15\u8fdb\u884c\u5212\u5206\uff0c\u5e38\u7528\u4e8e\u8f93\u5165\u6570\u636e\u7684\u5212\u5206\uff0c\u5982 HDFS \u81ea\u52a8\u5bf9\u6587\u4ef6\u8fdb\u884c\u6c34\u5e73\u5212\u5206</li> <li>Hash \u5206\u533a\uff1a\u6839\u636e record \u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u5206\u533a</li> <li>Range \u5206\u533a\uff1a\u4e00\u822c\u7528\u4e8e\u6392\u5e8f\u4efb\u52a1\uff0c\u6392\u5e8f\u8fc7\u7a0b\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u5e76\u4e14\u53ef\u4ee5\u4fdd\u8bc1\u5168\u5c40\u6709\u5e8f</li> </ol> <p>\u5206\u533a\u5668\u51b3\u5b9a\u4e86 RDD \u4e2d\u5206\u533a\u7684\u4e2a\u6570\u3001RDD \u4e2d\u6bcf\u6761\u6570\u636e\u7ecf\u8fc7 Shuffle \u540e\u8fdb\u5165\u54ea\u4e2a\u5206\u533a\uff0c\u8fdb\u800c\u51b3\u5b9a\u4e86 Reduce \u7684\u4e2a\u6570\u3002</p> <ul> <li>\u53ea\u6709 KV \u7c7b\u578b\u7684 RDD \u624d\u6709\u5206\u533a\u5668\uff0c\u975e KV \u7c7b\u578b\u7684 RDD \u5206\u533a\u7684\u503c\u662f None</li> <li>\u6bcf\u4e2a RDD \u7684\u5206\u533a ID \u8303\u56f4\uff1a0 ~ (numPartitions - 1)\uff0c\u51b3\u5b9a\u8fd9\u4e2a\u503c\u662f\u5c5e\u4e8e\u90a3\u4e2a\u5206\u533a\u7684</li> </ul> <p>Hash \u5206\u533a\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684 key\uff0c\u8ba1\u7b97\u5176 hashCode\uff0c\u5e76\u9664\u4ee5\u5206\u533a\u4e2a\u6570\u53d6\u4f59\u3002\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u503e\u659c\u3002</p> <p>Range \u5206\u533a\uff1a\u5c06\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6570\u636e\u6620\u5c04\u5230\u4e00\u4e2a\u5206\u533a\u4e2d\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u6bcf\u4e2a\u5206\u533a\u6570\u636e\u5747\u5300\uff0c\u800c\u4e14\u5206\u533a\u95f4\u6709\u5e8f\u3002sortByKey \u5e95\u5c42\u4f7f\u7528\u7684\u6570\u636e\u5206\u533a\u5668\u5c31\u662f RangePartitioner \u5206\u533a\u5668\uff0c\u56e0\u6b64 sortByKey \u662f\u53ef\u4ee5\u4fdd\u8bc1\u5168\u5c40\u6709\u5e8f\u7684\u3002\u5982\u679c\u6570\u636e\u5206\u5e03\u4e0d\u5747\u5300\uff0c\u5bfc\u81f4\u67d0\u4e2a key \u6570\u636e\u91cf\u7279\u522b\u5927\uff0c\u540c\u6837\u4f1a\u9020\u6210\u6570\u636e\u503e\u659c\uff0c\u751a\u81f3\u4f1a\u9020\u6210\u67d0\u4e2a\u5206\u533a\u65e0\u6570\u636e\u3002</p> <pre><code>sc.makeRDD(List((\"a\", 5), (\"e\", 4), (\"e\", 1), (\"a\", 1), (\"b\", 2), (\"c\", -3), (\"d\", 4)))\n  .partitionBy(new HashPartitioner(2))\n  .glom()\n  .collect()\n  .foreach(array =&gt; println(array.mkString(\",\")))\n</code></pre> <pre><code>val rdd = sc.makeRDD(List((\"a\", 5), (\"e\", 4), (\"e\", 1), (\"a\", 1), (\"b\", 2), (\"c\", -3), (\"d\", 4)))\nrdd.partitionBy(new RangePartitioner(2, rdd))\n  .glom()\n  .collect()\n  .foreach(array =&gt; println(array.mkString(\",\")))\n</code></pre> <p>\u81ea\u5b9a\u4e49\u5206\u533a\u5668\uff1a</p> <pre><code>abstract class Partitioner extends Serializable {\n  def numPartitions: Int\n  def getPartition(key: Any): Int\n}\n</code></pre> <pre><code>import org.apache.spark.{Partitioner, SparkConf, SparkContext}\n\nobject Partitioner {\n  def main(args: Array[String]): Unit = {\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"CustomPartitioner\")\n    val sc = new SparkContext(sparkConf)\n    val rdd = sc.makeRDD(List((\"a\", 5), (\"e\", 4), (\"f\", 1), (\"a\", 1), (\"b\", 2), (\"c\", -3), (\"d\", 4)))\n    rdd.partitionBy(new CustomPartitioner(3))\n      .glom()\n      .collect()\n      .foreach(array =&gt; println(array.mkString(\",\")))\n  }\n}\n\nclass CustomPartitioner(num: Int) extends Partitioner {\n  override def numPartitions: Int = num\n\n  override def getPartition(key: Any): Int = {\n    key match {\n      case \"a\" =&gt; 0\n      case \"b\" =&gt; 1\n      case _ =&gt; 2\n    }\n  }\n}\n</code></pre> <p></p>"},{"location":"Spark/1.Spark%20Core/#shuffle","title":"Shuffle \u673a\u5236","text":"<p>Spark shuffle introduction | PPT (slideshare.net)</p> <p>Spark Shuffle Deep Dive (Explained In Depth) - How Shuffle Works in Spark | PPT (slideshare.net)</p> <p>Shuffle \u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u573a\u666f\u4e2d\uff0c\u5b83\u88ab\u5f15\u7533\u4e3a\u96c6\u7fa4\u8303\u56f4\u5185\u8de8\u8282\u70b9\u3001\u8de8\u8fdb\u7a0b\u7684\u6570\u636e\u5206\u53d1\u3002\u5206\u5e03\u5f0f\u6570\u636e\u96c6\u5728\u96c6\u7fa4\u5185\u7684\u5206\u53d1\uff0c\u4f1a\u5f15\u5165\u5927\u91cf\u7684\u78c1\u76d8 I/O \u4e0e\u7f51\u7edc I/O\u3002</p> <p>Shuffle \u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u5c06\u6570\u636e\u91cd\u65b0\u7ec4\u7ec7\uff0c\u4f7f\u5176\u80fd\u591f\u5728\u4e0a\u6e38\u548c\u4e0b\u6e38 task \u4e4b\u95f4\u8fdb\u884c\u4f20\u9012\u548c\u8ba1\u7b97\u3002</p> <p>Shuffle \u673a\u5236\u5206\u4e3a Shuffle Write \u548c Shuffle Read \u4e24\u4e2a\u9636\u6bb5\uff0c\u524d\u8005\u4e3b\u8981\u89e3\u51b3\u4e0a\u6e38 stage \u6570\u636e\u5206\u533a\u7684\u95ee\u9898\uff0c\u540e\u8005\u4e3b\u8981\u89e3\u51b3\u4e0b\u6e38 stage \u4ece\u4e0a\u6e38 stage \u83b7\u53d6\u6570\u636e\u5e76\u805a\u5408\u7684\u95ee\u9898\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4ee5 Shuffle \u4e3a\u8fb9\u754c\uff0creduceByKey \u7684\u8ba1\u7b97\u88ab\u5207\u5272\u4e3a\u4e24\u4e2a\u6267\u884c\u9636\u6bb5\u3002\u7ea6\u5b9a\u4fd7\u6210\u5730\uff0c\u6211\u4eec\u628a Shuffle \u4e4b\u524d\u7684 Stage \u53eb\u4f5c Map \u9636\u6bb5\uff0c\u800c\u628a Shuffle \u4e4b\u540e\u7684 Stage \u79f0\u4f5c Reduce \u9636\u6bb5\u3002</p> <p>Map \u9636\u6bb5\u548c Reduce \u9636\u6bb5\u4e4b\u95f4\u5982\u4f55\u5b8c\u6210\u6570\u636e\u4ea4\u6362\uff1f</p> <p>\u901a\u8fc7\u751f\u4ea7\u4e0e\u6d88\u8d39 Shuffle \u4e2d\u95f4\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u6765\u5b8c\u6210\u96c6\u7fa4\u8303\u56f4\u5185\u7684\u6570\u636e\u4ea4\u6362\u3002</p> <p></p> <p>\u5728 Map \u6267\u884c\u9636\u6bb5\uff0c\u6bcf\u4e2a Task \u90fd\u4f1a\u751f\u6210\u5305\u542b data \u6587\u4ef6\u4e0e index \u6587\u4ef6\u7684 Shuffle \u4e2d\u95f4\u6587\u4ef6\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cShuffle \u6587\u4ef6\u7684\u751f\u6210\uff0c\u662f\u4ee5 Map Task \u4e3a\u7c92\u5ea6\u7684\uff0cMap \u9636\u6bb5\u6709\u591a\u5c11\u4e2a Map Task\uff0c\u5c31\u4f1a\u751f\u6210\u591a\u5c11\u4efd Shuffle \u4e2d\u95f4\u6587\u4ef6\u3002</p>"},{"location":"Spark/1.Spark%20Core/#shuffle-write","title":"Shuffle Write","text":"<p>\u5982\u4f55\u786e\u5b9a\u5206\u533a\u4e2a\u6570\uff1f</p> <ol> <li>\u7528\u6237\u81ea\u5b9a\u4e49</li> <li>\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\uff0c\u5219\u9ed8\u8ba4\u5206\u533a\u4e2a\u6570\u662f parent RDD \u4e2d\u5206\u533a\u4e2a\u6570\u7684\u6700\u5927\u503c</li> </ol> <p>\u5982\u4f55\u5bf9 map \u9636\u6bb5\u7684\u8f93\u51fa\u6570\u636e\u8fdb\u884c\u5206\u533a\uff1f</p> <p>\u5bf9 map \u9636\u6bb5\u8f93\u51fa\u7684\u6bcf\u4e00\u4e2a <code>&lt;K, V&gt;</code> record\uff0c\u6839\u636e Key \u8ba1\u7b97\u5176 partitionId\uff0c\u7136\u540e\u5c06\u5176\u5199\u5165\u5bf9\u5e94\u7684\u5206\u533a\u6587\u4ef6\u4e2d\u3002</p> <p></p> <p></p> <p>\u5728\u751f\u6210\u4e2d\u95f4\u6587\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0cSpark \u4f1a\u501f\u52a9\u4e00\u79cd\u7c7b\u4f3c\u4e8e Map \u7684\u6570\u636e\u7ed3\u6784\uff0c\u6765\u8ba1\u7b97\u3001\u7f13\u5b58\u5e76\u6392\u5e8f\u6570\u636e\u5206\u533a\u4e2d\u7684\u6570\u636e\u8bb0\u5f55\u3002\u8fd9\u79cd Map \u7ed3\u6784\u7684 Key \u662f\uff08Reduce Task Partition ID\uff0cRecord Key\uff09\uff0c\u800c Value \u662f\u539f\u6570\u636e\u8bb0\u5f55\u4e2d\u7684\u6570\u636e\u503c\u3002</p> <p>\u5f53 Map \u7ed3\u6784\u88ab\u586b\u5145\u6ee1\u4e4b\u540e\uff0cSpark \u6839\u636e\u4e3b\u952e\u5bf9 Map \u4e2d\u7684\u6570\u636e\u8bb0\u5f55\u505a\u6392\u5e8f\uff0c\u7136\u540e\u628a\u6240\u6709\u5185\u5bb9\u6ea2\u51fa\u5230\u78c1\u76d8\u4e2d\u7684\u4e34\u65f6\u6587\u4ef6\u3002\u5982\u6b64\u5f80\u590d\uff0c\u76f4\u5230\u6570\u636e\u5206\u533a\u4e2d\u6240\u6709\u7684\u6570\u636e\u8bb0\u5f55\u90fd\u88ab\u5904\u7406\u5b8c\u6bd5\u3002</p> <p>\u78c1\u76d8\u4e0a\u5b58\u6709\u82e5\u5e72\u4e2a\u6ea2\u51fa\u7684\u4e34\u65f6\u6587\u4ef6\uff0c\u800c\u5185\u5b58\u7684 Map \u7ed3\u6784\u4e2d\u7559\u6709\u90e8\u5206\u6570\u636e\uff0cSpark \u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\u5bf9\u6240\u6709\u4e34\u65f6\u6587\u4ef6\u548c Map \u7ed3\u6784\u5269\u4f59\u6570\u636e\u505a\u5408\u5e76\uff0c\u5206\u522b\u751f\u6210 data \u6587\u4ef6\u3001\u548c\u4e0e\u4e4b\u5bf9\u5e94\u7684 index \u6587\u4ef6\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ol> <li>\u5bf9\u4e8e\u6570\u636e\u5206\u533a\u4e2d\u7684\u6570\u636e\u8bb0\u5f55\uff0c\u9010\u4e00\u8ba1\u7b97\u5176\u76ee\u6807\u5206\u533a\uff0c\u7136\u540e\u586b\u5145\u5185\u5b58\u6570\u636e\u7ed3\u6784\uff1b</li> <li>\u5f53\u6570\u636e\u7ed3\u6784\u586b\u6ee1\u540e\uff0c\u5982\u679c\u5206\u533a\u4e2d\u8fd8\u6709\u672a\u5904\u7406\u7684\u6570\u636e\u8bb0\u5f55\uff0c\u5c31\u5bf9\u7ed3\u6784\u4e2d\u7684\u6570\u636e\u8bb0\u5f55\u6309\uff08\u76ee\u6807\u5206\u533a ID\uff0cKey\uff09\u6392\u5e8f\uff0c\u5c06\u6240\u6709\u6570\u636e\u6ea2\u51fa\u5230\u4e34\u65f6\u6587\u4ef6\uff0c\u540c\u65f6\u6e05\u7a7a\u6570\u636e\u7ed3\u6784\uff1b</li> <li>\u91cd\u590d\u524d 2 \u4e2a\u6b65\u9aa4\uff0c\u76f4\u5230\u5206\u533a\u4e2d\u6240\u6709\u7684\u6570\u636e\u8bb0\u5f55\u90fd\u88ab\u5904\u7406\u4e3a\u6b62\uff1b</li> <li>\u5bf9\u6240\u6709\u4e34\u65f6\u6587\u4ef6\u548c\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e2d\u5269\u4f59\u7684\u6570\u636e\u8bb0\u5f55\u505a\u5f52\u5e76\u6392\u5e8f\uff0c\u751f\u6210\u6570\u636e\u6587\u4ef6\u548c\u7d22\u5f15\u6587\u4ef6\u3002</li> </ol>"},{"location":"Spark/1.Spark%20Core/#shuffle-read","title":"Shuffle Read","text":"<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a Map Task \u751f\u6210\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u5176\u4e2d\u7684\u76ee\u6807\u5206\u533a\u6570\u91cf\u662f\u7531 Reduce \u9636\u6bb5\u7684\u4efb\u52a1\u6570\u91cf\uff08\u53c8\u53eb\u5e76\u884c\u5ea6\uff09\u51b3\u5b9a\u7684\u3002\u5728\u4e0b\u9762\u7684\u793a\u610f\u56fe\u4e2d\uff0cReduce \u9636\u6bb5\u7684\u5e76\u884c\u5ea6\u662f 3\uff0c\u56e0\u6b64\uff0cMap Task \u7684\u4e2d\u95f4\u6587\u4ef6\u4f1a\u5305\u542b 3 \u4e2a\u76ee\u6807\u5206\u533a\u7684\u6570\u636e\uff0c\u800c index \u6587\u4ef6\uff0c\u6070\u6070\u662f\u7528\u6765\u6807\u8bb0\u76ee\u6807\u5206\u533a\u6240\u5c5e\u6570\u636e\u8bb0\u5f55\u7684\u8d77\u59cb\u7d22\u5f15\u3002</p> <p></p> <p>\u5bf9\u4e8e\u6240\u6709 Map Task \u751f\u6210\u7684\u4e2d\u95f4\u6587\u4ef6\uff0cReduce Task \u9700\u8981\u901a\u8fc7\u7f51\u7edc\u4ece\u4e0d\u540c\u8282\u70b9\u7684\u786c\u76d8\u4e2d\u4e0b\u8f7d\u5e76\u62c9\u53d6\u5c5e\u4e8e\u81ea\u5df1\u7684\u6570\u636e\u5185\u5bb9\u3002\u4e0d\u540c\u7684 Reduce Task \u6b63\u662f\u6839\u636e index \u6587\u4ef6\u4e2d\u7684\u8d77\u59cb\u7d22\u5f15\u6765\u786e\u5b9a\u54ea\u4e9b\u6570\u636e\u5185\u5bb9\u662f\u201c\u5c5e\u4e8e\u81ea\u5df1\u7684\u201d\u3002</p> <p>\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u805a\u5408\uff1f</p> <ol> <li>\u901a\u7528\u7684\u65b9\u5f0f\u662f\u4e24\u9636\u6bb5\u805a\u5408\uff08two-phase aggregation\uff09\uff0c\u5148\u5c06\u83b7\u53d6\u5230\u7684 <code>&lt;K, V&gt;</code> record \u5b58\u653e\u5230 HashMap \u4e2d\uff0c\u7136\u540e\u5bf9\u4e8e HashMap \u4e2d\u7684\u6bcf\u4e00\u4e2a <code>&lt;K, list(V)&gt;</code> record \u8fdb\u884c\u805a\u5408\u3002</li> <li>\u5bf9\u4e8e reduceByKey(func) \u7b49\u5305\u542b\u805a\u5408\u51fd\u6570\u7684\u7b97\u5b50\u6765\u8bf4\uff0c\u53ef\u4ee5\u91c7\u7528\u5728\u7ebf\u805a\u5408\uff08online aggregation\uff09\uff0c\u5373\u6bcf\u4e2a record \u52a0\u5165 HashMap \u4e2d\u65f6\uff0c\u5c31\u540c\u65f6\u8fdb\u884c func() \u805a\u5408\u64cd\u4f5c\u3002</li> </ol> <p></p>"},{"location":"Spark/1.Spark%20Core/#_3","title":"\u6392\u5e8f\u95ee\u9898","text":"<p>\u6709\u4e9b\u64cd\u4f5c\u5982 sortByKey()\u3001sortByKey() \u9700\u8981\u5bf9\u6570\u636e\u6309\u7167 Key \u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u9700\u8981\u8003\u8651\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u5728\u54ea\u91cc\u6267\u884c\u6392\u5e8f\uff1f</li> <li>\u5148\u6392\u5e8f\u8fd8\u662f\u5148\u805a\u5408\uff1f</li> </ol> <p>\u9996\u5148\uff0c\u5728 Shuffle Read \u7aef\u5fc5\u987b\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a\u4ece\u6bcf\u4e2a task \u83b7\u53d6\u7684\u6570\u636e\u662f\u65e0\u5e8f\u7684\u3002\u5176\u6b21\uff0c\u7406\u8bba\u4e0a\uff0c\u5728 Shuffle Write \u7aef\u4e0d\u9700\u8981\u6392\u5e8f\uff0c\u4f46\u662f\u5982\u679c\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u90a3\u4e48 Shuffle Read \u6bb5\u5c31\u53ef\u4ee5\u83b7\u5f97\u5c40\u90e8\u6709\u5e8f\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u51cf\u5c11 Shuffle Read \u7aef\u6392\u5e8f\u7684\u5f00\u9500\u3002</p> <p>\u5bf9\u4e8e\u5148\u6392\u5e8f\u8fd8\u662f\u5148\u805a\u5408\u7684\u95ee\u9898\uff0cHadoop MapReduce \u91c7\u7528\u7684\u662f\u5148\u6392\u5e8f\u540e\u805a\u5408\u7684\u65b9\u5f0f\uff0c\u800c Spark \u91c7\u7528\u7684\u662f\u5148\u805a\u5408\u540e\u6392\u5e8f\u7684\u65b9\u5f0f\u3002</p> <p>\u5148\u6392\u5e8f\u518d\u805a\u5408\u9700\u8981\u4f7f\u7528\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u5b58\u50a8 Shuffle Read \u7684 <code>&lt;K, V&gt;</code> record\uff0c\u7136\u540e\u5bf9 Key \u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\u7684\u6570\u636e\u53ef\u4ee5\u76f4\u63a5\u4ece\u524d\u5230\u540e\u8fdb\u884c\u626b\u63cf\u805a\u5408\uff0c\u4e0d\u9700\u8981\u518d\u4f7f\u7528 HashMap \u8fdb\u884c hash-based \u805a\u5408\u3002\u65b9\u6848\u4f18\u70b9\u662f\u65e2\u53ef\u4ee5\u6ee1\u8db3\u6392\u5e8f\u8981\u6c42\u53c8\u53ef\u4ee5\u6ee1\u8db3\u805a\u5408\u8981\u6c42\uff1b\u7f3a\u70b9\u662f\u9700\u8981\u8f83\u5927\u5185\u5b58\u7a7a\u95f4\u6765\u5b58\u50a8\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u540c\u65f6\u6392\u5e8f\u548c\u805a\u5408\u8fc7\u7a0b\u4e0d\u80fd\u540c\u65f6\u8fdb\u884c\uff0c\u5373\u4e0d\u80fd\u4f7f\u7528\u5728\u7ebf\u805a\u5408\uff0c\u6548\u7387\u8f83\u4f4e\u3002</p> <p>\u5148\u805a\u5408\u518d\u6392\u5e8f\u53ef\u4ee5\u7ef4\u6301\u73b0\u6709\u57fa\u4e8e HashMap \u7684\u805a\u5408\u65b9\u6848\u4e0d\u53d8\uff0c\u5c06 HashMap \u4e2d\u7684 record \u6216 record \u7684\u5f15\u7528\u653e\u5165\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u4e2d\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u79cd\u65b9\u6848\u7684\u4f18\u70b9\u662f\u805a\u5408\u548c\u6392\u5e8f\u8fc7\u7a0b\u72ec\u7acb\uff0c\u7075\u6d3b\u6027\u8f83\u9ad8\uff0c\u800c\u4e14\u4e4b\u524d\u7684\u5728\u7ebf\u805a\u5408\u65b9\u6848\u4e0d\u9700\u8981\u6539\u52a8\uff1b\u7f3a\u70b9\u662f\u9700\u8981\u590d\u5236\uff08copy\uff09\u6570\u636e\u6216\u5f15\u7528\uff0c\u7a7a\u95f4\u5360\u7528\u8f83\u5927\u3002Spark \u9009\u62e9\u7684\u662f\u8fd9\u79cd\u65b9\u6848\uff0c\u8bbe\u8ba1\u4e86\u7279\u6b8a\u7684 HashMap \u6765\u9ad8\u6548\u5b8c\u6210\u5148\u805a\u5408\u518d\u6392\u5e8f\u7684\u4efb\u52a1\u3002</p>"},{"location":"Spark/1.Spark%20Core/#_4","title":"\u5185\u5b58\u4e0d\u8db3\u95ee\u9898","text":"<p>\u5982\u679c Shuffle \u6570\u636e\u91cf\u8fc7\u5927\u5bfc\u81f4\u5185\u5b58\u653e\u4e0d\u4e0b\u600e\u4e48\u529e\uff1f\u7531\u4e8e\u6211\u4eec\u4f7f\u7528 HashMap \u5bf9\u6570\u636e\u8fdb\u884c combine \u548c\u805a\u5408\uff0c\u5728\u6570\u636e\u91cf\u5927\u7684\u65f6\u5019\uff0c\u4f1a\u51fa\u73b0\u5185\u5b58\u6ea2\u51fa\u3002\u8fd9\u4e2a\u95ee\u9898\u65e2\u53ef\u80fd\u51fa\u73b0\u5728 Shuffle Write \u9636\u6bb5\uff0c\u53c8\u53ef\u80fd\u51fa\u73b0\u5728 Shuffle Read \u9636\u6bb5\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u4f7f\u7528\u5185\u5b58+\u78c1\u76d8\u6df7\u5408\u5b58\u50a8\u65b9\u6848\u3002</p> <p>\u5148\u5728\u5185\u5b58\uff08\u5982 HashMap\uff09\u4e2d\u8fdb\u884c\u6570\u636e\u805a\u5408\uff0c\u5982\u679c\u5185\u5b58\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5219\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e spill \u5230\u78c1\u76d8\u4e0a\uff0c\u6b64\u65f6\u7a7a\u95f2\u51fa\u6765\u7684\u5185\u5b58\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u65b0\u7684\u6570\u636e\u3002\u6b64\u8fc7\u7a0b\u53ef\u4ee5\u4e0d\u65ad\u91cd\u590d\uff0c\u76f4\u5230\u6570\u636e\u5904\u7406\u5b8c\u6210\u3002\u7136\u800c\uff0c\u95ee\u9898\u662f spill \u5230\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5b9e\u9645\u4e0a\u662f\u90e8\u5206\u805a\u5408\u7684\u7ed3\u679c\uff0c\u5e76\u6ca1\u6709\u548c\u540e\u7eed\u7684\u6570\u636e\u8fdb\u884c\u8fc7\u805a\u5408\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u5f97\u5230\u5b8c\u6574\u7684\u805a\u5408\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65\u6570\u636e\u64cd\u4f5c\u4e4b\u524d\u5bf9\u78c1\u76d8\u4e0a\u548c\u5185\u5b58\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u518d\u6b21\u805a\u5408\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u79f0\u4e3a\u201c\u5168\u5c40\u805a\u5408\u201d\u3002\u4e3a\u4e86\u52a0\u901f\u5168\u5c40\u805a\u5408\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6570\u636e spill \u5230\u78c1\u76d8\u4e0a\u65f6\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u6837\u5168\u5c40\u805a\u5408\u624d\u80fd\u591f\u6309\u987a\u5e8f\u8bfb\u53d6 spill \u5230\u78c1\u76d8\u4e0a\u7684\u6570\u636e\uff0c\u5e76\u51cf\u5c11\u78c1\u76d8 I/O\u3002</p>"},{"location":"Spark/1.Spark%20Core/#shuffle_1","title":"Shuffle \u7684\u7c7b\u578b","text":"<p>Spark Shuffle \u5206\u4e3a\u4e24\u79cd\uff1a\u4e00\u79cd\u662f\u57fa\u4e8e Hash \u7684 Shuffle\uff0c\u53e6\u4e00\u79cd\u662f\u57fa\u4e8e Sort \u7684 Shuffle\u3002\u4f46\u662f\u5728 Spark 2.0 \u7248\u672c\u4e2d\uff0cHash Shuffle \u65b9\u5f0f\u5df1\u7ecf\u4e0d\u518d\u4f7f\u7528\u3002Spark \u653e\u5f03\u57fa\u4e8e Hash \u7684 Shuffle \u7684\u539f\u56e0\u662f\uff0cHash Shuffle \u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u5c0f\u6587\u4ef6\uff0c\u5f53\u6570\u636e\u91cf\u8d8a\u6765\u8d8a\u591a\u65f6\uff0c\u4ea7\u751f\u7684\u6587\u4ef6\u91cf\u662f\u4e0d\u53ef\u63a7\u7684\uff0c\u8fd9\u4e25\u91cd\u5236\u7ea6\u4e86 Spark \u7684\u6027\u80fd\u53ca\u6269\u5c55\u80fd\u529b\u3002\u4f46\u662f\u57fa\u4e8e Sort \u7684 Shuffle \u4f1a\u5f3a\u5236\u8981\u6c42\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u4f1a\u589e\u52a0\u8ba1\u7b97\u65f6\u5ef6\u3002</p> <p>Spark \u73b0\u652f\u6301\u4e09\u79cd writer\uff0c\u5206\u4e3a BypassMergeSortShuffleWriter\uff0cSortShuffleWriter \u548c UnsafeShuffleWriter\u3002</p> <p></p> <p></p>"},{"location":"Spark/1.Spark%20Core/#hashshuffle","title":"HashShuffle","text":"<p>\u5c06\u6bcf\u4e2a task \u5904\u7406\u7684\u6570\u636e\u6309 key \u8fdb\u884c hash partition\uff0c\u4ece\u800c\u5c06\u76f8\u540c key \u90fd\u5199\u5165\u540c\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\u4e2d\uff0c\u800c\u6bcf\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\u90fd\u53ea\u5c5e\u4e8e\u4e0b\u6e38 stage \u7684\u4e00\u4e2a task\u3002\u5728\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\u4e4b\u524d\uff0c\u4f1a\u5148\u5c06\u6570\u636e\u5199\u5165\u5185\u5b58\u7f13\u51b2\u4e2d\uff0c\u5f53\u5185\u5b58\u7f13\u51b2\u586b\u6ee1\u4e4b\u540e\uff0c\u624d\u4f1a\u6ea2\u5199\u5230\u78c1\u76d8\u6587\u4ef6\u4e2d\u53bb\u3002</p> <p>\u672a\u7ecf\u4f18\u5316\u7684 Hash Shuffle \u4f1a\u4ea7\u751f \u4e0a\u6e38 <code>task \u4e2a\u6570 * \u4e0b\u6e38 task \u4e2a\u6570</code> \u7684\u6587\u4ef6\u6570\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u5c0f\u6587\u4ef6\u548c\u78c1\u76d8 IO\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\u3002</p> <p></p>"},{"location":"Spark/1.Spark%20Core/#hashshuffle_1","title":"\u4f18\u5316\u7684 HashShuffle","text":"<p>\u4e3a\u4e86\u4f18\u5316 HashShuffle \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u53c2\u6570\uff1a<code>spark.shuffle.consolidateFiles</code></p> <p>\u76f8\u6bd4\u4e8e\u672a\u7ecf\u4f18\u5316\u7684\u7248\u672c\uff0c\u5c31\u662f\u5728\u4e00\u4e2a Executor \u4e2d\u7684\u6240\u6709\u7684 task \u662f\u53ef\u4ee5\u5171\u7528\u4e00\u4e2a buffer \u5185\u5b58\u3002\u5728 shuffle write \u8fc7\u7a0b\u4e2d\uff0ctask \u5c31\u4e0d\u662f\u4e3a\u4e0b\u6e38 stage \u7684\u6bcf\u4e2a task \u521b\u5efa\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\u4e86\uff0c\u800c\u662f\u5141\u8bb8\u4e0d\u540c\u7684 task \u590d\u7528\u540c\u4e00\u6279\u78c1\u76d8\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6709\u6548\u5c06\u591a\u4e2a task \u7684\u78c1\u76d8\u6587\u4ef6\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7684\u5408\u5e76\uff0c\u4ece\u800c\u5927\u5e45\u5ea6\u51cf\u5c11\u78c1\u76d8\u6587\u4ef6\u7684\u6570\u91cf\uff0c\u8fdb\u800c\u63d0\u5347 shuffle write \u7684\u6027\u80fd\u3002\u6b64\u65f6\u7684\u6587\u4ef6\u4e2a\u6570\u662f <code>CPU core \u7684\u6570\u91cf \u00d7 \u4e0b\u4e00\u4e2a stage \u7684 task \u6570\u91cf</code>\u3002</p> <p></p>"},{"location":"Spark/1.Spark%20Core/#hashshuffle_2","title":"HashShuffle \u603b\u7ed3","text":"<p>\u57fa\u4e8e Hash \u7684 Shuffle \u673a\u5236\u7684\u4f18\u7f3a\u70b9</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u53ef\u4ee5\u7701\u7565\u4e0d\u5fc5\u8981\u7684\u6392\u5e8f\u5f00\u9500\u3002</li> <li>\u907f\u514d\u4e86\u6392\u5e8f\u6240\u9700\u7684\u5185\u5b58\u5f00\u9500\u3002</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u751f\u4ea7\u7684\u6587\u4ef6\u8fc7\u591a\uff0c\u4f1a\u5bf9\u6587\u4ef6\u7cfb\u7edf\u9020\u6210\u538b\u529b\u3002</li> <li>\u5927\u91cf\u5c0f\u6587\u4ef6\u7684\u968f\u673a\u8bfb\u5199\u5e26\u6765\u4e00\u5b9a\u7684\u78c1\u76d8\u5f00\u9500\u3002</li> <li>\u6570\u636e\u5757\u5199\u5165\u65f6\u6240\u9700\u7684\u7f13\u5b58\u7a7a\u95f4\u4e5f\u4f1a\u968f\u4e4b\u589e\u52a0\uff0c\u5bf9\u5185\u5b58\u9020\u6210\u538b\u529b\u3002</li> </ul>"},{"location":"Spark/1.Spark%20Core/#sortshuffle","title":"SortShuffle","text":"<p>SortShuffleManager \u7684\u8fd0\u884c\u673a\u5236\u4e3b\u8981\u5206\u6210\u4e09\u79cd\uff1a</p> <ul> <li>\u666e\u901a\u8fd0\u884c\u673a\u5236</li> <li>bypass \u8fd0\u884c\u673a\u5236\uff0c\u5f53 shuffle read task \u7684\u6570\u91cf\u5c0f\u4e8e\u7b49\u4e8e <code>spark.shuffle.sort.bypassMergeThreshold</code> \u53c2\u6570\u7684\u503c\u65f6\uff08\u9ed8\u8ba4\u4e3a 200\uff09\uff0c\u5c31\u4f1a\u542f\u7528 bypass \u673a\u5236</li> <li>Tungsten Sort \u8fd0\u884c\u673a\u5236\uff0c\u5f00\u542f\u6b64\u8fd0\u884c\u673a\u5236\u9700\u8bbe\u7f6e\u914d\u7f6e\u9879 <code>spark.shuffle.manager=tungsten-sort</code>\u3002\u5f00\u542f\u6b64\u9879\u914d\u7f6e\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u5c31\u4e00\u5b9a\u91c7\u7528\u6b64\u8fd0\u884c\u673a\u5236\u3002</li> </ul> <p>\u666e\u901a\u8fd0\u884c\u673a\u5236\uff1a</p> <p>\u5728\u8be5\u6a21\u5f0f\u4e0b\uff0c\u6570\u636e\u4f1a\u5148\u5199\u5165\u4e00\u4e2a\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u6b64\u65f6\u6839\u636e\u4e0d\u540c\u7684 shuffle \u7b97\u5b50\uff0c\u53ef\u80fd\u9009\u7528\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u662f reduceByKey \u8fd9\u79cd\u805a\u5408\u7c7b\u7684 shuffle \u7b97\u5b50\uff0c\u90a3\u4e48\u4f1a\u9009\u7528 Map \u6570\u636e\u7ed3\u6784\uff0c\u4e00\u8fb9\u901a\u8fc7 Map \u8fdb\u884c\u805a\u5408\uff0c\u4e00\u8fb9\u5199\u5165\u5185\u5b58\uff1b\u5982\u679c\u662f join \u8fd9\u79cd\u666e\u901a\u7684 shuffle \u7b97\u5b50\uff0c\u90a3\u4e48\u4f1a\u9009\u7528 Array \u6570\u636e\u7ed3\u6784\uff0c\u76f4\u63a5\u5199\u5165\u5185\u5b58\u3002\u63a5\u7740\uff0c\u6bcf\u5199\u4e00\u6761\u6570\u636e\u8fdb\u5165\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e4b\u540e\uff0c\u5c31\u4f1a\u5224\u65ad\u4e00\u4e0b\uff0c\u662f\u5426\u8fbe\u5230\u4e86\u67d0\u4e2a\u4e34\u754c\u9608\u503c\u3002\u5982\u679c\u8fbe\u5230\u4e34\u754c\u9608\u503c\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c1d\u8bd5\u5c06\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6570\u636e\u6ea2\u5199\u5230\u78c1\u76d8\uff0c\u7136\u540e\u6e05\u7a7a\u5185\u5b58\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u5728\u6ea2\u5199\u5230\u78c1\u76d8\u6587\u4ef6\u4e4b\u524d\uff0c\u4f1a\u5148\u6839\u636e key \u5bf9\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e2d\u5df2\u6709\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u8fc7\u540e\uff0c\u4f1a\u5206\u6279\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u3002\u9ed8\u8ba4\u7684 batch \u6570\u91cf\u662f 10000 \u6761\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u4f1a\u4ee5\u6bcf\u6279 1 \u4e07\u6761\u6570\u636e\u7684\u5f62\u5f0f\u5206\u6279\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u3002\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u662f\u901a\u8fc7 Java \u7684 BufferedOutputStream \u5b9e\u73b0\u7684\u3002BufferedOutputStream \u662f Java \u7684\u7f13\u51b2\u8f93\u51fa\u6d41\uff0c\u9996\u5148\u4f1a\u5c06\u6570\u636e\u7f13\u51b2\u5728\u5185\u5b58\u4e2d\uff0c\u5f53\u5185\u5b58\u7f13\u51b2\u6ee1\u6ea2\u4e4b\u540e\u518d\u4e00\u6b21\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u78c1\u76d8 IO \u6b21\u6570\uff0c\u63d0\u5347\u6027\u80fd\u3002</p> <p>\u4e00\u4e2a task \u5c06\u6240\u6709\u6570\u636e\u5199\u5165\u5185\u5b58\u6570\u636e\u7ed3\u6784\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u53d1\u751f\u591a\u6b21\u78c1\u76d8\u6ea2\u5199\u64cd\u4f5c\uff0c\u4e5f\u5c31\u4f1a\u4ea7\u751f\u591a\u4e2a\u4e34\u65f6\u6587\u4ef6\u3002\u6700\u540e\u4f1a\u5c06\u4e4b\u524d\u6240\u6709\u7684\u4e34\u65f6\u78c1\u76d8\u6587\u4ef6\u90fd\u8fdb\u884c\u5408\u5e76\uff0c\u8fd9\u5c31\u662f merge \u8fc7\u7a0b\uff0c\u6b64\u65f6\u4f1a\u5c06\u4e4b\u524d\u6240\u6709\u4e34\u65f6\u78c1\u76d8\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u8bfb\u53d6\u51fa\u6765\uff0c\u7136\u540e\u4f9d\u6b21\u5199\u5165\u6700\u7ec8\u7684\u78c1\u76d8\u6587\u4ef6\u4e4b\u4e2d\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u4e00\u4e2a task \u5c31\u53ea\u5bf9\u5e94\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u8be5 task \u4e3a\u4e0b\u6e38 stage \u7684 task \u51c6\u5907\u7684\u6570\u636e\u90fd\u5728\u8fd9\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u8fd8\u4f1a\u5355\u72ec\u5199\u4e00\u4efd\u7d22\u5f15\u6587\u4ef6\uff0c\u5176\u4e2d\u6807\u8bc6\u4e86\u4e0b\u6e38\u5404\u4e2a task \u7684\u6570\u636e\u5728\u6587\u4ef6\u4e2d\u7684 start offset \u4e0e end offset\u3002</p> <p></p> <p>Bypass \u8fd0\u884c\u673a\u5236\uff1a</p> <p>\u4e0b\u6e38\u4efb\u52a1\u6570\u6bd4\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u4e8e Hash Shuffle \u5b9e\u73b0\u673a\u5236\u660e\u663e\u6bd4\u57fa\u4e8e Sort Shuffle \u5b9e\u73b0\u673a\u5236\u8981\u5feb\uff0c\u56e0\u6b64\u57fa\u4e8e Sort Shuffle \u5b9e\u73b0\u673a\u5236\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e26 Hash \u98ce\u683c\u7684\u56de\u9000\u65b9\u6848\uff0c\u5c31\u662f bypass \u8fd0\u884c\u673a\u5236\u3002\u5bf9\u4e8e Reducer \u7aef\u5206\u533a\u4e2a\u6570\u5c11\u4e8e\u914d\u7f6e\u5c5e\u6027 <code>spark.shuffle.sort.bypassMergeThreshold</code> \u8bbe\u7f6e\u7684\u4e2a\u6570\u65f6\uff0c\u4f7f\u7528\u5e26 Hash \u98ce\u683c\u7684\u56de\u9000\u8ba1\u5212\u3002</p> <p>bypass \u8fd0\u884c\u673a\u5236\u7684\u89e6\u53d1\u6761\u4ef6\u5982\u4e0b\uff1a</p> <ul> <li>\u5206\u533a\u4e2a\u6570\u5c0f\u4e8e <code>spark.shuffle.sort.bypassMergeThreshold</code> \u53c2\u6570\u7684\u503c\u3002</li> <li>\u4e0d\u662f\u805a\u5408\u7c7b\u7684 shuffle \u7b97\u5b50\u3002\uff08\u56e0\u4e3a\u805a\u5408\u7c7b\u7b97\u5b50\u901a\u5e38\u9700\u8981\u4f7f\u7528 Map \u6570\u636e\u7ed3\u6784\u5206\u533a\u3001\u805a\u5408\u548c\u6392\u5e8f\uff09</li> </ul> <p>\u6b64\u65f6\uff0c\u6bcf\u4e2a task \u4f1a\u4e3a\u6bcf\u4e2a\u4e0b\u6e38 task \u90fd\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u78c1\u76d8\u6587\u4ef6\uff0c\u5e76\u5c06\u6570\u636e\u6309 key \u8fdb\u884c hash \u7136\u540e\u6839\u636e key \u7684 hash \u503c\uff0c\u5c06 key \u5199\u5165\u5bf9\u5e94\u7684\u78c1\u76d8\u6587\u4ef6\u4e4b\u4e2d\u3002\u5f53\u7136\uff0c\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u65f6\u4e5f\u662f\u5148\u5199\u5165\u5185\u5b58\u7f13\u51b2\uff0c\u7f13\u51b2\u5199\u6ee1\u4e4b\u540e\u518d\u6ea2\u5199\u5230\u78c1\u76d8\u6587\u4ef6\u7684\u3002\u6700\u540e\uff0c\u540c\u6837\u4f1a\u5c06\u6240\u6709\u4e34\u65f6\u78c1\u76d8\u6587\u4ef6\u90fd\u5408\u5e76\u6210\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u7d22\u5f15\u6587\u4ef6\u3002</p> <p>\u8be5\u8fc7\u7a0b\u7684\u78c1\u76d8\u5199\u673a\u5236\u5176\u5b9e\u8ddf\u672a\u7ecf\u4f18\u5316\u7684 HashShuffleManager \u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u90fd\u8981\u521b\u5efa\u6570\u91cf\u60ca\u4eba\u7684\u78c1\u76d8\u6587\u4ef6\uff0c\u53ea\u662f\u5728\u6700\u540e\u4f1a\u505a\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\u7684\u5408\u5e76\u800c\u5df2\u3002\u56e0\u6b64\u5c11\u91cf\u7684\u6700\u7ec8\u78c1\u76d8\u6587\u4ef6\uff0c\u4e5f\u8ba9\u8be5\u673a\u5236\u76f8\u5bf9\u672a\u7ecf\u4f18\u5316\u7684 HashShuffleManager \u6765\u8bf4\uff0cshuffle read \u7684\u6027\u80fd\u4f1a\u66f4\u597d\u3002</p> <p>\u800c\u8be5\u673a\u5236\u4e0e\u666e\u901a SortShuffleManager \u8fd0\u884c\u673a\u5236\u7684\u4e0d\u540c\u5728\u4e8e\uff1a</p> <ul> <li>\u78c1\u76d8\u5199\u673a\u5236\u4e0d\u540c\uff08\u666e\u901a\u673a\u5236\u662f\u8fbe\u5230\u9608\u503c\u5c31\u6ea2\u5199\uff0cbypass \u673a\u5236\u662f hash partition\uff09</li> <li>\u4e0d\u4f1a\u8fdb\u884c\u6392\u5e8f\u3002</li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u542f\u7528\u8be5\u673a\u5236\u7684\u6700\u5927\u597d\u5904\u5728\u4e8e\uff0cshuffle write \u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u6570\u636e\u7684\u6392\u5e8f\u64cd\u4f5c\uff0c\u4e5f\u5c31\u8282\u7701\u6389\u4e86\u8fd9\u90e8\u5206\u7684\u6027\u80fd\u5f00\u9500\u3002</p> <p></p> <p>Tungsten Sort \u8fd0\u884c\u673a\u5236\uff1a</p> <p>Tungsten Sort \u662f\u5bf9\u666e\u901a Sort \u7684\u4e00\u79cd\u4f18\u5316\uff0cTungsten Sort \u4f1a\u8fdb\u884c\u6392\u5e8f\uff0c\u4f46\u6392\u5e8f\u7684\u4e0d\u662f\u5185\u5bb9\u672c\u8eab\uff0c\u800c\u662f\u5185\u5bb9\u5e8f\u5217\u5316\u540e\u5b57\u8282\u6570\u7ec4\u7684\u6307\u9488(\u5143\u6570\u636e)\uff0c\u628a\u6570\u636e\u7684\u6392\u5e8f\u8f6c\u53d8\u4e3a\u4e86\u6307\u9488\u6570\u7ec4\u7684\u6392\u5e8f\uff0c\u5b9e\u73b0\u4e86\u76f4\u63a5\u5bf9\u5e8f\u5217\u5316\u540e\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u7531\u4e8e\u76f4\u63a5\u57fa\u4e8e\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u9762\u6ca1\u6709\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u3002\u5185\u5b58\u7684\u6d88\u8017\u5927\u5927\u964d\u4f4e\uff0c\u76f8\u5e94\u7684\uff0c\u4f1a\u6781\u5927\u7684\u51cf\u5c11\u7684 GC \u7684\u5f00\u9500\u3002</p> <p>\u8981\u5b9e\u73b0 Tungsten Sort Shuffle \u673a\u5236\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>Shuffle \u4f9d\u8d56\u4e2d\u4e0d\u5e26\u805a\u5408\u64cd\u4f5c\u6216\u6ca1\u6709\u5bf9\u8f93\u51fa\u8fdb\u884c\u6392\u5e8f\u7684\u8981\u6c42\u3002</li> <li>Shuffle \u7684\u5e8f\u5217\u5316\u5668\u652f\u6301\u5e8f\u5217\u5316\u503c\u7684\u91cd\u5b9a\u4f4d\uff08\u5f53\u524d\u4ec5\u652f\u6301 KryoSerializer Spark SQL \u6846\u67b6\u81ea\u5b9a\u4e49\u7684\u5e8f\u5217\u5316\u5668\uff09\u3002</li> <li>Shuffle \u8fc7\u7a0b\u4e2d\u7684\u8f93\u51fa\u5206\u533a\u4e2a\u6570\u5c11\u4e8e 16777216 \u4e2a\u3002</li> </ul>"},{"location":"Spark/1.Spark%20Core/#sortshuffle_1","title":"SortShuffle \u603b\u7ed3","text":"<p>\u57fa\u4e8e Sort \u7684 Shuffle \u673a\u5236\u7684\u4f18\u7f3a\u70b9</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u5c0f\u6587\u4ef6\u7684\u6570\u91cf\u5927\u91cf\u51cf\u5c11\uff0cMapper \u7aef\u7684\u5185\u5b58\u5360\u7528\u53d8\u5c11</li> <li>Spark \u4e0d\u4ec5\u53ef\u4ee5\u5904\u7406\u5c0f\u89c4\u6a21\u7684\u6570\u636e\uff0c\u5373\u4f7f\u5904\u7406\u5927\u89c4\u6a21\u7684\u6570\u636e\uff0c\u4e5f\u4e0d\u4f1a\u5f88\u5bb9\u6613\u8fbe\u5230\u6027\u80fd\u74f6\u9888</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u5982\u679c Mapper \u4e2d Task \u7684\u6570\u91cf\u8fc7\u5927\uff0c\u4f9d\u65e7\u4f1a\u4ea7\u751f\u5f88\u591a\u5c0f\u6587\u4ef6\uff0c\u6b64\u65f6\u5728 Shuffle \u4f20\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\u5230 Reducer \u7aef\uff0c Reducer \u4f1a\u9700\u8981\u540c\u65f6\u5927\u91cf\u5730\u8bb0\u5f55\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u5bfc\u81f4\u5927\u91cf\u5185\u5b58\u6d88\u8017\u548c GC \u8d1f\u62c5\u5de8\u5927\uff0c\u9020\u6210\u7cfb\u7edf\u7f13\u6162\uff0c\u751a\u81f3\u5d29\u6e83</li> <li>\u5f3a\u5236\u4e86\u5728 Mapper \u7aef\u5fc5\u987b\u8981\u6392\u5e8f\uff0c\u5373\u4f7f\u6570\u636e\u672c\u8eab\u5e76\u4e0d\u9700\u8981\u6392\u5e8f</li> <li>\u5b83\u8981\u57fa\u4e8e\u8bb0\u5f55\u672c\u8eab\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u5c31\u662f Sort-Based Shuffle \u6700\u81f4\u547d\u7684\u6027\u80fd\u6d88\u8017\u3002</li> </ul>"},{"location":"Spark/1.Spark%20Core/#push-based-shuffle","title":"Push-Based Shuffle","text":"<p>https://blog.devgenius.io/shuffle-in-spark-d95b5ebe7b4e</p>"},{"location":"Spark/1.Spark%20Core/#mapreduce-shuffle","title":"\u4e0e MapReduce Shuffle \u7684\u5bf9\u6bd4","text":"<ol> <li>MapReduce \u5f3a\u5236\u6309 Key \u8fdb\u884c\u6392\u5e8f\uff0c\u800c Spark \u53ef\u4ee5\u9009\u62e9\u662f\u5426\u6392\u5e8f</li> <li>MapReduce \u4e0d\u80fd\u5728\u7ebf\u805a\u5408\uff0c\u4e0d\u7ba1\u662f map \u7aef\u8fd8\u662f reduce \u7aef\uff0c\u800c Spark \u8bbe\u8ba1\u4e86 AppendOnlyMap\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5728\u7ebf\u805a\u5408</li> <li>MapReduce \u5728 Map \u9636\u6bb5\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u5206\u533a\u6587\u4ef6\uff08M * R \u4e2a\u5c0f\u6587\u4ef6\uff09\uff0c\u800c Spark \u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684 Shuffle \u673a\u5236\u901a\u8fc7\u4f18\u5316\u51cf\u5c11\u5c0f\u6587\u4ef6\u7684\u4ea7\u751f</li> </ol>"},{"location":"Spark/1.Spark%20Core/#_5","title":"\u5171\u4eab\u53d8\u91cf","text":"<ul> <li>\u5e7f\u64ad\u53d8\u91cf\uff1a\u5206\u5e03\u5f0f\u5171\u4eab\u53ea\u8bfb\u53d8\u91cf</li> <li>\u7d2f\u52a0\u5668\uff1a\u5206\u5e03\u5f0f\u5171\u4eab\u53ea\u5199\u53d8\u91cf</li> </ul>"},{"location":"Spark/1.Spark%20Core/#_6","title":"\u5e7f\u64ad\u53d8\u91cf","text":"<p>\u5e7f\u64ad\u53d8\u91cf\uff08Broadcast Variables\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u9ad8\u6548\u5206\u53d1\u8f83\u5927\u6570\u636e\u96c6\u7ed9\u6240\u6709\u5de5\u4f5c\u8282\u70b9\u7684\u673a\u5236\u3002\u5b83\u4eec\u53ef\u4ee5\u7528\u4e8e\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7f13\u5b58\u4e00\u4e2a\u53ea\u8bfb\u7684\u5927\u578b\u53d8\u91cf\uff0c\u4ee5\u4fbf\u5728\u5e76\u884c\u64cd\u4f5c\u4e2d\u5171\u4eab\u3002</p> <p>\u7531\u4e8e Executor \u662f\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u5185\u5404\u7ebf\u7a0b\u8d44\u6e90\u5171\u4eab\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u653e\u7f6e\u5728 Executor \u7684\u5185\u5b58\u4e2d\uff0c\u8fbe\u5230\u5171\u4eab\u7684\u76ee\u7684\u3002</p> <p>\u76f8\u6bd4\u4e8e\u95ed\u5305\u6570\u636e\u90fd\u662f\u4ee5 Task \u4e3a\u5355\u4f4d\u53d1\u9001\u7684\uff0c\u6bcf\u4e2a Task \u4e2d\u90fd\u5305\u542b\u95ed\u5305\u6570\u636e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e2a Executor \u4e2d\u542b\u6709\u5927\u91cf\u91cd\u590d\u7684\u6570\u636e\uff0c\u5360\u7528\u5927\u91cf\u7684\u5185\u5b58\u3002\u56e0\u6b64\uff0c\u5b8c\u5168\u53ef\u4ee5\u5c06\u4efb\u52a1\u4e2d\u7684\u95ed\u5305\u6570\u636e\u653e\u7f6e\u5728 Executor \u7684\u5185\u5b58\u4e2d\uff0c\u8fbe\u5230\u5171\u4eab\u7684\u76ee\u7684\u3002</p> <p>\u5f53\u591a\u4e2a Executor \u4e0a\u9700\u8981\u540c\u4e00\u4efd\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5e7f\u64ad\u53d8\u91cf\u5f62\u5f0f\u53d1\u9001\u6570\u636e\u3002\u5c24\u5176\u5f53\u8be5\u4efd\u6570\u636e\u5728\u591a\u4e2a Stage \u4e2d\u4f7f\u7528\u65f6\uff0c\u901a\u8fc7\u5e7f\u64ad\u53d8\u91cf\u4e00\u6b21\u6027\u53d1\u9001\u7684\u65b9\u6848\uff0c\u6267\u884c\u6027\u80fd\u5c06\u660e\u663e\u4f18\u4e8e\u5f53\u6570\u636e\u9700\u8981\u65f6\u518d\u53d1\u9001\u7684\u591a\u6b21\u53d1\u9001\u65b9\u6848\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u51cf\u5c11\u6570\u636e\u4f20\u8f93\uff1a\u901a\u8fc7\u5c06\u53ea\u8bfb\u53d8\u91cf\u5e7f\u64ad\u5230\u96c6\u7fa4\u4e2d\uff0c\u907f\u514d\u4e86\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u5927\u91cf\u6570\u636e\u7684\u5f00\u9500\uff0c\u51cf\u5c11\u4e86\u7f51\u7edc\u901a\u4fe1\u7684\u8d1f\u62c5\u3002</li> <li>\u63d0\u9ad8\u6027\u80fd\uff1a\u5e7f\u64ad\u53d8\u91cf\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u53ea\u6709\u4e00\u4efd\u526f\u672c\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u4f7f\u7528\u548c\u5783\u573e\u56de\u6536\u7684\u538b\u529b\uff0c\u63d0\u9ad8\u4e86\u4efb\u52a1\u7684\u6267\u884c\u6548\u7387\u3002</li> <li>\u5171\u4eab\u6570\u636e\uff1a\u5e7f\u64ad\u53d8\u91cf\u53ef\u4ee5\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u4efb\u52a1\u4e2d\u5171\u4eab\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u4efb\u52a1\u90fd\u53ef\u4ee5\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u636e\uff0c\u65b9\u4fbf\u6570\u636e\u5171\u4eab\u548c\u64cd\u4f5c\u3002</li> </ul> <p></p> <pre><code>val rootPath: String = _\nval file: String = s\"${rootPath}/wikiOfSpark.txt\"\n// \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\nval lineRDD: RDD[String] = sc.textFile(file)\n// \u4ee5\u884c\u4e3a\u5355\u4f4d\u505a\u5206\u8bcd\nval wordRDD: RDD[String] = lineRDD.flatMap(line =&gt; line.split(\" \"))\n\n// \u521b\u5efa\u5355\u8bcd\u5217\u8868list\nval list: List[String] = List(\"Apache\", \"Spark\")\n// \u521b\u5efa\u5e7f\u64ad\u53d8\u91cfbc\nval bc = sc.broadcast(list)\n// \u4f7f\u7528bc.value\u5bf9RDD\u8fdb\u884c\u8fc7\u6ee4\nval cleanWordRDD: RDD[String] = wordRDD.filter(word =&gt; bc.value.contains(word))\n// \u628aRDD\u5143\u7d20\u8f6c\u6362\u4e3a\uff08Key\uff0cValue\uff09\u7684\u5f62\u5f0f\nval kvRDD: RDD[(String, Int)] = cleanWordRDD.map(word =&gt; (word, 1))\n// \u6309\u7167\u5355\u8bcd\u505a\u5206\u7ec4\u8ba1\u6570\nval wordCounts: RDD[(String, Int)] = kvRDD.reduceByKey((x, y) =&gt; x + y)\n// \u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c\nwordCounts.collect\n// Array[(String, Int)] = Array((Apache,34), (Spark,63))\n</code></pre> <pre><code>// \u901a\u8fc7broadcast\u907f\u514djoin\u5bfc\u81f4\u7684shuffle\nval rdd1 = sc.makeRDD(List((\"a\", 1), (\"b\", 2), (\"c\", 3), (\"d\", 4)), 4)\nval list = List((\"a\", 4), (\"b\", 5), (\"c\", 6), (\"d\", 7))\n// \u58f0\u660e\u5e7f\u64ad\u53d8\u91cf\nval broadcast: Broadcast[List[(String, Int)]] = sc.broadcast(list)\nval resultRDD: RDD[(String, (Int, Int))] = rdd1.map {\n  case (key, num) =&gt; {\n    var num2 = 0\n    // \u4f7f\u7528\u5e7f\u64ad\u53d8\u91cf\n    for ((k, v) &lt;- broadcast.value) {\n      if (k == key) {\n        num2 = v\n      }\n    }\n    (key, (num, num2))\n  }\n}\n</code></pre>"},{"location":"Spark/1.Spark%20Core/#_7","title":"\u7d2f\u52a0\u5668","text":"<p>\u7d2f\u52a0\u5668\u7528\u6765\u628a Executor \u7aef\u53d8\u91cf\u4fe1\u606f\u805a\u5408\u5230 Driver \u7aef\u3002\u5728 Driver \u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5728 Executor \u7aef\u7684\u6bcf\u4e2a Task \u90fd\u4f1a\u5f97\u5230\u8fd9\u4e2a\u53d8\u91cf\u7684\u4e00\u4efd\u65b0\u7684\u526f\u672c\uff0c\u6bcf\u4e2a task \u66f4\u65b0\u8fd9\u4e9b\u526f\u672c\u7684\u503c\u540e\uff0c\u4f20\u56de Driver \u7aef\u8fdb\u884c merge\u3002</p> <p>\u7d2f\u52a0\u5668\u533a\u522b\u4e8e\u5e7f\u64ad\u53d8\u91cf\u7684\u7279\u6027\u662f\uff1a\u7d2f\u52a0\u5668\u53d6\u503c accumulator.value \u5728 Executor \u7aef\u65e0\u6cd5\u88ab\u8bfb\u53d6\uff0c\u53ea\u80fd\u5728 Driver \u7aef\u88ab\u8bfb\u53d6\uff0c\u800c Executor \u7aef\u53ea\u80fd\u6267\u884c\u7d2f\u52a0\u64cd\u4f5c\u3002</p> <p>\u6ce8\u610f\uff1a\u5728\u8f6c\u6362\u7b97\u5b50\u4e2d\u8c03\u7528\u7d2f\u52a0\u5668\uff0c\u5982\u679c\u6ca1\u6709\u884c\u52a8\u7b97\u5b50\u7684\u8bdd\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6ca1\u6709\u6267\u884c\uff0c\u7d2f\u52a0\u5668\u7ed3\u679c\u4f1a\u4e0d\u6b63\u786e\u3002\u56e0\u6b64\u4e00\u822c\u60c5\u51b5\u4e0b\u7d2f\u52a0\u5668\u8981\u653e\u5728\u884c\u52a8\u7b97\u5b50\u4e2d\u4f7f\u7528\u3002\u540c\u65f6\u6ce8\u610f\uff0c\u5982\u679c\u4f7f\u7528\u7d2f\u52a0\u5668\u7684 RDD \u88ab\u591a\u6b21\u884c\u52a8\u7b97\u5b50\u4f7f\u7528\uff0c\u90a3\u4e48\u7d2f\u52a0\u5668\u4f1a\u88ab\u591a\u6b21\u8c03\u7528\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4ea7\u751f\u975e\u9884\u671f\u7684\u7ed3\u679c\uff08\u5efa\u8bae\u5728\u884c\u52a8\u7b97\u5b50\u524d <code>cache()</code>\uff09\u3002</p> <p>\u4e00\u4e9b\u601d\u8003\uff1a\u4e00\u4e9b\u7b80\u5355\u7684\u7edf\u8ba1\u7c7b\u7d2f\u52a0\u903b\u8f91\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u89e3\u51b3\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5168\u5c40\u5206\u5e03\u5f0f\u7684\u7d2f\u52a0\u5668\u907f\u514d shuffle\u3002</p> <p>\u7d2f\u52a0\u5668\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f</p> <p>\u5728\u5206\u5e03\u5f0f\u4ee3\u7801\u6267\u884c\u4e2d\uff0c\u8fdb\u884c\u5168\u5c40\u7d2f\u52a0\u6216\u7edf\u8ba1\u4fe1\u606f\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a\u5148\u5b9a\u4e49\u7d2f\u52a0\u5668\u53d8\u91cf\uff0c\u7136\u540e\u5728 RDD \u7b97\u5b50\u4e2d\u8c03\u7528 add \u51fd\u6570\uff0c\u4ece\u800c\u66f4\u65b0\u7d2f\u52a0\u5668\u72b6\u6001\uff0c\u6700\u540e\u901a\u8fc7\u8c03\u7528 value \u51fd\u6570\u6765\u83b7\u53d6\u7d2f\u52a0\u5668\u7684\u6700\u7ec8\u7ed3\u679c\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5206\u5e03\u5f0f\u7d2f\u52a0\uff1a\u7d2f\u52a0\u5668\u53d8\u91cf\u53ef\u4ee5\u5728\u5e76\u884c\u4efb\u52a1\u4e2d\u8fdb\u884c\u7d2f\u52a0\u64cd\u4f5c\uff0c\u65e0\u8bba\u4efb\u52a1\u5728\u96c6\u7fa4\u4e2d\u7684\u54ea\u4e2a\u8282\u70b9\u6267\u884c\uff0c\u90fd\u53ef\u4ee5\u6b63\u786e\u5730\u5bf9\u53d8\u91cf\u8fdb\u884c\u66f4\u65b0\uff0c\u786e\u4fdd\u4e86\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</li> <li>\u7edf\u8ba1\u4fe1\u606f\u6536\u96c6\uff1a\u7d2f\u52a0\u5668\u53d8\u91cf\u53ef\u4ee5\u7528\u4e8e\u6536\u96c6\u4efb\u52a1\u6267\u884c\u671f\u95f4\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u4f8b\u5982\u8ba1\u6570\u3001\u6c42\u548c\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u7b49\u3002\u8fd9\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8ba1\u7b97\u4e2d\u7684\u8c03\u8bd5\u548c\u76d1\u63a7\u975e\u5e38\u6709\u7528\u3002</li> </ul> <pre><code>val rootPath: String = _\nval file: String = s\"${rootPath}/wikiOfSpark.txt\"\n// \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\nval lineRDD: RDD[String] = sc.textFile(file)\n// \u4ee5\u884c\u4e3a\u5355\u4f4d\u505a\u5206\u8bcd\nval wordRDD: RDD[String] = lineRDD.flatMap(line =&gt; line.split(\" \"))\n\n// \u5b9a\u4e49Long\u7c7b\u578b\u7684\u7d2f\u52a0\u5668\nval ac = sc.longAccumulator(\"Empty string\")\n\n// \u5b9a\u4e49filter\u7b97\u5b50\u7684\u5224\u5b9a\u51fd\u6570f\uff0c\u6ce8\u610f\uff0cf\u7684\u8fd4\u56de\u7c7b\u578b\u5fc5\u987b\u662fBoolean\ndef f(x: String): Boolean = {\n  if (x.equals(\"\")) {\n    // \u5f53\u9047\u5230\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u7d2f\u52a0\u5668\u52a01\n    ac.add(1)\n    return false\n  } else {\n    return true\n  }\n}\n\n// \u4f7f\u7528f\u5bf9RDD\u8fdb\u884c\u8fc7\u6ee4\nval cleanWordRDD: RDD[String] = wordRDD.filter(f)\n// \u628aRDD\u5143\u7d20\u8f6c\u6362\u4e3a\uff08Key\uff0cValue\uff09\u7684\u5f62\u5f0f\nval kvRDD: RDD[(String, Int)] = cleanWordRDD.map(word =&gt; (word, 1))\n// \u6309\u7167\u5355\u8bcd\u505a\u5206\u7ec4\u8ba1\u6570\nval wordCounts: RDD[(String, Int)] = kvRDD.reduceByKey((x, y) =&gt; x + y)\n// \u6536\u96c6\u8ba1\u6570\u7ed3\u679c\nwordCounts.collect\n\n// \u4f5c\u4e1a\u6267\u884c\u5b8c\u6bd5\uff0c\u901a\u8fc7\u8c03\u7528value\u83b7\u53d6\u7d2f\u52a0\u5668\u7ed3\u679c\nac.value\n// Long = 79\n</code></pre>"},{"location":"Spark/1.Spark%20Core/#spark_4","title":"Spark \u5185\u5b58\u7ba1\u7406","text":"<p>\u9996\u5148\u662f\u5185\u5b58\u7684\u7ba1\u7406\u65b9\u5f0f\u3002Spark \u533a\u5206\u5806\u5185\u5185\u5b58\u548c\u5806\u5916\u5185\u5b58\uff1a\u5bf9\u4e8e\u5806\u5916\u5185\u5b58\u6765\u8bf4\uff0cSpark \u901a\u8fc7\u8c03\u7528 Java Unsafe \u7684 allocateMemory \u548c freeMemory \u65b9\u6cd5\uff0c\u76f4\u63a5\u5728\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u4e2d\u7533\u8bf7\u3001\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\uff0c\u7ba1\u7406\u6210\u672c\u8f83\u9ad8\uff1b\u5bf9\u4e8e\u5806\u5185\u5185\u5b58\u6765\u8bf4\uff0c\u65e0\u9700 Spark \u4eb2\u81ea\u64cd\u5200\u800c\u662f\u7531 JVM \u4ee3\u7406\u3002\u4f46\u9891\u7e41\u7684 JVM GC \u5bf9\u6267\u884c\u6027\u80fd\u6765\u8bf4\u662f\u4e00\u5927\u9690\u60a3\u3002\u53e6\u5916\uff0cSpark \u5bf9\u5806\u5185\u5185\u5b58\u5360\u7528\u7684\u9884\u4f30\u5f80\u5f80\u4e0d\u591f\u7cbe\u786e\uff0c\u9ad8\u4f30\u53ef\u7528\u5185\u5b58\u5f80\u5f80\u4f1a\u4e3a OOM \u57cb\u4e0b\u9690\u60a3\u3002</p> <p>\u5176\u6b21\u662f\u7edf\u4e00\u5185\u5b58\u7ba1\u7406\uff0c\u4ee5\u53ca Execution Memory \u548c Storage Memory \u4e4b\u95f4\u7684\u62a2\u5360\u89c4\u5219\uff1a</p> <ul> <li>\u5982\u679c\u5bf9\u65b9\u7684\u5185\u5b58\u7a7a\u95f4\u6709\u7a7a\u95f2\uff0c\u90a3\u4e48\u53cc\u65b9\u90fd\u53ef\u4ee5\u62a2\u5360\uff1b</li> <li>\u5bf9 RDD \u7f13\u5b58\u4efb\u52a1\u62a2\u5360\u7684\u6267\u884c\u5185\u5b58\uff0c\u5f53\u6267\u884c\u4efb\u52a1\u6709\u5185\u5b58\u9700\u8981\u65f6\uff0cRDD \u7f13\u5b58\u4efb\u52a1\u5fc5\u987b\u7acb\u5373\u5f52\u8fd8\u62a2\u5360\u7684\u5185\u5b58\uff0c\u5176\u4e2d\u6d89\u53ca\u7684 RDD \u7f13\u5b58\u6570\u636e\u8981\u4e48\u843d\u76d8\u3001\u8981\u4e48\u6e05\u9664\uff1b</li> <li>\u5bf9\u5206\u5e03\u5f0f\u8ba1\u7b97\u4efb\u52a1\u62a2\u5360\u7684 Storage Memory \u5185\u5b58\u7a7a\u95f4\uff0c\u5373\u4fbf RDD \u7f13\u5b58\u4efb\u52a1\u6709\u6536\u56de\u5185\u5b58\u7684\u9700\u8981\uff0c\u4e5f\u8981\u7b49\u5230\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\u624d\u80fd\u91ca\u653e\u3002</li> </ul> <p>\u6700\u540e\u662f\u4e0d\u540c\u4ee3\u7801\u5bf9\u4e0d\u540c\u5185\u5b58\u533a\u57df\u7684\u6d88\u8017\u3002\u5185\u5b58\u533a\u57df\u5206\u4e3a Reserved Memory\u3001User Memory\u3001Execution Memory \u548c Storage Memory\u3002\u5176\u4e2d\uff0cReserved Memory \u7528\u4e8e\u5b58\u50a8 Spark \u5185\u90e8\u5bf9\u8c61\uff0cUser Memory \u7528\u4e8e\u5b58\u50a8\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7ed3\u6784\uff0cExecution Memory \u7528\u4e8e\u5206\u5e03\u5f0f\u4efb\u52a1\u6267\u884c\uff0c\u800c Storage Memory \u5219\u7528\u6765\u5bb9\u7eb3 RDD \u7f13\u5b58\u548c\u5e7f\u64ad\u53d8\u91cf\u3002</p> <p></p>"},{"location":"Spark/1.Spark%20Core/#spark_5","title":"Spark \u6027\u80fd\u4f18\u5316","text":"<p>Spark \u6027\u80fd\u4f18\u5316\u6307\u5357\u2014\u2014\u57fa\u7840\u7bc7 - \u7f8e\u56e2\u6280\u672f\u56e2\u961f (meituan.com)</p> <p>Spark \u6027\u80fd\u4f18\u5316\u6307\u5357\u2014\u2014\u9ad8\u7ea7\u7bc7 - \u7f8e\u56e2\u6280\u672f\u56e2\u961f (meituan.com)</p>"},{"location":"Spark/2.Spark%20SQL/","title":"Spark SQL","text":""},{"location":"Spark/2.Spark%20SQL/#dataframe-dataset","title":"DataFrame &amp; DataSet","text":"<p>DataFrame \u662f\u4e00\u79cd\u5e26 Schema \u7684\u5206\u5e03\u5f0f\u6570\u636e\u96c6\uff0c\u5728\u7ed3\u6784\u4e0a\u7c7b\u4f3c\u4e8e\u4e00\u5f20\u4e8c\u7ef4\u8868\u3002</p> <p>DataFrame \u80cc\u540e\u7684\u8ba1\u7b97\u5f15\u64ce\u662f Spark SQL\uff0c\u800c RDD \u7684\u8ba1\u7b97\u5f15\u64ce\u662f Spark Core\u3002</p> <p>DataFrame \u4e0e RDD \u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0cDataFrame \u5e26\u6709 schema \u5143\u4fe1\u606f\u3002</p> <p>DataSet \u662f DataFrame \u7684\u4e00\u4e2a\u6269\u5c55\u3002DataSet \u662f\u5f3a\u7c7b\u578b\u7684\uff0c\u652f\u6301\u6cdb\u578b\u7279\u6027\uff0c\u53ef\u4ee5\u8ba9 Java\u3001Scala \u8bed\u8a00\u66f4\u597d\u7684\u5229\u7528\u3002</p> <p></p> <p>\u6709\u4e86 RDD \u4e3a\u4ec0\u4e48\u8fd8\u8981 DataFrame\uff1f</p> <p>\u5728 RDD \u5f00\u53d1\u6846\u67b6\u4e0b\uff0cSpark Core \u7684\u4f18\u5316\u7a7a\u95f4\u53d7\u9650\u3002\u7edd\u5927\u591a\u6570 RDD \u9ad8\u9636\u7b97\u5b50\u6240\u5c01\u88c5\u7684\u5c01\u88c5\u7684\u8ba1\u7b97\u903b\u8f91\uff08\u5f62\u53c2\u51fd\u6570 f\uff09\u5bf9\u4e8e Spark Core \u662f\u900f\u660e\u7684\uff0cSpark Core \u9664\u4e86\u7528\u95ed\u5305\u7684\u65b9\u5f0f\u628a\u51fd\u6570 f \u5206\u53d1\u5230 Executors \u4ee5\u5916\uff0c\u6ca1\u4ec0\u4e48\u4f18\u5316\u4f59\u5730\u3002\u800c DataFrame \u7684\u51fa\u73b0\u5e26\u6765\u4e86\u65b0\u601d\u8def\uff0c\u5b83\u643a\u5e26\u7684 Schema \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u800c\u4e14 DataFrame \u7b97\u5b50\u5927\u591a\u4e3a\u5904\u7406\u6570\u636e\u5217\u7684\u6807\u91cf\u51fd\u6570\u3002DataFrame \u7684\u8fd9\u4e24\u4e2a\u7279\u70b9\uff0c\u4e3a\u5f15\u64ce\u5185\u6838\u7684\u4f18\u5316\u6253\u5f00\u4e86\u5168\u65b0\u7684\u7a7a\u95f4\u3002\u5728 DataFrame \u7684\u5f00\u53d1\u6846\u67b6\u4e0b\uff0c\u8d1f\u8d23\u5177\u4f53\u4f18\u5316\u8fc7\u7a0b\u7684\u6b63\u662f Spark SQL\u3002</p> <p>Spark Core \u548c Spark SQL \u7684\u5173\u7cfb</p> <p>Spark SQL\uff0c\u5219\u662f\u51cc\u9a7e\u4e8e Spark Core \u4e4b\u4e0a\u7684\u4e00\u5c42\u4f18\u5316\u5f15\u64ce\uff0c\u5b83\u7684\u4e3b\u8981\u804c\u8d23\uff0c\u662f\u5728\u7528\u6237\u4ee3\u7801\u4ea4\u4ed8 Spark Core \u4e4b\u524d\uff0c\u5bf9\u7528\u6237\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\u3002</p> <p>Spark Core \u7279\u6307 Spark \u5e95\u5c42\u6267\u884c\u5f15\u64ce\uff08Execution Engine\uff09\uff0c\u5b83\u5305\u62ec\u4e86\u8c03\u5ea6\u7cfb\u7edf\u3001\u5b58\u50a8\u7cfb\u7edf\u3001\u5185\u5b58\u7ba1\u7406\u3001Shuffle \u7ba1\u7406\u7b49\u6838\u5fc3\u529f\u80fd\u6a21\u5757\u3002\u800c Spark SQL \u5219\u51cc\u9a7e\u4e8e Spark Core \u4e4b\u4e0a\uff0c\u662f\u4e00\u5c42\u72ec\u7acb\u7684\u4f18\u5316\u5f15\u64ce\uff08Optimization Engine\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cSpark Core \u8d1f\u8d23\u6267\u884c\uff0c\u800c Spark SQL \u8d1f\u8d23\u4f18\u5316\uff0cSpark SQL \u4f18\u5316\u8fc7\u540e\u7684\u4ee3\u7801\uff0c\u4f9d\u7136\u8981\u4ea4\u4ed8 Spark Core \u6765\u505a\u6267\u884c\u3002</p> <p>\u518d\u8005\uff0c\u4ece\u5f00\u53d1\u5165\u53e3\u6765\u8bf4\uff0c\u5728 RDD \u6846\u67b6\u4e0b\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f1a\u76f4\u63a5\u4ea4\u4ed8 Spark Core \u8fd0\u884c\u3002\u800c\u4f7f\u7528 DataFrame API \u5f00\u53d1\u7684\u5e94\u7528\uff0c\u5219\u4f1a\u5148\u8fc7\u4e00\u904d Spark SQL\uff0c\u7531 Spark SQL \u4f18\u5316\u8fc7\u540e\u518d\u4ea4\u7531 Spark Core \u53bb\u505a\u6267\u884c\u3002</p> <p></p>"},{"location":"Spark/2.Spark%20SQL/#rdddataframe-dataset","title":"RDD\u3001DataFrame \u548c DataSet \u7684\u5f02\u540c","text":"<p>\u4e09\u8005\u7684\u5171\u6027\uff1a</p> <ul> <li>RDD\u3001DataFrame\u3001Dataset \u90fd\u662f Spark \u4e2d\u7684\u5206\u5e03\u5f0f\u5f39\u6027\u6570\u636e\u96c6\uff0c\u4e3a\u5904\u7406\u6d77\u91cf\u6570\u636e\u63d0\u4f9b\u4fbf\u5229</li> <li>\u4e09\u8005\u90fd\u6709\u8bb8\u591a\u76f8\u540c\u7684\u6982\u5ff5\uff0c\u5982\u5206\u533a\u3001\u6301\u4e45\u5316\u3001\u5bb9\u9519\u7b49\uff1b\u6709\u8bb8\u591a\u5171\u540c\u7684\u51fd\u6570\uff0c\u5982 map, filter, sortBy \u7b49</li> <li>\u4e09\u8005\u90fd\u6709\u60f0\u6027\u673a\u5236\uff0c\u53ea\u6709\u5728\u9047\u5230 Action \u7b97\u5b50\u65f6\uff0c\u624d\u4f1a\u5f00\u59cb\u771f\u6b63\u7684\u8ba1\u7b97</li> </ul> <p>\u4e09\u8005\u7684\u533a\u522b\uff1a</p> <ul> <li>\u4e0e RDD \u548c Dataset \u4e0d\u540c\uff0cDataFrame \u6bcf\u4e00\u884c\u7684\u7c7b\u578b\u56fa\u5b9a\u4e3a Row\uff0c\u53ea\u6709\u901a\u8fc7\u89e3\u6790\u624d\u80fd\u83b7\u53d6\u5404\u4e2a\u5b57\u6bb5\u7684\u503c</li> <li>DataFrame \u5b9a\u4e49\u4e3a <code>Dataset[Row]</code>\u3002\u6bcf\u4e00\u884c\u7684\u7c7b\u578b\u662f Row\uff0c\u7136\u540e\u5728 Row \u5305\u542b\u5177\u4f53\u7684\u5b57\u6bb5\u4fe1\u606f</li> <li>Dataset \u6bcf\u4e00\u884c\u7684\u7c7b\u578b\u90fd\u662f\u4e00\u4e2a case class\uff0c\u5728\u81ea\u5b9a\u4e49\u4e86 case class \u4e4b\u540e\u53ef\u4ee5\u5f88\u81ea\u7531\u7684\u83b7\u5f97\u6bcf\u4e00\u884c\u7684\u4fe1\u606f</li> </ul>"},{"location":"Spark/2.Spark%20SQL/#catalyst","title":"Catalyst \u4f18\u5316\u5668","text":"<p>\u57fa\u4e8e DataFrame\uff0cSpark SQL \u662f\u5982\u4f55\u8fdb\u884c\u4f18\u5316\u7684\uff1f</p> <ul> <li>Catalyst \u4f18\u5316\u5668</li> <li>Tungsten</li> </ul> <p>Catalyst \u4f18\u5316\u5668\uff0c\u5b83\u7684\u804c\u8d23\u5728\u4e8e\u521b\u5efa\u5e76\u4f18\u5316\u6267\u884c\u8ba1\u5212\uff0c\u5b83\u5305\u542b 3 \u4e2a\u529f\u80fd\u6a21\u5757\uff0c\u5206\u522b\u662f\u521b\u5efa\u8bed\u6cd5\u6811\u5e76\u751f\u6210\u6267\u884c\u8ba1\u5212\u3001\u903b\u8f91\u9636\u6bb5\u4f18\u5316\u548c\u7269\u7406\u9636\u6bb5\u4f18\u5316\u3002</p> <ul> <li>\u521b\u5efa AST\uff1aParser</li> <li>\u751f\u6210\u903b\u8f91\u6267\u884c\u8ba1\u5212\uff1aAnalyzer</li> <li>\u903b\u8f91\u9636\u6bb5\u4f18\u5316\uff1aRBO\uff08\u57fa\u4e8e\u89c4\u5219\u4f18\u5316\uff09</li> <li>\u7269\u7406\u9636\u6bb5\u4f18\u5316\uff1aCBO\uff08\u57fa\u4e8e\u4ee3\u4ef7\u4f18\u5316\uff09</li> </ul> <p>Tungsten \u7528\u4e8e\u8854\u63a5 Catalyst \u6267\u884c\u8ba1\u5212\u4e0e\u5e95\u5c42\u7684 Spark Core \u6267\u884c\u5f15\u64ce\uff0c\u5b83\u4e3b\u8981\u8d1f\u8d23\u4f18\u5316\u6570\u636e\u7ed3\u6784\u4e0e\u53ef\u6267\u884c\u4ee3\u7801\u3002</p> <p></p> <p>\u903b\u8f91\u9636\u6bb5\u4f18\u5316\uff1a</p> <p>\u50cf\u8c13\u8bcd\u4e0b\u63a8\u3001\u5217\u526a\u679d\u8fd9\u6837\u7684\u7279\u6027\uff0c\u90fd\u88ab\u79f0\u4e3a\u542f\u53d1\u5f0f\u7684\u89c4\u5219\u6216\u7b56\u7565\u3002\u800c Catalyst \u4f18\u5316\u5668\u7684\u6838\u5fc3\u804c\u8d23\u4e4b\u4e00\uff0c\u5c31\u662f\u5728\u903b\u8f91\u4f18\u5316\u9636\u6bb5\uff0c\u57fa\u4e8e\u542f\u53d1\u5f0f\u7684\u89c4\u5219\u548c\u7b56\u7565\u8c03\u6574\u3001\u4f18\u5316\u6267\u884c\u8ba1\u5212\uff0c\u4e3a\u7269\u7406\u4f18\u5316\u9636\u6bb5\u63d0\u5347\u6027\u80fd\u5960\u5b9a\u57fa\u7840\u3002</p> <p>\u7269\u7406\u9636\u6bb5\u4f18\u5316\uff1a</p> <p>Catalyst \u5728\u7269\u7406\u4f18\u5316\u9636\u6bb5\u8fd8\u4f1a\u8fdb\u4e00\u6b65\u4f18\u5316\u6267\u884c\u8ba1\u5212\u3002\u4e0e\u903b\u8f91\u9636\u6bb5\u4e3b\u8981\u4f9d\u8d56\u5148\u9a8c\u7684\u542f\u53d1\u5f0f\u7ecf\u9a8c\u4e0d\u540c\uff0c\u7269\u7406\u9636\u6bb5\u7684\u4f18\u5316\uff0c\u4e3b\u8981\u4f9d\u8d56\u5404\u5f0f\u5404\u6837\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u6570\u636e\u8868\u5c3a\u5bf8\u3001\u662f\u5426\u542f\u7528\u6570\u636e\u7f13\u5b58\u3001Shuffle \u4e2d\u95f4\u6587\u4ef6\uff0c\u7b49\u7b49\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u903b\u8f91\u4f18\u5316\u66f4\u591a\u7684\u662f\u4e00\u79cd\u201c\u7ecf\u9a8c\u4e3b\u4e49\u201d\uff0c\u800c\u7269\u7406\u4f18\u5316\u5219\u662f\u201c\u7528\u6570\u636e\u8bf4\u8bdd\u201d\u3002</p> <p>\u4ee5 Join \u4e3a\u4f8b\uff0c\u6267\u884c\u8ba1\u5212\u4ec5\u4ea4\u4ee3\u4e86\u4e24\u5f20\u6570\u636e\u8868\u9700\u8981\u505a\u5173\u8054\uff0c\u4f46\u662f\uff0c\u5b83\u5e76\u6ca1\u6709\u4ea4\u4ee3\u6e05\u695a\u8fd9\u4e24\u5f20\u8868\u5177\u4f53\u91c7\u7528\u54ea\u79cd\u673a\u5236\u6765\u505a\u5173\u8054\u3002\u6309\u7167\u5b9e\u73b0\u673a\u5236\u6765\u5206\u7c7b\uff0c\u6570\u636e\u5173\u8054\u6709 3 \u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u5d4c\u5957\u5faa\u73af\u8fde\u63a5\uff08NLJ\uff0cNested Loop Join\uff09\u3001\u6392\u5e8f\u5f52\u5e76\u8fde\u63a5\uff08Sort Merge Join\uff09\u548c\u54c8\u5e0c\u8fde\u63a5\uff08Hash Join\uff09\u3002\u800c\u6309\u7167\u6570\u636e\u5206\u53d1\u65b9\u5f0f\u6765\u5206\u7c7b\uff0c\u6570\u636e\u5173\u8054\u53c8\u53ef\u4ee5\u5206\u4e3a Shuffle Join \u548c Broadcast Join \u8fd9\u4e24\u5927\u7c7b\u3002\u56e0\u6b64\uff0c\u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u73af\u5883\u4e2d\uff0c\u81f3\u5c11\u6709 6 \u79cd Join \u7b56\u7565\u4f9b Spark SQL \u6765\u9009\u62e9\u3002</p> <p>Catalyst \u4f18\u5316\u5668\u5de5\u4f5c\u6d41\u7a0b\u56fe</p> <p></p> <p></p> <p></p> <p>Parser \u6a21\u5757\uff1a\u5c06 SparkSQL \u5b57\u7b26\u4e32\u89e3\u6790\u4e3a\u4e00\u4e2a\u62bd\u8c61\u8bed\u6cd5\u6811/AST \u3002</p> <ul> <li>Parser \u6a21\u5757\u76ee\u524d\u90fd\u662f\u4f7f\u7528\u7b2c\u4e09\u65b9\u7c7b\u5e93ANTLR\u8fdb\u884c\u5b9e\u73b0\u7684</li> <li>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5224\u65ad SQL \u8bed\u53e5\u662f\u5426\u7b26\u5408\u89c4\u8303\uff0c\u6bd4\u5982 select from where \u7b49\u8fd9\u4e9b\u5173\u952e\u5b57\u662f\u5426\u5199\u5bf9\u3002</li> </ul> <p>Analyzer \u6a21\u5757\uff1a\u8be5\u6a21\u5757\u4f1a\u904d\u5386\u6574\u4e2a AST\uff0c\u5e76\u5bf9 AST \u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u7ed1\u5b9a\u4ee5\u53ca\u51fd\u6570\u7ed1\u5b9a\uff0c\u7136\u540e\u6839\u636e\u5143\u6570\u636e\u4fe1\u606f Catalog \u5bf9\u6570\u636e\u8868\u4e2d\u7684\u5b57\u6bb5\u8fdb\u884c\u89e3\u6790\u3002</p> <p>\u6b64\u8fc7\u7a0b\u5c31\u4f1a\u5224\u65ad SQL \u8bed\u53e5\u7684\u8868\u540d\uff0c\u5b57\u6bb5\u540d\u662f\u5426\u771f\u7684\u5728\u5143\u6570\u636e\u5e93\u91cc\u5b58\u5728\u3002</p> <p>\u5143\u6570\u636e\u4fe1\u606f\u4e3b\u8981\u5305\u62ec\u4e24\u90e8\u5206\uff1a\u8868\u7684 Scheme\u548c\u57fa\u672c\u51fd\u6570\u4fe1\u606f</p> <ul> <li>\u8868\u7684 Scheme\uff1a\u5305\u62ec\u8868\u7684\u57fa\u672c\u5b9a\u4e49\uff08\u5217\u540d\u3001\u6570\u636e\u7c7b\u578b\uff09\u3001\u8868\u7684\u6570\u636e\u683c\u5f0f\uff08Json\u3001Text\uff09\u3001\u8868\u7684\u7269\u7406\u4f4d\u7f6e\u7b49</li> <li>\u57fa\u672c\u51fd\u6570\uff1a\u4e3b\u8981\u6307\u7c7b\u4fe1\u606f</li> </ul> <p>Optimizer \u6a21\u5757\uff1a\u4e3b\u8981\u5206\u4e3a RBO \u548c CBO \u4e24\u79cd\u4f18\u5316\u7b56\u7565\uff0c\u5176\u4e2dRBO \u662f\u57fa\u4e8e\u89c4\u5219\u4f18\u5316\uff0cCBO \u662f\u57fa\u4e8e\u4ee3\u4ef7\u4f18\u5316\u3002\u5e38\u89c1\u7684\u89c4\u5219\u6709\uff1a</p> <ul> <li>\u8c13\u8bcd\u4e0b\u63a8 Predicate Pushdown\uff1a\u5c06\u8fc7\u6ee4\u64cd\u4f5c\u4e0b\u63a8\u5230 join \u4e4b\u524d\u8fdb\u884c\uff0c\u4e4b\u540e\u518d\u8fdb\u884c join \u7684\u65f6\u5019\uff0c\u6570\u636e\u91cf\u5c06\u4f1a\u5f97\u5230\u663e\u8457\u7684\u51cf\u5c11\uff0cjoin \u8017\u65f6\u5fc5\u7136\u964d\u4f4e\u3002</li> <li>\u5217\u503c\u88c1\u526a Column Pruning\uff1a\u5728\u8c13\u8bcd\u4e0b\u63a8\u540e,\u53ef\u4ee5\u628a\u8868\u4e2d\u6ca1\u6709\u7528\u5230\u7684\u5217\u88c1\u526a\u6389\uff0c\u8fd9\u4e00\u4f18\u5316\u4e00\u65b9\u9762\u5927\u5e45\u5ea6\u51cf\u5c11\u4e86\u7f51\u7edc\u3001\u5185\u5b58\u6570\u636e\u91cf\u6d88\u8017\uff0c\u53e6\u4e00\u65b9\u9762\u5bf9\u4e8e\u5217\u5f0f\u5b58\u50a8\u6570\u636e\u5e93\u6765\u8bf4\u5927\u5927\u63d0\u9ad8\u4e86\u626b\u63cf\u6548\u7387</li> <li>\u5e38\u91cf\u7d2f\u52a0 Constant Folding\uff1a\u6bd4\u5982\u8ba1\u7b97 <code>x+(100+80) -&gt; x+180</code>\uff0c\u867d\u7136\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6539\u52a8\uff0c\u4f46\u662f\u610f\u4e49\u5de8\u5927\u3002\u5982\u679c\u6ca1\u6709\u8fdb\u884c\u4f18\u5316\u7684\u8bdd\uff0c\u6bcf\u4e00\u6761\u7ed3\u679c\u90fd\u9700\u8981\u6267\u884c\u4e00\u6b21<code>100+80</code>\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u518d\u4e0e\u7ed3\u679c\u76f8\u52a0\u3002\u4f18\u5316\u540e\u5c31\u4e0d\u9700\u8981\u518d\u6b21\u6267\u884c <code>100+80</code> \u64cd\u4f5c\u3002</li> </ul> <p>SparkPlanner \u6a21\u5757\uff1a\u5c06\u4f18\u5316\u540e\u7684\u903b\u8f91\u6267\u884c\u8ba1\u5212\uff08OptimizedLogicalPlan\uff09\u8f6c\u6362\u6210physical plan\uff08\u7269\u7406\u8ba1\u5212\uff09\uff0c\u4e5f\u5c31\u662f Spark \u53ef\u4ee5\u771f\u6b63\u6267\u884c\u7684\u8ba1\u5212\u3002</p> <p>\u6bd4\u5982 join \u7b97\u5b50\uff0cSpark \u6839\u636e\u4e0d\u540c\u573a\u666f\u4e3a\u8be5\u7b97\u5b50\u5236\u5b9a\u4e86\u4e0d\u540c\u7684\u7b97\u6cd5\u7b56\u7565\uff0c\u6709 <code>BroadcastHashJoin</code>\u3001<code>ShuffleHashJoin</code> \u4ee5\u53ca <code>SortMergejoin</code> \u7b49\uff0c\u7269\u7406\u6267\u884c\u8ba1\u5212\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u8fd9\u4e9b\u5177\u4f53\u5b9e\u73b0\u4e2d\u6311\u9009\u4e00\u4e2a\u8017\u65f6\u6700\u5c0f\u7684\u7b97\u6cd5\u5b9e\u73b0\uff0c\u600e\u4e48\u6311\u9009\uff0c\u4e0b\u9762\u7b80\u5355\u8bf4\u4e0b\uff1a</p> <ul> <li>SparkPlanner \u5bf9\u4f18\u5316\u540e\u7684\u903b\u8f91\u8ba1\u5212\u8fdb\u884c\u8f6c\u6362\uff0c\u662f\u751f\u6210\u4e86\u591a\u4e2a\u53ef\u4ee5\u6267\u884c\u7684\u7269\u7406\u8ba1\u5212 Physical Plan\uff1b</li> <li>\u63a5\u7740CBO\uff08\u57fa\u4e8e\u4ee3\u4ef7\u4f18\u5316\uff09\u4f18\u5316\u7b56\u7565\u4f1a\u6839\u636eCost Model\u7b97\u51fa\u6bcf\u4e2a Physical Plan \u7684\u4ee3\u4ef7\uff0c\u5e76\u9009\u53d6\u4ee3\u4ef7\u6700\u5c0f\u7684 Physical Plan \u4f5c\u4e3a\u6700\u7ec8\u7684 Physical Plan\u3002</li> <li>CostModel \u6a21\u5757\uff1a\u4e3b\u8981\u6839\u636e\u8fc7\u53bb\u7684\u6027\u80fd\u7edf\u8ba1\u6570\u636e\uff0c\u9009\u62e9\u6700\u4f73\u7684\u7269\u7406\u6267\u884c\u8ba1\u5212\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u4f18\u5316\u5c31\u662f CBO\uff08\u57fa\u4e8e\u4ee3\u4ef7\u4f18\u5316\uff09</li> </ul> <p>\u6267\u884c\u7269\u7406\u8ba1\u5212\uff1a\u6700\u540e\u4f9d\u636e\u6700\u4f18\u7684\u7269\u7406\u6267\u884c\u8ba1\u5212\uff0c\u751f\u6210 java \u5b57\u8282\u7801\uff0c\u5c06 SQL \u8f6c\u5316\u4e3a DAG\uff0c\u4ee5 RDD \u5f62\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>Catalyst \u7684\u4e00\u5927\u597d\u5904\u662f\uff1a\u76f8\u6bd4\u4e8e RDD\uff0c\u4f7f\u7528 DataFrame \u53ef\u4ee5\u4f7f\u5f97\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u7684\u6267\u884c\u6548\u7387\u63a5\u8fd1\uff0c\u56e0\u4e3a DataFrame \u7684\u6267\u884c\u8ba1\u5212\u662f\u4e00\u6837\u7684\u3002</p> <p></p>"},{"location":"Spark/2.Spark%20SQL/#tungsten","title":"Tungsten","text":"<p>Tungsten \u4e3b\u8981\u662f\u5728\u6570\u636e\u7ed3\u6784\u548c\u6267\u884c\u4ee3\u7801\u8fd9\u4e24\u4e2a\u65b9\u9762\uff0c\u505a\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\u3002\u6570\u636e\u7ed3\u6784\u4f18\u5316\u6307\u7684\u662f Unsafe Row \u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff0c\u6267\u884c\u4ee3\u7801\u4f18\u5316\u5219\u6307\u7684\u662f\u5168\u9636\u6bb5\u4ee3\u7801\u751f\u6210\uff08WSCG\uff0cWhole Stage Code Generation\uff09\u3002</p> <p>\u6211\u4eec\u5148\u6765\u770b\u770b\u4e3a\u4ec0\u4e48\u8981\u6709 Unsafe Row\u3002\u5bf9\u4e8e DataFrame \u4e2d\u7684\u6bcf\u4e00\u6761\u6570\u636e\u8bb0\u5f55\uff0cSpark SQL \u9ed8\u8ba4\u91c7\u7528 org.apache.spark.sql.Row \u5bf9\u8c61\u6765\u8fdb\u884c\u5c01\u88c5\u548c\u5b58\u50a8\u3002\u6211\u4eec\u77e5\u9053\uff0c\u4f7f\u7528 Java Object \u6765\u5b58\u50a8\u6570\u636e\u4f1a\u5f15\u5165\u5927\u91cf\u989d\u5916\u7684\u5b58\u50a8\u5f00\u9500\u3002</p> <p>\u4e3a\u6b64\uff0cTungsten \u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86\u4e00\u79cd\u53eb\u505a Unsafe Row \u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7ed3\u6784\u3002Unsafe Row \u672c\u8d28\u4e0a\u662f\u5b57\u8282\u6570\u7ec4\uff0c\u5b83\u4ee5\u6781\u5176\u7d27\u51d1\u7684\u683c\u5f0f\u6765\u5b58\u50a8 DataFrame \u7684\u6bcf\u4e00\u6761\u6570\u636e\u8bb0\u5f55\uff0c\u5927\u5e45\u524a\u51cf\u5b58\u50a8\u5f00\u9500\uff0c\u4ece\u800c\u63d0\u5347\u6570\u636e\u7684\u5b58\u50a8\u4e0e\u8bbf\u95ee\u6548\u7387\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u6765\u8bf4\u8bf4 WSCG\uff1a\u5168\u9636\u6bb5\u4ee3\u7801\u751f\u6210\u3002\u6240\u8c13\u5168\u9636\u6bb5\uff0c\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u5728\u8c03\u5ea6\u7cfb\u7edf\u4e2d\u5b66\u8fc7\u7684 Stage\u3002\u4ee5\u56fe\u4e2d\u7684\u6267\u884c\u8ba1\u5212\u4e3a\u4f8b\uff0c\u6807\u8bb0\u4e3a\u7eff\u8272\u7684 3 \u4e2a\u8282\u70b9\uff0c\u5728\u4efb\u52a1\u8c03\u5ea6\u7684\u65f6\u5019\uff0c\u4f1a\u88ab\u5212\u5206\u5230\u540c\u4e00\u4e2a Stage\u3002</p> <p></p> <p>\u800c\u4ee3\u7801\u751f\u6210\uff0c\u6307\u7684\u662f Tungsten \u5728\u8fd0\u884c\u65f6\u628a\u7b97\u5b50\u4e4b\u95f4\u7684\u300c\u94fe\u5f0f\u8c03\u7528\u300d\u634f\u5408\u4e3a\u4e00\u4efd\u4ee3\u7801\u3002\u7ecf\u8fc7\u4e86 Tungsten \u7684 WSCG \u4f18\u5316\u4e4b\u540e\uff0cFilter\u3001Select \u548c Scan \u8fd9 3 \u4e2a\u7b97\u5b50\uff0c\u4f1a\u88ab\u300c\u634f\u5408\u300d\u4e3a\u4e00\u4e2a\u51fd\u6570 f\u3002\u8fd9\u6837\u4e00\u6765\uff0cSpark Core \u53ea\u9700\u8981\u4f7f\u7528\u51fd\u6570 f \u6765\u4e00\u6b21\u6027\u5730\u5904\u7406\u6bcf\u4e00\u6761\u6570\u636e\uff0c\u5c31\u80fd\u51cf\u5c11\u4e0d\u540c\u7b97\u5b50\u4e4b\u95f4\u6570\u636e\u901a\u4fe1\u7684\u5f00\u9500\uff0c\u4e00\u6c14\u5475\u6210\u5730\u5b8c\u6210\u8ba1\u7b97\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#spark-session","title":"Spark Session","text":"<p>The entry point to programming Spark with the Dataset and DataFrame API.</p> <p>Spark Core \u4e2d\uff0c\u5982\u679c\u60f3\u8981\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u9700\u8981\u9996\u5148\u6784\u5efa\u4e0a\u4e0b\u6587\u73af\u5883\u5bf9\u8c61 SparkContext\uff0c Spark SQL \u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9 Spark Core \u7684\u4e00\u79cd\u5c01\u88c5\uff0c\u4e0d\u4ec5\u4ec5\u5728\u6a21\u578b\u4e0a\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4e0a\u4e0b\u6587\u73af\u5883\u5bf9\u8c61\u4e5f\u8fdb\u884c\u4e86\u5c01\u88c5\u3002SparkSession \u662f Spark \u6700\u65b0\u7684 SQL \u67e5\u8be2\u8d77\u59cb\u70b9\u3002</p> <pre><code>SparkSession.builder\n  .master(\"local\")\n  .appName(\"Word Count\")\n  .config(\"spark.some.config.option\", \"some-value\")\n  .getOrCreate()\n</code></pre> <pre><code>import org.apache.spark.sql.functions._\n\nval spark = SparkSession.builder()\n  .master(\"local\")\n  .appName(\"test\")\n  .getOrCreate()\nval sc = spark.sparkContext\nimport spark.implicits._\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#dataframe","title":"\u521b\u5efa DataFrame","text":""},{"location":"Spark/2.Spark%20SQL/#driver-dataframe","title":"\u4ece Driver \u521b\u5efa DataFrame","text":"<p>\u65b9\u6cd5\u4e00\uff1acreateDataFrame \u65b9\u6cd5</p> <pre><code>val seq = List((\"Alice\", 18), (\"Bob\", 20), (\"Tom\", 30))\n\nimport org.apache.spark.sql.functions._\n\nval df = spark.createDataFrame(seq)\n  .withColumnRenamed(\"_1\", \"name\")\n  .withColumnRenamed(\"_2\", \"age\")\n  .orderBy(desc(\"age\")) // desc \u6765\u81ea\u4e8e org.apache.spark.sql.functions._\n\ndf.show()\ndf.printSchema()\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1atoDF \u65b9\u6cd5</p> <p>\u6211\u4eec\u663e\u793a\u5bfc\u5165\u4e86 <code>spark.implicits</code> \u5305\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u7136\u540e\u901a\u8fc7\u5728\u96c6\u5408\u6216 RDD \u4e4b\u4e0a\u8c03\u7528 toDF \u5c31\u80fd\u8f7b\u677e\u521b\u5efa DataFrame\u3002</p> <pre><code>val seq = List((\"Alice\", 18), (\"Bob\", 20), (\"Tom\", 30))\nval df = spark.createDataFrame(seq).toDF(\"name\", \"age\")\n\ndf.show()\ndf.printSchema()\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#dataframe_1","title":"\u4ece\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa DataFrame","text":"<p>\u4ee5 CSV \u4e3a\u4f8b\uff1a</p> <p></p> <p></p> <p>\u4ee5 Parquet / ORC \u4e3a\u4f8b\uff1a</p> <p>Parquet \u4e0e ORC\uff0c\u90fd\u662f\u5e94\u7528\u5e7f\u6cdb\u7684\u5217\u5b58\uff08Column-based Store\uff09\u6587\u4ef6\u683c\u5f0f\u3002\u5728\u4f20\u7edf\u7684\u884c\u5b58\u6587\u4ef6\u683c\u5f0f\u4e2d\uff0c\u6570\u636e\u8bb0\u5f55\u4ee5\u884c\u4e3a\u5355\u4f4d\u8fdb\u884c\u5b58\u50a8\u3002\u867d\u7136\u8fd9\u975e\u5e38\u7b26\u5408\u4eba\u7c7b\u7684\u76f4\u89c9\uff0c\u4f46\u5728\u6570\u636e\u7684\u68c0\u7d22\u4e0e\u626b\u63cf\u65b9\u9762\uff0c\u884c\u5b58\u6570\u636e\u5f80\u5f80\u6548\u7387\u4f4e\u4e0b\u3002\u4f8b\u5982\uff0c\u5728\u6570\u636e\u63a2\u7d22\u3001\u6570\u636e\u5206\u6790\u7b49\u6570\u4ed3\u5e94\u7528\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u4ec5\u9700\u626b\u63cf\u6570\u636e\u8bb0\u5f55\u7684\u67d0\u4e9b\u5b57\u6bb5\uff0c\u4f46\u5728\u884c\u5b58\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u626b\u63cf\u5168\u91cf\u6570\u636e\uff0c\u624d\u80fd\u5b8c\u6210\u5b57\u6bb5\u7684\u8fc7\u6ee4\u3002</p> <p>\u5f88\u591a\u5217\u5b58\u683c\u5f0f\u5f80\u5f80\u5728\u6587\u4ef6\u4e2d\u8bb0\u5f55 Data Schema\uff0c\u6bd4\u5982 Parquet \u548c ORC\uff0c\u5b83\u4eec\u4f1a\u5229\u7528 Meta Data \u6570\u636e\u7ed3\u6784\uff0c\u6765\u8bb0\u5f55\u6240\u5b58\u50a8\u6570\u636e\u7684\u6570\u636e\u6a21\u5f0f\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5728\u8bfb\u53d6\u7c7b\u4f3c\u5217\u5b58\u6587\u4ef6\u65f6\uff0c\u6211\u4eec\u65e0\u9700\u518d\u50cf\u8bfb\u53d6 CSV \u4e00\u6837\uff0c\u53bb\u624b\u5de5\u6307\u5b9a Data Schema\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#rdbms-dataframe","title":"\u4ece RDBMS \u521b\u5efa DataFrame","text":"<pre><code>spark.read.format(\"jdbc\")\n  .option(\"driver\", \"com.mysql.jdbc.Driver\")\n  .option(\"url\", \"jdbc:mysql://hostname:port/mysql\")\n  .option(\"user\", \"\u7528\u6237\u540d\")\n  .option(\"password\",\"\u5bc6\u7801\")\n  .option(\"numPartitions\", 20)\n  .option(\"dbtable\", \"\u6570\u636e\u8868\u540d \")\n  .load()\n</code></pre> <pre><code>val sqlQuery: String = \u201cselect * from users where gender = \u2018female\u2019\u201d\nspark.read.format(\"jdbc\")\n  .option(\"driver\", \"com.mysql.jdbc.Driver\")\n  .option(\"url\", \"jdbc:mysql://hostname:port/mysql\")\n  .option(\"user\", \"\u7528\u6237\u540d\")\n  .option(\"password\",\"\u5bc6\u7801\")\n  .option(\"numPartitions\", 20)\n  .option(\"dbtable\", sqlQuery)\n  .load()\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#dataset","title":"\u521b\u5efa DataSet","text":"<pre><code>def createDataset[T : Encoder](data: Seq[T]): Dataset[T] = {...}\n</code></pre> <p>This method requires an encoder (to convert a JVM object of type T to and from the internal Spark SQL representation).</p> <pre><code>import spark.implicits._\n\ncase class Person(name: String, age: Int)\n\nval seq = List(Person(\"Alice\", 18), Person(\"Bob\", 20), Person(\"Tom\", 30))\n\nval ds = spark.createDataset(seq)\n\nds.show()\nds.printSchema()\n</code></pre> <p>\u4f7f\u7528 case class \u7684\u597d\u5904\u662f\uff0cSpark SQL \u4f1a\u81ea\u52a8\u63a8\u65ad\u51fa case class \u7684\u5b57\u6bb5\u540d\u548c\u5b57\u6bb5\u7c7b\u578b\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#rdddataframedataset","title":"RDD\u3001DataFrame\u3001DataSet \u7684\u8f6c\u6362","text":""},{"location":"Spark/2.Spark%20SQL/#rdd-to-dataframe","title":"RDD to DataFrame","text":"<p>\u65b9\u6cd5\u4e00\uff1a</p> <pre><code>import spark.implicits._\nval seq = List((\"Alice\", 18), (\"Bob\", 20), (\"Tom\", 30))\nval rdd = sc.makeRDD(seq)\nval df = rdd.toDF(\"name\", \"age\")\n\ndf.printSchema()\ndf.show()\n\nval rdd2: RDD[Row] = df.rdd\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a</p> <pre><code>import spark.implicits._\nval seq = List((\"Alice\", 18), (\"Bob\", 20), (\"Tom\", 30))\n\nval rdd = sc.makeRDD(seq)\n  .map(x =&gt; Row(x._1, x._2))\n\nval schema = new StructType()\n  .add(\"name\", StringType, nullable = true)\n  .add(\"age\", IntegerType, nullable = true)\n\nval df = spark.createDataFrame(rdd, schema)\n\ndf.printSchema()\ndf.show()\n\nval rdd2: RDD[Row] = df.rdd\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#rdd-to-dataset","title":"RDD to DataSet","text":"<pre><code>import spark.implicits._\nval seq = List((\"Alice\", 18), (\"Bob\", 20), (\"Tom\", 30))\n\ncase class Person(name: String, age: Int)\n\nval rdd = sc.makeRDD(seq)\nval ds = rdd.map(x =&gt; Person(x._1, x._2)).toDS()\n\nds.printSchema()\nds.show()\n\nval rdd2: RDD[Row] = ds.rdd\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#dataframe-to-dataset","title":"DataFrame to DataSet","text":"<pre><code>import spark.implicits._\nval seq = List((\"Alice\", 18), (\"Bob\", 20), (\"Tom\", 30))\nval df = seq.toDF(\"name\", \"age\")\nval ds: Dataset[Row] = df.as(\"alias here\")\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#dataset-to-dataframe","title":"DataSet to DataFrame","text":"<pre><code>import spark.implicits._\nval seq = List((\"Alice\", 18), (\"Bob\", 20), (\"Tom\", 30))\n\ncase class Person(name: String, age: Int)\n\nval rdd = sc.makeRDD(seq)\nval ds = rdd.map(x =&gt; Person(x._1, x._2)).toDS()\nval df = ds.toDF()\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#dataframe_2","title":"DataFrame \u7b97\u5b50","text":""},{"location":"Spark/2.Spark%20SQL/#_1","title":"\u540c\u6e90\u7c7b\u7b97\u5b50","text":""},{"location":"Spark/2.Spark%20SQL/#_2","title":"\u63a2\u7d22\u7c7b\u7b97\u5b50","text":""},{"location":"Spark/2.Spark%20SQL/#_3","title":"\u6e05\u6d17\u7c7b\u7b97\u5b50","text":"<p>\u8868\u683c\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u7b97\u5b50\u662f na\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u9009\u53d6 DataFrame \u4e2d\u7684 null \u6570\u636e\uff0cna \u5f80\u5f80\u8981\u7ed3\u5408 drop \u6216\u662f fill \u6765\u4f7f\u7528\u3002\u4f8b\u5982\uff0c<code>employeesDF.na.drop</code> \u7528\u4e8e\u5220\u9664 DataFrame \u4e2d\u5e26 null \u503c\u7684\u6570\u636e\u8bb0\u5f55\uff0c\u800c <code>employeesDF.na.fill(0)</code> \u5219\u5c06 DataFrame \u4e2d\u6240\u6709\u7684 null \u503c\u90fd\u81ea\u52a8\u586b\u5145\u4e3a\u6574\u6570\u96f6\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#_4","title":"\u8f6c\u6362\u7c7b\u7b97\u5b50","text":"<p>select \u7b97\u5b50\u5728\u529f\u80fd\u65b9\u9762\u4e0d\u591f\u7075\u6d3b\u3002\u5728\u7075\u6d3b\u6027\u8fd9\u65b9\u9762\uff0cselectExpr \u505a\u5f97\u66f4\u597d\u3002\u6bd4\u5982\u8bf4\uff0c\u57fa\u4e8e id \u548c\u59d3\u540d\uff0c\u6211\u4eec\u60f3\u628a\u5b83\u4eec\u62fc\u63a5\u8d77\u6765\u751f\u6210\u4e00\u5217\u65b0\u7684\u6570\u636e\u3002\u50cf\u8fd9\u79cd\u9700\u6c42\uff0c\u6b63\u662f selectExpr \u7b97\u5b50\u7684\u7528\u6b66\u4e4b\u5730\u3002</p> <pre><code>employeesDF.selectExpr(\"id\", \"name\", \"concat(id, '_', name) as id_name\").show\n\n/** \u7ed3\u679c\u6253\u5370\n+---+-------+---------+\n| id| name| id_name|\n+---+-------+---------+\n| 1| John| 1_John|\n| 2| Lily| 2_Lily|\n| 3|Raymond|3_Raymond|\n+---+-------+---------+\n*/\n</code></pre> <p>withColumnRenamed \u662f\u91cd\u547d\u540d\u73b0\u6709\u7684\u6570\u636e\u5217\uff0c\u800c withColumn \u5219\u7528\u4e8e\u751f\u6210\u65b0\u7684\u6570\u636e\u5217\uff0c\u8fd9\u4e00\u70b9\u4e0a\uff0cwithColumn \u5012\u662f\u548c selectExpr \u6709\u7740\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002withColumn \u4e5f\u53ef\u4ee5\u5145\u5206\u5229\u7528 Spark SQL \u63d0\u4f9b\u7684 Built-in Functions \u6765\u7075\u6d3b\u5730\u751f\u6210\u6570\u636e\u3002\u6bd4\u5982\uff0c\u57fa\u4e8e\u5e74\u9f84\u5217\uff0c\u6211\u4eec\u60f3\u751f\u6210\u4e00\u5217\u8131\u654f\u6570\u636e\uff0c\u9690\u53bb\u771f\u5b9e\u5e74\u9f84\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\u3002</p> <pre><code>employeesDF.withColumn(\"crypto\", hash($\"age\")).show\n\n/** \u7ed3\u679c\u6253\u5370\n+---+-------+---+------+-----------+\n| id| name|age|gender| crypto|\n+---+-------+---+------+-----------+\n| 1| John| 26| Male|-1223696181|\n| 2| Lily| 28|Female|-1721654386|\n| 3|Raymond| 30| Male| 1796998381|\n+---+-------+---+------+-----------+\n*/\n</code></pre> <pre><code>val seq = Seq( (1, \"John\", 26, \"Male\", Seq(\"Sports\", \"News\")),\n  (2, \"Lily\", 28, \"Female\", Seq(\"Shopping\", \"Reading\")),\n  (3, \"Raymond\", 30, \"Male\", Seq(\"Sports\", \"Reading\"))\n)\n\nval employeesDF: DataFrame = seq.toDF(\"id\", \"name\", \"age\", \"gender\", \"interests\")\nemployeesDF.show\n\n/** \u7ed3\u679c\u6253\u5370\n+---+-------+---+------+-------------------+\n| id| name|age|gender| interests|\n+---+-------+---+------+-------------------+\n| 1| John| 26| Male| [Sports, News]|\n| 2| Lily| 28|Female|[Shopping, Reading]|\n| 3|Raymond| 30| Male| [Sports, Reading]|\n+---+-------+---+------+-------------------+\n*/\n\nemployeesDF.withColumn(\"interest\", explode($\"interests\")).show\n\n/** \u7ed3\u679c\u6253\u5370\n+---+-------+---+------+-------------------+--------+\n| id| name|age|gender| interests|interest|\n+---+-------+---+------+-------------------+--------+\n| 1| John| 26| Male| [Sports, News]| Sports|\n| 1| John| 26| Male| [Sports, News]| News|\n| 2| Lily| 28|Female|[Shopping, Reading]|Shopping|\n| 2| Lily| 28|Female|[Shopping, Reading]| Reading|\n| 3|Raymond| 30| Male| [Sports, Reading]| Sports|\n| 3|Raymond| 30| Male| [Sports, Reading]| Reading|\n+---+-------+---+------+-------------------+--------+\n*/\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#_5","title":"\u5206\u6790\u7c7b\u7b97\u5b50","text":""},{"location":"Spark/2.Spark%20SQL/#_6","title":"\u6301\u4e45\u5316\u7c7b\u7b97\u5b50","text":"<p>\u5728 write API \u4e2d\uff0cmode \u7528\u4e8e\u6307\u5b9a\u201c\u5199\u5165\u6a21\u5f0f\u201d\uff0c\u5206\u522b\u6709 Append\u3001Overwrite\u3001ErrorIfExists\u3001Ignore \u8fd9 4 \u79cd\u6a21\u5f0f\uff0c\u5b83\u4eec\u7684\u542b\u4e49\u4e0e\u63cf\u8ff0\u5982\u4e0b\u8868\u6240\u793a\u3002</p> <p></p>"},{"location":"Spark/2.Spark%20SQL/#join","title":"Join \u7684\u5b9e\u73b0\u673a\u5236\u548c\u7b56\u7565","text":"<p>Join \u6709 3 \u79cd\u5b9e\u73b0\u673a\u5236\uff0c\u5206\u522b\u662f NLJ\uff08Nested Loop Join\uff09\u3001SMJ\uff08Sort Merge Join\uff09\u548c HJ\uff08Hash Join\uff09\u3002</p> <p>\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c\u4ece\u6570\u636e\u5206\u53d1\u6a21\u5f0f\u6765\u770b\uff0cJoin \u53c8\u53ef\u4ee5\u5206\u4e3a Shuffle Join \u548c Broadcast Join \u8fd9\u4e24\u5927\u7c7b\u3002\u56e0\u6b64\uff0c\u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u73af\u5883\u4e2d\uff0c\u81f3\u5c11\u6709 6 \u79cd Join \u7b56\u7565\u4f9b Spark SQL \u6765\u9009\u62e9\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#nested-loop-join","title":"Nested Loop Join","text":"<p>\u5bf9\u4e8e\u53c2\u4e0e\u5173\u8054\u7684\u4e24\u5f20\u8868\uff0c\u5982 salaries \u548c employees\uff0c\u6309\u7167\u5b83\u4eec\u5728\u4ee3\u7801\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\uff0c\u6211\u4eec\u7ea6\u5b9a\u4fd7\u6210\u5730\u628a salaries \u79f0\u4f5c\u201c\u5de6\u8868\u201d\uff0c\u800c\u628a employees \u79f0\u4f5c\u201c\u53f3\u8868\u201d\u3002\u5728\u63a2\u8ba8\u5173\u8054\u673a\u5236\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53c8\u5e38\u5e38\u628a\u5de6\u8868\u79f0\u4f5c\u662f\u201c\u9a71\u52a8\u8868\u201d\uff0c\u800c\u628a\u53f3\u8868\u79f0\u4e3a\u201c\u57fa\u8868\u201d\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u9a71\u52a8\u8868\u7684\u4f53\u91cf\u5f80\u5f80\u8f83\u5927\uff0c\u5728\u5b9e\u73b0\u5173\u8054\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9a71\u52a8\u8868\u662f\u4e3b\u52a8\u626b\u63cf\u6570\u636e\u7684\u90a3\u4e00\u65b9\u3002\u800c\u57fa\u8868\u76f8\u5bf9\u6765\u8bf4\u4f53\u91cf\u8f83\u5c0f\uff0c\u5b83\u662f\u88ab\u52a8\u53c2\u4e0e\u6570\u636e\u626b\u63cf\u7684\u90a3\u4e00\u65b9\u3002</p> <p>\u5728 NLJ \u7684\u5b9e\u73b0\u673a\u5236\u4e0b\uff0c\u7b97\u6cd5\u4f1a\u4f7f\u7528\u5916\u3001\u5185\u4e24\u4e2a\u5d4c\u5957\u7684 for \u5faa\u73af\uff0c\u6765\u4f9d\u6b21\u626b\u63cf\u9a71\u52a8\u8868\u4e0e\u57fa\u8868\u4e2d\u7684\u6570\u636e\u8bb0\u5f55\u3002\u5728\u626b\u63cf\u7684\u540c\u65f6\uff0c\u8fd8\u4f1a\u5224\u5b9a\u5173\u8054\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff0c\u5982\u5185\u5173\u8054\u4f8b\u5b50\u4e2d\u7684 <code>salaries(\"id\") === employees(\"id\")</code>\u3002\u5982\u679c\u5173\u8054\u6761\u4ef6\u6210\u7acb\uff0c\u5c31\u628a\u4e24\u5f20\u8868\u7684\u8bb0\u5f55\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u7136\u540e\u5bf9\u5916\u8fdb\u884c\u8f93\u51fa\u3002</p> <p></p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u5047\u8bbe\u9a71\u52a8\u8868\u6709 M \u884c\u6570\u636e\uff0c\u800c\u57fa\u8868\u6709 N \u884c\u6570\u636e\uff0c\u90a3\u4e48 NLJ \u7b97\u6cd5\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u662f \\(O(M * N)\\)\u3002\u5c3d\u7ba1 NLJ \u7684\u5b9e\u73b0\u65b9\u5f0f\u7b80\u5355\u3001\u76f4\u89c2\u3001\u6613\u61c2\uff0c\u4f46\u5b83\u7684\u6267\u884c\u6548\u7387\u663e\u7136\u5f88\u5dee\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#sort-merge-join","title":"Sort Merge Join","text":"<p>\u9274\u4e8e NLJ \u4f4e\u6548\u7684\u8ba1\u7b97\u6548\u7387\uff0cSMJ \u5e94\u8fd0\u800c\u751f\u3002Sort Merge Join\uff0c\u987e\u540d\u601d\u4e49\uff0cSMJ \u7684\u5b9e\u73b0\u601d\u8def\u662f\u5148\u6392\u5e8f\u3001\u518d\u5f52\u5e76\u3002\u7ed9\u5b9a\u53c2\u4e0e\u5173\u8054\u7684\u4e24\u5f20\u8868\uff0cSMJ \u5148\u628a\u4ed6\u4eec\u5404\u81ea\u6392\u5e8f\uff0c\u7136\u540e\u518d\u4f7f\u7528\u72ec\u7acb\u7684\u6e38\u6807\uff0c\u5bf9\u6392\u597d\u5e8f\u7684\u4e24\u5f20\u8868\u505a\u5f52\u5e76\u5173\u8054\u3002</p> <p></p> <p></p> <p>SMJ \u7b97\u6cd5\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u4e3a \\(O(MlogM + NlogN)\\)\u3002\u5982\u679c\u4e24\u5f20\u8868\u5df2\u6392\u5e8f\uff0c\u90a3\u4e48 SMJ \u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u5c31\u662f \\(O(M + N)\\)\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#hash-join","title":"Hash Join","text":"<p>\u5177\u4f53\u6765\u8bf4\uff0cHJ \u7684\u8ba1\u7b97\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff0c\u5206\u522b\u662f Build \u9636\u6bb5\u548c Probe \u9636\u6bb5\u3002\u5728 Build \u9636\u6bb5\uff0c\u5728\u57fa\u8868\u4e4b\u4e0a\uff0c\u7b97\u6cd5\u4f7f\u7528\u65e2\u5b9a\u7684\u54c8\u5e0c\u51fd\u6570\u6784\u5efa\u54c8\u5e0c\u8868\uff0c\u5982\u4e0a\u56fe\u7684\u6b65\u9aa4 1 \u6240\u793a\u3002\u54c8\u5e0c\u8868\u4e2d\u7684 Key \u662f id \u5b57\u6bb5\u5e94\u7528\uff08Apply\uff09\u54c8\u5e0c\u51fd\u6570\u4e4b\u540e\u7684\u54c8\u5e0c\u503c\uff0c\u800c\u54c8\u5e0c\u8868\u7684 Value \u540c\u65f6\u5305\u542b\u4e86\u539f\u59cb\u7684 Join Key\uff08id \u5b57\u6bb5\uff09\u548c Payload\u3002</p> <p>\u5728 Probe \u9636\u6bb5\uff0c\u7b97\u6cd5\u4f9d\u6b21\u904d\u5386\u9a71\u52a8\u8868\u7684\u6bcf\u4e00\u6761\u6570\u636e\u8bb0\u5f55\u3002\u9996\u5148\u4f7f\u7528\u540c\u6837\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u4ee5\u52a8\u6001\u7684\u65b9\u5f0f\u8ba1\u7b97 Join Key \u7684\u54c8\u5e0c\u503c\u3002\u7136\u540e\uff0c\u7b97\u6cd5\u518d\u7528\u54c8\u5e0c\u503c\u53bb\u67e5\u8be2\u521a\u521a\u5728 Build \u9636\u6bb5\u521b\u5efa\u597d\u7684\u54c8\u5e0c\u8868\u3002\u5982\u679c\u67e5\u8be2\u5931\u8d25\uff0c\u5219\u8bf4\u660e\u8be5\u6761\u8bb0\u5f55\u4e0e\u57fa\u8868\u4e2d\u7684\u6570\u636e\u4e0d\u5b58\u5728\u5173\u8054\u5173\u7cfb\uff1b\u76f8\u53cd\uff0c\u5982\u679c\u67e5\u8be2\u6210\u529f\uff0c\u5219\u7ee7\u7eed\u5bf9\u6bd4\u4e24\u8fb9\u7684 Join Key\u3002\u5982\u679c Join Key \u4e00\u81f4\uff0c\u5c31\u628a\u4e24\u8fb9\u7684\u8bb0\u5f55\u8fdb\u884c\u62fc\u63a5\u5e76\u8f93\u51fa\uff0c\u4ece\u800c\u5b8c\u6210\u6570\u636e\u5173\u8054\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#_7","title":"\u603b\u7ed3","text":"<p>Join \u652f\u6301 3 \u79cd\u5b9e\u73b0\u673a\u5236\uff0c\u5b83\u4eec\u5206\u522b\u662f Hash Join\u3001Sort Merge Join \u548c Nested Loop Join\u3002\u4e09\u8005\u4e4b\u4e2d\uff0cHash Join \u7684\u6267\u884c\u6548\u7387\u6700\u9ad8\uff0c\u8fd9\u4e3b\u8981\u5f97\u76ca\u4e8e\u54c8\u5e0c\u8868 \\(O(1)\\) \u7684\u67e5\u627e\u6548\u7387\u3002\u4e0d\u8fc7\uff0c\u5728 Probe \u9636\u6bb5\u4eab\u53d7\u54c8\u5e0c\u8868\u7684\u201c\u6027\u80fd\u7ea2\u5229\u201d\u4e4b\u524d\uff0cBuild \u9636\u6bb5\u5f97\u5148\u5728\u5185\u5b58\u4e2d\u6784\u5efa\u51fa\u54c8\u5e0c\u8868\u624d\u884c\u3002\u56e0\u6b64\uff0cHash Join \u8fd9\u79cd\u7b97\u6cd5\u5bf9\u4e8e\u5185\u5b58\u7684\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u9002\u7528\u4e8e\u5185\u5b58\u80fd\u591f\u5bb9\u7eb3\u57fa\u8868\u6570\u636e\u7684\u8ba1\u7b97\u573a\u666f\u3002</p> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0cSort Merge Join \u5c31\u6ca1\u6709\u5185\u5b58\u65b9\u9762\u7684\u9650\u5236\u3002\u4e0d\u8bba\u662f\u6392\u5e8f\u3001\u8fd8\u662f\u5408\u5e76\uff0cSMJ \u90fd\u53ef\u4ee5\u5229\u7528\u78c1\u76d8\u6765\u5b8c\u6210\u8ba1\u7b97\u3002\u6240\u4ee5\uff0c\u5728\u7a33\u5b9a\u6027\u8fd9\u65b9\u9762\uff0cSMJ \u66f4\u80dc\u4e00\u7b79\u3002</p> <p>\u4e0e\u524d\u4e24\u8005\u76f8\u6bd4\uff0cNested Loop Join \u770b\u4e0a\u53bb\u6709\u4e9b\u591a\u4f59\uff0c\u5d4c\u5957\u7684\u53cc\u5c42 for \u5faa\u73af\u5e26\u6765\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u6700\u9ad8\uff1a\\(O(M * N)\\)\u3002\u4e0d\u8fc7\uff0c\u5c3a\u6709\u6240\u77ed\u5bf8\u6709\u6240\u957f\uff0c\u6267\u884c\u9ad8\u6548\u7684 HJ \u548c SMJ \u53ea\u80fd\u7528\u4e8e\u7b49\u503c\u5173\u8054\uff0c\u4e5f\u5c31\u662f\u8bf4\u5173\u8054\u6761\u4ef6\u5fc5\u987b\u662f\u7b49\u5f0f\uff0c\u50cf <code>salaries(\"id\") &lt; employees(\"id\")</code> \u8fd9\u6837\u7684\u5173\u8054\u6761\u4ef6\uff0cHJ \u548c SMJ \u662f\u65e0\u80fd\u4e3a\u529b\u7684\u3002\u76f8\u53cd\uff0cNLJ \u65e2\u53ef\u4ee5\u5904\u7406\u7b49\u503c\u5173\u8054\uff08Equi Join\uff09\uff0c\u4e5f\u53ef\u4ee5\u5e94\u4ed8\u4e0d\u7b49\u503c\u5173\u8054\uff08Non Equi Join\uff09\uff0c\u53ef\u4ee5\u8bf4\u662f\u6570\u636e\u5173\u8054\u5728\u5b9e\u73b0\u673a\u5236\u4e0a\u7684\u6700\u540e\u4e00\u9053\u9632\u7ebf\u3002</p> <p></p>"},{"location":"Spark/2.Spark%20SQL/#shuffle-join","title":"Shuffle Join","text":"<p>Spark SQL \u9ed8\u8ba4\u91c7\u7528 Shuffle Join \u6765\u5b8c\u6210\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u7684\u6570\u636e\u5173\u8054\u3002\u5bf9\u4e8e\u53c2\u4e0e Join \u7684\u4e24\u5f20\u6570\u636e\u8868\uff0cSpark SQL \u5148\u662f\u6309\u7167\u5982\u4e0b\u89c4\u5219\uff0c\u6765\u51b3\u5b9a\u4e0d\u540c\u6570\u636e\u8bb0\u5f55\u5e94\u5f53\u5206\u53d1\u5230\u54ea\u4e2a Executors \u4e2d\u53bb\uff1a</p> <ul> <li>\u6839\u636e Join Keys \u8ba1\u7b97\u54c8\u5e0c\u503c</li> <li>\u5c06\u54c8\u5e0c\u503c\u5bf9\u5e76\u884c\u5ea6\uff08Parallelism\uff09\u53d6\u6a21</li> </ul> <p>\u7531\u4e8e\u5de6\u8868\u4e0e\u53f3\u8868\u5728\u5e76\u884c\u5ea6\uff08\u5206\u533a\u6570\uff09\u4e0a\u662f\u4e00\u81f4\u7684\uff0c\u56e0\u6b64\uff0c\u6309\u7167\u540c\u6837\u7684\u89c4\u5219\u5206\u53d1\u6570\u636e\u4e4b\u540e\uff0c\u4e00\u5b9a\u80fd\u591f\u4fdd\u8bc1 id \u5b57\u6bb5\u503c\u76f8\u540c\u7684\u85aa\u8d44\u6570\u636e\u4e0e\u5458\u5de5\u6570\u636e\u5750\u843d\u5728\u540c\u6837\u7684 Executors \u4e2d\u3002</p> <p></p> <p>\u7ecf\u8fc7 Shuffle \u8fc7\u540e\uff0cJoin Keys \u76f8\u540c\u7684\u8bb0\u5f55\u88ab\u5206\u53d1\u5230\u4e86\u540c\u6837\u7684 Executors \u4e2d\u53bb\u3002\u63a5\u4e0b\u6765\uff0c\u5728 Reduce \u9636\u6bb5\uff0cReduce Task \u5c31\u53ef\u4ee5\u4f7f\u7528 HJ\u3001SMJ\u3001\u6216\u662f NLJ \u7b97\u6cd5\u5728 Executors \u5185\u90e8\u5b8c\u6210\u6570\u636e\u5173\u8054\u7684\u8ba1\u7b97\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#broadcast-join","title":"Broadcast Join","text":"<p>\u5b9e\u9645\u4e0a\uff0cSpark \u4e0d\u4ec5\u53ef\u4ee5\u5728\u666e\u901a\u53d8\u91cf\u4e0a\u521b\u5efa\u5e7f\u64ad\u53d8\u91cf\uff0c\u5728\u5206\u5e03\u5f0f\u6570\u636e\u96c6\uff08\u5982 RDD\u3001DataFrame\uff09\u4e4b\u4e0a\u4e5f\u53ef\u4ee5\u521b\u5efa\u5e7f\u64ad\u53d8\u91cf\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5bf9\u4e8e\u53c2\u4e0e Join \u7684\u4e24\u5f20\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5176\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u5c01\u88c5\u4e3a\u5e7f\u64ad\u53d8\u91cf\uff0c\u7136\u540e\u518d\u8ba9\u5b83\u4eec\u8fdb\u884c\u5173\u8054\u3002</p> <pre><code>import org.apache.spark.sql.functions.broadcast\n\n// \u521b\u5efa\u5458\u5de5\u8868\u7684\u5e7f\u64ad\u53d8\u91cf\nval bcEmployees = broadcast(employees)\n\n// \u5185\u5173\u8054\uff0cPS\uff1a\u5c06\u539f\u6765\u7684employees\u66ff\u6362\u4e3abcEmployees\nval jointDF: DataFrame = salaries.join(bcEmployees, salaries(\"id\") === employees(\"id\"), \"inner\")\n</code></pre> <p>\u5728 Broadcast Join \u7684\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0cSpark SQL \u9996\u5148\u4ece\u5404\u4e2a Executors \u6536\u96c6 employees \u8868\u6240\u6709\u7684\u6570\u636e\u5206\u7247\uff0c\u7136\u540e\u5728 Driver \u7aef\u6784\u5efa\u5e7f\u64ad\u53d8\u91cf bcEmployees\u3002</p> <p></p> <p>\u5c3d\u7ba1\u5e7f\u64ad\u53d8\u91cf\u7684\u521b\u5efa\u4e0e\u5206\u53d1\u540c\u6837\u9700\u8981\u6d88\u8017\u7f51\u7edc\u5e26\u5bbd\uff0c\u4f46\u76f8\u6bd4 Shuffle Join \u4e2d\u4e24\u5f20\u8868\u7684\u5168\u7f51\u5206\u53d1\uff0c\u56e0\u4e3a\u4ec5\u4ec5\u901a\u8fc7\u5206\u53d1\u4f53\u91cf\u8f83\u5c0f\u7684\u6570\u636e\u8868\u6765\u5b8c\u6210\u6570\u636e\u5173\u8054\uff0cSpark SQL \u7684\u6267\u884c\u6027\u80fd\u663e\u7136\u8981\u9ad8\u6548\u5f97\u591a\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#join_1","title":"Join \u7b56\u7565\u9009\u62e9","text":"<p>\u4e0d\u8bba\u662f Shuffle Join\uff0c\u8fd8\u662f Broadcast Join\uff0c\u4e00\u65e6\u6570\u636e\u5206\u53d1\u5b8c\u6bd5\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u91c7\u7528 HJ\u3001SMJ \u548c NLJ \u8fd9 3 \u79cd\u5b9e\u73b0\u673a\u5236\u4e2d\u7684\u4efb\u610f\u4e00\u79cd\uff0c\u5b8c\u6210 Executors \u5185\u90e8\u7684\u6570\u636e\u5173\u8054\u3002\u56e0\u6b64\uff0c\u4e24\u79cd\u5206\u53d1\u6a21\u5f0f\uff0c\u4e0e\u4e09\u79cd\u5b9e\u73b0\u673a\u5236\uff0c\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\uff0c\u603b\u5171\u6709 6 \u79cd\u5206\u5e03\u5f0f Join \u7b56\u7565\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u6ce8\u610f\uff1a\u4e0a\u56fe\u4e2d\u7684 Broadcast SMJ \u662f\u7070\u8272\u7684\u3002\u8fd9\u662f\u56e0\u4e3a Spark \u5728\u80fd\u591f Broadcast \u5176\u4e2d\u4e00\u5f20\u8868\u7684\u524d\u63d0\u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u4f18\u5148\u9009\u62e9 Broadcast HJ \u6765\u5b8c\u6210\u6570\u636e\u5173\u8054\uff0c\u800c\u4e0d\u4f1a\u9009\u62e9\u6027\u80fd\u66f4\u5dee\u7684 Broadcast SMJ\u3002\u56e0\u6b64 Spark \u4e2d\u5b9e\u9645\u53ef\u7528\u7684 Join \u7b56\u7565\u53ea\u6709 5 \u79cd\uff1a</p> <ul> <li>Broadcast HJ\uff1a\u6700\u4f18\u5148\u9009\u62e9</li> <li>Shuffle HJ</li> <li>Shuffle SMJ</li> <li>Broadcast NLJ</li> <li>Shuffle NLJ\uff1a\u53c8\u79f0\u4e3a Cartesian Product Join</li> </ul> <p></p> <pre><code>flowchart TD\n    A[\"Join\"] --&gt; B{\"\u5c0f\u8868\u80fd\u5426\u5b58\u5165\u5185\u5b58\uff1f\"}\n    B --&gt;|\"Yes\"| C[\"Broadcast Join\"]\n    C --&gt; I{\"\u7b49\u503c\u8fde\u63a5\uff1f\"}\n    I --&gt;|\"Yes\"| J[\"Broadcast HJ\"]\n    I --&gt;|\"No\"| K[\"Broadcast NLJ\"]\n    B ----&gt;|\"No\"| E[\"Shuffle Join\"]\n    E --&gt; F{\"\u7b49\u503c\u8fde\u63a5\uff1f\"}\n    F --&gt;|\"Yes\"| G[\"Shuffle SMJ/Shuffle HJ\"]\n    F --&gt;|\"No\"| H[\"Shuffle NLJ\"]</code></pre> <p>\u4e0d\u8bba\u662f\u7b49\u503c\u5173\u8054\u3001\u8fd8\u662f\u4e0d\u7b49\u503c\u5173\u8054\uff0c\u53ea\u8981 Broadcast Join \u7684\u524d\u63d0\u6761\u4ef6\u6210\u7acb\uff0cSpark SQL \u4e00\u5b9a\u4f1a\u4f18\u5148\u9009\u62e9 Broadcast Join \u76f8\u5173\u7684\u7b56\u7565\u3002</p> <p>Broadcast Join \u5f97\u4ee5\u5b9e\u65bd\u7684\u57fa\u7840\uff0c\u662f\u88ab\u5e7f\u64ad\u6570\u636e\u8868\u7684\u5168\u91cf\u6570\u636e\u80fd\u591f\u5b8c\u5168\u653e\u5165 Driver \u7684\u5185\u5b58\u3001\u4ee5\u53ca\u5404\u4e2a Executors \u7684\u5185\u5b58\u3002</p> <p>\u53e6\u5916\uff0c\u4e3a\u4e86\u907f\u514d\u56e0\u5e7f\u64ad\u8868\u5c3a\u5bf8\u8fc7\u5927\u800c\u5f15\u5165\u65b0\u7684\u6027\u80fd\u9690\u60a3\uff0cSpark SQL \u8981\u6c42\u88ab\u5e7f\u64ad\u8868\u7684\u5185\u5b58\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc7 8GB\u3002</p> <p>\u5f53\u7136\uff0c\u5728 Broadcast Join \u524d\u63d0\u6761\u4ef6\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\uff0cSpark SQL \u5c31\u4f1a\u9000\u5316\u5230 Shuffle Join \u7684\u7b56\u7565\u3002\u5728\u4e0d\u7b49\u503c\u7684\u6570\u636e\u5173\u8054\u4e2d\uff0cSpark SQL \u53ea\u6709 Shuffle NLJ \u8fd9\u4e00\u79cd\u9009\u62e9\u3002</p> <p>\u5b66\u4e60\u8fc7 Shuffle \u4e4b\u540e\uff0c\u6211\u4eec\u77e5\u9053\uff0cShuffle \u5728 Map \u9636\u6bb5\u5f80\u5f80\u4f1a\u5bf9\u6570\u636e\u505a\u6392\u5e8f\uff0c\u800c\u8fd9\u6070\u6070\u6b63\u4e2d SMJ \u673a\u5236\u7684\u4e0b\u6000\u3002\u5bf9\u4e8e\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u4e24\u5f20\u8868\uff0cSMJ \u7684\u590d\u6742\u5ea6\u662f \\(O(M + N)\\)\uff0c\u8fd9\u6837\u7684\u6267\u884c\u6548\u7387\u4e0e HJ \u7684 \\(O(M)\\) \u53ef\u4ee5\u8bf4\u662f\u4e0d\u76f8\u4e0a\u4e0b\u3002\u518d\u8005\uff0cSMJ \u5728\u6267\u884c\u7a33\u5b9a\u6027\u65b9\u9762\uff0c\u8fdc\u80dc\u4e8e HJ\uff0c\u5728\u5185\u5b58\u53d7\u9650\u7684\u60c5\u51b5\u4e0b\uff0cSMJ \u53ef\u4ee5\u5145\u5206\u5229\u7528\u78c1\u76d8\u6765\u987a\u5229\u5730\u5b8c\u6210\u5173\u8054\u8ba1\u7b97\u3002</p> <p></p> <p>Broadcast Join \u4e00\u5b9a\u6bd4 Shuffle Join \u5feb\u5417\uff1f</p> <p>\u5728\u8fdb\u884c Broadcast Join \u4e4b\u524d\uff0cSpark \u9700\u8981\u628a\u5904\u4e8e Executor \u7aef\u7684\u6570\u636e\u5148\u53d1\u9001\u5230 Driver \u7aef\uff0c\u7136\u540e Driver \u7aef\u5236\u4f5c\u54c8\u5e0c\u8868\u4e4b\u540e\u518d\u628a\u6570\u636e\u5e7f\u64ad\u5230 Executor \u7aef\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u5e7f\u64ad\u7684\u8868\u7684\u6570\u636e\u6bd4\u8f83\u591a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u4f1a\u6bd4\u8f83\u8017\u65f6\uff0c\u800c\u4e14\u8fd8\u4f1a\u5360\u7528\u5927\u91cf\u7684\u7f51\u7edc\u5e26\u5bbd\uff0c\u751a\u81f3\u4e5f\u6709 OOM \u7684\u98ce\u9669\u3002\u56e0\u6b64\uff0cBroadcast Join \u5e76\u4e0d\u4e00\u5b9a\u6bd4 Shuffle Join \u5feb\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#_8","title":"\u6e90\u7801","text":"<p>\u5728 <code>SparkStrategies.scala</code> \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 Spark SQL \u4e2d\u7684 Join \u7b56\u7565\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1a</p> <p>Select the proper physical plan for join based on join strategy hints, the availability of equi-join keys and the sizes of joining relations. Below are the existing join strategies, their characteristics and their limitations.</p> <ul> <li>Broadcast hash join (BHJ): Only supported for equi-joins, while the join keys do not need to be sortable. Supported for all join types except full outer joins. BHJ usually performs faster than the other join algorithms when the broadcast side is small. However, broadcasting tables is a network-intensive operation and it could cause OOM or perform badly in some cases, especially when the build/broadcast side is big.</li> <li>Shuffle hash join: Only supported for equi-joins, while the join keys do not need to be sortable. Supported for all join types. Building hash map from table is a memory-intensive operation and it could cause OOM when the build side is big.</li> <li>Shuffle sort merge join (SMJ): Only supported for equi-joins and the join keys have to be sortable. Supported for all join types.</li> <li>Broadcast nested loop join (BNLJ): Supports both equi-joins and non-equi-joins. Supports all the join types, but the implementation is optimized for: 1) broadcasting the left side in a right outer join; 2) broadcasting the right side in a left outer, left semi, left anti or existence join; 3) broadcasting either side in an inner-like join. For other cases, we need to scan the data multiple times, which can be rather slow.</li> <li>Shuffle-and-replicate nested loop join (a.k.a. cartesian product join): Supports both equi-joins and non-equi-joins. Supports only inner like joins.</li> </ul> <p>If it is an equi-join, we first look at the join hints w.r.t. the following order:</p> <ol> <li>broadcast hint: pick broadcast hash join if the join type is supported. If both sides     have the broadcast hints, choose the smaller side (based on stats) to broadcast.</li> <li>sort merge hint: pick sort merge join if join keys are sortable.</li> <li>shuffle hash hint: We pick shuffle hash join if the join type is supported. If both     sides have the shuffle hash hints, choose the smaller side (based on stats) as the     build side.</li> <li>shuffle replicate NL hint: pick cartesian product if join type is inner like.</li> </ol> <p>If there is no hint or the hints are not applicable, we follow these rules one by one:</p> <ol> <li>Pick broadcast hash join if one side is small enough to broadcast, and the join type     is supported. If both sides are small, choose the smaller side (based on stats)     to broadcast.</li> <li>Pick shuffle hash join if one side is small enough to build local hash map, and is     much smaller than the other side, and <code>spark.sql.join.preferSortMergeJoin</code> is false.</li> <li>Pick sort merge join if the join keys are sortable.</li> <li>Pick cartesian product if join type is inner like.</li> <li>Pick broadcast nested loop join as the final solution. It may OOM but we don't have     other choice.</li> </ol>"},{"location":"Spark/2.Spark%20SQL/#spark-sql_1","title":"Spark SQL \u7684\u8868\u7c7b\u578b","text":"<p>\u5728 Spark SQL \u4e2d\uff0c\u8868\u7684\u7c7b\u578b\u5206\u4e3a 3 \u79cd\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li>\u7ba1\u7406\u8868\uff08Managed Table\uff09</li> <li>\u5916\u90e8\u8868\uff08External Table\uff09</li> <li>\u89c6\u56fe\uff08View\uff09</li> </ul> <pre><code>case class CatalogTableType private(name: String)\nobject CatalogTableType {\n  val EXTERNAL = new CatalogTableType(\"EXTERNAL\")\n  val MANAGED = new CatalogTableType(\"MANAGED\")\n  val VIEW = new CatalogTableType(\"VIEW\")\n\n  val tableTypes = Seq(EXTERNAL, MANAGED, VIEW)\n}\n</code></pre> <p>\u548c Hive \u7c7b\u4f3c\uff0c\u7ba1\u7406\u8868\u662f\u7531 Spark SQL \u7ba1\u7406\u5176\u5143\u6570\u636e\u548c\u6570\u636e\u5b58\u50a8\u7684\u8868\u3002\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u8868\u65f6\uff0cSpark \u4f1a\u5c06\u8868\u7684\u5143\u6570\u636e\uff08\u5982\u8868\u7ed3\u6784\u3001\u5217\u7c7b\u578b\u7b49\uff09\u548c\u6570\u636e\u5b58\u50a8\u5728\u9ed8\u8ba4\u7684\u5b58\u50a8\u4f4d\u7f6e\u4e2d\uff0c\u901a\u5e38\u662f\u5728 Hive \u7684\u4ed3\u5e93\u4e2d\uff08\u9ed8\u8ba4\u662f\u5728 HDFS \u4e0a\uff09\u3002\u5f53\u4f60\u5220\u9664\u4e00\u4e2a\u7ba1\u7406\u8868\u65f6\uff0cSpark \u4f1a\u81ea\u52a8\u5220\u9664\u8868\u7684\u5143\u6570\u636e\u548c\u6570\u636e\u3002</p> <p>\u5916\u90e8\u8868\u7684\u5143\u6570\u636e\u7531 Spark \u7ba1\u7406\uff0c\u4f46\u6570\u636e\u5b58\u50a8\u5728\u5916\u90e8\u5b58\u50a8\u7cfb\u7edf\u4e2d\uff0c\u4f8b\u5982 HDFS\u3001S3\u3001HBase \u7b49\u3002\u521b\u5efa\u65e0\u7ba1\u7406\u8868\u65f6\uff0c\u4f60\u9700\u8981\u6307\u5b9a\u6570\u636e\u7684\u5b58\u50a8\u4f4d\u7f6e\uff08path\uff09\uff0cSpark \u4f1a\u5c06\u5143\u6570\u636e\u4fdd\u5b58\u5728\u5176\u5185\u90e8\uff0c\u4f46\u4e0d\u4f1a\u7ba1\u7406\u6570\u636e\u7684\u751f\u547d\u5468\u671f\u3002\u8fd9\u610f\u5473\u7740\u5f53\u4f60\u5220\u9664\u4e00\u4e2a\u65e0\u7ba1\u7406\u8868\u65f6\uff0cSpark \u53ea\u4f1a\u5220\u9664\u5143\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u5220\u9664\u5b9e\u9645\u7684\u6570\u636e\u3002</p> <p>\u89c6\u56fe\u65e2\u53ef\u4ee5\u662f\u5168\u5c40\u7684\uff08\u5bf9\u7ed9\u5b9a\u96c6\u7fa4\u7684\u6240\u6709 SparkSession \u53ef\u89c1\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u4f1a\u8bdd\u7ea7\u522b\u7684\uff08\u53ea\u5bf9\u5355\u4e2a SparkSession \u53ef\u89c1\uff09\u3002\u4f1a\u8bdd\u7ea7\u522b\u7684\u89c6\u56fe\u5c31\u662f\u4e34\u65f6\u89c6\u56fe\uff0c\u8fd9\u4e9b\u89c6\u56fe\u968f Spark \u5e94\u7528\u7ed3\u675f\u800c\u6d88\u5931\u3002\u89c6\u56fe\u548c\u8868\u7684\u533a\u522b\u662f\uff0c\u89c6\u56fe\u4e0d\u4f1a\u5b58\u653e\u5b9e\u9645\u6570\u636e\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#_9","title":"\u7f13\u5b58","text":"<p>\u7528\u6237\u53ef\u4ee5\u50cf\u7f13\u5b58 RDD \u90a3\u6837\u7f13\u5b58 Spark SQL \u4e2d\u8868\u4e0e\u89c6\u56fe\uff0c\u6216\u5220\u9664\u7f13\u5b58\u3002\u5728 Spark 3.0 \u4e2d\uff0c\u9664\u4e86\u7f13\u5b58\u547d\u4ee4\u539f\u6709\u7684\u4e00\u4e9b\u9009\u9879\uff0c\u8fd8\u53ef\u4ee5\u5c06\u8868\u58f0\u660e\u4e3a LAZY\uff0c\u8fd9\u6837\u5b83\u5c31\u4e0d\u4f1a\u7acb\u5373\u88ab\u7f13\u5b58\uff0c\u76f4\u5230\u7b2c\u4e00\u6b21\u9047\u5230 Action \u7b97\u5b50\u65f6\u624d\u4f1a\u771f\u6b63\u88ab\u7f13\u5b58\u3002</p> <pre><code>val df = spark.read.option(\"header\", value = true).csv(\"src/main/resources/data/people.csv\")\ndf.cache()\ndf.createTempView(\"people\")\nspark.sqlContext.cacheTable(\"people\")\nspark.sqlContext.uncacheTable(\"people\")\n// SQL \u65b9\u5f0f\nspark.sql(\"CACHE TABLE people\")\nspark.sql(\"UNCACHE TABLE people\")\nspark.sql(\"CACHE LAZY TABLE people\")\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#_10","title":"\u5143\u6570\u636e\u7ba1\u7406","text":"<p>Catalog \u662f Spark SQL \u4e2d\u7684\u5143\u6570\u636e\u7ba1\u7406\u7ec4\u4ef6\uff0c\u5b83\u8d1f\u8d23\u7ba1\u7406\u8868\u3001\u89c6\u56fe\u3001\u51fd\u6570\u7b49\u5143\u6570\u636e\u4fe1\u606f\u3002Catalog \u6709\u4e24\u79cd\u5b9e\u73b0\uff0c\u5206\u522b\u662f HiveMetastoreCatalog \u548c SessionCatalog\u3002\u524d\u8005\u662f\u5bf9 Hive Metastore \u7684\u5c01\u88c5\uff0c\u540e\u8005\u662f\u5bf9\u5185\u7f6e\u5143\u6570\u636e\u7ba1\u7406\u7684\u5c01\u88c5\u3002</p> <p>Catalog \u662f Spark 2.0 \u4e4b\u540e\u63d0\u4f9b\u7684\u8bbf\u95ee\u5143\u6570\u636e\u7684\u7c7b\uff0c\u5176\u63d0\u4f9b\u4e00\u4e9b API \u7528\u6765\u5bf9\u6570\u636e\u5e93\u3001\u8868\u3001\u89c6\u56fe\u3001\u7f13\u5b58\u3001\u5217\u3001\u51fd\u6570\uff08UDF/UDAF\uff09\u8fdb\u884c\u64cd\u4f5c\u3002</p> <pre><code>val spark = SparkSession.builder()\n  .master(\"local\")\n  .appName(\"catalog\")\n  .getOrCreate()\nval catalog = spark.catalog\n</code></pre> <p>\u67e5\u770b\u6570\u636e\u5e93\u4fe1\u606f\uff1a</p> <pre><code>val catalog = spark.catalog\nspark.sql(\"show databases\").show()\nspark.catalog.listDatabases().show()\n</code></pre>"},{"location":"Spark/2.Spark%20SQL/#spark-on-hive-hive-on-spark","title":"Spark on Hive &amp; Hive on Spark","text":""},{"location":"Spark/2.Spark%20SQL/#spark-on-hive","title":"Spark on Hive","text":"<p>\u5728 Spark \u4e2d\u4f7f\u7528 Hive \u7684\u529f\u80fd\u3002Spark \u63d0\u4f9b\u4e86\u4e00\u4e2a\u79f0\u4e3a HiveContext\uff08\u5728 Spark 2.0+ \u7248\u672c\u4e2d\u88ab SparkSession \u53d6\u4ee3\uff09\u7684 API\uff0c\u901a\u8fc7\u8be5 API \u53ef\u4ee5\u4f7f\u7528 Hive \u7684\u5143\u6570\u636e\u548c\u67e5\u8be2\u8bed\u8a00\uff08HiveQL\uff09\u6765\u8bbf\u95ee\u548c\u64cd\u4f5c Hive \u8868\u3002</p> <p>Spark on Hive \u80fd\u591f\u5728 Spark \u4e2d\u4f7f\u7528 Hive \u7684\u8868\u548c\u6570\u636e\uff0c\u4ee5\u53ca\u6267\u884c HiveQL \u67e5\u8be2\u3002\u5b83\u5141\u8bb8\u4f60\u4f7f\u7528 Spark \u7684\u5f3a\u5927\u5206\u5e03\u5f0f\u8ba1\u7b97\u529f\u80fd\uff0c\u5e76\u4e0e Hive \u96c6\u6210\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#hive-on-spark","title":"Hive on Spark","text":"<p>\u6307\u5728 Hive \u4e2d\u4f7f\u7528 Spark \u7684\u6267\u884c\u5f15\u64ce\u3002\u5728\u4f20\u7edf\u7684 Hive \u4e2d\uff0c\u67e5\u8be2\u901a\u5e38\u4f7f\u7528 MapReduce \u4f5c\u4e3a\u6267\u884c\u5f15\u64ce\uff0c\u4f46\u8fd9\u53ef\u80fd\u5bfc\u81f4\u8f83\u9ad8\u7684\u5ef6\u8fdf\u3002\u4e3a\u4e86\u6539\u5584\u67e5\u8be2\u6027\u80fd\uff0cHive \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u79f0\u4e3a SparkExecutionEngine \u7684\u9009\u9879\uff0c\u8be5\u9009\u9879\u5c06\u67e5\u8be2\u7684\u6267\u884c\u8f6c\u79fb\u5230 Spark \u5f15\u64ce\u4e0a\u3002\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 <code>set hive.execution.engine=spark</code> \u7684\u65b9\u5f0f\u5207\u6362 Hive \u5e95\u5c42\u7684\u6267\u884c\u5f15\u64ce\u3002\u4f7f\u7528 Hive on Spark\uff0c\u4f60\u53ef\u4ee5\u5229\u7528 Spark \u7684\u5185\u5b58\u8ba1\u7b97\u548c\u5e76\u884c\u5904\u7406\u80fd\u529b\u6765\u52a0\u901f Hive \u67e5\u8be2\u3002\u8fd9\u79cd\u65b9\u5f0f\u5141\u8bb8\u4f60\u5728 Hive \u4e2d\u7ee7\u7eed\u4f7f\u7528 HiveQL\uff0c\u4f46\u5e95\u5c42\u7684\u6267\u884c\u5f15\u64ce\u53d8\u4e3a Spark\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#udf-udaf","title":"UDF &amp; UDAF","text":"<p>\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 spark.udf \u529f\u80fd\u6dfb\u52a0\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd\u3002</p> <pre><code>object UDF {\n  def main(args: Array[String]): Unit = {\n    // \u521b\u5efa\u8fd0\u884c\u73af\u5883\n    val spark = SparkSession.builder()\n      .master(\"local\")\n      .appName(\"test\")\n      .getOrCreate()\n    val sc = spark.sparkContext\n    import spark.implicits._\n\n    val df = spark.read.json(\"data/user.json\")\n    df.createOrReplaceTempView(\"user\")\n\n    spark.udf.register(\"prefixName\", (name: String) =&gt; {\n      \"Name: \" + name\n    })\n\n    spark.sql(\"select age, prefixName(username) from user\").show\n\n    //\u5173\u95ed\u73af\u5883\n    spark.close()\n  }\n}\n</code></pre> <p>\u5f3a\u7c7b\u578b\u7684 Dataset \u548c\u5f31\u7c7b\u578b\u7684 DataFrame \u90fd\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u805a\u5408\u51fd\u6570\uff0c \u5982 count()\uff0ccountDistinct()\uff0cavg()\uff0cmax()\uff0cmin()\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u7528\u6237\u53ef\u4ee5\u8bbe\u5b9a\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u805a\u5408\u51fd\u6570\u3002\u901a\u8fc7\u7ee7\u627f UserDefinedAggregateFunction \u6765\u5b9e\u73b0\u7528\u6237\u81ea\u5b9a\u4e49\u5f31\u7c7b\u578b\u805a\u5408\u51fd\u6570\u3002\u4ece Spark3.0 \u7248\u672c\u540e\uff0cUserDefinedAggregateFunction \u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\u4e86\u3002\u53ef\u4ee5\u7edf\u4e00\u91c7\u7528\u5f3a\u7c7b\u578b\u805a\u5408\u51fd\u6570 Aggregator\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#aqe","title":"AQE","text":"<p>\u5728 2.0 \u7248\u672c\u4e4b\u524d\uff0cSpark SQL \u4ec5\u4ec5\u652f\u6301\u542f\u53d1\u5f0f\u3001\u9759\u6001\u7684\u4f18\u5316\u8fc7\u7a0b\u3002</p> <p>\u542f\u53d1\u5f0f\u7684\u4f18\u5316\u53c8\u53eb RBO\uff08Rule Based Optimization\uff0c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff09\uff0c\u5b83\u5f80\u5f80\u57fa\u4e8e\u4e00\u4e9b\u89c4\u5219\u548c\u7b56\u7565\u5b9e\u73b0\uff0c\u5982\u8c13\u8bcd\u4e0b\u63a8\u3001\u5217\u526a\u679d\uff0c\u8fd9\u4e9b\u89c4\u5219\u548c\u7b56\u7565\u6765\u6e90\u4e8e\u6570\u636e\u5e93\u9886\u57df\u5df2\u6709\u7684\u5e94\u7528\u7ecf\u9a8c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u542f\u53d1\u5f0f\u7684\u4f18\u5316\u5b9e\u9645\u4e0a\u7b97\u662f\u4e00\u79cd\u7ecf\u9a8c\u4e3b\u4e49\u3002</p> <p>CBO \u7684\u7279\u70b9\u662f\u201c\u5b9e\u4e8b\u6c42\u662f\u201d\uff0c\u57fa\u4e8e\u6570\u636e\u8868\u7684\u7edf\u8ba1\u4fe1\u606f\uff08\u5982\u8868\u5927\u5c0f\u3001\u6570\u636e\u5217\u5206\u5e03\uff09\u6765\u9009\u62e9\u4f18\u5316\u7b56\u7565\u3002CBO \u652f\u6301\u7684\u7edf\u8ba1\u4fe1\u606f\u5f88\u4e30\u5bcc\uff0c\u6bd4\u5982\u6570\u636e\u8868\u7684\u884c\u6570\u3001\u6bcf\u5217\u7684\u57fa\u6570\uff08Cardinality\uff09\u3001\u7a7a\u503c\u6570\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u548c\u76f4\u65b9\u56fe\u7b49\u7b49\u3002\u56e0\u4e3a\u6709\u7edf\u8ba1\u6570\u636e\u505a\u652f\u6301\uff0c\u6240\u4ee5 CBO \u9009\u62e9\u7684\u4f18\u5316\u7b56\u7565\u5f80\u5f80\u4f18\u4e8e RBO \u9009\u62e9\u7684\u4f18\u5316\u89c4\u5219\u3002</p> <p>\u4f46\u662f\uff0cCBO \u4e5f\u9762\u4e34\u4e09\u4e2a\u65b9\u9762\u7684\u7a98\u5883\uff1a\u201c\u7a84\u3001\u6162\u3001\u9759\u201d\u3002\u7a84\u6307\u7684\u662f\u9002\u7528\u9762\u592a\u7a84\uff0cCBO \u4ec5\u652f\u6301\u6ce8\u518c\u5230 Hive Metastore \u7684\u6570\u636e\u8868\uff0c\u4f46\u5728\u5927\u91cf\u7684\u5e94\u7528\u573a\u666f\u4e2d\uff0c\u6570\u636e\u6e90\u5f80\u5f80\u662f\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u7684\u5404\u7c7b\u6587\u4ef6\uff0c\u5982 Parquet\u3001ORC\u3001CSV \u7b49\u7b49\u3002</p> <p>\u6162\u6307\u7684\u662f\u7edf\u8ba1\u4fe1\u606f\u7684\u641c\u96c6\u6548\u7387\u6bd4\u8f83\u4f4e\u3002\u5bf9\u4e8e\u6ce8\u518c\u5230 Hive Metastore \u7684\u6570\u636e\u8868\uff0c\u5f00\u53d1\u8005\u9700\u8981\u8c03\u7528 ANALYZE TABLE COMPUTE STATISTICS \u8bed\u53e5\u6536\u96c6\u7edf\u8ba1\u4fe1\u606f\uff0c\u800c\u5404\u7c7b\u4fe1\u606f\u7684\u6536\u96c6\u4f1a\u6d88\u8017\u5927\u91cf\u65f6\u95f4\u3002</p> <p>\u9759\u6307\u7684\u662f\u9759\u6001\u4f18\u5316\uff0c\u8fd9\u4e00\u70b9\u4e0e RBO \u4e00\u6837\u3002CBO \u7ed3\u5408\u5404\u7c7b\u7edf\u8ba1\u4fe1\u606f\u5236\u5b9a\u6267\u884c\u8ba1\u5212\uff0c\u4e00\u65e6\u6267\u884c\u8ba1\u5212\u4ea4\u4ed8\u8fd0\u884c\uff0cCBO \u7684\u4f7f\u547d\u5c31\u7b97\u5b8c\u6210\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5728\u8fd0\u884c\u65f6\u6570\u636e\u5206\u5e03\u53d1\u751f\u52a8\u6001\u53d8\u5316\uff0cCBO \u5148\u524d\u5236\u5b9a\u7684\u6267\u884c\u8ba1\u5212\u5e76\u4e0d\u4f1a\u8ddf\u7740\u8c03\u6574\u3001\u9002\u914d\u3002</p> <p>\u800c AQE \u53ef\u4ee5\u8ba9 Spark \u5728\u8fd0\u884c\u65f6\u7684\u4e0d\u540c\u9636\u6bb5\uff0c\u7ed3\u5408\u5b9e\u65f6\u7684\u8fd0\u884c\u65f6\u72b6\u6001\uff0c\u5468\u671f\u6027\u5730\u52a8\u6001\u8c03\u6574\u524d\u9762\u7684\u903b\u8f91\u8ba1\u5212\uff0c\u7136\u540e\u6839\u636e\u518d\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212\uff0c\u91cd\u65b0\u9009\u5b9a\u6700\u4f18\u7684\u7269\u7406\u8ba1\u5212\uff0c\u4ece\u800c\u8c03\u6574\u8fd0\u884c\u65f6\u540e\u7eed\u9636\u6bb5\u7684\u6267\u884c\u65b9\u5f0f\u3002</p> <p>AQE \u662f Spark SQL \u7684\u4e00\u79cd\u52a8\u6001\u4f18\u5316\u673a\u5236\uff0c\u5728\u8fd0\u884c\u65f6\uff0c\u6bcf\u5f53 Shuffle Map \u9636\u6bb5\u6267\u884c\u5b8c\u6bd5\uff0cAQE \u90fd\u4f1a\u7ed3\u5408\u8fd9\u4e2a\u9636\u6bb5\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u57fa\u4e8e\u65e2\u5b9a\u7684\u89c4\u5219\u52a8\u6001\u5730\u8c03\u6574\u3001\u4fee\u6b63\u5c1a\u672a\u6267\u884c\u7684\u903b\u8f91\u8ba1\u5212\u548c\u7269\u7406\u8ba1\u5212\uff0c\u6765\u5b8c\u6210\u5bf9\u539f\u59cb\u67e5\u8be2\u8bed\u53e5\u7684\u8fd0\u884c\u65f6\u4f18\u5316\u3002</p> <p>AQE \u4f18\u5316\u673a\u5236\u89e6\u53d1\u7684\u65f6\u673a\u662f Shuffle Map \u9636\u6bb5\u6267\u884c\u5b8c\u6bd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cAQE \u4f18\u5316\u7684\u9891\u6b21\u4e0e\u6267\u884c\u8ba1\u5212\u4e2d Shuffle \u7684\u6b21\u6570\u4e00\u81f4\u3002\u53cd\u8fc7\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u67e5\u8be2\u8bed\u53e5\u4e0d\u4f1a\u5f15\u5165 Shuffle \u64cd\u4f5c\uff0c\u90a3\u4e48 Spark SQL \u662f\u4e0d\u4f1a\u89e6\u53d1 AQE \u7684\u3002</p> <p>\u9996\u5148\uff0cAQE \u8d56\u4ee5\u4f18\u5316\u7684\u7edf\u8ba1\u4fe1\u606f\u4e0e CBO \u4e0d\u540c\uff0c\u8fd9\u4e9b\u7edf\u8ba1\u4fe1\u606f\u5e76\u4e0d\u662f\u5173\u4e8e\u67d0\u5f20\u8868\u6216\u662f\u54ea\u4e2a\u5217\uff0c\u800c\u662f Shuffle Map \u9636\u6bb5\u8f93\u51fa\u7684\u4e2d\u95f4\u6587\u4ef6\u3002\u6211\u4eec\u77e5\u9053\uff0c\u6bcf\u4e2a Map Task \u90fd\u4f1a\u8f93\u51fa\u4ee5 data \u4e3a\u540e\u7f00\u7684\u6570\u636e\u6587\u4ef6\uff0c\u8fd8\u6709\u4ee5 index \u4e3a\u7ed3\u5c3e\u7684\u7d22\u5f15\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u7edf\u79f0\u4e3a\u4e2d\u95f4\u6587\u4ef6\u3002\u6bcf\u4e2a data \u6587\u4ef6\u7684\u5927\u5c0f\u3001\u7a7a\u6587\u4ef6\u6570\u91cf\u4e0e\u5360\u6bd4\u3001\u6bcf\u4e2a Reduce Task \u5bf9\u5e94\u7684\u5206\u533a\u5927\u5c0f\uff0c\u6240\u6709\u8fd9\u4e9b\u57fa\u4e8e\u4e2d\u95f4\u6587\u4ef6\u7684\u7edf\u8ba1\u503c\u6784\u6210\u4e86 AQE \u8fdb\u884c\u4f18\u5316\u7684\u4fe1\u606f\u6765\u6e90\u3002</p> <p>\u5176\u6b21\uff0cAQE \u4ece\u8fd0\u884c\u65f6\u83b7\u53d6\u7edf\u8ba1\u4fe1\u606f\uff0c\u5728\u6761\u4ef6\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u4f18\u5316\u51b3\u7b56\u4f1a\u5206\u522b\u4f5c\u7528\u5230\u903b\u8f91\u8ba1\u5212\u548c\u7269\u7406\u8ba1\u5212\u3002</p> <p>AQE \u65e2\u5b9a\u7684\u89c4\u5219\u548c\u7b56\u7565\u4e3b\u8981\u6709 4 \u4e2a\uff0c\u5206\u4e3a 1 \u4e2a\u903b\u8f91\u4f18\u5316\u89c4\u5219\u548c 3 \u4e2a\u7269\u7406\u4f18\u5316\u7b56\u7565\u3002</p> <p></p> <ul> <li>Join \u7b56\u7565\u8c03\u6574\uff1a\u5982\u679c\u67d0\u5f20\u8868\u5728\u8fc7\u6ee4\u4e4b\u540e\uff0c\u5c3a\u5bf8\u5c0f\u4e8e\u5e7f\u64ad\u53d8\u91cf\u9608\u503c\uff0c\u8fd9\u5f20\u8868\u53c2\u4e0e\u7684\u6570\u636e\u5173\u8054\u5c31\u4f1a\u4ece Shuffle Sort Merge Join \u964d\u7ea7\uff08Demote\uff09\u4e3a\u6267\u884c\u6548\u7387\u66f4\u9ad8\u7684 Broadcast Hash Join\u3002</li> <li>\u81ea\u52a8\u5206\u533a\u5408\u5e76\uff1a\u5728 Shuffle \u8fc7\u540e\uff0cReduce Task \u6570\u636e\u5206\u5e03\u53c2\u5dee\u4e0d\u9f50\uff0cAQE \u5c06\u81ea\u52a8\u5408\u5e76\u8fc7\u5c0f\u7684\u6570\u636e\u5206\u533a\u3002</li> <li>\u81ea\u52a8\u503e\u659c\u5904\u7406\uff1a\u7ed3\u5408\u914d\u7f6e\u9879\uff0cAQE \u81ea\u52a8\u62c6\u5206 Reduce \u9636\u6bb5\u8fc7\u5927\u7684\u6570\u636e\u5206\u533a\uff0c\u964d\u4f4e\u5355\u4e2a Reduce Task \u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002</li> </ul>"},{"location":"Spark/2.Spark%20SQL/#dpp","title":"DPP","text":"<p>DPP\uff08Dynamic Partition Pruning\uff0c\u52a8\u6001\u5206\u533a\u526a\u88c1\uff09\u662f Spark 3.0 \u7248\u672c\u4e2d\u7b2c\u4e8c\u4e2a\u5f15\u4eba\u6ce8\u76ee\u7684\u7279\u6027\uff0c\u5b83\u6307\u7684\u662f\u5728\u661f\u578b\u6570\u4ed3\u7684\u6570\u636e\u5173\u8054\u573a\u666f\u4e2d\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8fc7\u6ee4\u4e4b\u540e\u7684\u7ef4\u5ea6\u8868\uff0c\u5927\u5e45\u524a\u51cf\u4e8b\u5b9e\u8868\u7684\u6570\u636e\u626b\u63cf\u91cf\uff0c\u4ece\u6574\u4f53\u4e0a\u63d0\u5347\u5173\u8054\u8ba1\u7b97\u7684\u6267\u884c\u6027\u80fd\u3002</p> <p>\u6211\u4eec\u5148\u6765\u770b\u8fd9\u4e2a\u4f8b\u5b50\u3002\u5728\u661f\u578b\uff08Start Schema\uff09\u6570\u4ed3\u4e2d\uff0c\u6211\u4eec\u6709\u4e24\u5f20\u8868\uff0c\u4e00\u5f20\u662f\u8ba2\u5355\u8868 orders\uff0c\u53e6\u4e00\u5f20\u662f\u7528\u6237\u8868 users\u3002\u663e\u7136\uff0c\u8ba2\u5355\u8868\u662f\u4e8b\u5b9e\u8868\uff08Fact\uff09\uff0c\u800c\u7528\u6237\u8868\u662f\u7ef4\u5ea6\u8868\uff08Dimension\uff09\u3002\u4e1a\u52a1\u9700\u6c42\u662f\u7edf\u8ba1\u6240\u6709\u5934\u90e8\u7528\u6237\u8d21\u732e\u7684\u8425\u4e1a\u989d\uff0c\u5e76\u6309\u7167\u8425\u4e1a\u989d\u5012\u5e8f\u6392\u5e8f\u3002</p> <pre><code>// \u8ba2\u5355\u8868orders\u5173\u952e\u5b57\u6bb5\nuserId, Int\nitemId, Int\nprice, Float\nquantity, Int\n\n// \u7528\u6237\u8868users\u5173\u952e\u5b57\u6bb5\nid, Int\nname, String\ntype, String //\u679a\u4e3e\u503c\uff0c\u5206\u4e3a\u5934\u90e8\u7528\u6237\u548c\u957f\u5c3e\u7528\u6237\n</code></pre> <p>\u7ed9\u5b9a\u4e0a\u8ff0\u6570\u636e\u8868\uff0c\u6211\u4eec\u53ea\u9700\u628a\u4e24\u5f20\u8868\u505a\u5185\u5173\u8054\uff0c\u7136\u540e\u5206\u7ec4\u3001\u805a\u5408\u3001\u6392\u5e8f\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\uff0c\u5177\u4f53\u7684\u67e5\u8be2\u8bed\u53e5\u5982\u4e0b\u3002</p> <pre><code>select (orders.price * order.quantity) as income, users.name\nfrom orders\ninner join users on orders.userId = users.id\nwhere users.type = 'Head User'\ngroup by users.name\norder by income desc\n</code></pre> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u8fc7\u6ee4\u8c13\u8bcd\u4e2d\u5305\u542b\u5206\u533a\u952e\uff0c\u90a3\u4e48 Spark SQL \u5bf9\u5206\u533a\u8868\u505a\u626b\u63cf\u7684\u65f6\u5019\uff0c\u662f\u5b8c\u5168\u53ef\u4ee5\u8df3\u8fc7\uff08\u526a\u6389\uff09\u4e0d\u6ee1\u8db3\u8c13\u8bcd\u6761\u4ef6\u7684\u5206\u533a\u76ee\u5f55\uff0c\u8fd9\u5c31\u662f\u5206\u533a\u526a\u88c1\u3002\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u7684\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u7528\u6237\u8868\u7684\u8fc7\u6ee4\u8c13\u8bcd\u662f <code>users.type = 'Head User'</code>\u3002\u5047\u8bbe\u7528\u6237\u8868\u662f\u5206\u533a\u8868\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7528\u6237\u8868\u7684\u6570\u636e\u626b\u63cf\uff0cSpark SQL \u53ef\u4ee5\u5b8c\u5168\u8df3\u8fc7\u524d\u7f00\u4e3a\"Tail User\"\u7684\u5b50\u76ee\u5f55\u3002</p> <p></p> <p>\u901a\u8fc7\u4e0e\u8c13\u8bcd\u4e0b\u63a8\u4f5c\u5bf9\u6bd4\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u89c2\u5730\u611f\u53d7\u5206\u533a\u526a\u88c1\u7684\u5a01\u529b\u3002\u5982\u56fe\u6240\u793a\uff0c\u4e0a\u4e0b\u4e24\u884c\u5206\u522b\u8868\u793a\u7528\u6237\u8868\u5728\u4e0d\u505a\u5206\u533a\u548c\u505a\u5206\u533a\u7684\u60c5\u51b5\u4e0b\uff0cSpark SQL \u5bf9\u4e8e\u7528\u6237\u8868\u7684\u6570\u636e\u626b\u63cf\u3002\u5728\u4e0d\u505a\u5206\u533a\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u8868\u6240\u6709\u7684\u6570\u636e\u5206\u7247\u5168\u90e8\u5b58\u4e8e\u540c\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\uff0c\u5c3d\u7ba1 Parquet \u683c\u5f0f\u5728\u6ce8\u811a\uff08Footer\uff09\u4e2d\u63d0\u4f9b\u4e86 type \u5b57\u6bb5\u7684\u7edf\u8ba1\u503c\uff0cSpark SQL \u53ef\u4ee5\u5229\u7528\u8c13\u8bcd\u4e0b\u63a8\u6765\u51cf\u5c11\u9700\u8981\u626b\u63cf\u7684\u6570\u636e\u5206\u7247\uff0c\u4f46\u7531\u4e8e\u5f88\u591a\u5206\u7247\u6ce8\u811a\u4e2d\u7684 type \u5b57\u6bb5\u540c\u65f6\u5305\u542b\u2018Head User\u2019\u548c\u2018Tail User\u2019\uff08\u7b2c\u4e00\u884c 3 \u4e2a\u6d45\u7eff\u8272\u7684\u6570\u636e\u5206\u7247\uff09\uff0c\u56e0\u6b64\uff0c\u7528\u6237\u8868\u7684\u6570\u636e\u626b\u63cf\u4ecd\u7136\u4f1a\u6d89\u53ca 4 \u4e2a\u6570\u636e\u5206\u7247\u3002</p> <p>\u76f8\u53cd\uff0c\u5f53\u7528\u6237\u8868\u672c\u8eab\u5c31\u662f\u5206\u533a\u8868\u65f6\uff0c\u7531\u4e8e type \u5b57\u6bb5\u4e3a\u2018Head User\u2019\u7684\u6570\u636e\u8bb0\u5f55\u5168\u90e8\u5b58\u50a8\u5230\u524d\u7f00\u4e3a\u2018Head User\u2019\u7684\u5b50\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u56fe\u4e2d\u7b2c\u4e8c\u884c\u6d45\u7eff\u8272\u7684\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u4ec5\u5305\u542b\u4e24\u4e2a type \u5b57\u6bb5\u5168\u90e8\u4e3a\u2018Head User\u2019\u7684\u6570\u636e\u5206\u7247\u3002\u8fd9\u6837\u4e00\u6765\uff0cSpark SQL \u53ef\u4ee5\u5b8c\u5168\u8df3\u8fc7\u5176\u4ed6\u5b50\u76ee\u5f55\u7684\u626b\u63cf\uff0c\u4ece\u800c\u5927\u5e45\u63d0\u5347 I/O \u6548\u7387\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#_11","title":"\u5b9e\u73b0\u539f\u7406","text":"<p>\u6211\u4eec\u521a\u624d\u8bf4\u4e86\uff0cDPP \u6307\u7684\u662f\u5728\u6570\u636e\u5173\u8054\u7684\u573a\u666f\u4e2d\uff0cSpark SQL \u5229\u7528\u7ef4\u5ea6\u8868\u63d0\u4f9b\u7684\u8fc7\u6ee4\u4fe1\u606f\uff0c\u51cf\u5c11\u4e8b\u5b9e\u8868\u4e2d\u6570\u636e\u7684\u626b\u63cf\u91cf\u3001\u964d\u4f4e I/O \u5f00\u9500\uff0c\u4ece\u800c\u63d0\u5347\u6267\u884c\u6027\u80fd\u3002\u90a3\u4e48\uff0cDPP \u662f\u600e\u4e48\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u5462\uff1f\u5b83\u80cc\u540e\u7684\u903b\u8f91\u662f\u4ec0\u4e48\uff1f</p> <p></p> <p>\u9996\u5148\uff0c\u8fc7\u6ee4\u6761\u4ef6 users.type = \u2018Head User\u2019\u4f1a\u5e2e\u52a9\u7ef4\u5ea6\u8868\u8fc7\u6ee4\u4e00\u90e8\u5206\u6570\u636e\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7ef4\u5ea6\u8868\u7684 ID \u5b57\u6bb5\u4e5f\u987a\u5e26\u7740\u7ecf\u8fc7\u4e00\u8f6e\u7b5b\u9009\uff0c\u5982\u56fe\u4e2d\u7684\u6b65\u9aa4 1 \u6240\u793a\u3002\u7ecf\u8fc7\u8fd9\u4e00\u8f6e\u7b5b\u9009\u4e4b\u540e\uff0c\u4fdd\u7559\u4e0b\u6765\u7684 ID \u503c\uff0c\u4ec5\u4ec5\u662f\u7ef4\u5ea6\u8868 ID \u5168\u96c6\u7684\u4e00\u4e2a\u5b50\u96c6\u3002</p> <p>\u7136\u540e\uff0c\u5728\u5173\u8054\u5173\u7cfb\u4e5f\u5c31\u662f orders.userId = users.id \u7684\u4f5c\u7528\u4e0b\uff0c\u8fc7\u6ee4\u6548\u679c\u4f1a\u901a\u8fc7 users \u7684 ID \u5b57\u6bb5\u4f20\u5bfc\u5230\u4e8b\u5b9e\u8868\u7684 userId \u5b57\u6bb5\uff0c\u4e5f\u5c31\u662f\u56fe\u4e2d\u7684\u6b65\u9aa4 2\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6ee1\u8db3\u5173\u8054\u5173\u7cfb\u7684 userId \u503c\uff0c\u4e5f\u662f\u4e8b\u5b9e\u8868 userId \u5168\u96c6\u4e2d\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u628a\u6ee1\u8db3\u6761\u4ef6\u7684 userId \u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5e94\u7528\uff08Apply\uff09\u5230\u4e8b\u5b9e\u8868\u7684\u6570\u636e\u6e90\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u51cf\u5c11\u6570\u636e\u626b\u63cf\u91cf\uff0c\u63d0\u5347 I/O \u6548\u7387\uff0c\u5982\u56fe\u4e2d\u7684\u6b65\u9aa4 3 \u6240\u793a\u3002</p> <p></p> <p>\u867d\u7136 DPP \u7684\u8fd0\u4f5c\u903b\u8f91\u975e\u5e38\u6e05\u6670\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6570\u636e\u5173\u8054\u573a\u666f\u90fd\u53ef\u4ee5\u4eab\u53d7\u5230 DPP \u7684\u4f18\u5316\u673a\u5236\uff0c\u60f3\u8981\u5229\u7528 DPP \u6765\u52a0\u901f\u4e8b\u5b9e\u8868\u6570\u636e\u7684\u8bfb\u53d6\u548c\u8bbf\u95ee\uff0c\u6570\u636e\u5173\u8054\u573a\u666f\u8fd8\u8981\u6ee1\u8db3\u4e09\u4e2a\u989d\u5916\u7684\u6761\u4ef6\u3002</p> <p>\u9996\u5148\uff0cDPP \u662f\u4e00\u79cd\u5206\u533a\u526a\u88c1\u673a\u5236\uff0c\u5b83\u662f\u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u5bf9\u4e8b\u5b9e\u8868\u8fdb\u884c\u8fc7\u6ee4\u3002\u7ed3\u5408\u521a\u624d\u7684\u903b\u8f91\uff0c\u7ef4\u5ea6\u8868\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u4f1a\u8f6c\u5316\u4e3a\u4e8b\u5b9e\u8868\u4e0a Join Key \u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5177\u4f53\u5230\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u5c31\u662f orders.userId \u8fd9\u4e2a\u5b57\u6bb5\u3002\u663e\u7136\uff0cDPP \u751f\u6548\u7684\u524d\u63d0\u662f\u4e8b\u5b9e\u8868\u6309\u7167 orders.userId \u8fd9\u4e00\u5217\u9884\u5148\u505a\u597d\u4e86\u5206\u533a\u3002\u56e0\u6b64\uff0c\u4e8b\u5b9e\u8868\u5fc5\u987b\u662f\u5206\u533a\u8868\uff0c\u800c\u4e14\u5206\u533a\u5b57\u6bb5\uff08\u53ef\u4ee5\u662f\u591a\u4e2a\uff09\u5fc5\u987b\u5305\u542b Join Key\u3002</p> <p>\u5176\u6b21\uff0c\u8fc7\u6ee4\u6548\u679c\u7684\u4f20\u5bfc\uff0c\u4f9d\u8d56\u7684\u662f\u7b49\u503c\u7684\u5173\u8054\u5173\u7cfb\uff0c\u6bd4\u5982 orders.userId = users.id\u3002\u56e0\u6b64\uff0cDPP \u4ec5\u652f\u6301\u7b49\u503c Joins\uff0c\u4e0d\u652f\u6301\u5927\u4e8e\u3001\u5c0f\u4e8e\u8fd9\u79cd\u4e0d\u7b49\u503c\u5173\u8054\u5173\u7cfb\u3002</p> <p>\u6b64\u5916\uff0cDPP \u673a\u5236\u5f97\u4ee5\u5b9e\u65bd\u8fd8\u6709\u4e00\u4e2a\u9690\u542b\u7684\u6761\u4ef6\uff1a\u7ef4\u5ea6\u8868\u8fc7\u6ee4\u4e4b\u540e\u7684\u6570\u636e\u96c6\u8981\u5c0f\u4e8e\u5e7f\u64ad\u9608\u503c\u3002</p> <p>\u7ed3\u5408\u521a\u624d\u5bf9\u4e8e DPP \u5b9e\u73b0\u903b\u8f91\u7684\u5206\u6790\u548c\u63a8\u5bfc\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5b9e\u73b0 DPP \u673a\u5236\u7684\u5173\u952e\u5728\u4e8e\uff0c\u6211\u4eec\u8981\u8ba9\u5904\u7406\u4e8b\u5b9e\u8868\u7684\u8ba1\u7b97\u5206\u652f\uff0c\u80fd\u591f\u62ff\u5230\u6ee1\u8db3\u8fc7\u6ee4\u6761\u4ef6\u7684 Join Key \u5217\u8868\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u5217\u8868\u6765\u5bf9\u4e8b\u5b9e\u8868\u505a\u5206\u533a\u526a\u88c1\u3002\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u7528\u4ec0\u4e48\u529e\u6cd5\u624d\u80fd\u62ff\u5230\u8fd9\u4e2a\u5217\u8868\u5462\uff1f</p> <p>Spark SQL \u9009\u62e9\u4e86\u4e00\u79cd\u201c\u4e00\u7bad\u53cc\u96d5\u201d\u7684\u505a\u6cd5\uff1a\u4f7f\u7528\u5e7f\u64ad\u53d8\u91cf\u5c01\u88c5\u8fc7\u6ee4\u4e4b\u540e\u7684\u7ef4\u5ea6\u8868\u6570\u636e\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u7ef4\u5ea6\u8868\u505a\u5b8c\u8fc7\u6ee4\u4e4b\u540e\uff0cSpark SQL \u5728\u5176\u4e0a\u6784\u5efa\u54c8\u5e0c\u8868\uff08Hash Table\uff09\uff0c\u8fd9\u4e2a\u54c8\u5e0c\u8868\u7684 Key \u5c31\u662f\u7528\u4e8e\u5173\u8054\u7684 Join Key\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0cKey \u5c31\u662f\u6ee1\u8db3\u8fc7\u6ee4 users.type = \u2018Head User\u2019\u6761\u4ef6\u7684 users.id\uff1bValue \u662f\u6295\u5f71\u4e2d\u9700\u8981\u5f15\u7528\u7684\u6570\u636e\u5217\uff0c\u5728\u4e4b\u524d\u8ba2\u5355\u8868\u4e0e\u7528\u6237\u8868\u7684\u67e5\u8be2\u4e2d\uff0c\u8fd9\u91cc\u7684\u5f15\u7528\u5217\u5c31\u662f users.name\u3002</p> <p>\u54c8\u5e0c\u8868\u6784\u5efa\u5b8c\u6bd5\u4e4b\u540e\uff0cSpark SQL \u5c06\u5176\u5c01\u88c5\u5230\u5e7f\u64ad\u53d8\u91cf\u4e2d\uff0c\u8fd9\u4e2a\u5e7f\u64ad\u53d8\u91cf\u7684\u4f5c\u7528\u6709\u4e8c\u3002\u7b2c\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u7ed9\u4e8b\u5b9e\u8868\u7528\u6765\u505a\u5206\u533a\u526a\u88c1\uff0c\u5982\u56fe\u4e2d\u7684\u6b65\u9aa4 1 \u6240\u793a\uff0c\u54c8\u5e0c\u8868\u4e2d\u7684 Key Set \u521a\u597d\u53ef\u4ee5\u7528\u6765\u7ed9\u4e8b\u5b9e\u8868\u8fc7\u6ee4\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e\u5206\u533a\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u4f5c\u7528\u5c31\u662f\u53c2\u4e0e\u540e\u7eed\u7684 Broadcast Join \u6570\u636e\u5173\u8054\uff0c\u5982\u56fe\u4e2d\u7684\u6b65\u9aa4 2 \u6240\u793a\u3002\u8fd9\u91cc\u7684\u54c8\u5e0c\u8868\uff0c\u672c\u8d28\u4e0a\u5c31\u662f Hash Join \u4e2d\u7684 Build Table\uff0c\u5176\u4e2d\u7684 Key\u3001Value\uff0c\u8bb0\u5f55\u7740\u6570\u636e\u5173\u8054\u4e2d\u6240\u9700\u7684\u6240\u6709\u5b57\u6bb5\uff0c\u5982 users.id\u3001users.name\uff0c\u521a\u597d\u62ff\u6765\u548c\u4e8b\u5b9e\u8868\u505a Broadcast Hash Join\u3002</p>"},{"location":"Spark/2.Spark%20SQL/#_12","title":"\u603b\u7ed3","text":"<p>\u76f8\u6bd4\u4e8e\u8c13\u8bcd\u4e0b\u63a8\uff0c\u5206\u533a\u526a\u88c1\u5f80\u5f80\u80fd\u66f4\u597d\u5730\u63d0\u5347\u78c1\u76d8\u8bbf\u95ee\u7684 I/O \u6548\u7387\u3002</p> <p>\u8fd9\u662f\u56e0\u4e3a\uff0c\u8c13\u8bcd\u4e0b\u63a8\u64cd\u4f5c\u5f80\u5f80\u662f\u6839\u636e\u6587\u4ef6\u6ce8\u811a\u4e2d\u7684\u7edf\u8ba1\u4fe1\u606f\u5b8c\u6210\u5bf9\u6587\u4ef6\u7684\u8fc7\u6ee4\uff0c\u8fc7\u6ee4\u6548\u679c\u53d6\u51b3\u4e8e\u6587\u4ef6\u4e2d\u5185\u5bb9\u7684\u201c\u7eaf\u5ea6\u201d\u3002\u5206\u533a\u526a\u88c1\u5219\u4e0d\u540c\uff0c\u5b83\u7684\u5206\u533a\u8868\u53ef\u4ee5\u628a\u5305\u542b\u4e0d\u540c\u5185\u5bb9\u7684\u6587\u4ef6\uff0c\u9694\u79bb\u5230\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u4e0b\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5305\u542b\u5206\u533a\u952e\u7684\u8fc7\u6ee4\u6761\u4ef6\u80fd\u591f\u4ee5\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u4e3a\u7c92\u5ea6\u5bf9\u78c1\u76d8\u6587\u4ef6\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4ece\u800c\u5927\u5e45\u63d0\u5347\u78c1\u76d8\u8bbf\u95ee\u7684 I/O \u6548\u7387\u3002</p> <p>\u800c\u52a8\u6001\u5206\u533a\u526a\u88c1\u8fd9\u4e2a\u529f\u80fd\u4e3b\u8981\u7528\u5728\u661f\u578b\u6a21\u578b\u6570\u4ed3\u7684\u6570\u636e\u5173\u8054\u573a\u666f\u4e2d\uff0c\u5b83\u6307\u7684\u662f\u5728\u8fd0\u884c\u7684\u65f6\u5019\uff0cSpark SQL \u5229\u7528\u7ef4\u5ea6\u8868\u63d0\u4f9b\u7684\u8fc7\u6ee4\u4fe1\u606f\uff0c\u6765\u51cf\u5c11\u4e8b\u5b9e\u8868\u4e2d\u6570\u636e\u7684\u626b\u63cf\u91cf\u3001\u964d\u4f4e I/O \u5f00\u9500\uff0c\u4ece\u800c\u63d0\u5347\u6267\u884c\u6027\u80fd\u3002</p> <p>\u52a8\u6001\u5206\u533a\u526a\u88c1\u8fd0\u4f5c\u7684\u80cc\u540e\u903b\u8f91\uff0c\u662f\u628a\u7ef4\u5ea6\u8868\u4e2d\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u901a\u8fc7\u5173\u8054\u5173\u7cfb\u4f20\u5bfc\u5230\u4e8b\u5b9e\u8868\uff0c\u6765\u5b8c\u6210\u4e8b\u5b9e\u8868\u7684\u4f18\u5316\u3002\u5728\u6570\u636e\u5173\u8054\u7684\u573a\u666f\u4e2d\uff0c\u5f00\u53d1\u8005\u8981\u60f3\u5229\u7528\u597d\u52a8\u6001\u5206\u533a\u526a\u88c1\u7279\u6027\uff0c\u9700\u8981\u6ce8\u610f 3 \u70b9\uff1a</p> <ul> <li>\u4e8b\u5b9e\u8868\u5fc5\u987b\u662f\u5206\u533a\u8868\uff0c\u5e76\u4e14\u5206\u533a\u5b57\u6bb5\u5fc5\u987b\u5305\u542b Join Key</li> <li>\u52a8\u6001\u5206\u533a\u526a\u88c1\u53ea\u652f\u6301\u7b49\u503c Joins\uff0c\u4e0d\u652f\u6301\u5927\u4e8e\u3001\u5c0f\u4e8e\u8fd9\u79cd\u4e0d\u7b49\u503c\u5173\u8054\u5173\u7cfb</li> <li>\u7ef4\u5ea6\u8868\u8fc7\u6ee4\u4e4b\u540e\u7684\u6570\u636e\u96c6\uff0c\u5fc5\u987b\u8981\u5c0f\u4e8e\u5e7f\u64ad\u9608\u503c\uff0c\u56e0\u6b64\uff0c\u5f00\u53d1\u8005\u8981\u6ce8\u610f\u8c03\u6574\u914d\u7f6e\u9879 <code>spark.sql.autoBroadcastJoinThreshold</code></li> </ul>"},{"location":"Spark/PySpark/","title":"PySpark","text":""},{"location":"Spark/PySpark/#spark","title":"Spark \u6846\u67b6","text":"<p>Spark \u662f\u4e00\u79cd\u57fa\u4e8e\u5185\u5b58\u7684\u5feb\u901f\u3001\u901a\u7528\u3001\u53ef\u6269\u5c55\u7684\u5206\u5e03\u5f0f\u5206\u6790\u8ba1\u7b97\u5f15\u64ce\u3002</p> <p>Spark \u501f\u9274\u4e86 MapReduce \u601d\u60f3\u53d1\u5c55\u800c\u6765\uff0c\u4fdd\u7559\u4e86\u5176\u5206\u5e03\u5f0f\u5e76\u884c\u8ba1\u7b97\u7684\u4f18\u70b9\u5e76\u6539\u8fdb\u4e86\u5176\u660e\u663e\u7684\u7f3a\u9677\u3002\u8ba9\u4e2d\u95f4\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u63d0\u9ad8\u4e86\u8fd0\u884c\u901f\u5ea6\u3001\u5e76\u63d0\u4f9b\u4e30\u5bcc\u7684\u64cd\u4f5c\u6570\u636e\u7684 API \u63d0\u9ad8\u4e86\u5f00\u53d1\u901f\u5ea6\u3002</p> <p>Spark \u5904\u7406\u6570\u636e\u4e0e MapReduce \u5904\u7406\u6570\u636e\u76f8\u6bd4\uff0c\u6709\u5982\u4e0b\u4e24\u4e2a\u4e0d\u540c\u70b9\uff1a</p> <ul> <li>Spark \u5904\u7406\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5c06\u4e2d\u95f4\u5904\u7406\u7ed3\u679c\u6570\u636e\u5b58\u50a8\u5230\u5185\u5b58\u4e2d</li> <li>Spark \u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u7b97\u5b50(API), \u53ef\u4ee5\u505a\u5230\u590d\u6742\u4efb\u52a1\u5728\u4e00\u4e2a Spark \u7a0b\u5e8f\u4e2d\u5b8c\u6210</li> </ul> <p>Spark VS Hadoop</p> <p></p> <p>Hadoop \u7684\u57fa\u4e8e\u8fdb\u7a0b\u7684\u8ba1\u7b97\u548c Spark \u57fa\u4e8e\u7ebf\u7a0b\u65b9\u5f0f\u4f18\u7f3a\u70b9\uff1f</p> <p>Hadoop \u4e2d\u7684 MR \u4e2d\u6bcf\u4e2a Map/Reduce Task \u90fd\u662f\u4e00\u4e2a Java \u8fdb\u7a0b\u65b9\u5f0f\u8fd0\u884c\uff0c\u597d\u5904\u5728\u4e8e\u8fdb\u7a0b\u4e4b\u95f4\u662f\u4e92\u76f8\u72ec\u7acb\u7684\uff0c\u6bcf\u4e2a Task \u72ec\u4eab\u8fdb\u7a0b\u8d44\u6e90\uff0c\u6ca1 \u6709\u4e92\u76f8\u5e72\u6270\uff0c\u76d1\u63a7\u65b9\u4fbf\uff0c\u4f46\u662f\u95ee\u9898\u5728\u4e8e Task \u4e4b\u95f4\u4e0d\u65b9\u4fbf\u5171\u4eab\u6570\u636e\uff0c\u6267\u884c\u6548\u7387\u6bd4\u8f83\u4f4e\u3002\u6bd4\u5982\u591a\u4e2a Map Task \u8bfb\u53d6\u4e0d\u540c\u6570\u636e\u6e90\u6587\u4ef6\u9700\u8981\u5c06\u6570\u636e\u6e90\u52a0 \u8f7d\u5230\u6bcf\u4e2a Map Task \u4e2d\uff0c\u9020\u6210\u91cd\u590d\u52a0\u8f7d\u548c\u6d6a\u8d39\u5185\u5b58\u3002</p> <p>\u800c Spark \u57fa\u4e8e\u7ebf\u7a0b\u7684\u65b9\u5f0f\u8ba1\u7b97\u662f\u4e3a\u4e86\u6570\u636e\u5171\u4eab\u548c\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0cSpark \u91c7\u7528\u7ebf\u7a0b\u4e3a\u6700\u5c0f\u7684\u6267\u884c\u5355\u4f4d\uff0c\u4f46\u7f3a\u70b9\u662f\u7ebf\u7a0b\u4e4b\u95f4\u4f1a\u6709\u8d44\u6e90\u7ade\u4e89\u3002</p>"},{"location":"Spark/PySpark/#spark_1","title":"Spark \u6838\u5fc3\u6a21\u5757","text":"<ul> <li>Spark Core\uff1a\u662f Spark \u8fd0\u884c\u7684\u57fa\u7840\u3002Spark Core \u4ee5 RDD \u4e3a\u6570\u636e\u62bd\u8c61\uff0c\u63d0\u4f9b Python\u3001Java\u3001Scala\u3001R \u8bed\u8a00\u7684 API\uff0c\u53ef\u4ee5\u7f16\u7a0b\u8fdb\u884c\u6d77\u91cf\u79bb\u7ebf\u6570\u636e\u6279\u5904\u7406\u8ba1\u7b97\u3002</li> <li>SparkSQL\uff1a\u57fa\u4e8e Spark Core \u4e4b\u4e0a\uff0c\u63d0\u4f9b\u7ed3\u6784\u5316\u6570\u636e\u7684\u5904\u7406\u6a21\u5757\u3002SparkSQL \u652f\u6301\u4ee5 SQL \u8bed\u8a00\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0cSparkSQL \u672c\u8eab\u9488\u5bf9\u79bb\u7ebf\u8ba1\u7b97\u573a\u666f\u3002\u540c\u65f6\u57fa\u4e8e SparkSQL\uff0cSpark \u63d0\u4f9b\u4e86 StructuredStreaming \u6a21\u5757\uff0c\u53ef\u4ee5\u4ee5 SparkSQL \u4e3a\u57fa\u7840\uff0c\u8fdb\u884c\u6570\u636e\u7684\u6d41\u5f0f\u8ba1\u7b97\u3002</li> <li>SparkStreaming\uff1a\u4ee5 Spark Core \u4e3a\u57fa\u7840\uff0c\u63d0\u4f9b\u6570\u636e\u7684\u6d41\u5f0f\u8ba1\u7b97\u529f\u80fd\u3002</li> <li>MLlib\uff1a\u57fa\u4e8e Spark Core \u4e4b\u4e0a\uff0c\u63d0\u4f9b\u673a\u5668\u5b66\u4e60\u7684\u529f\u80fd\u5e93\u3002</li> <li>GraphX\uff1a\u57fa\u4e8e Spark Core \u4e4b\u4e0a\uff0c\u63d0\u4f9b\u56fe\u8ba1\u7b97\u7684\u529f\u80fd\u5e93\u3002</li> </ul>"},{"location":"Spark/PySpark/#spark_2","title":"Spark \u8fd0\u884c\u6a21\u5f0f","text":"<ul> <li>\u672c\u5730\u6a21\u5f0f\uff08\u5355\u673a\uff09\uff1a\u672c\u5730\u6a21\u5f0f\u5c31\u662f\u4ee5\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\uff0c\u901a\u8fc7\u5176\u5185\u90e8\u7684\u591a\u4e2a\u7ebf\u7a0b\u6765\u6a21\u62df\u6574\u4e2a Spark \u8fd0\u884c\u65f6\u73af\u5883</li> <li>Standalone \u6a21\u5f0f\uff08\u96c6\u7fa4\uff09\uff1aSpark \u4e2d\u7684\u5404\u4e2a\u89d2\u8272\u4ee5\u72ec\u7acb\u8fdb\u7a0b\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u5e76\u7ec4\u6210 Spark \u96c6\u7fa4\u73af\u5883</li> <li>Spark on YARN \u6a21\u5f0f\uff08\u96c6\u7fa4\uff09\uff1aSpark \u4e2d\u7684\u5404\u4e2a\u89d2\u8272\u8fd0\u884c\u5728 YARN \u7684\u5bb9\u5668\u5185\u90e8\uff0c\u5e76\u7ec4\u6210 Spark \u96c6\u7fa4\u73af\u5883</li> <li>Spark on Kubernetes \u6a21\u5f0f\uff08\u96c6\u7fa4\uff09\uff1aSpark \u4e2d\u7684\u5404\u4e2a\u89d2\u8272\u8fd0\u884c\u5728 Kubernetes \u7684\u5bb9\u5668\u5185\u90e8\uff0c\u5e76\u7ec4\u6210 Spark \u96c6\u7fa4\u73af\u5883</li> </ul>"},{"location":"Spark/PySpark/#spark_3","title":"Spark \u7684\u67b6\u6784\u89d2\u8272","text":"<p>Spark \u91c7\u7528\u4e86\u6807\u51c6\u7684\u4e3b\u4ece\u67b6\u6784\u3002</p> <ul> <li>Master\uff1a\u7ba1\u7406\u6574\u4e2a\u96c6\u7fa4\u7684\u8d44\u6e90\uff0c\u7c7b\u4f3c\u4e8e YARN \u7684 ResourceManager</li> <li>Worker\uff1a\u7ba1\u7406\u5355\u4e2a\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u7c7b\u4f3c\u4e8e YARN \u7684 NodeManager</li> <li>Driver\uff1a\u7ba1\u7406\u5355\u4e2a Spark \u4efb\u52a1\u5728\u8fd0\u884c\u65f6\u7684\u5de5\u4f5c\uff0c\u7c7b\u4f3c\u4e8e YARN \u7684 ApplicationMaster</li> <li>Executor\uff1a\u8d1f\u8d23\u5177\u4f53\u7684\u4efb\u52a1\u6267\u884c\uff0c\u7c7b\u4f3c\u4e8e YARN \u5bb9\u5668\u4e2d\u8fd0\u884c\u7684 Task</li> </ul>"},{"location":"Spark/PySpark/#_1","title":"\u5e38\u7528\u7aef\u53e3","text":"<ul> <li>4040\uff1aApplication \u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\u4e34\u65f6\u7ed1\u5b9a\u7684\u7aef\u53e3\uff0c\u7528\u4e8e\u67e5\u770b\u5f53\u524d\u4efb\u52a1\u7684\u72b6\u6001\u30024040 \u88ab\u5360\u7528\u4f1a\u987a\u5ef6\u5230 4041\uff0c4042 \u7b49\uff0c4040 \u662f\u4e00\u4e2a\u4e34\u65f6\u7aef\u53e3,\u5f53\u524d\u7a0b\u5e8f\u8fd0\u884c\u5b8c\u6210\u540e, 4040 \u5c31\u4f1a\u88ab\u6ce8\u9500</li> <li>8080\uff1a\u9ed8\u8ba4\u662f StandAlone \u6a21\u5f0f\u4e0b, Master \u89d2\u8272(\u8fdb\u7a0b)\u7684 WEB UI \u7aef\u53e3\uff0c\u7528\u4ee5\u67e5\u770b\u5f53\u524d Master(\u96c6\u7fa4)\u7684\u72b6\u6001</li> <li>18080\uff1a\u9ed8\u8ba4\u662f\u5386\u53f2\u670d\u52a1\u5668\u7684\u7aef\u53e3, \u7531\u4e8e\u6bcf\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u5b8c\u6210\u540e\uff0c4040 \u7aef\u53e3\u5c31\u88ab\u6ce8\u9500\u4e86\uff0c\u5728\u4ee5\u540e\u60f3\u56de\u770b\u67d0\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u72b6\u6001\u5c31\u53ef\u4ee5\u901a\u8fc7\u5386\u53f2\u670d\u52a1\u5668\u67e5\u770b</li> </ul>"},{"location":"Spark/PySpark/#spark-jobstagetask","title":"Spark \u7684 Job\u3001Stage\u3001Task","text":"<p>Spark Application \u7a0b\u5e8f\u8fd0\u884c\u65f6\u4e09\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1aJob\u3001Stage\u3001Task\uff0c\u8bf4\u660e\u5982\u4e0b\uff1a</p> <ul> <li>Job\uff1a\u7531\u591a\u4e2a Task \u7684\u5e76\u884c\u8ba1\u7b97\u90e8\u5206\uff0c\u4e00\u822c Spark \u4e2d\u7684 action \u64cd\u4f5c\uff08\u5982 save\u3001collect\uff09\uff0c\u4f1a   \u751f\u6210\u4e00\u4e2a Job\u3002</li> <li>Stage\uff1aJob \u7684\u7ec4\u6210\u5355\u4f4d\uff0c\u4e00\u4e2a Job \u4f1a\u5207\u5206\u6210\u591a\u4e2a Stage\uff0cStage \u5f7c\u6b64\u4e4b\u95f4\u76f8\u4e92\u4f9d\u8d56\u987a\u5e8f\u6267\u884c\uff0c\u800c\u6bcf\u4e2a Stage \u662f\u591a\u4e2a Task \u7684\u96c6\u5408\uff0c\u7c7b\u4f3c map \u548c reduce stage\u3002</li> <li>Task\uff1a\u88ab\u5206\u914d\u5230\u5404\u4e2a Executor \u7684\u5355\u4f4d\u5de5\u4f5c\u5185\u5bb9\uff0c\u5b83\u662f Spark \u4e2d\u7684\u6700\u5c0f\u6267\u884c\u5355\u4f4d\uff0c\u4e00\u822c\u6765\u8bf4\u6709\u591a\u5c11\u4e2a Paritition\uff08\u7269\u7406\u5c42\u9762\u7684\u6982\u5ff5\uff0c\u5373\u5206\u652f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c06\u6570\u636e\u5212\u5206\u6210\u4e0d\u540c\u90e8\u5206\u5e76\u884c\u5904\u7406\uff09\uff0c\u5c31\u4f1a\u6709\u591a\u5c11\u4e2a Task\uff0c\u6bcf\u4e2a Task \u53ea\u4f1a\u5904\u7406\u5355\u4e00\u5206\u652f\u4e0a\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"Spark/PySpark/#wordcount","title":"WordCount \u6848\u4f8b","text":"<pre><code># \u83b7\u53d6 SparkContext \u5bf9\u8c61\uff0c\u4f5c\u4e3a\u6267\u884c\u73af\u5883\u7684\u5165\u53e3\nconf = SparkConf().setMaster(\"local[*]\").setAppName(\"HelloWorld\")\nsc = SparkContext(conf=conf)\n\nfile_rdd = sc.textFile(\"data/words.txt\")\nrdd = ((((file_rdd\n            .flatMap(lambda line: line.split(\" \")))\n            .map(lambda word: (word, 1)))\n            .reduceByKey(lambda a, b: a + b))\n            .collect())\nprint(rdd)\n</code></pre> <ul> <li>SparkContext \u5bf9\u8c61\u7684\u6784\u5efa\uff0c\u4ee5\u53ca Spark \u7a0b\u5e8f\u7684\u9000\u51fa, \u7531 Driver \u8d1f\u8d23\u6267\u884c</li> <li>\u5177\u4f53\u7684\u6570\u636e\u5904\u7406\u6b65\u9aa4, \u7531 Executor \u6267\u884c</li> </ul> <p>\u5373\uff1a</p> <ul> <li>\u975e\u6570\u636e\u5904\u7406\u7684\u90e8\u5206\u7531 Driver \u8d1f\u8d23</li> <li>\u6570\u636e\u5904\u7406\u7684\u90e8\u5206\u7531 Executor \u8d1f\u8d23</li> </ul>"},{"location":"Spark/PySpark/#spark_4","title":"Spark \u7a0b\u5e8f\u6d41\u7a0b","text":"<ol> <li>Driver \u6784\u5efa SparkContext \u5bf9\u8c61\uff0c\u5e8f\u5217\u5316 SparkContext \u5bf9\u8c61\u53d1\u9001\u5230\u5404\u4e2a Executor</li> <li>Driver \u6784\u5efa Job \u5e76\u5212\u5206 Stage\uff0c\u5c06 Stage \u4ee5 TaskSet \u7684\u5f62\u5f0f\u53d1\u9001\u5230\u5404\u4e2a Executor</li> <li>Executor \u6839\u636e TaskSet \u4e2d\u7684 Task \u4fe1\u606f\uff0c\u542f\u52a8 Task \u5e76\u6267\u884c</li> <li>Task \u6267\u884c\u5b8c\u6bd5\uff0c\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9 Driver</li> <li>Driver \u5c06\u7ed3\u679c\u6c47\u603b\u540e\u8fd4\u56de\u7ed9\u7528\u6237</li> </ol>"},{"location":"Spark/PySpark/#python-on-spark","title":"Python on Spark \u6267\u884c\u539f\u7406","text":"<p>PySpark \u5b97\u65e8\u662f\u5728\u4e0d\u7834\u574f Spark \u5df2\u6709\u7684\u8fd0\u884c\u65f6\u67b6\u6784\uff0c\u5728 Spark \u67b6\u6784\u5916\u5c42\u5305\u88c5\u4e00\u5c42 Python API\uff0c\u501f\u52a9 Py4j \u5b9e\u73b0 Python \u548c Java \u7684\u4ea4\u4e92\uff0c\u8fdb\u800c\u5b9e\u73b0\u901a\u8fc7 Python \u7f16\u5199 Spark \u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u8fd0\u884c\u65f6\u67b6\u6784\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u5728 Driver \u7aef\uff0cPython \u7684 Driver \u4ee3\u7801\u7ffb\u8bd1\u6210 JVM \u4ee3\u7801\uff08Py4j\uff09\uff0c\u53d8\u6210 JVM Driver \u8fd0\u884c\u3002</p> <p>Driver \u7684\u64cd\u4f5c\u6307\u4ee4\u53d1\u9001\u7ed9 JVM Executor \u7aef\uff0cJVM Executor \u901a\u8fc7 PySpark \u5b88\u62a4\u8fdb\u7a0b\u5c06\u6307\u4ee4\u53d1\u9001\u7ed9\u8fd0\u884c\u7684 Python Executor \u8fdb\u7a0b\u4e0a\u8fd0\u884c\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>Driver \u7aef\u662f JVM Driver</li> <li>Executor \u7aef\u662f Python Executor</li> </ul> <p></p>"},{"location":"Spark/PySpark/#spark-core","title":"Spark Core","text":""},{"location":"Spark/PySpark/#rdd","title":"RDD","text":"<p>RDD(Resilient Distributed Dataset) \u53eb\u505a\u5f39\u6027\u5206\u5e03\u5f0f\u6570\u636e\u96c6\uff0c\u662f Spark \u4e2d\u6700\u57fa\u672c\u7684\u6570\u636e\u5904\u7406\u6a21\u578b\u3002\u4ee3\u7801\u4e2d\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u4ee3\u8868\u4e00\u4e2a\u5f39\u6027\u7684\u3001\u4e0d\u53ef\u53d8\u3001\u53ef\u5206\u533a\u3001\u91cc\u9762\u7684\u5143\u7d20\u53ef\u5e76\u884c\u8ba1\u7b97\u7684\u96c6\u5408\u3002</p> <p>\u5f39\u6027\uff1a</p> <ul> <li>\u5b58\u50a8\u7684\u5f39\u6027\uff1a\u5185\u5b58\u4e0e\u78c1\u76d8\u7684\u81ea\u52a8\u5207\u6362</li> <li>\u5206\u533a\u7684\u5f39\u6027\uff1a\u53ef\u6839\u636e\u9700\u8981\u91cd\u65b0\u5206\u533a</li> </ul> <p>\u5206\u5e03\u5f0f\uff1a\u6570\u636e\u5b58\u50a8\u5728\u5927\u6570\u636e\u96c6\u7fa4\u4e0d\u540c\u8282\u70b9\u4e0a</p> <p>\u6570\u636e\u96c6\uff1aRDD \u5c01\u88c5\u4e86\u8ba1\u7b97\u903b\u8f91\uff0c\u5e76\u4e0d\u4fdd\u5b58\u6570\u636e</p> <p>\u6570\u636e\u62bd\u8c61\uff1aRDD \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u9700\u8981\u5b50\u7c7b\u5177\u4f53\u5b9e\u73b0</p> <p>\u4e0d\u53ef\u53d8\uff1aRDD \u5c01\u88c5\u4e86\u8ba1\u7b97\u903b\u8f91\uff0c\u662f\u4e0d\u53ef\u4ee5\u6539\u53d8\u7684\u3002\u5982\u679c\u60f3\u8981\u6539\u53d8\uff0c\u53ea\u80fd\u4ea7\u751f\u65b0\u7684 RDD\uff0c\u5728\u65b0\u7684 RDD \u91cc\u9762\u5c01\u88c5\u8ba1\u7b97\u903b\u8f91</p> <p>\u53ef\u5206\u533a\u3001\u5e76\u884c\u8ba1\u7b97</p> <p>RDD \u7684\u6570\u636e\u53ea\u6709\u5728\u8c03\u7528 <code>collect()</code> \u65b9\u6cd5\u65f6\uff0c\u624d\u4f1a\u771f\u6b63\u6267\u884c\u4e1a\u52a1\u903b\u8f91\u64cd\u4f5c\uff0c\u4e4b\u524d\u7684\u5c01\u88c5\u5168\u90e8\u90fd\u662f\u529f\u80fd\u7684\u6269\u5c55\u3002\u7c7b\u4f3c\u4e8e Java \u4e2d\u7684 IO \u6d41\uff0c\u90fd\u7528\u5230\u4e86\u88c5\u9970\u8005\u8bbe\u8ba1\u6a21\u5f0f\u3002\u4f46\u662f RDD \u662f\u4e0d\u4fdd\u5b58\u6570\u636e\u7684\uff0cIO \u4f1a\u4fdd\u5b58\u4e00\u90e8\u5206\u6570\u636e\u3002</p>"},{"location":"Spark/PySpark/#rdd_1","title":"RDD \u7684\u6838\u5fc3\u5c5e\u6027/\u4e94\u5927\u7279\u6027","text":"<p>Internally, each RDD is characterized by five main properties:</p> <ul> <li>A list of partitions</li> <li>A function for computing each split</li> <li>A list of dependencies on other RDDs</li> <li>Optionally, a Partitioner for key-value RDDs (e.g. to say that the RDD is hash-partitioned)</li> <li>Optionally, a list of preferred locations to compute each split on (e.g. block locations for an HDFS file)</li> </ul> <p>\u7ffb\u8bd1\u8fc7\u540e\uff1a</p> <ul> <li>\u5206\u533a\u5217\u8868\uff1aRDD \u6570\u636e\u7ed3\u6784\u4e2d\u5b58\u5728\u5206\u533a\u5217\u8868\uff0c\u7528\u4e8e\u6267\u884c\u4efb\u52a1\u65f6\u5e76\u884c\u8ba1\u7b97\uff0c\u662f\u5b9e\u73b0\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u91cd\u8981\u5c5e\u6027\u3002</li> <li>\u5206\u533a\u8ba1\u7b97\u51fd\u6570\uff1aSpark \u5728\u8ba1\u7b97\u65f6\uff0c\u4f7f\u7528\u5206\u533a\u51fd\u6570\u5bf9\u6bcf\u4e00\u4e2a\u5206\u533a\u8fdb\u884c\u8ba1\u7b97\u3002</li> <li>RDD \u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff1aRDD \u662f\u8ba1\u7b97\u6a21\u578b\u7684\u5c01\u88c5\uff0c\u5f53\u9700\u6c42\u4e2d\u9700\u8981\u5c06\u591a\u4e2a\u8ba1\u7b97\u6a21\u578b\u8fdb\u884c\u7ec4\u5408\u65f6\uff0c\u5c31\u9700\u8981\u5c06\u591a\u4e2a RDD \u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\u3002</li> <li>\u5206\u533a\u5668 (\u53ef\u9009) \uff1a\u5f53\u6570\u636e\u4e3a KV \u7c7b\u578b\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5b9a\u5206\u533a\u5668\u81ea\u5b9a\u4e49\u6570\u636e\u7684\u5206\u533a\u3002</li> <li>\u9996\u9009\u4f4d\u7f6e (\u53ef\u9009)\uff1a\u8ba1\u7b97\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u8ba1\u7b97\u8282\u70b9\u7684\u72b6\u6001\u9009\u62e9\u4e0d\u540c\u7684\u8282\u70b9\u4f4d\u7f6e\u8fdb\u884c\u8ba1\u7b97\u3002\u5373\u5224\u65ad\u628a\u8ba1\u7b97\u53d1\u9001\u5230\u54ea\u4e2a\u8282\u70b9\u6548\u7387\u6700\u4f18\uff1a\u79fb\u52a8\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u79fb\u52a8\u6570\u636e\u3002</li> </ul> <p>\u7279\u6027\u4e00\uff1aRDD \u662f\u6709\u5206\u533a\u7684</p> <pre><code>rdd = sc.parallelize([1, 2, 3, 4, 5, 6, 7, 8, 9], 3)\nprint(rdd.glom().collect())\n# [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n</code></pre> <p>\u7279\u6027\u4e8c\uff1aRDD \u7684\u8ba1\u7b97\u51fd\u6570\u4f1a\u4f5c\u7528\u5728\u6bcf\u4e00\u4e2a\u5206\u533a\u4e0a</p> <pre><code>rdd = sc.parallelize([1, 2, 3, 4, 5, 6, 7, 8, 9], 3).map(lambda x: x * 2)\nprint(rdd.glom().collect())\n# [[2, 4, 6], [8, 10, 12], [14, 16, 18]]\n</code></pre> <p>\u7279\u6027\u4e09\uff1aRDD \u4e4b\u95f4\u6709\u4f9d\u8d56\u5173\u7cfb\uff08\u8840\u7f18\u5173\u7cfb\uff09</p> <pre><code>rdd1 = sc.textFile(\"data/words.txt\")\nrdd2 = rdd1.flatMap(lambda line: line.split(\" \"))\nrdd3 = rdd2.map(lambda word: (word, 1))\nrdd4 = rdd3.reduceByKey(lambda a, b: a + b)\nprint(rdd4.collect())\n\n# \u8840\u7f18\u5173\u7cfb\uff1ardd1 -&gt; rdd2 -&gt; rdd3 -&gt; rdd4\n</code></pre> <p>\u7279\u6027\u56db\uff1aKV \u578b\u7684 RDD \u53ef\u4ee5\u81ea\u5b9a\u4e49\u6570\u636e\u7684\u5206\u533a</p> <p>KV \u578b\u7684\u6570\u636e\uff1a\u5982\u4e8c\u5143\u7ec4 <code>(\"hello\", 1)</code></p> <p>\u9ed8\u8ba4\u5206\u533a\u5668\uff1aHash \u5206\u533a\u5668\uff0c\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e\u4e00\u4e2a\u5206\u533a\u5668\uff08rdd.partitionBy\uff09</p> <p>\u7279\u6027\u4e94\uff1aRDD \u7684\u5206\u533a\u89c4\u5212\uff0c\u4f1a\u5c3d\u91cf\u9760\u8fd1\u6570\u636e\u6240\u5728\u7684\u670d\u52a1\u5668</p> <p>Spark \u4f1a\u5728\u786e\u4fdd\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u672c\u5730\u8bfb\u53d6\uff0c\u907f\u514d\u7f51\u7edc\u4f20\u8f93\u3002</p> <p></p>"},{"location":"Spark/PySpark/#rdd_2","title":"RDD \u7684\u6267\u884c\u539f\u7406","text":"<p>\u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6\u6765\u8bb2\uff0c\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u9700\u8981\u8ba1\u7b97\u8d44\u6e90 (\u5185\u5b58 &amp; CPU) \u548c\u8ba1\u7b97\u6a21\u578b (\u903b\u8f91)\u3002\u6267\u884c\u65f6\uff0c\u9700\u8981\u5c06\u8ba1\u7b97\u8d44\u6e90\u548c\u8ba1\u7b97\u6a21\u578b\u8fdb\u884c\u534f\u8c03\u548c\u6574\u5408\u3002</p> <p>Spark \u6846\u67b6\u5728\u6267\u884c\u65f6\uff0c\u5148\u7533\u8bf7\u8d44\u6e90\uff0c\u7136\u540e\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u5904\u7406\u903b\u8f91\u5206\u89e3\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u7136\u540e==\u5c06\u4efb\u52a1\u53d1\u5230\u5df2\u7ecf\u5206\u914d\u8d44\u6e90\u7684\u8ba1\u7b97\u8282\u70b9\u4e0a==\uff0c\u6309\u7167\u6307\u5b9a\u7684\u8ba1\u7b97\u6a21\u578b\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff0c\u6700\u540e\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p></p> <p></p> <p>\u4ece\u4ee5\u4e0a\u6d41\u7a0b\u53ef\u4ee5\u770b\u51fa RDD \u5728\u6574\u4e2a\u6d41\u7a0b\u4e2d\u4e3b\u8981\u7528\u4e8e\u5c06\u903b\u8f91\u8fdb\u884c\u5c01\u88c5\uff0c\u5e76\u751f\u6210 Task \u53d1\u9001\u7ed9 Executor \u8282\u70b9\u6267\u884c\u8ba1\u7b97\u3002</p>"},{"location":"Spark/PySpark/#rdd_3","title":"RDD \u7684\u521b\u5efa","text":"<p>\u5728 Spark \u4e2d\u521b\u5efa RDD \u7684\u521b\u5efa\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u56db\u79cd\uff1a</p> <ul> <li>\u4ece\u96c6\u5408 (\u5185\u5b58) \u4e2d\u521b\u5efa RDD</li> <li>\u4ece\u5916\u90e8\u5b58\u50a8 (\u6587\u4ef6) \u521b\u5efa RDD</li> <li>\u4ece\u5176\u4ed6 RDD \u521b\u5efa</li> <li>\u76f4\u63a5\u521b\u5efa RDD(new)</li> </ul> <p>\u6211\u4eec\u5e38\u7528\u524d 2 \u79cd\u3002</p> <p>\u4ece\u5185\u5b58\u4e2d\u521b\u5efa\uff1a</p> <pre><code>rdd = sc.parallelize([1, 2, 3, 4, 5, 6, 7, 8, 9])\nprint(rdd.getNumPartitions()) # local[*] \u9ed8\u8ba4 CPU \u6838\u5fc3\u6570\n\nrdd = sc.parallelize([1, 2, 3, 4, 5, 6, 7, 8, 9], 3)\n# \u5c06 RDD \u4e2d\u6bcf\u4e2a\u5206\u533a\u7684\u6570\u636e\uff0c\u90fd\u53d1\u9001\u5230 Driver \u4e2d\uff0c\u5f62\u6210\u4e00\u4e2a Python List\nprint(rdd.collect())\n</code></pre> <p>\u4ece\u6587\u4ef6\u4e2d\u521b\u5efa\uff1a</p> <pre><code>rdd = sc.textFile(\"../data/words.txt\")\nprint(rdd.getNumPartitions())  # 2\uff0c\u4e0e\u6587\u4ef6\u5927\u5c0f\u6709\u5173\n\nrdd = sc.textFile(\"../data/words.txt\", 3)\nprint(rdd.getNumPartitions())  # 3 \u53ea\u662f\u6700\u5c0f\u5206\u533a\u6570\uff0c\u5b9e\u9645\u5206\u533a\u6570\u7531\u6587\u4ef6\u5927\u5c0f\u51b3\u5b9a\n\n# \u5982\u679c\u5c0f\u6587\u4ef6\u5f88\u591a\uff0c\u53ef\u4ee5\u4f7f\u7528 sc.wholeTextFiles(\u6587\u4ef6\u5939) \u65b9\u6cd5\uff0c\u5c06\u591a\u4e2a\u5c0f\u6587\u4ef6\u5408\u5e76\u6210\u4e00\u4e2a\u5206\u533a\n</code></pre>"},{"location":"Spark/PySpark/#rdd_4","title":"RDD \u7b97\u5b50","text":"<p>RDD Programming Guide - Transformations</p> <p>RDD Programming Guide - Actions</p> <p>\u7b97\u5b50\uff1a\u5373 RDD \u7684\u65b9\u6cd5\u3002</p> <ul> <li>\u5206\u5e03\u5f0f\u96c6\u5408\u5bf9\u8c61\u4e0a\u7684 API \u79f0\u4e4b\u4e3a\u7b97\u5b50\u3002</li> <li>\u672c\u5730\u5bf9\u8c61\u7684 API \u79f0\u4e4b\u4e3a\u65b9\u6cd5\u3002</li> </ul> <p>RDD \u7b97\u5b50\u5206\u4e3a\u4e24\u5927\u7c7b\uff1aTransformation \u548c Action\u3002</p> <ul> <li>Transformation\uff1a\u8f6c\u6362\u7b97\u5b50\uff0c\u5c06\u539f\u6709 RDD \u8f6c\u6362\u4e3a\u65b0\u7684 RDD\uff0c\u61d2\u52a0\u8f7d\uff0c\u4e0d\u4f1a\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002</li> <li>Action\uff1a\u884c\u52a8\u7b97\u5b50\uff0c\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002</li> </ul>"},{"location":"Spark/PySpark/#rdd_5","title":"RDD \u7684\u6301\u4e45\u5316","text":"<p>RDD \u7684\u6570\u636e\u662f\u8fc7\u7a0b\u6570\u636e\uff0c\u4e0d\u662f\u7ed3\u679c\u6570\u636e\uff0c\u65b0\u7684 RDD \u751f\u6210\uff0c\u8001\u7684 RDD \u6d88\u5931\u3002\u6240\u4ee5\u5728\u4f7f\u7528 RDD \u65f6\uff0c\u53ef\u6309\u9700\u5c06 RDD \u7684\u6570\u636e\u6301\u4e45\u5316\u5230\u5185\u5b58\u6216\u8005\u78c1\u76d8\u4e2d\uff0c\u4ee5\u4fbf\u540e\u7eed\u4f7f\u7528\u3002</p> <pre><code>flowchart LR;\n    RDD1--&gt;RDD2--&gt;RDD3--&gt;RDD4--&gt;id1[\"collect()\"]\n    RDD3--&gt;RDD5--&gt;RDD6--&gt;id2[\"collect()\"]</code></pre> <p>\u5982\u4e0a\u56fe\uff0cRDD3 \u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u540e\uff0c\u5c31\u4ece\u5185\u5b58\u4e2d\u91ca\u653e\u4e86\uff0c\u7b2c\u4e8c\u6b21\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u57fa\u4e8e\u8840\u7f18\u5173\u7cfb\uff0c\u4ece RDD1 \u5f00\u59cb\u91cd\u65b0\u8ba1\u7b97\u3002\u6b64\u65f6\u53ef\u4ee5\u5c06 RDD3 \u6301\u4e45\u5316\u5230\u5185\u5b58\u4e2d\uff0c\u8fd9\u6837\u7b2c\u4e8c\u6b21\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u3002</p>"},{"location":"Spark/PySpark/#rdd_6","title":"RDD \u7f13\u5b58/\u6301\u4e45\u5316","text":"<ul> <li><code>rdd.cache()</code>\uff1a\u5c06 RDD \u6301\u4e45\u5316\u5230\u5185\u5b58\u4e2d</li> <li><code>rdd.persist()</code>\uff1a\u5c06 RDD \u6301\u4e45\u5316\u5230\u5185\u5b58\u6216\u78c1\u76d8\u4e2d</li> <li><code>rdd.unpersist()</code>\uff1a\u5c06 RDD \u4ece\u7f13\u5b58\u4e2d\u79fb\u9664</li> </ul> <p>\u7f13\u5b58\u5728\u8bbe\u8ba1\u4e0a\u662f\u8ba4\u4e3a\u6709\u4e22\u5931\u98ce\u9669\u7684\uff0c\u56e0\u6b64\uff0c\u7f13\u5b58\u4f1a\u4fdd\u7559 RDD \u4e4b\u95f4\u7684\u8840\u7f18\u5173\u7cfb\u3002\u7f13\u5b58\u5982\u679c\u4e22\u5931\uff0c\u5219\u53ef\u4ee5\u6309\u7167\u8840\u7f18\u5173\u7cfb\u91cd\u65b0\u8ba1\u7b97\u3002\u540c\u65f6\uff0c\u7f13\u5b58\u662f\u5206\u6563\u5b58\u50a8\u5728\u5404\u4e2a Executor \u4e0a\u7684\u3002</p> <pre><code>rdd.cache()\nrdd.persist(StorageLevel.MEMORY_ONLY)\nrdd.persist(StorageLevel.MEMORY_AND_DISK) # \u5148\u653e\u5185\u5b58\uff0c\u4e0d\u591f\u653e\u78c1\u76d8\nrdd.persist(StorageLevel.DISK_ONLY)\nrdd.persist(StorageLevel.DISK_ONLY_2) # 2 \u4ee3\u8868\u526f\u672c\u6570\nrdd.persist(StorageLevel.DISK_ONLY_3)\n</code></pre>"},{"location":"Spark/PySpark/#rdd-checkpoint","title":"RDD Checkpoint","text":"<p>\u6240\u8c13\u7684\u68c0\u67e5\u70b9\u5176\u5b9e\u5c31\u662f\u901a\u8fc7\u5c06 RDD \u4e2d\u95f4\u7ed3\u679c\u5199\u5165\u78c1\u76d8\u7531\u4e8e\u8840\u7f18\u4f9d\u8d56\u8fc7\u957f\u4f1a\u9020\u6210\u5bb9\u9519\u6210\u672c\u8fc7\u9ad8\uff0c\u8fd9\u6837\u5c31\u4e0d\u5982\u5728\u4e2d\u95f4\u9636\u6bb5\u505a\u68c0\u67e5\u70b9\u5bb9\u9519\uff0c\u5982\u679c\u68c0\u67e5\u70b9\u4e4b\u540e\u6709\u8282\u70b9\u51fa\u73b0\u95ee\u9898\uff0c\u53ef\u4ee5\u4ece\u68c0\u67e5\u70b9\u5f00\u59cb\u91cd\u505a\u8840\u7f18\uff0c\u51cf\u5c11\u4e86\u5f00\u9500\u3002</p> <p>RDD Checkpoint \u4e5f\u662f\u5c06 RDD \u8fdb\u884c\u6301\u4e45\u5316\uff0c\u4f46\u662f\u53ea\u652f\u6301\u786c\u76d8\u5b58\u50a8\u3002\u548c\u7f13\u5b58\u4e0d\u540c\uff0cCheckpoint \u88ab\u8ba4\u4e3a\u662f\u5b89\u5168\u7684\uff0c\u4f1a\u5207\u65ad RDD \u7684\u8840\u7f18\u5173\u7cfb\u3002</p> <p>\u6211\u4eec\u77e5\u9053\u7f13\u5b58\u662f\u5206\u6563\u5b58\u50a8\u5728\u5404\u4e2a Executor \u4e0a\u7684\uff0cCheckpoint \u662f\u6536\u96c6\u5404\u4e2a\u5206\u533a\u7684\u6570\u636e\uff0c\u96c6\u4e2d\u5b58\u50a8\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u662f HDFS\u3001\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7b49\u3002</p> <p>Cache VS Checkpoint</p> <ul> <li>Cache \u662f\u8f7b\u91cf\u5316\u4fdd\u5b58 RDD \u6570\u636e\uff0c\u5206\u6563\u5b58\u50a8\uff0c\u53ef\u6301\u4e45\u5316\u5230\u5185\u5b58\u6216\u78c1\u76d8\uff0c\u8bbe\u8ba1\u4e0a\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u4f1a\u4fdd\u7559 RDD \u8840\u7f18\u5173\u7cfb</li> <li>Checkpoint \u662f\u91cd\u91cf\u7ea7\u4fdd\u5b58 RDD \u6570\u636e\uff0c\u96c6\u4e2d\u5b58\u50a8\uff0c\u53ea\u80fd\u6301\u4e45\u5316\u5230\u78c1\u76d8\uff0c\u8bbe\u8ba1\u4e0a\u662f\u5b89\u5168\u7684\uff0c\u4f1a\u5207\u65ad RDD \u8840\u7f18\u5173\u7cfb</li> <li>Cache \u6027\u80fd\u66f4\u597d\uff0c\u56e0\u4e3a\u662f\u5206\u6563\u5b58\u50a8\uff0c\u5404\u4e2a Executor \u5e76\u884c\u6267\u884c\uff0c\u6548\u7387\u9ad8</li> <li>Checkpoint \u6027\u80fd\u8f83\u5dee\uff0c\u56e0\u4e3a\u662f\u96c6\u4e2d\u5b58\u50a8\uff0c\u9700\u8981\u5c06\u6570\u636e\u4ece\u5404\u4e2a Executor \u6536\u96c6\u5230 Driver</li> </ul>"},{"location":"Spark/PySpark/#_2","title":"\u5171\u4eab\u53d8\u91cf","text":""},{"location":"Spark/PySpark/#_3","title":"\u5e7f\u64ad\u53d8\u91cf","text":"<p>\u5e7f\u64ad\u53d8\u91cf\uff08Broadcast Variables\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u9ad8\u6548\u5206\u53d1\u8f83\u5927\u6570\u636e\u96c6\u7ed9\u6240\u6709\u5de5\u4f5c\u8282\u70b9\u7684\u673a\u5236\u3002\u5b83\u4eec\u53ef\u4ee5\u7528\u4e8e\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7f13\u5b58\u4e00\u4e2a\u53ea\u8bfb\u7684\u5927\u578b\u53d8\u91cf\uff0c\u4ee5\u4fbf\u5728\u5e76\u884c\u64cd\u4f5c\u4e2d\u5171\u4eab\u3002</p> <p>\u5e7f\u64ad\u53d8\u91cf\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f</p> <p>\u5206\u5e03\u5f0f\u96c6\u5408 RDD \u548c\u672c\u5730\u96c6\u5408\u8fdb\u884c\u5173\u8054\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u964d\u4f4e\u5185\u5b58\u5360\u7528\u5e76\u51cf\u5c11\u7f51\u7edc I/O\uff0c\u63d0\u9ad8\u6027\u80fd\u3002</p> <p>\u7531\u4e8e Executor \u662f\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u5185\u5404\u7ebf\u7a0b\u8d44\u6e90\u5171\u4eab\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u653e\u7f6e\u5728 Executor \u7684\u5185\u5b58\u4e2d\uff0c\u8fbe\u5230\u5171\u4eab\u7684\u76ee\u7684\u3002</p> <p>\u76f8\u6bd4\u4e8e\u95ed\u5305\u6570\u636e\u90fd\u662f\u4ee5 Task \u4e3a\u5355\u4f4d\u53d1\u9001\u7684\uff0c\u6bcf\u4e2a Task \u4e2d\u90fd\u5305\u542b\u95ed\u5305\u6570\u636e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e2a Executor \u4e2d\u542b\u6709\u5927\u91cf\u91cd\u590d\u7684\u6570\u636e\uff0c\u5360\u7528\u5927\u91cf\u7684\u5185\u5b58\u3002\u56e0\u6b64\uff0c\u5b8c\u5168\u53ef\u4ee5\u5c06\u4efb\u52a1\u4e2d\u7684\u95ed\u5305\u6570\u636e\u653e\u7f6e\u5728 Executor \u7684\u5185\u5b58\u4e2d\uff0c\u8fbe\u5230\u5171\u4eab\u7684\u76ee\u7684\u3002</p> <p></p> <pre><code>from pyspark import SparkConf, SparkContext\n\nconf = SparkConf().setAppName(\"BroadcastExample\").setMaster(\"local\")\nsc = SparkContext(conf=conf)\n\n# \u521b\u5efa\u8981\u5e7f\u64ad\u7684\u53d8\u91cf\nbroadcast_var = sc.broadcast([1, 2, 3, 4, 5])\n\n# \u5728\u5de5\u4f5c\u8282\u70b9\u4e0a\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf\nresult = sc.parallelize([2, 4, 6, 8, 10]).map(lambda x: x * sum(broadcast_var.value))\n\nresult.foreach(print)\n\nsc.stop()\n</code></pre>"},{"location":"Spark/PySpark/#_4","title":"\u7d2f\u52a0\u5668","text":"<p>\u7d2f\u52a0\u5668\u7528\u6765\u628a Executor \u7aef\u53d8\u91cf\u4fe1\u606f\u805a\u5408\u5230 Driver \u7aef\u3002\u5728 Driver \u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5728 Executor \u7aef\u7684\u6bcf\u4e2a Task \u90fd\u4f1a\u5f97\u5230\u8fd9\u4e2a\u53d8\u91cf\u7684\u4e00\u4efd\u65b0\u7684\u526f\u672c\uff0c\u6bcf\u4e2a task \u66f4\u65b0\u8fd9\u4e9b\u526f\u672c\u7684\u503c\u540e\uff0c \u4f20\u56de Driver \u7aef\u8fdb\u884c merge\u3002</p> <p>\u6ce8\u610f\uff1a\u5728\u8f6c\u6362\u7b97\u5b50\u4e2d\u8c03\u7528\u7d2f\u52a0\u5668\uff0c\u5982\u679c\u6ca1\u6709\u884c\u52a8\u7b97\u5b50\u7684\u8bdd\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6ca1\u6709\u6267\u884c\uff0c\u7d2f\u52a0\u5668\u7ed3\u679c\u4f1a\u4e0d\u6b63\u786e\u3002\u56e0\u6b64\u4e00\u822c\u60c5\u51b5\u4e0b\u7d2f\u52a0\u5668\u8981\u653e\u5728\u884c\u52a8\u7b97\u5b50\u4e2d\u4f7f\u7528\u3002\u540c\u65f6\u6ce8\u610f\uff0c\u5982\u679c\u4f7f\u7528\u7d2f\u52a0\u5668\u7684 RDD \u88ab\u591a\u6b21\u884c\u52a8\u7b97\u5b50\u4f7f\u7528\uff0c\u90a3\u4e48\u7d2f\u52a0\u5668\u4f1a\u88ab\u591a\u6b21\u8c03\u7528\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4ea7\u751f\u975e\u9884\u671f\u7684\u7ed3\u679c\uff08\u5efa\u8bae\u5728\u884c\u52a8\u7b97\u5b50\u524d <code>cache()</code>\uff09\u3002</p> <p>\u4e00\u4e9b\u601d\u8003\uff1a\u4e00\u4e9b\u7b80\u5355\u7684\u7edf\u8ba1\u7c7b\u7d2f\u52a0\u903b\u8f91\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u89e3\u51b3\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5168\u5c40\u5206\u5e03\u5f0f\u7684\u7d2f\u52a0\u5668\u907f\u514d shuffle\u3002</p> <p>\u7d2f\u52a0\u5668\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f</p> <p>\u5728\u5206\u5e03\u5f0f\u4ee3\u7801\u6267\u884c\u4e2d\uff0c\u8fdb\u884c\u5168\u5c40\u7d2f\u52a0\u3002</p> <p>\u5728 Apache Spark \u4e2d\uff0c\u7d2f\u52a0\u5668\uff08Accumulators\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5728\u5e76\u884c\u64cd\u4f5c\u4e2d\u805a\u5408\u503c\u7684\u7279\u6b8a\u53d8\u91cf\u3002\u5b83\u4eec\u7528\u4e8e\u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u4e2d\u6536\u96c6\u548c\u66f4\u65b0\u6570\u636e\u7684\u603b\u548c\u3001\u8ba1\u6570\u7b49\u805a\u5408\u7ed3\u679c\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7 Spark \u7684\u6267\u884c\u5f15\u64ce\u5728\u96c6\u7fa4\u4e0a\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\u3002</p> <p>\u7d2f\u52a0\u5668\u7684\u4e3b\u8981\u7279\u70b9\u662f\u5b83\u4eec\u53ea\u80fd\u901a\u8fc7\u5173\u8054\u548c\u4ea4\u6362\u64cd\u4f5c\u8fdb\u884c\u66f4\u65b0\uff0c\u5e76\u4e14\u53ea\u6709\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\u7684\u503c\u3002\u5de5\u4f5c\u8282\u70b9\u4e0a\u7684\u4efb\u52a1\u53ea\u80fd\u5bf9\u7d2f\u52a0\u5668\u8fdb\u884c\u589e\u52a0\u64cd\u4f5c\uff0c\u800c\u4e0d\u80fd\u8bfb\u53d6\u5176\u503c\u6216\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\u3002\u8fd9\u4f7f\u5f97\u7d2f\u52a0\u5668\u9002\u7528\u4e8e\u5728\u5e76\u884c\u8ba1\u7b97\u4e2d\u8fdb\u884c\u8ba1\u6570\u3001\u6c42\u548c\u3001\u5e73\u5747\u503c\u7b49\u805a\u5408\u64cd\u4f5c\u3002</p> <p>Spark \u4e2d\u7684\u7d2f\u52a0\u5668\u6709\u4e24\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>\u666e\u901a\u7d2f\u52a0\u5668\uff08Accumulator\uff09\uff1a\u666e\u901a\u7d2f\u52a0\u5668\u7528\u4e8e\u5bf9\u6570\u503c\u7c7b\u578b\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u4f8b\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570\u7b49\u3002\u53ef\u4ee5\u4f7f\u7528 <code>SparkContext</code> \u7684 <code>accumulator()</code> \u65b9\u6cd5\u521b\u5efa\u666e\u901a\u7d2f\u52a0\u5668\uff0c\u7136\u540e\u5728\u4efb\u52a1\u4e2d\u4f7f\u7528 <code>+=</code> \u8fd0\u7b97\u7b26\u5bf9\u5176\u8fdb\u884c\u589e\u52a0\u64cd\u4f5c\u3002</li> </ul> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u666e\u901a\u7d2f\u52a0\u5668\u5bf9 RDD \u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u6c42\u548c\uff1a</p> <pre><code>from pyspark import SparkConf, SparkContext\n\nconf = SparkConf().setAppName(\"AccumulatorExample\").setMaster(\"local\")\nsc = SparkContext(conf=conf)\n\n# \u521b\u5efa\u4e00\u4e2a\u666e\u901a\u7d2f\u52a0\u5668\nsum_accumulator = sc.accumulator(0)\n\n# \u5728\u4efb\u52a1\u4e2d\u4f7f\u7528\u7d2f\u52a0\u5668\u8fdb\u884c\u6c42\u548c\u64cd\u4f5c\ndef add_to_accumulator(x):\n    global sum_accumulator\n    sum_accumulator += x\n\nrdd = sc.parallelize([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2)\nrdd.foreach(add_to_accumulator)\n\nprint(\"Sum:\", sum_accumulator.value)\n\nsc.stop()\n</code></pre> <ul> <li>\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\uff08Custom Accumulator\uff09\uff1a\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u53ef\u4ee5\u7528\u4e8e\u66f4\u590d\u6742\u7684\u805a\u5408\u64cd\u4f5c\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32\u62fc\u63a5\u3001\u96c6\u5408\u64cd\u4f5c\u7b49\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f <code>AccumulatorParam</code> \u7c7b\uff0c\u5e76\u5b9e\u73b0 <code>zero()</code> \u548c <code>addInPlace()</code> \u65b9\u6cd5\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u3002</li> </ul> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u6765\u7edf\u8ba1 RDD \u4e2d\u4e0d\u540c\u5355\u8bcd\u7684\u6570\u91cf\uff1a</p> <pre><code>from pyspark import SparkConf, SparkContext\nfrom pyspark.accumulators import AccumulatorParam\n\nclass WordCountAccumulator(AccumulatorParam):\n    def zero(self, initialValue):\n        return {}\n\n    def addInPlace(self, v1, v2):\n        for word, count in v2.items():\n            v1[word] = v1.get(word, 0) + count\n        return v1\n\nconf = SparkConf().setAppName(\"CustomAccumulatorExample\").setMaster(\"local\")\nsc = SparkContext(conf=conf)\n\n# \u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\nword_count_accumulator = sc.accumulator({}, WordCountAccumulator())\n\n# \u5728\u4efb\u52a1\u4e2d\u4f7f\u7528\u7d2f\u52a0\u5668\u8fdb\u884c\u5355\u8bcd\u8ba1\u6570\ndef count_words(line):\n    global word_count_accumulator\n    words = line.split()\n    word_count = {}\n    for word in words:\n        word_count[word] = word_count.get(word, 0) + 1\n    word_count_accumulator += word_count\n\nrdd = sc.parallelize([\"Hello Spark\", \"Hello Accumulator\", \"Spark is powerful\"])\nrdd.foreach(count_words)\n\nprint(\"Word Count:\", word_count_accumulator.value)\n\nsc.stop()\n</code></pre>"},{"location":"Spark/PySpark/#_5","title":"\u5e7f\u64ad\u53d8\u91cf\u3001\u7d2f\u52a0\u5668\u6848\u4f8b","text":"<p>\u5728 <code>data/abnormal.txt</code> \u6587\u4ef6\u4e2d\uff0c\u6709\u4e00\u4e9b\u5355\u8bcd\u662f\u5f02\u5e38\u7684\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>     hadoop spark # hadoop spark\nmapreduce  !  spark spark hive !\nhive spark %\n, hdfs hive spark\n\n   #\n</code></pre> <p>\u73b0\u5728\u9700\u8981\u7edf\u8ba1\u51fa\u6587\u4ef6\u4e2d\u6b63\u5e38\u5355\u8bcd\u548c\u5f02\u5e38\u5355\u8bcd\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e7f\u64ad\u53d8\u91cf\u548c\u7d2f\u52a0\u5668\u6765\u5b9e\u73b0\u3002</p> <pre><code>from pyspark import SparkConf, SparkContext\nimport re\n\nconf = SparkConf().setAppName(\"AccumulatorExample\").setMaster(\"local\")\nsc = SparkContext(conf=conf)\n\nabnormal_chars = [\",\", \".\", \"!\", \"#\", \"$\", \"%\"]\n\n# \u5e7f\u64ad\u53d8\u91cf\nbroadcast = sc.broadcast(abnormal_chars)\n# \u7d2f\u52a0\u5668\naccumulator_abnormal = sc.accumulator(0)\naccumulator_normal = sc.accumulator(0)\n\n\ndef map_func(word):\n    global accumulator_abnormal, accumulator_normal\n    if word in broadcast.value:\n        accumulator_abnormal += 1\n    else:\n        accumulator_normal += 1\n\n\nrdd = (sc.textFile(\"data/abnormal.txt\")\n       .filter(lambda line: line.strip())  # \u53bb\u9664\u7a7a\u884c\n       .map(lambda x: x.strip())\n       .flatMap(lambda line: re.split(\"\\\\s+\", line))  # \u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\n       .map(map_func)\n       .collect())\n\nprint(\"abnormal: \", accumulator_abnormal.value)\nprint(\"normal: \", accumulator_normal.value)\n</code></pre>"},{"location":"Spark/PySpark/#spark_5","title":"Spark \u5185\u6838","text":""},{"location":"Spark/PySpark/#dag","title":"DAG","text":"<p>DAG \u8bb0\u5f55\u4e86 RDD \u7684\u8f6c\u6362\u8fc7\u7a0b\u548c\u4efb\u52a1\u7684\u9636\u6bb5\uff08stage\uff09\u3002</p> <p></p> <p>\u5e26\u5206\u533a\u5173\u7cfb\u7684 DAG\uff1a</p> <p></p> <p>1 \u4e2a Action \u7b97\u5b50\u4f1a\u751f\u6210 1 \u4e2a Job\uff0c1 \u4e2a Job \u4f1a\u751f\u6210 1 \u4e2a DAG\u3002</p> <p>RDD \u7684\u9636\u6bb5\u662f\u6839\u636e shuffle \u6765\u5212\u5206\u7684\u3002\u9636\u6bb5\u7684\u6570\u91cf = shuffle \u4f9d\u8d56\u7684\u6570\u91cf + 1\uff08ResultStage\uff09\u3002</p> <p>RDD \u4efb\u52a1\u5207\u5206\u4e2d\u95f4\u5206\u4e3a\uff1aApplication\u3001Job\u3001Stage \u548c Task\u3002</p> <ul> <li>Application\uff1a\u521d\u59cb\u5316\u4e00\u4e2a SparkContext \u5373\u751f\u6210\u4e00\u4e2a Application</li> <li>Job\uff1a\u4e00\u4e2a Action \u7b97\u5b50\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a Job</li> <li>Stage\uff1aStage \u7b49\u4e8e\u5bbd\u4f9d\u8d56 (ShuffleDependency) \u7684\u4e2a\u6570\u52a0 1</li> <li>Task\uff1a\u4e00\u4e2a Stage \u9636\u6bb5\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a RDD \u7684\u5206\u533a\u4e2a\u6570\u5c31\u662f Task \u7684\u4e2a\u6570</li> </ul> <p>Application -&gt; Job -&gt; Stage -&gt; Task \u6bcf\u4e00\u5c42\u90fd\u662f 1 \u5bf9 n \u7684\u5173\u7cfb\u3002</p>"},{"location":"Spark/PySpark/#_6","title":"\u5bbd\u7a84\u4f9d\u8d56","text":"<p>\u5982\u679c\u65b0\u7684 RDD \u7684\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\u4f9d\u8d56\u4e8e\u65e7\u7684 RDD \u7684\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\uff0c\u8fd9\u79cd\u4f9d\u8d56\u88ab\u79f0\u4e3a OneToOne \u4f9d\u8d56\uff0c\u4e5f\u53eb\u7a84\u4f9d\u8d56\u3002</p> <p>\u5982\u679c\u65b0\u7684 RDD \u7684\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\u4f9d\u8d56\u4e8e\u65e7\u7684 RDD \u7684\u591a\u4e2a\u5206\u533a\u7684\u6570\u636e\uff0c\u8fd9\u79cd\u4f9d\u8d56\u88ab\u79f0\u4e3a Shuffle \u4f9d\u8d56\uff0c\u4e5f\u53eb\u5bbd\u4f9d\u8d56\u3002</p> <ul> <li>\u7a84\u4f9d\u8d56\uff1a\u7a84\u4f9d\u8d56\u662f\u6307\u7236 RDD \u7684\u4e00\u4e2a\u5206\u533a\u6700\u591a\u88ab\u5b50 RDD \u7684\u4e00\u4e2a\u5206\u533a\u4f7f\u7528</li> <li>\u5bbd\u4f9d\u8d56\uff08Shuffle\uff09\uff1a\u5bbd\u4f9d\u8d56\u662f\u6307\u7236 RDD \u7684\u4e00\u4e2a\u5206\u533a\u88ab\u5b50 RDD \u7684\u591a\u4e2a\u5206\u533a\u4f7f\u7528</li> </ul> <p>Spark \u4f1a\u6839\u636e RDD \u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5c06 job \u5212\u5206\u4e3a\u4e0d\u540c\u7684 stage\uff0c\u4ece\u540e\u5f80\u524d\uff0c\u6bcf\u6b21\u9047\u5230\u5bbd\u4f9d\u8d56\u5c31\u4f1a\u5212\u5206\u4e00\u4e2a stage\u3002\u5728 stage \u7684\u5185\u90e8\uff0c\u4e00\u5b9a\u90fd\u662f\u7a84\u4f9d\u8d56\u3002</p> <p></p> <p>Spark \u662f\u600e\u4e48\u505a\u5185\u5b58\u8ba1\u7b97\u7684\uff1fDAG \u7684\u4f5c\u7528\uff1fStage \u9636\u6bb5\u5212\u5206\u7684\u4f5c\u7528\uff1f</p> <ol> <li>Spark \u4f1a\u4ea7\u751f DAG</li> <li>DAG \u4f1a\u57fa\u4e8e\u5206\u533a\u548c\u5bbd\u7a84\u4f9d\u8d56\u5173\u7cfb\u5212\u5206 Stage</li> <li>\u4e00\u4e2a Stage \u7684\u5185\u90e8\u90fd\u662f\u7a84\u4f9d\u8d56\uff0c\u7a84\u4f9d\u8d56\u5185\uff0c\u5982\u679c\u5f62\u6210\u524d\u540e 1:1 \u7684\u5173\u7cfb\uff0c\u5c31\u53ef\u4ee5\u4ea7\u751f\u8bb8\u591a\u5185\u5b58\u8fed\u4ee3\u8ba1\u7b97\u7684\u7ba1\u9053</li> <li>\u8fd9\u4e9b\u5185\u5b58\u8fed\u4ee3\u8ba1\u7b97\u7684\u7ba1\u9053\uff0c\u5c31\u662f\u4e00\u4e2a\u4e2a\u5177\u4f53\u7684 Task</li> <li>\u4e00\u4e2a Task \u662f\u4e00\u4e2a\u5177\u4f53\u7684\u7ebf\u7a0b\uff0c\u4efb\u52a1\u8dd1\u5728\u4e00\u4e2a\u7ebf\u7a0b\u5185\uff0c\u5c31\u662f\u8d70\u5185\u5b58\u8ba1\u7b97\u4e86</li> </ol>"},{"location":"Spark/PySpark/#spark_6","title":"Spark \u5e76\u884c\u5ea6","text":"<p>Spark \u5e76\u884c\u5ea6\u662f\u6307\u5728\u540c\u4e00\u65f6\u95f4\u5185\uff0c\u80fd\u591f\u5e76\u884c\u8ba1\u7b97\u7684\u4efb\u52a1\uff08Task\uff09\u6570\u91cf\u3002Spark \u5e76\u884c\u5ea6\u7684\u5927\u5c0f\u4f1a\u5f71\u54cd\u5206\u533a\u6570\u91cf\u3002\u6ce8\u610f\u662f\u5148\u6709\u5e76\u884c\u5ea6\uff0c\u7531\u5e76\u884c\u5ea6\u5bfc\u81f4\u7684\u5206\u533a\u89c4\u5212\u3002</p> <p>\u5168\u5c40\u5e76\u884c\u5ea6\u662f\u63a8\u8350\u8bbe\u7f6e\uff0c\u4e0d\u8981\u9488\u5bf9 RDD \u6539\u5206\u533a\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u5185\u5b58\u8fed\u4ee3\u7ba1\u9053\u7684\u6784\u5efa\uff0c\u6216\u8005\u4f1a\u4ea7\u751f\u989d\u5916\u7684 Shuffle\u3002</p> <p>Spark \u5e76\u884c\u5ea6\u901a\u5e38\u8bbe\u7f6e\u4e3a CPU \u603b\u6838\u5fc3\u6570\u7684 2~10 \u500d\u3002</p>"},{"location":"Spark/PySpark/#spark-sql","title":"Spark SQL","text":""},{"location":"Spark/PySpark/#dataframe-dataset","title":"DataFrame \u548c DataSet","text":"<p>SparkSQL \u7684\u6570\u636e\u62bd\u8c61\u4e3a\uff1aSchemaRDD\uff08\u5e9f\u5f03\uff09\u3001DataFrame\uff08Python\u3001R\u3001Java\u3001Scala\uff09\u3001DataSet\uff08Java\u3001Scala\uff09\u3002</p> <p>DataFrame \u540c\u6837\u662f\u5206\u5e03\u5f0f\u6570\u636e\u96c6\uff0c\u6709\u5206\u533a\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97\uff0c\u548c RDD \u4e0d\u540c\u7684\u662f\uff0cDataFrame \u4e2d\u5b58\u50a8\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ee5\u8868\u683c\u5f62\u5f0f\u7ec4\u7ec7\u7684\uff0c\u65b9\u4fbf\u8fdb\u884c SQL \u8ba1\u7b97\u3002</p> <p>DataFrame \u5bf9\u6bd4 DataSet \u57fa\u672c\u76f8\u540c\uff0c\u4e0d\u540c\u7684\u662f DataSet \u652f\u6301\u6cdb\u578b\u7279\u6027\uff0c\u53ef\u4ee5\u8ba9 Java\u3001Scala \u8bed\u8a00\u66f4\u597d\u7684\u5229\u7528\u3002</p> <p>\u5728\u7ed3\u6784\u5c42\u9762\uff1a</p> <ul> <li>StructType \u5bf9\u8c61\u63cf\u8ff0\u6574\u4e2a DataFrame \u7684\u8868\u7ed3\u6784</li> <li>StructField \u5bf9\u8c61\u63cf\u8ff0\u4e00\u4e2a\u5217\u7684\u4fe1\u606f</li> </ul> <p>\u5728\u6570\u636e\u5c42\u9762\uff1a</p> <ul> <li>Row \u5bf9\u8c61\u8bb0\u5f55\u4e00\u884c\u6570\u636e</li> <li>Column \u5bf9\u8c61\u8bb0\u5f55\u4e00\u5217\u6570\u636e\u5e76\u5305\u542b\u5217\u7684\u4fe1\u606f</li> </ul>"},{"location":"Spark/PySpark/#wordcount_1","title":"WordCount \u6848\u4f8b","text":"<pre><code>from pyspark.sql import SparkSession, functions as F\n\nspark = SparkSession.builder.appName(\"WordCount\").master(\"local[*]\").getOrCreate()\nsc = spark.sparkContext\n\n# SQL \u98ce\u683c\nrdd = (sc.textFile(\"data/words.txt\")\n       .flatMap(lambda x: x.split(\" \"))\n       .map(lambda x: [x]))\n\ndf = rdd.toDF([\"word\"])\n\ndf.createTempView(\"words\")\n\nspark.sql(\"\"\"select word, count(*) as count from words group by word order by count desc\"\"\").show()\n\n# DSL \u98ce\u683c\ndf = spark.read.format(\"text\").load(\"data/words.txt\")\n# text \u6587\u4ef6\u53ea\u6709\u4e00\u5217\uff0c\u5217\u540d\u4e3a value\ndf2 = df.withColumn(\"value\", F.explode(F.split(\"value\", \" \")))\ndf2.groupBy(\"value\").count().orderBy(\"count\", ascending=False).withColumnRenamed(\"value\", \"word\").show()\n</code></pre>"},{"location":"Spark/PySpark/#api","title":"\u6570\u636e\u6e05\u6d17 API","text":"<ul> <li><code>dropDuplicates()</code>\uff1a\u53bb\u91cd</li> <li><code>dropna()</code>\uff1a\u5220\u9664\u7a7a\u503c</li> <li><code>fillna()</code>\uff1a\u586b\u5145\u7a7a\u503c</li> <li><code>replace()</code>\uff1a\u66ff\u6362\u503c</li> </ul>"},{"location":"Spark/PySpark/#jdbc","title":"\u901a\u8fc7 JDBC \u8fde\u63a5\u6570\u636e\u5e93","text":"<p>\u9700\u8981\u5c06 <code>mysql-connector-java-8.0.26.jar</code> \u62f7\u8d1d\u5230\u865a\u62df\u73af\u5883\u4e2d <code>pyspark</code> \u7684\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 <code>jars</code> \u76ee\u5f55\u4e0b\u3002</p>"},{"location":"Spark/PySpark/#udf","title":"\u5b9a\u4e49 UDF","text":"<p>\u5728 PySpark \u4e2d\uff0c\u76ee\u524d\u53ea\u652f\u6301 UDF\uff0c\u4e0d\u652f\u6301 UDAF \u548c UDTF\u3002</p> <p>\u5b9a\u4e49\u65b9\u5f0f\uff1a</p> <ol> <li><code>sparksession.udf.register(\"udf_name\", udf_func, return_type)</code>\u3002\u6ce8\u518c\u7684 UDF \u53ef\u4ee5\u7528\u4e8e DSL \u548c SQL\uff0c\u8fd4\u56de\u503c\u7528\u4e8e DSL \u98ce\u683c\uff0c\u4f20\u53c2\u5185\u7ed9\u7684\u540d\u5b57\u7528\u4e8e SQL \u98ce\u683c\u3002</li> <li><code>pyspark.sql.functions.udf</code>\u3002\u4ec5\u80fd\u7528\u4e8e DSL \u98ce\u683c\u3002</li> </ol> <pre><code>from pyspark.sql import SparkSession\nfrom pyspark.sql.types import IntegerType\nfrom pyspark.sql import functions as F\n\nspark = SparkSession.builder.appName(\"test\").master(\"local[*]\").getOrCreate()\nsc = spark.sparkContext\n\nrdd = sc.parallelize(range(1, 11)).map(lambda x: [x])\ndf = rdd.toDF([\"num\"])\n\n# \u65b9\u5f0f\u4e00\nsquare_udf = spark.udf.register(\"square\", lambda x: x ** 2, IntegerType())\n\ndf.selectExpr(\"num\", \"square(num) as square\").show()\n\ndf.select(\"num\", square_udf(\"num\").alias(\"square\")).show()\n\n# \u65b9\u5f0f\u4e8c\ncube_udf = F.udf(lambda x: x ** 3, IntegerType())\ndf.select(\"num\", cube_udf(\"num\").alias(\"cube\")).show()\n</code></pre>"},{"location":"Spark/PySpark/#sparksql","title":"SparkSQL \u7684\u6267\u884c\u6d41\u7a0b","text":"<p>RDD \u7684\u6267\u884c\u6d41\u7a0b\u56de\u987e\uff1a</p> <pre><code>flowchart TD;\n    RDD--&gt;id1[\"DAG Scheduler\"]--&gt;id2[\"Task Scheduler\"]--&gt;id3[\"Worker\"]</code></pre> <p>SparkSQL \u4f1a\u5bf9\u4ee3\u7801\u8fdb\u884c\u81ea\u52a8\u4f18\u5316\uff0c\u4f9d\u8d56\u4e8e Catalyst \u4f18\u5316\u5668\u3002</p> <pre><code>flowchart LR;\n    API--&gt;Catalyst--&gt;RDD--&gt;Cluster</code></pre> <ol> <li>API \u5c42\u63a5\u6536 SQL \u8bed\u53e5</li> <li>Catalyst \u4f18\u5316\u5668\u5bf9 SQL \u8bed\u53e5\u8fdb\u884c\u4f18\u5316\uff0c\u89e3\u6790 SQL \u8bed\u53e5\uff0c\u751f\u6210\u903b\u8f91\u6267\u884c\u8ba1\u5212</li> <li>Catalyst \u7684\u8f93\u51fa\u662f RDD \u7684\u6267\u884c\u8ba1\u5212</li> <li>\u4ea4\u7ed9\u96c6\u7fa4\u8fd0\u884c</li> </ol> <p>Catalyst \u4f18\u5316\u5668\uff1a</p> <ol> <li>\u89e3\u6790 SQL \u8bed\u53e5\uff0c\u751f\u6210 AST\uff08\u62bd\u8c61\u8bed\u6cd5\u6811\uff09</li> <li>\u5728 AST \u4e2d\u52a0\u5165\u5143\u6570\u636e\u4fe1\u606f</li> <li>\u5bf9 AST \u8fdb\u884c\u4f18\u5316\uff08\u5982\u8c13\u8bcd\u4e0b\u63a8\u3001\u5217\u88c1\u526a\u7b49\uff09</li> <li>\u628a AST \u7ffb\u8bd1\u6210\u7269\u7406\u6267\u884c\u8ba1\u5212\uff0c\u5c06\u8ba1\u5212\u7ffb\u8bd1\u6210 RDD</li> </ol>"},{"location":"Spark/PySpark/#spark-shuffle","title":"Spark Shuffle","text":"<p>\u5728 Shuffle \u8fc7\u7a0b\u4e2d\uff0c\u63d0\u4f9b\u6570\u636e\u7684\u79f0\u4e4b\u4e3a Map \u7aef\uff08Shuffle Write\uff09\uff0c\u63a5\u6536\u6570\u636e\u7684\u79f0\u4e4b\u4e3a Reduce \u7aef\uff08Shuffle Read\uff09\u3002</p> <p>\u5728 Spark \u7684\u4e24\u4e2a\u9636\u6bb5\u4e2d\uff0c\u603b\u662f\u524d\u4e00\u4e2a\u9636\u6bb5\u4ea7\u751f\u4e00\u6279 Map \u63d0\u4f9b\u6570\u636e\uff0c\u4e0b\u4e00\u9636\u6bb5\u4ea7\u751f\u4e00\u6279 Reduce \u63a5\u6536\u6570\u636e\u3002</p> <p>Spark \u63d0\u4f9b 2 \u79cd Shuffle \u7ba1\u7406\u5668\uff1a</p> <ul> <li>HashShuffleManager</li> <li>SortShuffleManager</li> </ul>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/","title":"RDD \u7b97\u5b50 API","text":""},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#rdd","title":"RDD \u8f6c\u6362\u7b97\u5b50","text":"<p>RDD \u6839\u636e\u6570\u636e\u5904\u7406\u65b9\u5f0f\u7684\u4e0d\u540c\u5c06\u7b97\u5b50\u6574\u4f53\u4e0a\u5206\u4e3a Value \u7c7b\u578b\u3001\u53cc Value \u7c7b\u578b\u548c Key-Value \u7c7b\u578b\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#map","title":"map","text":"<p><code>map</code> \uff1a\u5c06\u5904\u7406\u7684\u6570\u636e\u9010\u6761\u8fdb\u884c\u6620\u5c04\u8f6c\u6362\uff0c\u8fd9\u91cc\u7684\u8f6c\u6362\u53ef\u4ee5\u662f\u7c7b\u578b\u7684\u8f6c\u6362\uff0c\u4e5f\u53ef\u4ee5\u662f\u503c\u7684\u8f6c\u6362\u3002</p> <pre><code>val rdd = sc.parallelize(List(1, 2, 3, 4, 5)).map(_ * 2)\nrdd.foreach(println)\n</code></pre> <p><code>map</code> \u5e76\u884c\u8ba1\u7b97\u6548\u679c\uff1a</p> <p>RDD \u7684\u8ba1\u7b97\uff1a\u4e00\u4e2a\u5206\u533a\u5185\u7684\u6570\u636e\u662f\u4e32\u884c\uff0c\u53ea\u6709\u524d\u9762\u4e00\u4e2a\u6570\u636e\u5168\u90e8\u7684\u903b\u8f91\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u624d\u4f1a\u6267\u884c\u4e0b\u4e00\u4e2a\u6570\u636e\u3002\u56e0\u6b64\uff0c\u5206\u533a\u5185\u6570\u636e\u7684\u6267\u884c\u662f\u6709\u5e8f\u7684\u3002\u4e0d\u540c\u5206\u533a\u662f\u5e76\u884c\u6267\u884c\uff0c\u56e0\u6b64\u987a\u5e8f\u4e0d\u5b9a\u3002</p> <pre><code>val rdd = sc.makeRDD(List(1, 2, 3, 4), 1)\nval mapRDD1 = rdd.map(num =&gt; {\n    println(\"&gt;&gt;&gt;&gt;&gt;&gt;&gt; \" + num)\n    num\n})\nval mapRDD2 = mapRDD1.map(num =&gt; {\n    println(\"####### \" + num)\n    num\n})\nmapRDD2.collect()\n</code></pre> <p>\u6267\u884c\u7ed3\u679c\uff1a</p> <pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 1\n####### 1\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 2\n####### 2\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 3\n####### 3\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 4\n####### 4\n</code></pre> <p>\u5982\u679c\u628a\u5206\u533a\u6570\u91cf\u8bbe\u7f6e\u4e3a 2\uff1a</p> <pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 3\n####### 3\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 1\n####### 1\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 4\n####### 4\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; 2\n####### 2\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#mappartitions","title":"mapPartitions","text":"<p>map \u7684\u8f93\u5165\u51fd\u6570\u5e94\u7528\u4e8e RDD \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u800c mapPartitions \u7684\u8f93\u5165\u51fd\u6570\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5206\u533a\u3002\u56e0\u6b64\uff0c\u5982\u679c RDD \u4e2d\u6709 N \u4e2a\u5143\u7d20\uff0c\u6709 M \u4e2a\u5206\u533a\uff0c\u90a3\u4e48 map \u7684\u51fd\u6570\u5c06\u88ab\u8c03\u7528 N \u6b21\uff0c\u800c mapPartitions \u51fd\u6570\u5c06\u88ab\u8c03\u7528 M \u6b21\uff0c\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u5904\u7406\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\u3002mapPartitions \u628a\u6bcf\u4e2a\u5206\u533a\u4e2d\u7684\u5185\u5bb9\u4f5c\u4e3a\u6574\u4f53\u6765\u5904\u7406\u7684\uff0c\u56e0\u6b64\u51cf\u5c11\u4e86\u603b\u7684\u5904\u7406\u6570\u636e\u7684\u6b21\u6570\u3002</p> <p></p> <p>\u8ba1\u7b97\u6bcf\u4e2a\u5206\u533a\u5947\u6570\u7684\u548c\u4e0e\u5076\u6570\u7684\u548c\uff1a</p> <pre><code>val rdd = sc.parallelize(1 to 9, 3).mapPartitions(iter =&gt; {\n  var result = List[Int]()\n  var odd = 0\n  var even = 0\n  while (iter.hasNext) {\n    val cur = iter.next()\n    if (cur % 2 == 0) {\n      even += cur\n    } else {\n      odd += cur\n    }\n  }\n  result = result :+ odd :+ even\n  result.iterator\n})\n\nrdd.glom().foreach(arr =&gt; {\n  println(arr.mkString(\",\"))\n})\n</code></pre> <p>\u6267\u884c\u7ed3\u679c\uff1a</p> <pre><code>4,2\n5,10\n16,8\n</code></pre> <p>mapPartitions \u66f4\u50cf\u662f\u8fc7\u7a0b\u5f0f\u7f16\u7a0b\uff0c\u7ed9\u5b9a\u4e86\u4e00\u7ec4\u6570\u636e\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u6301\u6709\u4e2d\u95f4\u5904\u7406\u7ed3\u679c\uff0c\u4e5f\u53ef\u4ee5\u8f93\u51fa\u4efb\u610f\u5927\u5c0f\u3001\u4efb\u610f\u7c7b\u578b\u7684\u4e00\u7ec4\u6570\u636e\u3002mapPartitions \u8fd8\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u6570\u636e\u5e93\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5728 mapPartitions \u4e2d\u5148\u5efa\u7acb\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u4e2a\u65b0\u6765\u7684\u6570\u636e <code>iter.next()</code> \u8f6c\u5316\u4e3a\u6570\u636e\u8868\u4e2d\u7684\u4e00\u884c\uff0c\u5e76\u63d2\u5165\u6570\u636e\u5e93\u4e2d\u3002\u7136\u800c map \u5e76\u4e0d\u80fd\u5b8c\u6210\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a map \u662f\u5bf9 RDD \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u6837\u4f1a\u9891\u7e41\u5efa\u7acb\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u6548\u7387\u4f4e\u4e0b\u3002</p> <p>mapPartitions \u53ef\u4ee5\u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u8fdb\u884c\u6570\u636e\u8f6c\u6362\u64cd\u4f5c\uff0c\u4f46\u662f\u4f1a\u5c06\u6574\u4e2a\u5206\u533a\u7684\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u8fdb\u884c\u5f15\u7528\uff0c\u5904\u7406\u5b8c\u7684\u6570\u636e\u662f\u4e0d\u4f1a\u88ab\u91ca\u653e\u7684\uff0c\u5b58\u5728\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u53ea\u6709\u7a0b\u5e8f\u7ed3\u675f\u624d\u4f1a\u91ca\u653e\u3002\u56e0\u6b64\u5728\u5185\u5b58\u8f83\u5c0f\u3001\u6570\u636e\u91cf\u8f83\u5927\u7684\u573a\u5408\u4e0b\uff0c\u5bb9\u6613\u5bfc\u81f4 OOM\u3002</p> <p> mapPartitions \u7684\u5c0f\u529f\u80fd\uff1a\u83b7\u53d6\u6bcf\u4e2a\u5206\u533a\u7684\u6700\u5927\u503c\u3002</p> <pre><code>val mpRDD = rdd.mapPartitions(\n  iter =&gt; {\n    List(iter.max).iterator\n  }\n)\n</code></pre> <p>map \u548c mapPartitions \u7684\u533a\u522b</p> <p>\u6570\u636e\u5904\u7406\u89d2\u5ea6\uff1a</p> <p>Map \u7b97\u5b50\u662f\u5206\u533a\u5185\u4e00\u4e2a\u6570\u636e\u4e00\u4e2a\u6570\u636e\u6267\u884c\uff0c\u7c7b\u4f3c\u4e8e\u4e32\u884c\u64cd\u4f5c\u3002\u800c mapPartitions \u7b97\u5b50\u662f\u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u8fdb\u884c\u6279\u5904\u7406\u64cd\u4f5c\u3002</p> <p>\u529f\u80fd\u7684\u89d2\u5ea6\uff1a</p> <p>Map \u7b97\u5b50\u4e3b\u8981\u76ee\u7684\u5c06\u6570\u636e\u6e90\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u8f6c\u6362\u548c\u6539\u53d8\u3002\u4f46\u662f\u4e0d\u4f1a\u51cf\u5c11\u6216\u589e\u591a\u6570\u636e\u3002MapPartitions \u7b97\u5b50\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6ca1\u6709\u8981\u6c42\u7684\u5143\u7d20\u7684\u4e2a\u6570\u4fdd\u6301\u4e0d\u53d8\uff0c \u6240\u4ee5\u53ef\u4ee5\u589e\u52a0\u6216\u51cf\u5c11\u6570\u636e\u3002</p> <p>\u6027\u80fd\u7684\u89d2\u5ea6\uff1a</p> <p>Map \u7b97\u5b50\u56e0\u4e3a\u7c7b\u4f3c\u4e8e\u4e32\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u6027\u80fd\u6bd4\u8f83\u4f4e\uff0c\u800c\u662f mapPartitions \u7b97\u5b50\u7c7b\u4f3c\u4e8e\u6279\u5904\u7406\uff0c\u6240\u4ee5\u6027\u80fd\u8f83\u9ad8\u3002\u4f46\u662f mapPartitions \u7b97\u5b50\u4f1a\u957f\u65f6\u95f4\u5360\u7528\u5185\u5b58\uff0c\u90a3\u4e48\u8fd9\u6837\u4f1a\u5bfc\u81f4 OOM \u9519\u8bef\u3002\u6240\u4ee5\u5728\u5185\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#mappartitionswithindex","title":"mapPartitionsWithIndex","text":"<p>\u6709\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u67d0\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u90a3\u6211\u4eec\u5982\u4f55\u77e5\u9053\u5f53\u524d\u5904\u7406\u7684\u662f\u54ea\u4e2a\u5206\u533a\u5462\uff1f\u901a\u8fc7 <code>mapPartitionsWithIndex</code> \u5373\u53ef\u3002</p> <p>\u5c06\u5f85\u5904\u7406\u7684\u6570\u636e\u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u53d1\u9001\u5230\u8ba1\u7b97\u8282\u70b9\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u91cc\u7684\u5904\u7406\u662f\u6307\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u7684\u5904\u7406\uff0c\u54ea\u6015\u662f\u8fc7\u6ee4\u6570\u636e\uff0c\u5728\u5904\u7406\u65f6\u540c\u65f6\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u5206\u533a\u7d22\u5f15\u3002</p> <pre><code>val dataRDD1 = rdd.mapPartitionsWithIndex(\n  (index, iter) =&gt; {\n    if (index == 1) {\n      iter\n    } else {\n      Nil.iterator\n    }\n  }\n)\nval dataRDD1 = rdd.mapPartitionsWithIndex(\n  (index, iter) =&gt; {\n    iter.map(\n      num =&gt; {\n        (index, num)\n      }\n    )\n  }\n)\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#flatmap","title":"flatMap","text":"<p>\u5c06\u5904\u7406\u7684\u6570\u636e\u8fdb\u884c\u6241\u5e73\u5316\u540e\u518d\u8fdb\u884c\u6620\u5c04\u5904\u7406\uff0c\u6240\u4ee5\u4e5f\u88ab\u79f0\u4e3a\u6241\u5e73\u6620\u5c04\u3002\u53c2\u6570\u662f map \u51fd\u6570\u3002</p> <pre><code>val rdd = sc.parallelize(List(List(1, 2), List(3, 4), List(5, 6))).flatMap(x =&gt; x)\nrdd.foreach(println)\n</code></pre> <pre><code>// \u5148\u5c06 5 \u8f6c\u5316\u4e3a List(5)\uff0c\u7136\u540e\u518d\u8fdb\u884c flatMap\nval rdd = sc.parallelize(List(List(1, 2), List(3, 4), 5)).flatMap(x =&gt; {\n  x match {\n    case list: List[Int] =&gt; list\n    case num: Int =&gt; List(num)\n  }\n})\nrdd.foreach(println)\n\n// \u7b49\u4ef7\u4e8e\nval rdd = sc.parallelize(List(List(1, 2), List(3, 4), 5)).flatMap {\n  case list: List[Int] =&gt; list\n  case num: Int =&gt; List(num)\n}\nrdd.foreach(println)\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#glom","title":"glom","text":"<p>\u5c06 RDD \u4e2d\u6bcf\u4e2a\u5206\u533a\u7684\u6570\u636e\u5408\u5e76\u5230\u4e00\u4e2a list \u4e2d\u3002</p> <pre><code>val rdd: RDD[Int] = sc.makeRDD(List(1, 2, 3, 4), 2)\nval glomRDD: RDD[Array[Int]] = rdd.glom()\nglomRDD.foreach(data =&gt; println(data.mkString(\",\")))\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>1,2\n3,4\n</code></pre> <p> \u5c0f\u529f\u80fd\uff1a\u8ba1\u7b97\u6240\u6709\u5206\u533a\u6700\u5927\u503c\u6c42\u548c\uff08\u5206\u533a\u5185\u53d6\u6700\u5927\u503c\uff0c\u5206\u533a\u95f4\u6700\u5927\u503c\u6c42\u548c\uff09</p> <pre><code>val rdd = sc.makeRDD(List(1, 2, 3, 4), 2)\nval glomRDD: RDD[Array[Int]] = rdd.glom()\nval maxRDD = glomRDD.map(array =&gt; array.max)\nprintln(maxRDD.collect().sum)\n</code></pre> <pre><code>val rdd = sc.makeRDD(1 to 10, 2)\nval sum = rdd.mapPartitions(iter =&gt; {\n  List(iter.max).iterator\n}).collect().sum\nprintln(sum)\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#groupby","title":"groupBy","text":"<p>\u5c06\u6570\u636e\u6839\u636e\u6307\u5b9a\u7684\u89c4\u5219\u8fdb\u884c\u5206\u7ec4\uff0c\u5206\u533a\u6570\u91cf\u4e0d\u4f1a\u53d8\uff0c\u4f46\u662f\u6570\u636e\u4f1a\u88ab\u6253\u4e71\uff0c\u7136\u540e\u91cd\u65b0\u7ec4\u5408\uff0c\u6211\u4eec\u5c06\u8fd9\u6837\u7684\u64cd\u4f5c\u79f0\u4e4b\u4e3a shuffle\u3002</p> <p>\u6781\u9650\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u53ef\u80fd\u88ab\u5206\u5728\u540c\u4e00\u4e2a\u5206\u533a\u4e2d\u3002</p> <p>\u4e00\u4e2a\u7ec4\u7684\u6570\u636e\u5728\u4e00\u4e2a\u5206\u533a\u4e2d\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u8bf4\u4e00\u4e2a\u5206\u533a\u4e2d\u53ea\u6709\u4e00\u4e2a\u7ec4\u3002\u591a\u4e2a\u7ec4\u662f\u6709\u53ef\u80fd\u653e\u5728\u540c\u4e00\u4e2a\u5206\u533a\u7684\u3002</p> <pre><code>val rdd = sc.makeRDD(List(1, 2, 3, 4), 2)\nval groupRDD = rdd.groupBy(x =&gt; x % 2)\ngroupRDD.foreach(println)\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>(0,CompactBuffer(2, 4))\n(1,CompactBuffer(1, 3))\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#filter","title":"filter","text":"<p>\u5c06\u6570\u636e\u6839\u636e\u6307\u5b9a\u7684\u89c4\u5219\u8fdb\u884c\u7b5b\u9009\u8fc7\u6ee4\uff0c\u7b26\u5408\u89c4\u5219\u7684\u6570\u636e\u4fdd\u7559\uff0c\u4e0d\u7b26\u5408\u89c4\u5219\u7684\u6570\u636e\u4e22\u5f03\u3002</p> <p>\u5f53\u6570\u636e\u8fdb\u884c\u7b5b\u9009\u8fc7\u6ee4\u540e\uff0c\u5206\u533a\u4e0d\u53d8\uff0c\u4f46\u662f\u5206\u533a\u5185\u7684\u6570\u636e\u53ef\u80fd\u4e0d\u5747\u8861\uff0c\u751f\u4ea7\u73af\u5883\u4e0b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6570\u636e\u503e\u659c\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#sample","title":"sample","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def sample(\n  withReplacement: Boolean,\n  fraction: Double,\n  seed: Long = Utils.random.nextLong): RDD[T]\n</code></pre> <p>\u6839\u636e\u6307\u5b9a\u7684\u89c4\u5219\u4ece\u6570\u636e\u96c6\u4e2d\u62bd\u53d6\u6570\u636e\uff0c\u5e38\u7528\u4e8e\u5224\u65ad\u6570\u636e\u503e\u659c\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#distinct","title":"distinct","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def distinct()(implicit ord: Ordering[T] = null): RDD[T]\ndef distinct(numPartitions: Int)(implicit ord: Ordering[T] = null): RDD[T]\n</code></pre> <p>\u5e95\u5c42\u901a\u8fc7 <code>reduceByKey</code> \u5b9e\u73b0\uff1a</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u901a\u8fc7 <code>map(x =&gt; (x, null)).reduceByKey((x, _) =&gt; x, numPartitions).map(_._1)</code> \u5b9e\u73b0\u7684\u3002</p> <p>\u5373\uff1a</p> <pre><code>List(1, 2, 1, 2)\n((1, null), (2, null), (1, null), (2, null)) =&gt; ((1, null), (2, null)) =&gt; (1, 2)\n</code></pre> <pre><code>def distinct(numPartitions: Int)(implicit ord: Ordering[T] = null): RDD[T] = withScope {\n  def removeDuplicatesInPartition(partition: Iterator[T]): Iterator[T] = {\n    // Create an instance of external append only map which ignores values.\n    val map = new ExternalAppendOnlyMap[T, Null, Null](\n      createCombiner = _ =&gt; null,\n      mergeValue = (a, b) =&gt; a,\n      mergeCombiners = (a, b) =&gt; a)\n    map.insertAll(partition.map(_ -&gt; null))\n    map.iterator.map(_._1)\n  }\n\n  partitioner match {\n    case Some(_) if numPartitions == partitions.length =&gt;\n      mapPartitions(removeDuplicatesInPartition, preservesPartitioning = true)\n    case _ =&gt; map(x =&gt; (x, null)).reduceByKey((x, _) =&gt; x, numPartitions).map(_._1)\n  }\n}\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#coalesce","title":"coalesce","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>coalesce(numPartitions: Int, shuffle: Boolean = false)(implicit ord: Ordering[T] = null): RDD[T]\n</code></pre> <p>\u6839\u636e\u6570\u636e\u91cf\u7f29\u51cf\u5206\u533a\uff0c\u7528\u4e8e\u5927\u6570\u636e\u96c6\u8fc7\u6ee4\u540e\uff0c\u63d0\u9ad8\u5c0f\u6570\u636e\u96c6\u7684\u6267\u884c\u6548\u7387\u3002 \u5f53 spark \u7a0b\u5e8f\u4e2d\u5b58\u5728\u8fc7\u591a\u7684\u5c0f\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7 coalesce \u65b9\u6cd5\uff0c\u6536\u7f29\u5408\u5e76\u5206\u533a\uff0c\u51cf\u5c11\u5206\u533a\u7684\u4e2a\u6570\uff0c\u51cf\u5c0f\u4efb\u52a1\u8c03\u5ea6\u6210\u672c\u3002</p> <pre><code>val dataRDD = sc.makeRDD(List(1, 2, 3, 4, 5, 6), 3)\nval dataRDD1 = dataRDD.coalesce(2)\n</code></pre> <p> <code>coalesce</code> \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u5c06\u76f8\u90bb\u7684\u5206\u533a\u76f4\u63a5\u5408\u5e76\u5728\u4e00\u8d77\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cdataRDD \u6709 3 \u4e2a\u5206\u533a\uff0c\u6bcf\u4e2a\u5206\u533a\u5206\u522b\u662f (1,2), (3, 4), (5, 6)\uff0c\u4f46\u662f <code>coalesce</code> \u4e4b\u540e dataRDD1 \u4e2d 2 \u4e2a\u5206\u533a\u53d8\u6210 (1, 2), (3, 4, 5, 6)\uff0c\u4e5f\u5c31\u5bb9\u6613\u5bfc\u81f4\u6570\u636e\u503e\u659c\u3002</p> <p>\u5982\u679c\u60f3\u8ba9\u6570\u636e\u5747\u8861\uff0c\u53ef\u4ee5\u8fdb\u884c shuffle \u5904\u7406\u3002</p> <p>\u5982\u679c\u60f3\u8981\u6269\u5927\u5206\u533a\u8be5\u600e\u4e48\u505a\uff1f</p> <p>coalesce \u7b97\u5b50\u53ef\u4ee5\u6269\u5927\u5206\u533a\uff0c\u4f46\u662f\u5fc5\u987b\u8fdb\u884c shuffle \u64cd\u4f5c\u3002\u4f46\u662f\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 repartition \u7b97\u5b50\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#repartition","title":"repartition","text":"<p>\u8bed\u4e49\u4e0e <code>coalesce(numPartitions, shuffle = true)</code> \u76f8\u540c\u3002</p> <p>\u8be5\u64cd\u4f5c\u5185\u90e8\u5176\u5b9e\u6267\u884c\u7684\u662f coalesce \u64cd\u4f5c\uff0c\u53c2\u6570 shuffle \u7684\u9ed8\u8ba4\u503c\u4e3a true\u3002\u65e0\u8bba\u662f\u5c06\u5206\u533a\u6570\u591a\u7684 RDD \u8f6c\u6362\u4e3a\u5206\u533a\u6570\u5c11\u7684 RDD\uff0c\u8fd8\u662f\u5c06\u5206\u533a\u6570\u5c11\u7684 RDD \u8f6c\u6362\u4e3a\u5206\u533a\u6570\u591a\u7684 RDD\uff0crepartition \u64cd\u4f5c\u90fd\u53ef\u4ee5\u5b8c\u6210\uff0c\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u7ecf\u8fc7 shuffle \u8fc7\u7a0b\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#sortby","title":"sortBy","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def sortBy[K](\n  f: (T) =&gt; K,\n  ascending: Boolean = true,\n  numPartitions: Int = this.partitions.length)\n  (implicit ord: Ordering[K], ctag: ClassTag[K]): RDD[T]\n</code></pre> <p>\u8be5\u64cd\u4f5c\u7528\u4e8e\u6392\u5e8f\u6570\u636e\u3002\u5728\u6392\u5e8f\u4e4b\u524d\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u901a\u8fc7 f \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u4e4b\u540e\u6309\u7167 f \u51fd\u6570\u5904\u7406\u7684\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\uff0c\u9ed8\u8ba4\u4e3a\u5347\u5e8f\u6392\u5217\u3002\u6392\u5e8f\u540e\u65b0\u4ea7\u751f\u7684 RDD \u7684\u5206\u533a\u6570\u4e0e\u539f RDD \u7684\u5206\u533a\u6570\u4e00\u81f4\u3002\u4e2d\u95f4\u5b58\u5728 shuffle \u7684\u8fc7\u7a0b\u3002</p> <pre><code>val rdd = sc.makeRDD(List((\"e\", 5), (\"e\", 4), (\"e\", 1), (\"a\", 1), (\"b\", 2), (\"c\", -3), (\"d\", 4)))\nrdd.sortBy(tuple =&gt; (tuple._1, -tuple._2)).collect().foreach(println)\n</code></pre> <pre><code>(a,1)\n(b,2)\n(c,-3)\n(d,4)\n(e,5)\n(e,4)\n(e,1)\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#partitionby","title":"partitionBy","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def partitionBy(partitioner: Partitioner): RDD[(K, V)]\n</code></pre> <p>\u5c06 (k, v) \u7c7b\u578b\u6570\u636e\u6309\u7167\u6307\u5b9a Partitioner \u91cd\u65b0\u8fdb\u884c\u5206\u533a\u3002Spark \u9ed8\u8ba4\u7684\u5206\u533a\u5668\u662f HashPartitioner\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u662f RDD \u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u4f46\u662f RDD \u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5e95\u5c42\u539f\u7406\u662f Scala \u7684\u9690\u5f0f\u8f6c\u6362\uff08\u4e8c\u6b21\u7f16\u8bd1\uff09\u3002</p> <pre><code>val rdd: RDD[(Int, String)] =\n   sc.makeRDD(Array((1,\"aaa\"),(2,\"bbb\"),(3,\"ccc\")),3)\nimport org.apache.spark.HashPartitioner\nval rdd2: RDD[(Int, String)] =\n   rdd.partitionBy(new HashPartitioner(2))\n</code></pre> <p>paritionBy \u548c repartition \u7684\u533a\u522b\uff1f</p> <p>\u5728 Spark \u4e2d\uff0c<code>repartition</code> \u548c <code>partitionBy</code> \u90fd\u662f\u91cd\u65b0\u5206\u533a\u7684\u7b97\u5b50\uff0c\u5176\u4e2d <code>partitionBy</code> \u53ea\u80fd\u4f5c\u7528\u4e8e PairRDD (K, V)\u3002\u4f46\u662f\uff0c\u5f53\u4f5c\u7528\u4e8e PairRDD \u65f6\uff0c<code>repartition</code> \u548c <code>partitionBy</code> \u7684\u884c\u4e3a\u662f\u4e0d\u540c\u7684\u3002<code>repartition</code> \u662f\u628a\u6570\u636e\u968f\u673a\u6253\u6563\u5747\u5300\u5206\u5e03\u4e8e\u5404\u4e2a Partition\uff08\u76f4\u63a5\u5bf9\u6570\u636e\u8fdb\u884c shuffle\uff09\uff1b\u800c <code>partitionBy</code> \u5219\u5728\u53c2\u6570\u4e2d\u6307\u5b9a\u4e86 Partitioner\uff08\u9ed8\u8ba4 HashPartitioner\uff09\uff0c\u5c06\u6bcf\u4e2a (K,V) \u5bf9\u6309\u7167 K \u6839\u636e Partitioner \u8ba1\u7b97\u5f97\u5230\u5bf9\u5e94\u7684 Partition\u3002\u5728\u5408\u9002\u7684\u65f6\u5019\u4f7f\u7528 <code>partitionBy</code> \u53ef\u4ee5\u51cf\u5c11 shuffle \u6b21\u6570\uff0c\u63d0\u9ad8\u6548\u7387\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#groupbykey","title":"groupByKey","text":"<p>\u5c06\u6570\u636e\u6e90\u7684\u6570\u636e\u6839\u636e key \u5bf9 value \u8fdb\u884c\u5206\u7ec4\u3002reduceByKey = groupByKey + reduce\u3002</p> <p><code>groupByKey</code> \u548c <code>groupBy(_._1)</code> \u7684\u533a\u522b\u4e3b\u8981\u662f\u8fd4\u56de\u503c\u7c7b\u578b\u3002</p> <pre><code>val rdd = sc.makeRDD(List((\"a\", 1), (\"a\", 2), (\"a\", 3), (\"b\", 4)))\n\nval groupRDD: RDD[(String, Iterable[Int])] = rdd.groupByKey()\nval groupRDD1: RDD[(String, Iterable[(String, Int)])] = rdd.groupBy(_._1)\n</code></pre> <p>groupByKey \u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u4f1a\u751f\u6210\u4e0d\u540c\u7c7b\u578b\u7684 RDD \u548c\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\u3002\u5982\u679c RDD1 \u8c03\u7528 groupByKey \u751f\u6210 RDD2\uff0c\u90a3\u4e48 RDD2 \u7684\u7c7b\u578b\u548c\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\u5982\u4e0b\uff1a</p> <ul> <li>\u5982\u679c RDD1 \u548c RDD2 \u7684\u5206\u533a\u5668\u4e0d\u540c\uff0c\u4f1a\u4ea7\u751f Shuffle Dependency</li> <li>\u5982\u679c RDD1 \u548c RDD2 \u7684\u5206\u533a\u5668\u76f8\u540c\uff0c\u5e76\u4e14\u5206\u533a\u6570\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981 Shuffle Dependency</li> </ul> <p></p> <p><code>groupByKey</code> \u7531\u4e8e\u4f1a\u6839\u636e key \u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\uff0c\u56e0\u6b64\u53ef\u80fd\u5bfc\u81f4 shuffle \u8fc7\u7a0b\u4e2d\u4ea7\u751f\u5927\u91cf\u4e2d\u95f4\u6570\u636e\u3001\u5360\u7528\u5185\u5b58\u5927\uff0c\u5bb9\u6613\u5bfc\u81f4 OOM\u3002</p> <p>groupByKey \u548c reduceByKey \u7684\u533a\u522b\uff1f</p> <p>\u4ece\u529f\u80fd\u7684\u89d2\u5ea6\uff1a<code>reduceByKey</code> \u5176\u5b9e\u5305\u542b\u5206\u7ec4\u548c\u805a\u5408\u7684\u529f\u80fd\uff0c\u800c <code>groupByKey</code> \u53ea\u80fd\u5206\u7ec4\uff0c\u4e0d\u80fd\u805a\u5408\u3002</p> <p>\u4ece shuffle \u7684\u89d2\u5ea6\uff1a<code>reduceByKey</code> \u548c <code>groupByKey</code> \u7531\u4e8e\u5206\u7ec4\u90fd\u5b58\u5728 shuffle \u7684\u64cd\u4f5c\uff0c\u4f46\u662f <code>reduceByKey</code> \u53ef\u4ee5\u5728 shuffle \u524d\u5bf9\u5206\u533a\u5185\u76f8\u540c key \u7684\u6570\u636e\u8fdb\u884c\u9884\u805a\u5408 (combine) \u529f\u80fd\uff0c\u8fd9\u6837\u80fd\u591f\u51cf\u5c11\u843d\u76d8\u7684\u6570\u636e\u91cf\uff0c\u800c <code>groupByKey</code> \u53ea\u662f\u8fdb\u884c\u5206\u7ec4\uff0c\u4e0d\u5b58\u5728\u6570\u636e\u91cf\u51cf\u5c11\u7684\u95ee\u9898\uff0creduceByKey \u6027\u80fd\u6bd4\u8f83\u9ad8\u3002</p> <p></p> <p></p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#reducebykey","title":"reduceByKey","text":"<pre><code>def reduceByKey(func: (V, V) =&gt; V): RDD[(K, V)]\ndef reduceByKey(func: (V, V) =&gt; V, numPartitions: Int): RDD[(K, V)]\n</code></pre> <p>\u53ef\u4ee5\u5c06\u6570\u636e\u6309\u7167\u76f8\u540c\u7684 key \u5bf9 value \u8fdb\u884c\u805a\u5408\u3002\u5982\u679c Key \u7684\u6570\u636e\u53ea\u6709\u4e00\u4e2a\uff0c\u662f\u4e0d\u4f1a\u53c2\u4e0e\u8ba1\u7b97\u7684\u3002</p> <p><code>reduceByKey</code> \u8981\u6c42\u5206\u533a\u5185\uff08combine\uff09\u548c\u5206\u533a\u95f4\u7684\u805a\u5408\u89c4\u5219\u662f\u76f8\u540c\u7684\u3002\u5982\u679c\u5206\u533a\u5185\u548c\u5206\u533a\u95f4\u8981\u6309\u7167\u4e0d\u540c\u89c4\u5219\u8ba1\u7b97\uff0c\u5219\u8981\u4f7f\u7528 <code>aggregateByKey</code> \u3002\uff08\u5982\u5206\u533a\u5185\u6c42\u6700\u5927\u503c\uff0c\u5206\u533a\u95f4\u6c42\u548c\uff09</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#aggregatebykey","title":"aggregateByKey","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def aggregateByKey[U: ClassTag](zeroValue: U)(seqOp: (U, V) =&gt; U,\n  combOp: (U, U) =&gt; U): RDD[(K, U)]\n</code></pre> <p></p> <p>\u901a\u7528\u7248\u7684 <code>reduceByKey</code>\uff0c\u5c06\u6570\u636e\u6839\u636e\u4e0d\u540c\u7684\u89c4\u5219\u8fdb\u884c\u5206\u533a\u5185\u8ba1\u7b97\u548c\u5206\u533a\u95f4\u8ba1\u7b97\u3002</p> <p><code>aggregateByKey</code> \u5b58\u5728\u51fd\u6570\u67ef\u91cc\u5316\uff0c\u6709 2 \u4e2a\u53c2\u6570\u5217\u8868\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u5217\u8868 <code>zeroValue</code> \u8868\u793a\u521d\u59cb\u503c\uff0c\u4e3b\u8981\u7528\u4e8e\u78b0\u89c1\u7b2c\u4e00\u4e2a key \u7684\u65f6\u5019\u7528\u4e8e\u8ba1\u7b97</li> <li>\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5217\u8868</li> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570 <code>seqOp</code>\uff1a\u5206\u533a\u5185\u8ba1\u7b97\u89c4\u5219</li> <li>\u7b2c\u4e8c\u4e2a\u53c2\u6570 <code>combOp</code>\uff1a\u5206\u533a\u95f4\u8ba1\u7b97\u89c4\u5219</li> </ul> <pre><code>val rdd = sc.makeRDD(List(\n    (\"a\", 1), (\"a\", 2), (\"c\", 3),\n    (\"b\", 4), (\"c\", 5), (\"c\", 6)\n  ), 2)\n// 0:(\"a\",1),(\"a\",2),(\"c\",3) =&gt; (a,10)(c,10)\n            //   =&gt; (a,10)(b,10)(c,20)\n// 1:(\"b\",4),(\"c\",5),(\"c\",6) =&gt; (b,10)(c,10)\nval resultRDD = rdd.aggregateByKey(10)(\n  (x, y) =&gt; math.max(x, y),\n  (x, y) =&gt; x + y)\nresultRDD.collect().foreach(println)\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#combinebykey","title":"combineByKey","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def combineByKey[C](\n  createCombiner: V =&gt; C, // \u5c06\u76f8\u540ckey\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u8fdb\u884c\u7ed3\u6784\u7684\u8f6c\u6362\uff0c\u5b9e\u73b0\u64cd\u4f5c\n  mergeValue: (C, V) =&gt; C,  // \u5206\u533a\u5185\u7684\u8ba1\u7b97\u89c4\u5219\n  mergeCombiners: (C, C) =&gt; C): RDD[(K, C)] // \u5206\u533a\u95f4\u7684\u8ba1\u7b97\u89c4\u5219\n</code></pre> <p>combineByKey()\u662f\u4e00\u4e2a\u901a\u7528\u7684\u57fa\u7840\u805a\u5408\u64cd\u4f5c\u3002\u5e38\u7528\u7684\u805a\u5408\u64cd\u4f5c\uff0c\u5982 aggregateByKey()\u3001reduceByKey()\u90fd\u662f\u5229\u7528 combineByKey()\u5b9e\u73b0\u7684\u3002</p> <p>aggregateByKey() \u548c combineByKey() \u552f\u4e00\u7684\u533a\u522b\uff1acombineByKey() \u7684 createCombiner \u662f\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\uff0c\u800c aggregateByKey() \u7684 zeroValue \u662f\u4e00\u4e2a\u521d\u59cb\u503c\u3002\u6bd4\u5982\uff1acombineByKey() \u53ef\u4ee5\u6839\u636e\u6bcf\u4e2a record \u7684 Value \u503c\u4e3a\u6bcf\u4e2a record \u5b9a\u5236\u521d\u59cb\u503c\u3002</p> <p>\u5c0f\u7ec3\u4e60\uff1a\u5c06\u6570\u636e List((\"a\", 88), (\"b\", 95), (\"a\", 91), (\"b\", 93), (\"a\", 95), (\"b\", 98)) \u6c42\u6bcf\u4e2a key \u7684\u5e73\u5747\u503c</p> <pre><code>val list: List[(String, Int)] = List((\"a\", 88), (\"b\", 95), (\"a\", 91), (\"b\", 93), (\"a\", 95), (\"b\", 98))\nval input: RDD[(String, Int)] = sc.makeRDD(list, 2)\nval combineRdd: RDD[(String, (Int, Int))] = input.combineByKey(\n  (_, 1),\n  (acc: (Int, Int), v) =&gt; (acc._1 + v, acc._2 + 1),\n  (acc1: (Int, Int), acc2: (Int, Int)) =&gt; (acc1._1 + acc2._1, acc1._2 + acc2._2))\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#foldbykey","title":"foldByKey","text":"<pre><code>def foldByKey(zeroValue: V, numPartitions: Int)(func: (V, V) =&gt; V): RDD[(K, V)]\n</code></pre> <p>foldByKey \u662f aggregateByKey \u7684\u7b80\u5316\u64cd\u4f5c\uff0c\u5c06 aggregateByKey \u4e2d\u7684\u5206\u533a\u5185\u548c\u5206\u533a\u95f4\u8ba1\u7b97\u89c4\u5219\u76f8\u540c\u7684\u60c5\u51b5\u8fdb\u884c\u7b80\u5316\uff0c\u540c\u65f6\u591a\u4e86\u521d\u59cb\u503c zeroValue\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#_1","title":"\u603b\u7ed3","text":"<p>reduceByKey\u3001foldByKey\u3001aggregateByKey\u3001combineByKey \u7684\u533a\u522b?</p> reduceByKey combineByKey <code>reduceByKey</code> \u5728\u5185\u90e8\u8c03\u7528 <code>combineByKey</code> <code>combineByKey</code> \u662f\u901a\u7528 API\uff0c\u7531 <code>reduceByKey</code> \u548c <code>aggregateByKey</code> \u4f7f\u7528 <code>reduceByKey</code> \u7684\u8f93\u5165\u7c7b\u578b\u548c outputType \u662f\u76f8\u540c\u7684 <code>combineByKey</code> \u66f4\u7075\u6d3b\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d0\u5230\u6240\u9700\u7684 outputType\u3002\u8f93\u51fa\u7c7b\u578b\u4e0d\u4e00\u5b9a\u9700\u8981\u4e0e\u8f93\u5165\u7c7b\u578b\u76f8\u540c\u3002 <ul> <li> <p>reduceByKey\uff1a\u6ca1\u6709\u521d\u59cb\u503c\uff0c\u5206\u533a\u5185\u548c\u5206\u533a\u95f4\u8ba1\u7b97\u89c4\u5219\u76f8\u540c</p> </li> <li> <p>foldByKey\uff1a\u6709\u521d\u59cb\u503c\u7684 reduceByKey\uff0c\u5206\u533a\u5185\u548c\u5206\u533a\u95f4\u8ba1\u7b97\u89c4\u5219\u76f8\u540c</p> </li> <li> <p>aggregateByKey\uff1a\u6709\u521d\u59cb\u503c\uff0c\u5206\u533a\u5185\u548c\u5206\u533a\u95f4\u8ba1\u7b97\u89c4\u5219\u53ef\u4ee5\u4e0d\u540c</p> </li> <li> <p>combineByKey\uff1a\u6700\u901a\u7528\u7684\u805a\u5408\u64cd\u4f5c\u3002\u6709\u521d\u59cb\u5316\u51fd\u6570\uff0c\u53d1\u73b0\u6570\u636e\u7ed3\u6784\u4e0d\u6ee1\u8db3\u8981\u6c42\u65f6\uff0c\u53ef\u4ee5\u8ba9\u7b2c\u4e00\u4e2a\u6570\u636e\u8f6c\u6362\u7ed3\u6784\u3002\u5206\u533a\u5185\u548c\u5206\u533a\u95f4\u8ba1\u7b97\u89c4\u5219\u53ef\u4ee5\u4e0d\u540c\u3002</p> </li> </ul>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#join","title":"join","text":"<p>\u5728\u7c7b\u578b\u4e3a (K,V) \u548c (K,W) \u7684 RDD \u4e0a\u8c03\u7528\uff0c\u8fd4\u56de\u4e00\u4e2a\u76f8\u540c key \u5bf9\u5e94\u7684\u6240\u6709\u5143\u7d20\u8fde\u63a5\u5728\u4e00\u8d77\u7684 (K,(V,W)) \u7684 RDD</p> <pre><code>val rdd: RDD[(Int, String)] = sc.makeRDD(Array((1, \"a\"), (2, \"b\"), (3, \"c\")))\nval rdd1: RDD[(Int, Int)] = sc.makeRDD(Array((1, 4), (2, 5), (3, 6)))\nrdd.join(rdd1).collect().foreach(println)\n</code></pre> <p>\u4e24\u4e2a\u4e0d\u540c\u6570\u636e\u6e90\u7684\u6570\u636e\uff0c\u76f8\u540c\u7684 key \u7684 value \u4f1a\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u5143\u7ec4\u3002\u5982\u679c\u4e24\u4e2a\u6570\u636e\u6e90\u4e2d key \u6ca1\u6709\u5339\u914d\u4e0a\uff0c\u90a3\u4e48\u6570\u636e\u4e0d\u4f1a\u51fa\u73b0\u5728\u7ed3\u679c\u4e2d\uff1b\u5982\u679c\u4e24\u4e2a\u6570\u636e\u6e90\u4e2d\u7684 key \u6709\u591a\u4e2a\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u4f1a\u4f9d\u6b21\u5339\u914d\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u7b1b\u5361\u5c14\u79ef\uff0c\u6570\u636e\u91cf\u4f1a\u51e0\u4f55\u589e\u957f\u3002</p> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>(1,(a,4))\n(2,(b,5))\n(3,(c,6))\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#cogroup","title":"cogroup","text":"<p>\u5728\u7c7b\u578b\u4e3a (K,V) \u548c (K,W) \u7684 RDD \u4e0a\u8c03\u7528\uff0c\u8fd4\u56de\u4e00\u4e2a <code>(K,(Iterable&lt;V&gt;,Iterable&lt;W&gt;))</code> \u7c7b\u578b\u7684 RDD</p> <p>cogroup = connect + group</p> <p></p> <pre><code>val rdd1 = sc.makeRDD(List((\"a\", 1), (\"b\", 2)))\nval rdd2 = sc.makeRDD(List((\"a\", 4), (\"b\", 5), (\"c\", 6), (\"c\", 7)))\n\nrdd1.cogroup(rdd2).collect().foreach(println)\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>(a,(CompactBuffer(1),CompactBuffer(4)))\n(b,(CompactBuffer(2),CompactBuffer(5)))\n(c,(CompactBuffer(),CompactBuffer(6, 7)))\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#rdd_1","title":"RDD \u884c\u52a8\u7b97\u5b50","text":""},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#reduce","title":"reduce","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def reduce(f: (T, T) =&gt; T): T\n</code></pre> <p>\u805a\u96c6 RDD \u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5148\u805a\u5408\u5206\u533a\u5185\u6570\u636e\uff0c\u518d\u805a\u5408\u5206\u533a\u95f4\u6570\u636e\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#collect","title":"collect","text":"<p>\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\uff0c\u4ee5\u6570\u7ec4 Array \u7684\u5f62\u5f0f\u8fd4\u56de\u6570\u636e\u96c6\u7684\u6240\u6709\u5143\u7d20\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#count","title":"count","text":"<p>\u8fd4\u56de RDD \u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#first","title":"first","text":"<p>\u8fd4\u56de RDD \u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#take","title":"take","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u7531 RDD \u7684\u524d n \u4e2a\u5143\u7d20\u7ec4\u6210\u7684\u6570\u7ec4\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#takeordered","title":"takeOrdered","text":"<p>\u8fd4\u56de\u8be5 RDD \u6392\u5e8f\u540e\u7684\u524d n \u4e2a\u5143\u7d20\u7ec4\u6210\u7684\u6570\u7ec4\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#aggregate","title":"aggregate","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def aggregate[U: ClassTag]\n  (zeroValue: U)\n  (seqOp: (U, T) =&gt; U,\n  combOp: (U, U) =&gt; U): U\n</code></pre> <p>\u5206\u533a\u7684\u6570\u636e\u901a\u8fc7\u521d\u59cb\u503c\u548c\u5206\u533a\u5185\u7684\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u7136\u540e\u518d\u548c\u521d\u59cb\u503c\u8fdb\u884c\u5206\u533a\u95f4\u7684\u6570\u636e\u805a\u5408\u3002</p> <ul> <li> <p>aggregateByKey\uff1a\u521d\u59cb\u503c\u53ea\u4f1a\u53c2\u4e0e\u5206\u533a\u5185\u7684\u8ba1\u7b97</p> </li> <li> <p>aggregate\uff1a\u521d\u59cb\u503c\u4f1a\u53c2\u4e0e\u5206\u533a\u5185\u7684\u8ba1\u7b97\uff0c\u5e76\u4e14\u53c2\u4e0e\u5206\u533a\u95f4\u8ba1\u7b97</p> </li> </ul> <p>aggregate \u662f\u884c\u52a8\u7b97\u5b50\uff0c\u4f1a\u76f4\u63a5\u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u4e00\u4e2a RDD\u3002</p> <pre><code>val rdd: RDD[Int] = sc.makeRDD(List(1, 2, 3, 4), 8)\n\n// \u5c06\u8be5 RDD \u6240\u6709\u5143\u7d20\u76f8\u52a0\u5f97\u5230\u7ed3\u679c\n//val result: Int = rdd.aggregate(0)(_ + _, _ + _)\nval result: Int = rdd.aggregate(10)(_ + _, _ + _)\n</code></pre>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#fold","title":"fold","text":"<p>\u6298\u53e0\u64cd\u4f5c\uff0caggregate \u7684\u7b80\u5316\u7248\u64cd\u4f5c\u3002\u5f53\u5206\u533a\u5185\u548c\u5206\u533a\u95f4\u7684\u8ba1\u7b97\u903b\u8f91\u76f8\u540c\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528 fold \u4ee3\u66ff aggregate\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#countbykey","title":"countByKey","text":"<p>\u51fd\u6570\u7b7e\u540d\uff1a</p> <pre><code>def countByKey(): Map[K, Long]\n</code></pre> <p>\u7edf\u8ba1\u6bcf\u79cd key \u7684\u4e2a\u6570\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#foreach","title":"foreach","text":"<p>\u5206\u5e03\u5f0f\u904d\u5386 RDD \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u8c03\u7528\u6307\u5b9a\u51fd\u6570\u3002</p>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#save","title":"save \u76f8\u5173","text":"<ul> <li>saveAsTextFile</li> <li>saveAsSequenceFile</li> <li>saveAsObjectFile</li> </ul>"},{"location":"Spark/RDD%20%E7%AE%97%E5%AD%90%20API/#wordcount","title":"WordCount \u7684\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f","text":"<pre><code>object WordCount {\n  def main(args: Array[String]): Unit = {\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"WordCount\")\n    val sc = new SparkContext(sparkConf)\n    wordCount1(sc)\n    sc.stop()\n  }\n\n  // group\n  def wordCount1(sc: SparkContext): Unit = {\n    val rdd = sc.makeRDD(List(\"Hello Scala\", \"Hello Spark\"))\n    val words = rdd.flatMap(_.split(\" \"))\n    val group: RDD[(String, Iterable[String])] = words.groupBy(word =&gt; word)\n    val wordCount = group.mapValues(iter =&gt; iter.size)\n  }\n\n  //groupByKey\uff0c\u4f46\u6027\u80fd\u4f4e\n  def wordCount2(sc: SparkContext): Unit = {\n    val rdd = sc.makeRDD(List(\"Hello Scala\", \"Hello Spark\"))\n    val words = rdd.flatMap(_.split(\" \"))\n    val wordOne = words.map((_, 1))\n    val group: RDD[(String, Iterable[Int])] = wordOne.groupByKey()\n    val wordCount = group.mapValues(iter =&gt; iter.size)\n  }\n\n  //reduceByKey\n  def wordCount3(sc: SparkContext): Unit = {\n    val rdd = sc.makeRDD(List(\"Hello Scala\", \"Hello Spark\"))\n    val words = rdd.flatMap(_.split(\" \"))\n    val wordOne = words.map((_, 1))\n    val wordCount = wordOne.reduceByKey(_ + _)\n  }\n\n  //aggregateByKey\n  def wordCount4(sc: SparkContext): Unit = {\n    val rdd = sc.makeRDD(List(\"Hello Scala\", \"Hello Spark\"))\n    val words = rdd.flatMap(_.split(\" \"))\n    val wordOne = words.map((_, 1))\n    val wordCount = wordOne.aggregateByKey(0)(_ + _, _ + _)\n  }\n\n  //foldByKey\n  def wordCount5(sc: SparkContext): Unit = {\n    val rdd = sc.makeRDD(List(\"Hello Scala\", \"Hello Spark\"))\n    val words = rdd.flatMap(_.split(\" \"))\n    val wordOne = words.map((_, 1))\n    val wordCount = wordOne.foldByKey(0)(_ + _)\n  }\n\n  //combineByKey\n  def wordCount6(sc: SparkContext): Unit = {\n    val rdd = sc.makeRDD(List(\"Hello Scala\", \"Hello Spark\"))\n    val words = rdd.flatMap(_.split(\" \"))\n    val wordOne = words.map((_, 1))\n    val wordCount = wordOne.combineByKey(\n      v =&gt; v,\n      (x: Int, y) =&gt; x + y,\n      (x: Int, y: Int) =&gt; x + y\n    )\n  }\n\n  //countByKey\n  def wordCount7(sc: SparkContext): Unit = {\n    val rdd = sc.makeRDD(List(\"Hello Scala\", \"Hello Spark\"))\n    val words = rdd.flatMap(_.split(\" \"))\n    val wordOne = words.map((_, 1))\n    val wordCount: collection.Map[String, Long] = wordOne.countByKey()\n  }\n\n  //countByValue\n  def wordCount8(sc: SparkContext): Unit = {\n    val rdd = sc.makeRDD(List(\"Hello Scala\", \"Hello Spark\"))\n    val words = rdd.flatMap(_.split(\" \"))\n    val wordCount: collection.Map[String, Long] = words.countByValue()\n  }\n}\n</code></pre>"},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/","title":"Spark \u6027\u80fd\u4f18\u5316","text":""},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#sop","title":"\u4efb\u52a1\u4f18\u5316 SOP","text":"<p>\u5b9e\u4e60\u671f\u95f4\u505a\u4e86\u5f88\u591a\u6570\u636e\u6cbb\u7406\u548c\u4efb\u52a1\u4f18\u5316\u7684\u5de5\u4f5c\uff0c\u4ee5\u4e0b\u662f\u6211\u5173\u4e8e\u4efb\u52a1\u4f18\u5316\u7684\u601d\u8def\u603b\u7ed3\u3001\u590d\u76d8\uff1a</p> \u884c\u52a8\u4e4b\u524d <p>\u4f18\u5316\u524d\u5148\u8981\u601d\u8003\u4f18\u5316\u7684\u6838\u5fc3\u76ee\u6807\u662f\u4ec0\u4e48\uff1f\u6728\u6876\u7406\u8bba\uff08\u627e\u77ed\u677f\uff09</p> \u95ee\u9898\u63cf\u8ff0 \u89e3\u51b3\u65b9\u5411 \u5355\u7eaf\u67d0\u4e2a\u4e3b\u9898/\u5b57\u6bb5\u5ef6\u8fdf\u4ea7\u51fa SLA \u6cbb\u7406\uff1a\u6392\u67e5\u5361\u70b9\u3001\u6a21\u578b\u89e3\u8026 \u4efb\u52a1\u8fd0\u884c\u4e0d\u7a33\u5b9a\uff0c\u9891\u7e41\u91cd\u8bd5 \u6392\u67e5 OOM\u3001\u503e\u659c\u3001\u8d44\u6e90\u7b49\u95ee\u9898 \u4efb\u52a1\u8fd0\u884c\u65f6\u95f4\u957f\uff0c\u5bfb\u6c42\u4f18\u5316\u7a7a\u95f4 \u4ece\u4ee3\u7801\u5c42\u9762\u548c\u53c2\u6570\u5c42\u9762\u8fdb\u884c\u4f18\u5316 <p>I. \u4ee3\u7801\u5c42\u9762\u7684\u4f18\u5316</p> \u4f18\u5316\u65b9\u5411 \u5177\u4f53\u64cd\u4f5c \u51cf\u5c11\u6570\u636e\u91cf \u5206\u533a\u88c1\u526a\u3001\u5217\u88c1\u526a\u3001\u8c13\u8bcd\u4e0b\u63a8 \u5173\u6ce8 group by map \u7aef\u805a\u5408\u3001\u4e24\u9636\u6bb5\u805a\u5408 \u5173\u6ce8 join join \u8868\u6570\u91cf\u8fc7\u591a\u5206\u62c6\u4efb\u52a1\u3001\u8c03\u6574 join \u7684\u987a\u5e8f\u3001\u4f7f\u7528 broadcast \u907f\u514d\u95ee\u9898\u64cd\u4f5c \u907f\u514d\u5168\u5c40\u6392\u5e8f\u3001\u7b1b\u5361\u5c14\u79ef\uff0c\u6392\u67e5\u6570\u636e\u503e\u659c\u3001\u6570\u636e\u81a8\u80c0 <p>II. \u53c2\u6570\u5c42\u9762\u7684\u4f18\u5316</p> \u5173\u6ce8\u65b9\u9762 \u5177\u4f53\u53c2\u6570\u53ca\u8bf4\u660e \u8d44\u6e90\u65b9\u9762 \u5185\u5b58\u3001CPU \u6838\u6570\u3001executor \u4e2a\u6570\u3001\u9ed8\u8ba4\u5e76\u884c\u5ea6\u3001\u9ed8\u8ba4 shuffle read \u5206\u533a\u4e2a\u6570 shuffle \u65b9\u9762 shuffle read/write \u7f13\u51b2\u533a\u5927\u5c0f \u2191\uff08\u589e\u5927\uff09\uff0cI/O \u6b21\u6570 \u2193\uff08\u51cf\u5c11\uff09\uff0cshuffle memory fraction\u2191\uff08\u589e\u5927\uff0c\u9ed8\u8ba4 0.2\uff09 bypassThreshold \u9ed8\u8ba4 200\uff0c\u975e\u805a\u5408\u7c7b\u7b97\u5b50\u53ef\u8df3\u8fc7\u6392\u5e8f \u5176\u4ed6\u53c2\u6570 AQE\u3001broadcast \u9608\u503c\u7b49\u5176\u4ed6\u53c2\u6570"},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#oom","title":"OOM \u4f18\u5316","text":"<p>Driver \u7aef OOM\uff1a</p> <ol> <li><code>collect()</code>, <code>take()</code> \u7b97\u5b50\u62c9\u53d6\u8fc7\u591a\u6570\u636e</li> <li>broadcast \u5e7f\u64ad\u53d8\u91cf\u592a\u5927\uff08\u81ea\u5b9a\u4e49\u7ed3\u6784/\u4ece executor \u62c9\u53d6\uff09</li> </ol> <p>\u89e3\u51b3\u601d\u8def\uff1a<code>spark.driver.memory</code> \u2191</p> <p>Executor \u7aef OOM\uff1a</p> <ol> <li>user memory\uff1a\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7ed3\u6784</li> <li><code>coalesce()</code> \u5408\u5e76\u5206\u533a</li> <li>\u6570\u636e\u503e\u659c OOM</li> <li>reduce \u7aef\u4e00\u6b21\u62c9\u53d6\u8fc7\u591a\u6570\u636e</li> <li>\u6570\u636e\u81a8\u80c0</li> </ol> <p>\u89e3\u51b3\u601d\u8def\uff1a</p> <ol> <li>\u2191 executor \u5185\u5b58</li> <li>\u2191 \u5e76\u884c\u5ea6\uff0cshuffle read \u5206\u533a\u6570\uff0c\u8ba9\u6bcf\u4e2a task \u5904\u7406\u7684\u6570\u636e\u91cf \u2193</li> <li>\u2191 <code>spark.shuffle.memoryFraction</code></li> </ol>"},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#shuffle","title":"Shuffle \u4f18\u5316","text":"<ol> <li>\u907f\u514d Shuffle\uff1aBroadcast \u5c0f\u8868\uff1b\u8868\u8bbe\u8ba1\u521d\u671f\u5c31\u8bbe\u8ba1\u597d\u5206\u6876\u65b9\u6848</li> <li>Map \u7aef\u9884\u805a\u5408\uff1a\u51cf\u5c11 Shuffle \u7684\u6570\u636e\u91cf\uff08\u91cf\u5927\uff09</li> <li>\u89e3\u51b3\u6570\u636e\u503e\u659c\u95ee\u9898\uff08\u4e0d\u5747\u5300\uff09</li> <li>\u2191 \u5e76\u884c\u5ea6\u548c\u4e0b\u6e38 reduce task \u7684\u6570\u91cf\uff0c\u8ba9\u6bcf\u4e00\u4efd Shuffle \u7684\u6570\u636e\u91cf \u2193</li> <li>\u2191 shuffle read/write \u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u2193 I/O \u6b21\u6570</li> <li>\u2191 <code>spark.shuffle.memoryFraction</code>\uff0cexecutor \u5185\u5b58\u4e2d\u7528\u4e8e shuffle read \u805a\u5408\u7684\u6bd4\u4f8b</li> <li>shuffle.manager\uff1a\u9ed8\u8ba4 sort\uff0c\u8c03\u6574 bypassThreshold(200)\uff0c\u53ef\u4ee5\u8ba9 groupBy/repartition \u7b49\u7b97\u5b50\u4e0d\u6392\u5e8f</li> <li>RSS</li> </ol>"},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#_1","title":"\u6570\u636e\u503e\u659c","text":"<p>I. Group By \u5bfc\u81f4\u7684\u6570\u636e\u503e\u659c</p> <ol> <li>Map \u7aef\u805a\u5408\uff1a\u5c3d\u91cf\u4f7f\u7528 Map \u7aef\u805a\u5408\u7684\u7b97\u5b50</li> <li>\u4e24\u9636\u6bb5\u805a\u5408\uff1a\u6839\u636e\u4e1a\u52a1\u8c03\u6574\u805a\u5408\u7c92\u5ea6\uff0c<code>group by (a, b)</code> \u2192 \u5148 <code>group by (a, b, c)</code></li> <li>\u4e24\u9636\u6bb5\u805a\u5408\uff1a\u5148\u5c06\u6570\u636e\u968f\u673a\u6253\u6563\u4e8e\u591a\u4e2a reducer\uff0c\u90e8\u5206\u805a\u5408\uff1b\u7136\u540e\u6309\u7167\u539f\u5148\u5206\u7ec4\u5b57\u6bb5\u805a\u5408</li> <li>\u5bf9\u5c11\u6570\u503e\u659c key \u5355\u72ec\u5904\u7406\uff0c\u518d union</li> </ol> <p>II. Join \u5bfc\u81f4\u7684\u6570\u636e\u503e\u659c</p> <ol> <li>\u4f7f\u7528 Map Join\uff1a\u5c0f\u8868\u7684\u60c5\u51b5</li> <li>\u5927\u8868\uff0c\u957f\u5c3e\u73b0\u8c61\u7531\u7a7a\u503c\u5bfc\u81f4\u7684\u8bdd\uff1a\u5c06\u7a7a\u503c\u5904\u7406\u4e3a\u968f\u673a\u6570</li> <li>\u5927\u8868 Join \u5927\u8868\uff0c\u957f\u5c3e\u73b0\u8c61\u7531\u70ed\u70b9\u503c\u5bfc\u81f4\uff1a\u62c6\u5206\u70ed\u70b9 key \u4e0e\u975e\u70ed\u70b9 key\uff0c\u518d\u5408\u5e76</li> <li>\u5927\u8868 Join \u5927\u8868\uff1a\u4e00\u5f20\u8868 1-N \u52a0\u76d0\uff0c\u4e00\u5f20\u8868\u81a8\u80c0\u6269\u5bb9 N \u500d\uff0c\u53c2\u8003Spark \u6027\u80fd\u4f18\u5316\u6307\u5357\u2014\u2014\u9ad8\u7ea7\u7bc7</li> </ol>"},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#_2","title":"\u5c0f\u6587\u4ef6\u6cbb\u7406","text":""},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#_3","title":"\u80cc\u666f","text":"<ul> <li>\u6d88\u606f\u63d0\u793a\u4e0e\u5237\u6570\u5173\u8054\uff1a\u6536\u5230\u6570\u636e\u5e73\u53f0\u6d88\u606f\uff0c\u544a\u77e5\u6211\u8d1f\u8d23\u7684\u67d0\u5f20\u8868\u5c0f\u6587\u4ef6\u8fc7\u591a\uff0c\u4e14\u524d\u4e00\u5929\u521a\u505a\u8fc7\u52a8\u6001\u5206\u533a\u5237\u6570\u3002</li> <li>\u4e0b\u6e38\u4efb\u52a1\u5f02\u5e38\uff1a\u540c\u4e00\u5f20\u8868\uff0c\u5f53\u5929\u4e0b\u6e38\u4efb\u52a1\u8fd0\u884c\u6bd4\u9884\u671f\u6162\u5f88\u591a\uff0c\u67e5\u770b Spark \u7684 syslog \u65e5\u5fd7\uff0c\u53d1\u73b0\u5927\u91cf\u201cReading ORC rows\u201d\u4fe1\u606f\uff0c\u7531\u6b64\u786e\u8ba4\u662f\u4e0a\u6e38\u8868\u5c0f\u6587\u4ef6\u8fc7\u591a\uff08\u591a\u8fbe 2.6 \u4e07\u4e2a\u5c0f\u6587\u4ef6\uff09\u7684\u95ee\u9898\u3002\u53e6\u5916\uff0c\u4e5f\u53ef\u901a\u8fc7 Spark WebUI \u67e5\u770b\u4efb\u52a1\u7684 DAG \u4e2d\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u4e86\u89e3 Map \u8bfb\u6587\u4ef6\u4e2a\u6570\u4ee5\u53ca Reduce \u5199\u6587\u4ef6\u4e2a\u6570\u6765\u5224\u65ad\u3002</li> </ul>"},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#_4","title":"\u5927\u91cf\u5c0f\u6587\u4ef6\u95ee\u9898\u7684\u5371\u5bb3","text":"<ul> <li>\u5360\u7528 NameNode \u5185\u5b58\uff1a\u4f1a\u5360\u7528\u5927\u91cf NameNode \u5185\u5b58\u8d44\u6e90\u3002</li> <li>\u5f71\u54cd\u78c1\u76d8\u5bfb\u5740\u4e0e\u8bfb\u6587\u4ef6\u6548\u7387\uff1a\u5bfc\u81f4 DataNode \u7684\u78c1\u76d8\u5bfb\u5740\u6548\u7387\u4f4e\u4e0b\uff0c\u8fdb\u800c\u4f7f\u5f97 Map Task \u8bfb\u6587\u4ef6\u6548\u7387\u4e0b\u964d\u3002</li> <li>\u589e\u52a0\u4efb\u52a1\u5f00\u9500\uff1a\u5927\u91cf\u7684 Map \u4efb\u52a1\uff0c\u6bcf\u4e2a Map \u5f00\u542f\u4e00\u4e2a JVM \u6267\u884c\uff0c\u5e26\u6765\u5927\u91cf\u4efb\u52a1\u521d\u59cb\u5316\u3001\u8c03\u5ea6\u65b9\u9762\u7684\u5f00\u9500\u3002</li> <li>\u6587\u4ef6\u5408\u5e76\u7684\u8d44\u6e90\u6d88\u8017\uff1a\u867d\u53ef\u5f00\u542f Map \u524d\u6587\u4ef6\u5408\u5e76\uff0c\u4f46\u8fd9\u9700\u8981\u4e0d\u65ad\u4ece\u4e0d\u540c\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\u3001\u8fdb\u884c\u6570\u636e\u8bfb\u53d6\u3001\u7f51\u7edc\u4f20\u8f93\u540e\u518d\u5408\u5e76\uff0c\u540c\u6837\u4f1a\u589e\u52a0\u8d44\u6e90\u6d88\u8017\u3001\u5ef6\u957f\u8ba1\u7b97\u65f6\u95f4\uff0c\u6210\u672c\u8f83\u9ad8\u3002</li> </ul>"},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#_5","title":"\u5c0f\u6587\u4ef6\u4ea7\u751f\u7684\u9014\u5f84","text":"<ul> <li>\u6d41\u5f0f\u6570\u636e\uff1a\u5982\u6765\u81ea Kafka\u3001Flink \u7b49\u7684\u6d41\u5f0f\u589e\u91cf\u6587\u4ef6\uff0c\u4ee5\u53ca\u5c0f\u7a97\u53e3\u6587\u4ef6\uff08\u5982\u51e0\u5206\u949f\u4ea7\u751f\u4e00\u6b21\u7b49\uff09\u3002</li> <li>\u52a8\u6001\u5206\u533a\u5237\u6570\uff1a\u4e00\u4e2a Reduce \u4f1a\u5199\u591a\u4e2a\u5206\u533a\uff0c\u4ece\u800c\u4ea7\u751f\u591a\u4e2a\u6587\u4ef6\u3002</li> <li>\u591a\u4e2a union all\uff1a\u5c0f\u6587\u4ef6\u4e2a\u6570\u7b49\u4e8e\u591a\u4e2a select \u7684 partition \u6570\u4e4b\u548c\u3002</li> <li>Spark \u4efb\u52a1\u8fc7\u5ea6\u5e76\u884c\u5316\uff1aSpark \u5206\u533a\u8d8a\u591a\uff0c\u5199\u5165\u7684\u6587\u4ef6\u5c31\u8d8a\u591a\u3002</li> <li>\u5e7f\u64ad\u5bfc\u81f4\u65e0 Shuffle\uff1a\u5927\u8868 broadcast join \u5c0f\u8868\u65f6\uff0c\u6ca1\u6709 Shuffle\uff0c\u5c0f\u6587\u4ef6\u6570\u7b49\u4e8e map task \u7684\u4e2a\u6570\uff08\u8bfb\u5927\u8868\u60c5\u51b5\u8f83\u591a\uff09\u3002</li> <li> MapReduce \u5f15\u64ce\u4efb\u52a1\uff1a \u82e5\u4e3a\u7eaf map \u4efb\u52a1\uff0c\u5927\u91cf\u7684 map \u4f1a\u9020\u6210\u5927\u91cf\u6587\u4ef6\uff1b\u82e5\u4e3a mapreduce \u4efb\u52a1\uff0c\u5927\u91cf\u7684 reduce \u4e5f\u4f1a\u9020\u6210\u5927\u91cf\u6587\u4ef6\u3002 \u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u539f\u56e0\u591a\u6837\uff0c\u6bd4\u5982\u5206\u533a\u8868\u7684\u8fc7\u5ea6\u5206\u533a\u3001\u52a8\u6001\u5206\u533a\u3001\u8f93\u5165\u5927\u91cf\u5c0f\u6587\u4ef6\u3001\u53c2\u6570\u8bbe\u7f6e\u4e0d\u5408\u7406\u4ee5\u53ca\u8f93\u51fa\u6ca1\u6709\u6587\u4ef6\u5408\u5e76\u7b49\u3002 </li> </ul>"},{"location":"Spark/Spark%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#_6","title":"\u6eda\u52a8\u6cbb\u7406\u548c\u5b58\u91cf\u6cbb\u7406","text":"<p>\u6eda\u52a8\u6cbb\u7406\uff1a\u9700\u4ece\u96c6\u7fa4\u5c42\u9762\u914d\u7f6e\u4e00\u4e9b\u53c2\u6570\u3002</p> <p>\u65b9\u6848\u4e00\uff1a\u4f7f\u7528 AQE \u7684\u81ea\u52a8\u5206\u533a\u5408\u5e76\u529f\u80fd</p> <p>\u539f\u7406\uff1a\u5f00\u542f\u4e4b\u540e AQE \u5c06\u5408\u5e76 Reduce Task \u4e2d\u8fc7\u5c0f\u7684\u6570\u636e\u5206\u533a\uff0c\u9ed8\u8ba4\u6bcf\u4e2a\u5206\u533a\u5408\u5e76\u540e\u7ea6 64MB\u3002</p> <p>\u53c2\u6570\u8bbe\u7f6e\uff1a</p> <pre><code>set spark.sql.adaptive.enabled=true\nset spark.sql.adaptive.coalescePartitions.enabled=true\n</code></pre> <p></p> <p>\u65b9\u6848\u4e8c\uff1aDistribute By Rand</p> <p>\u539f\u7406\uff1a\u201cDistribute by\u201d\u7528\u6765\u63a7\u5236 Map \u7aef\u8f93\u51fa\u7ed3\u679c\u7684\u5206\u53d1\u3002\u52a8\u6001\u5206\u533a\u5237\u6570\u65f6\uff0c\u4e00\u4e2a Reduce \u53ef\u80fd\u4f1a\u5199\u591a\u4e2a\u5206\u533a\uff0c\u6613\u4ea7\u751f\u5927\u91cf\u5c0f\u6587\u4ef6\uff0c\u6781\u7aef\u60c5\u51b5\u4e0b\u53ef\u80fd\u4ea7\u751f\u201cReduce Task * \u5206\u533a\u4e2a\u6570\u201d\u4e2a\u5c0f\u6587\u4ef6\u3002\u53ef\u901a\u8fc7\u6309\u5206\u533a\u952e\u8fdb\u884c Shuffle \u7684\u65b9\u5f0f\uff0c\u8ba9\u5355\u4e2a\u5206\u533a\u7684\u6570\u636e\u5168\u90e8\u8fdb\u5165\u540c 1 \u4e2a\u6216 n \u4e2a Reduce\uff0c\u4f7f\u8be5\u5206\u533a\u53ea\u4ea7\u751f 1 \u4e2a\u6216 n \u4e2a\u6587\u4ef6\u3002</p> <p>\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>insert overwrite table xxx partition (dt)\nselect\n    user_id,\n    user_name,\n    user_age,\n    dt\nfrom\n    xxx\ndistribute by dt -- \u6bcf\u4e2a\u5206\u533a1\u4e2a\u6587\u4ef6\ndistribute by dt, ceil(rand() * 5) -- \u6bcf\u4e2a\u5206\u533a5\u4e2a\u6587\u4ef6\ndistribute by dt,\n            ceil(rand()*if(data_amount/10000000&gt;1000,1000,data_amount/10000000)) -- \u4e00\u4e2apartition\u5904\u74061000w\u6761\u6570\u636e,\u6700\u591a\u4e00\u4e2a\u5206\u533a\u5212\u52061000\u4e2apartition\n</code></pre> <p>\u65b9\u6848\u4e09\uff1aSpark Repartition Hint Coalesce \u548c Repartition \u7684\u533a\u522b\uff1a</p> <ul> <li>Coalesce\uff1a\u53ea\u80fd\u51cf\u5c11\u5206\u533a\u6570\uff0c\u4ec5\u5408\u5e76\u5206\u533a\uff0c\u6700\u5927\u7a0b\u5ea6\u51cf\u5c11\u4e86\u6570\u636e\u79fb\u52a8\u3002</li> <li>Repartition\uff1a\u63d0\u793a\u53ef\u4ee5\u589e\u52a0\u6216\u51cf\u5c11\u5206\u533a\u6570\u91cf\uff0c\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c RoundRobin \u7684 Shuffle\uff0c\u786e\u4fdd\u6570\u636e\u5e73\u5747\u5206\u914d\uff1b\u589e\u52a0\u4e86\u4e00\u4e2a\u65b0 Stage\uff0c\u4e0d\u4f1a\u5f71\u54cd\u73b0\u6709\u9636\u6bb5\u7684\u5e76\u884c\u6027\uff0c\u800c Coalesce \u4f1a\u5f71\u54cd\u73b0\u6709\u9636\u6bb5\u7684\u5e76\u884c\u6027\uff0c\u56e0\u5176\u4e0d\u4f1a\u6dfb\u52a0\u65b0\u9636\u6bb5\u3002</li> </ul> <p>\u76f8\u5173\u53c2\u6570\uff1a</p> <p>\u53c2\u6570\u4e00\uff1a\u5f00\u542f map \u524d\u5c0f\u6587\u4ef6\u5408\u5e76\uff08\u9ed8\u8ba4\u5f00\u542f\uff09</p> <pre><code>set hive.input.format = org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;\n</code></pre> <p>\u53c2\u6570\u4e8c\uff1a\u5408\u5e76 Map \u4efb\u52a1\u548c MR \u4efb\u52a1\u8f93\u51fa\u6587\u4ef6</p> <ul> <li>\u8bbe\u7f6e<code>smallfiles.avgsize</code>\u3002</li> <li>\u96c6\u7fa4\u5c42\u9762\u9ed8\u8ba4\u5f00\u542f map-only \u4efb\u52a1\u7684\u5c0f\u6587\u4ef6\u5408\u5e76\u3002</li> <li>\u5f00\u542f map-reduce \u4efb\u52a1\u7684\u5c0f\u6587\u4ef6\u5408\u5e76\u3002</li> <li>\u7ed3\u675f\u65f6\u5408\u5e76\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u4e00\u822c\u6700\u597d\u8ddf\u751f\u4ea7\u96c6\u7fa4\u7684 block \u5927\u5c0f\u4e00\u81f4\u5408\u9002\u3002\u8be5\u53c2\u6570\u8868\u793a\u5f53\u4e00\u4e2a MR \u4f5c\u4e1a\u7684\u5e73\u5747\u8f93\u51fa\u6587\u4ef6\u5927\u5c0f\u5c0f\u4e8e\u6b64\u6570\u5b57\u65f6\uff0cHive \u5c06\u542f\u52a8\u4e00\u4e2a\u989d\u5916\u7684 Map \u4efb\u52a1\uff08\u9700\u6ce8\u610f\u6b64\u5904\u6709\u4e2a\u201c\u5751\u201d\uff09\uff0c\u5c06\u8f93\u51fa\u6587\u4ef6\u5408\u5e76\u4e3a\u66f4\u5927\u7684\u6587\u4ef6\u3002</li> </ul> <pre><code>-- \u5f53\u8f93\u51fa\u6587\u4ef6\u5c0f\u4e8e32Mb\u65f6\u6211\u4eec\u8fdb\u884c\u5408\u5e76\u3002\nset hive.merge.smallfiles.avgsize=32000000;\n-- map-only\u4efb\u52a1\u7684\u5c0f\u6587\u4ef6\u5408\u5e76\uff0c\u9ed8\u8ba4\u503c\u4e3atrue\nset hive.merge.mapfiles=true;\n-- map-reduce\u4efb\u52a1\u7684\u5c0f\u6587\u4ef6\u5408\u5e76\uff0c\u9ed8\u8ba4\u503c\u4e3afalse\nset hive.merge.mapredfiles=true;\n-- \u4f5c\u4e1a\u7ed3\u675f\u65f6\u5408\u5e76\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u4e00\u822c\u6700\u597d\u8ddf\u751f\u4ea7\u96c6\u7fa4\u7684block\u5927\u5c0f\u4e00\u81f4\u5408\u9002\nset hive.merge.size.per.task=25600000;\n</code></pre> <p>\u5b58\u91cf\u6cbb\u7406\uff1a\u53ef\u4ee5\u5199\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u5c0f\u6587\u4ef6\u5408\u5e76\u7684\u4efb\u52a1\uff0c\u7136\u540e\u901a\u8fc7\u5143\u6570\u636e\u6570\u4ed3\u83b7\u53d6\u90e8\u95e8\u6240\u6709\u6210\u5458\u8d1f\u8d23\u7684\u8868\u7684\u6587\u4ef6\u6570\uff0c\u6309\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u4f9d\u6b21\u6cbb\u7406\u3002\u5b9e\u9645\u8fd0\u884c\u5408\u5e76\u5c0f\u6587\u4ef6\u4efb\u52a1\u65f6\uff0c\u6ce8\u610f\u5148\u5728\u6d4b\u8bd5\u73af\u5883\u8fd0\u884c\uff0c\u7136\u540e\u9a8c\u6570\uff0c\u4e4b\u540e\u518d\u5207\u6362\u7ebf\u4e0a\u73af\u5883\u7684\u8868\u5373\u53ef\u3002</p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/","title":"Spark \u9762\u8bd5\u9898","text":""},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark_1","title":"Spark \u7684\u7279\u70b9","text":"<p>Spark \u662f\u4e00\u79cd\u57fa\u4e8e\u5185\u5b58\u7684\u5feb\u901f\u3001\u901a\u7528\u3001\u53ef\u6269\u5c55\u7684\u5206\u5e03\u5f0f\u5206\u6790\u8ba1\u7b97\u5f15\u64ce\u3002</p> <p>Spark \u6846\u67b6\u662f\u57fa\u4e8e\u5185\u5b58\u8ba1\u7b97\u7684\uff0c\u5b83\u5c06\u5927\u91cf\u7684\u8f93\u5165\u6570\u636e\u548c\u4e2d\u95f4\u6570\u636e\u90fd\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u80fd\u591f\u6709\u6548\u5730\u63d0\u9ad8\u4ea4\u4e92\u578b Job \u548c\u8fed\u4ee3\u578b Job \u7684\u6267\u884c\u6548\u7387\u3002</p> <p></p> <p>Spark \u7684\u7279\u70b9\uff1a</p> <ul> <li>\u5feb\u901f\uff1aSpark \u57fa\u4e8e\u5185\u5b58\u8ba1\u7b97\uff0cSpark \u91c7\u7528 RDD + DAG \u7684\u8ba1\u7b97\u6a21\u578b\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u4e2d\u95f4\u7ed3\u679c\u4e0d\u9700\u8981\u843d\u76d8\uff0c\u53ea\u9700\u8981\u5728\u6700\u540e\u4e00\u6b21 reduce \u843d\u76d8\u5373\u53ef\u3002</li> <li>\u901a\u7528\uff1aSpark \u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5305\u62ec\u6279\u5904\u7406\u3001 SQL \u67e5\u8be2\u3001\u6d41\u5f0f\u8ba1\u7b97\u3001\u673a\u5668\u5b66\u4e60\u548c\u56fe\u8ba1\u7b97\u3002</li> <li>\u591a\u8bed\u8a00\u652f\u6301\uff1aSpark \u63d0\u4f9b\u4e86 Scala\u3001Java\u3001Python \u548c R \u8bed\u8a00\u7684 API\u3002</li> <li>\u517c\u5bb9\u6027\uff1aSpark \u53ef\u4ee5\u8fd0\u884c\u5728 Mesos\u3001Kubernetes\u3001Standalone \u6216\u4e91\u73af\u5883\u4e2d\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbf\u95ee HDFS\u3001Alluxio\u3001Cassandra\u3001HBase\u3001Hive \u7b49\u591a\u79cd\u6570\u636e\u6e90\u3002</li> </ul> <p>Spark \u4e3a\u4ec0\u4e48\u5feb\uff1f</p> <ol> <li>Spark \u5728\u975e Shuffle \u7684\u60c5\u51b5\uff0c\u4e2d\u95f4\u7ed3\u679c\u4e0d\u9700\u8981\u843d\u76d8\uff0c\u80fd\u6709\u6548\u51cf\u5c11\u78c1\u76d8 IO\u3002</li> <li>Spark RDD \u7684\u5206\u533a\u7279\u6027\uff0c\u80fd\u591f\u5145\u5206\u5229\u7528\u5e76\u884c\u8ba1\u7b97\u7684\u4f18\u52bf\u3002</li> <li>Spark \u7684 RDD \u652f\u6301\u7f13\u5b58\uff0c\u80fd\u591f\u5c06\u9891\u7e41\u4f7f\u7528\u7684\u6570\u636e\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u8ba1\u7b97\u3002</li> <li>Spark \u7684\u5bb9\u9519\u673a\u5236\uff08lineage + checkpoint\uff09\uff0c\u80fd\u591f\u5c06\u8ba1\u7b97\u5931\u8d25\u7684\u8282\u70b9\u4e0a\u7684\u6570\u636e\u91cd\u65b0\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u91cd\u5934\u5f00\u59cb\u8ba1\u7b97\u3002</li> <li>Spark \u91c7\u7528\u591a\u7ebf\u7a0b\u6a21\u578b\uff0c\u800c MR \u91c7\u7528\u591a\u8fdb\u7a0b\u6a21\u578b\uff0c\u8fdb\u7a0b\u7684\u542f\u505c\u9700\u8981\u505a\u5f88\u591a\u521d\u59cb\u5316\u7b49\u5de5\u4f5c\uff0c\u6548\u7387\u6bd4\u8f83\u4f4e\u3002</li> </ol>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark_2","title":"Spark \u8fd0\u884c\u67b6\u6784","text":"<p>Spark \u6846\u67b6\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u8ba1\u7b97\u5f15\u64ce\uff0c\u6574\u4f53\u6765\u8bf4\uff0c\u5b83\u91c7\u7528\u4e86\u6807\u51c6 master-slave \u7684\u7ed3\u6784\u3002</p> <ul> <li>Master\uff1a\u7ba1\u7406\u6574\u4e2a\u96c6\u7fa4\u7684\u8d44\u6e90\uff0c\u7c7b\u4f3c\u4e8e YARN \u7684 ResourceManager</li> <li>Worker\uff1a\u7ba1\u7406\u5355\u4e2a\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u7c7b\u4f3c\u4e8e YARN \u7684 NodeManager</li> <li>Driver\uff1a\u7ba1\u7406\u5355\u4e2a Spark \u4efb\u52a1\u5728\u8fd0\u884c\u65f6\u7684\u5de5\u4f5c\uff0c\u7c7b\u4f3c\u4e8e YARN \u7684 ApplicationMaster</li> <li>Executor\uff1a\u8d1f\u8d23\u5177\u4f53\u7684\u4efb\u52a1\u6267\u884c\uff0c\u7c7b\u4f3c\u4e8e YARN \u5bb9\u5668\u4e2d\u8fd0\u884c\u7684 Task</li> </ul> <p></p> <p>\u7531\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8e Spark \u6846\u67b6\u6709\u4e24\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1a</p> <ul> <li>Driver</li> <li>Executor</li> </ul> <p>Driver\uff1a</p> <p>Spark Driver\uff0c\u6307\u5b9e\u9645\u8fd0\u884c\u5728 Spark \u5e94\u7528\u4e2d main() \u51fd\u6570\u7684\u8fdb\u7a0b\u3002Driver \u72ec\u7acb\u4e8e Master \u8fdb\u7a0b\uff0c\u5982\u679c\u662f Yarn \u96c6\u7fa4\uff0c\u90a3\u4e48 Driver \u4e5f\u53ef\u80fd\u88ab\u8c03\u5ea6\u5230 Worker \u8282\u70b9\u4e0a\u8fd0\u884c\u3002</p> <p>Driver \u5728 Spark \u4f5c\u4e1a\u6267\u884c\u65f6\u4e3b\u8981\u8d1f\u8d23\uff1a</p> <ul> <li>\u5c06\u7528\u6237\u7a0b\u5e8f\u8f6c\u5316\u4e3a\u4f5c\u4e1a (job)</li> <li>\u5728 Executor \u4e4b\u95f4\u8c03\u5ea6\u4efb\u52a1 (task)</li> <li>\u8ddf\u8e2a Executor \u7684\u6267\u884c\u60c5\u51b5</li> </ul> <p>Executor\uff1a</p> <p>Spark Executor \u5728\u7269\u7406\u4e0a\u662f Worker \u8282\u70b9\u4e2d\u7684\u4e00\u4e2a JVM \u8fdb\u7a0b\uff0c\u8d1f\u8d23\u5728 Spark \u4f5c\u4e1a\u4e2d\u8fd0\u884c\u5177\u4f53\u4efb\u52a1 (Task)\uff0c\u4efb\u52a1\u5f7c\u6b64\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002Spark \u5e94\u7528\u542f\u52a8\u65f6\uff0cExecutor \u8282\u70b9\u88ab\u540c\u65f6\u542f\u52a8\uff0c\u5e76\u4e14\u59cb\u7ec8\u4f34\u968f\u7740\u6574\u4e2a Spark \u5e94\u7528\u7684\u751f\u547d\u5468\u671f\u800c\u5b58\u5728\u3002\u5982\u679c\u6709 Executor \u8282\u70b9\u53d1\u751f\u4e86\u6545\u969c\u6216\u5d29\u6e83\uff0cSpark \u5e94\u7528\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u4f1a\u5c06\u51fa\u9519\u8282\u70b9\u4e0a\u7684\u4efb\u52a1\u8c03\u5ea6\u5230\u5176\u4ed6 Executor \u8282\u70b9\u4e0a\u7ee7\u7eed\u8fd0\u884c\u3002</p> <p>Executor \u6709\u4e24\u4e2a\u6838\u5fc3\u529f\u80fd:</p> <ul> <li>\u8d1f\u8d23\u8fd0\u884c\u7ec4\u6210 Spark \u5e94\u7528\u7684\u4efb\u52a1\uff0c\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9 Driver \u8fdb\u7a0b</li> <li>\u5b83\u4eec\u901a\u8fc7\u81ea\u8eab\u7684\u5757\u7ba1\u7406\u5668 (Block Manager) \u4e3a\u7528\u6237\u7a0b\u5e8f\u4e2d\u8981\u6c42\u7f13\u5b58\u7684 RDD \u63d0\u4f9b\u5185\u5b58\u5f0f\u5b58\u50a8\u3002RDD \u662f\u76f4\u63a5\u7f13\u5b58\u5728 Executor \u8fdb\u7a0b\u5185\u7684\uff0c\u56e0\u6b64\u4efb\u52a1\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u5145\u5206\u5229\u7528\u7f13\u5b58\u6570\u636e\u52a0\u901f\u8fd0\u7b97\u3002</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark_3","title":"Spark \u90e8\u7f72\u6a21\u5f0f","text":"<ul> <li>\u672c\u5730\u6a21\u5f0f\uff08\u5355\u673a\uff09\uff1a\u672c\u5730\u6a21\u5f0f\u5c31\u662f\u4ee5\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\uff0c\u901a\u8fc7\u5176\u5185\u90e8\u7684\u591a\u4e2a\u7ebf\u7a0b\u6765\u6a21\u62df\u6574\u4e2a Spark \u8fd0\u884c\u65f6\u73af\u5883</li> <li>Standalone \u6a21\u5f0f\uff08\u96c6\u7fa4\uff09\uff1aSpark \u4e2d\u7684\u5404\u4e2a\u89d2\u8272\u4ee5\u72ec\u7acb\u8fdb\u7a0b\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u5e76\u7ec4\u6210 Spark \u96c6\u7fa4\u73af\u5883</li> <li>Spark on YARN \u6a21\u5f0f\uff08\u96c6\u7fa4\uff09\uff1aSpark \u4e2d\u7684\u5404\u4e2a\u89d2\u8272\u8fd0\u884c\u5728 YARN \u7684\u5bb9\u5668\u5185\u90e8\uff0c\u5e76\u7ec4\u6210 Spark \u96c6\u7fa4\u73af\u5883</li> <li>Spark on Kubernetes \u6a21\u5f0f\uff08\u96c6\u7fa4\uff09\uff1aSpark \u4e2d\u7684\u5404\u4e2a\u89d2\u8272\u8fd0\u884c\u5728 Kubernetes \u7684\u5bb9\u5668\u5185\u90e8\uff0c\u5e76\u7ec4\u6210 Spark \u96c6\u7fa4\u73af\u5883</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark-on-yarn","title":"Spark on Yarn","text":"<p>Yarn \u67b6\u6784\uff1a</p> <p></p> <ul> <li>ResourceManager\uff08RM\uff09\uff1a\u5168\u5c40\u7684\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u8d1f\u8d23\u7ba1\u7406\u6574\u4e2a\u96c6\u7fa4\u7684\u8d44\u6e90</li> <li>NodeManager\uff08NM\uff09\uff1a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u8d44\u6e90\u548c\u4efb\u52a1\u7684\u7ba1\u7406\u5668</li> <li>ApplicationMaster\uff08AM\uff09\uff1a\u5e94\u7528\u7a0b\u5e8f\u7ba1\u7406\u5668\uff0c\u8d1f\u8d23\u5e94\u7528\u7a0b\u5e8f\u7684\u7ba1\u7406\u5de5\u4f5c</li> </ul> <p>Spark Driver\uff1a</p> <p></p> <p>Spark \u5e94\u7528\u7a0b\u5e8f\u7531\u4e3b\u7a0b\u5e8f\u4e2d\u7684 SparkContext\uff08\u6216 SparkSession\uff09\u5bf9\u8c61\u534f\u8c03\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u521d\u59cb\u5316 SparkContext \u7684\u4ee3\u7801\u5c31\u662f\u4f60\u7684 Driver\u3002Driver \u8fdb\u7a0b\u7ba1\u7406\u4f5c\u4e1a\u6d41\u7a0b\u5e76\u8c03\u5ea6\u4efb\u52a1\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u59cb\u7ec8\u53ef\u7528\u3002</p> <p>Spark on Yarn\uff1a</p> <p>\u5f53\u5728 YARN \u4e0a\u8fd0\u884c Spark \u4f5c\u4e1a\uff0c\u6bcf\u4e2a Spark executor \u4f5c\u4e3a\u4e00\u4e2a YARN \u5bb9\u5668\u8fd0\u884c\u3002Spark \u53ef\u4ee5\u4f7f\u5f97\u591a\u4e2a Tasks \u5728\u540c\u4e00\u4e2a\u5bb9\u5668\u91cc\u9762\u8fd0\u884c\u3002Spark on Yarn \u901a\u5e38\u6709\u4ee5\u4e0b\u4e24\u79cd\u8fd0\u884c\u6a21\u5f0f\uff1a</p> <ul> <li>Client \u6a21\u5f0f</li> <li>Cluster \u6a21\u5f0f</li> </ul> <p>Client \u6a21\u5f0f\uff1a</p> <p></p> <p></p> <ol> <li>\u5728 YARN Client \u6a21\u5f0f\u4e0b\uff0cspark-submit \u63d0\u4ea4 Spark Job \u4e4b\u540e\uff0c\u5c31\u4f1a\u5728\u63d0\u4ea4\u7684\u672c\u5730\u673a\u5668\u4e0a\u542f\u52a8\u4e00\u4e2a\u5bf9\u5e94\u7684 Driver</li> <li>Driver \u542f\u52a8\u540e\u4f1a\u4e0e ResourceManager \u5efa\u7acb\u901a\u8baf\u5e76\u53d1\u8d77\u542f\u52a8 ApplicationMaster \u8bf7\u6c42</li> <li>ResourceManager \u63a5\u6536\u5230\u8fd9\u4e2a Job \u65f6\uff0c\u4f1a\u5728\u96c6\u7fa4\u4e2d\u9009\u4e00\u4e2a\u5408\u9002\u7684 NodeManager \u5e76\u5206\u914d\u4e00\u4e2a Container\uff0c\u53ca\u542f\u52a8 ApplicationMaster\uff08\u521d\u59cb\u5316 SparkContext\uff09</li> <li>ApplicationMaster \u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u4e00\u4e2a ExecutorLaucher \uff0c\u8d1f\u8d23\u5411 ResourceManager \u7533\u8bf7 Container \u8d44\u6e90\uff1b ResourceManager \u4fbf\u4f1a\u4e0e NodeManager \u901a\u4fe1\uff0c\u5e76\u542f\u52a8 Container</li> <li>ApplicationMaster \u5bf9\u6307\u5b9a NodeManager \u5206\u914d\u7684 Container \u53d1\u51fa\u542f\u52a8 Executor \u8fdb\u7a0b\u8bf7\u6c42</li> <li>Executor \u8fdb\u7a0b\u542f\u52a8\u540e\u4f1a\u5411 Driver \u53cd\u5411\u6ce8\u518c\uff0cExecutor \u5168\u90e8\u6ce8\u518c\u5b8c\u6210\u540e Driver \u5f00\u59cb\u6267\u884c\u6267\u884c Job \u4efb\u52a1</li> <li>Driver \u4e2d\u7684 SparkContext \u5206\u914d Task \u7ed9 Executor \u6267\u884c\uff0cExecutor \u8fd0\u884c Task \u5e76\u5411 Driver \u6c47\u62a5\u8fd0\u884c\u7684\u72b6\u6001\u3001\u8fdb\u5ea6\u3001\u4ee5\u53ca\u6700\u7ec8\u7684\u8ba1\u7b97\u7ed3\u679c\uff1b\u8ba9 Driver \u968f\u65f6\u638c\u63e1\u5404\u4e2a\u4efb\u52a1\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u4efb\u52a1\u5931\u8d25\u65f6\u91cd\u65b0\u542f\u52a8\u4efb\u52a1\uff1b\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5b8c\u6210\u540e\uff0cApplicationMaster \u5411 ResourceManager \u7533\u8bf7\u6ce8\u9500\u5e76\u5173\u95ed\u81ea\u5df1\u3002</li> </ol> <p>Cluster \u6a21\u5f0f\uff1a</p> <p></p> <p></p> <p>\u5728 YARN Cluster \u6a21\u5f0f\u4e0b\uff0cspark-submit \u63d0\u4ea4 Spark Job \u4e4b\u540e\uff0c\u5c31\u4f1a\u5728 YARN \u96c6\u7fa4\u4e2d\u542f\u52a8\u4e00\u4e2a\u5bf9\u5e94\u7684 ApplicationMaster\u3002\u6b64\u6a21\u5f0f\u4e2d\u7684 Driver \u8fd0\u884c\u5728 ApplicationMaster \u4e2d\u3002</p> <p>\u4e24\u79cd\u6a21\u5f0f\u7684\u533a\u522b\uff1a</p> <p>\u4e3b\u8981\u533a\u522b\u5728\u4e8e Driver \u7684\u521b\u5efa\u7684\u4f4d\u7f6e\u4e0d\u4e00\u6837\uff0cClient \u65b9\u5f0f\u662f\u76f4\u63a5\u5728\u672c\u5730\u673a\u5668\u4e0a\u521b\u5efa\u4e00\u4e2a Driver \u8fdb\u7a0b\uff0c\u800c Cluster \u65b9\u5f0f\u5728\u901a\u8fc7 ResourceManager \u5728\u67d0\u4e00\u4e2a NodeManager \u4e2d\u521b\u5efa\u4e00\u4e2a Driver\u3002</p> <p>\u5728\u4f7f\u7528\u573a\u666f\u5f53\u4e2d\uff0cYarn Client \u65b9\u5f0f\u4e00\u822c\u9002\u7528\u4e8e\u8fdb\u884c Job \u7684\u8c03\u8bd5\uff08Debug\uff09\uff0c\u56e0\u4e3a Driver \u662f\u5728\u672c\u5730\u53ef\u4ee5\u76f4\u63a5\u8fdc\u7a0b\u65ad\u70b9\u8c03\u8bd5\uff0c\u800c\u4e14 Driver \u4f1a\u4e0e Executor \u8fdb\u884c\u5927\u91cf\u7684\u901a\u4fe1\u5c31\u4f1a\u9020\u6210\u5360\u7528\u5927\u91cf IO \uff1bYarn Cluster \u65b9\u5f0f\u4e00\u822c\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff0c\u56e0\u4e3a Driver \u8fd0\u884c\u5728\u67d0\u4e00\u4e2a NodeManager \u4e2d\u5c31\u4e0d\u4f1a\u51fa\u73b0\u67d0\u4e00\u53f0\u673a\u5668\u51fa\u73b0\u7f51\u5361\u6fc0\u589e\u7684\u60c5\u51b5\uff0c\u7f3a\u70b9\u5c31\u662f\u8fd0\u884c\u7684 Job \u65e5\u5fd7\u4e0d\u80fd\u5728\u673a\u5668\u672c\u5730\u5b9e\u65f6\u67e5\u770b\u800c\u662f\u9700\u8981\u901a\u8fc7 Job Web \u754c\u9762\u67e5\u770b\u3002</p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#sparkcontext","title":"SparkContext","text":"<p>SparkContext \u662f Spark \u4e2d\u7684\u4e3b\u8981\u5165\u53e3\u70b9\uff0c\u5b83\u662f\u4e0e Spark \u96c6\u7fa4\u901a\u4fe1\u7684\u6838\u5fc3\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u6765\u5728 Spark \u96c6\u7fa4\u4e2d\u521b\u5efa RDD\u3001\u7d2f\u52a0\u5668\u53d8\u91cf\u548c\u5e7f\u64ad\u53d8\u91cf\u7b49\u3002SparkContext \u7684\u6838\u5fc3\u4f5c\u7528\u662f\u521d\u59cb\u5316 Spark \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u6240\u9700\u8981\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u5305\u62ec\u9ad8\u5c42\u8c03\u5ea6\u5668(DAGScheduler)\u3001\u5e95\u5c42\u8c03\u5ea6\u5668(TaskScheduler)\u548c\u8c03\u5ea6\u5668\u7684\u901a\u4fe1\u7ec8\u7aef(SchedulerBackend)\uff0c\u540c\u65f6\u8fd8\u4f1a\u8d1f\u8d23 Spark \u7a0b\u5e8f\u5411 Master \u6ce8\u518c\u7a0b\u5e8f\u7b49\u3002</p> <p>\u6ce8\u610f\uff0c\u53ea\u53ef\u4ee5\u6709\u4e00\u4e2a SparkContext \u5b9e\u4f8b\u8fd0\u884c\u5728\u4e00\u4e2a JVM \u5185\u5b58\u4e2d\uff0c\u6240\u4ee5\u5728\u521b\u5efa\u65b0\u7684 SparkContext \u5b9e\u4f8b\u524d\uff0c\u5fc5\u987b\u8c03\u7528 stop \u65b9\u6cd5\u505c\u6b62\u5f53\u524d JVM \u552f\u4e00\u8fd0\u884c\u7684 SparkContext \u5b9e\u4f8b\u3002</p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark-submit","title":"Spark Submit","text":"<p>spark-submit \u662f\u5728 spark \u5b89\u88c5\u76ee\u5f55\u4e2d bin \u76ee\u5f55\u4e0b\u7684\u4e00\u4e2a shell \u811a\u672c\u6587\u4ef6\uff0c\u7528\u4e8e\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\uff08\u5982.jar\u3001.py \u811a\u672c\u7b49\uff09\uff1b\u5bf9\u4e8e spark \u652f\u6301\u7684\u96c6\u7fa4\u6a21\u5f0f\uff0cspark-submit \u63d0\u4ea4\u5e94\u7528\u7684\u65f6\u5019\u6709\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4e0d\u7528\u592a\u591a\u7684\u8bbe\u7f6e\u3002</p> <p>\u5e38\u7528\u53c2\u6570\uff1a</p> <pre><code>--master\uff1a\u8868\u793a\u63d0\u4ea4\u4efb\u52a1\u5230\u54ea\u91cc\u6267\u884c\n    local\uff1a\u63d0\u4ea4\u5230\u672c\u5730\u670d\u52a1\u5668\u6267\u884c\uff0c\u5e76\u5206\u914d\u5355\u4e2a\u7ebf\u7a0b\n    local[k]\uff1a\u63d0\u4ea4\u5230\u672c\u5730\u670d\u52a1\u5668\u6267\u884c\uff0c\u5e76\u5206\u914d k \u4e2a\u7ebf\u7a0b\n    local[*]\uff1a\u63d0\u4ea4\u5230\u672c\u5730\u670d\u52a1\u5668\u6267\u884c\uff0c\u5e76\u5206\u914d\u672c\u5730 core \u4e2a\u6570\u4e2a\u7ebf\u7a0b\n    spark://HOST:PORT\uff1a\u63d0\u4ea4\u5230 standalone \u6a21\u5f0f\u90e8\u7f72\u7684 spark \u96c6\u7fa4\u4e2d\uff0c\u5e76\u6307\u5b9a\u4e3b\u8282\u70b9\u7684 IP \u4e0e\u7aef\u53e3\n    yarn\uff1a\u63d0\u4ea4\u5230 yarn \u6a21\u5f0f\u90e8\u7f72\u7684\u96c6\u7fa4\u4e2d\n\n--deploy-mode\n    spark on yarn \u7684\u4e24\u79cd\u542f\u52a8\u65b9\u5f0f\uff0cclient\uff08\u9ed8\u8ba4\u503c\uff0c\u5e94\u7528\u7a0b\u5e8f\u5728\u63d0\u4ea4\u547d\u4ee4\u6240\u5728\u7684\u8282\u70b9\u4e0a\u8fd0\u884c\uff09\u6216cluster\uff08\u5e94\u7528\u7a0b\u5e8f\u5728\u96c6\u7fa4\u4e2d\u8fd0\u884c\uff09\n\n--class\n    \u5e94\u7528\u7a0b\u5e8f\u7684\u4e3b\u7c7b\uff0c\u4ec5\u9488\u5bf9 java \u6216 scala \u5e94\u7528\n\n--name &lt;name&gt;\uff1a\u6307\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0\u3002\n--executor-memory &lt;memory&gt;\uff1a\u6307\u5b9a\u6bcf\u4e2aExecutor\u7684\u5185\u5b58\u3002\n--num-executors &lt;num&gt;\uff1a\u6307\u5b9a\u8981\u5206\u914d\u7684Executor\u7684\u6570\u91cf\u3002\n--driver-memory &lt;memory&gt;\uff1a\u6307\u5b9aDriver\u7a0b\u5e8f\u7684\u5185\u5b58\u3002\n--conf &lt;key=value&gt;\uff1a\u6307\u5b9a\u5176\u4ed6Spark\u914d\u7f6e\u5c5e\u6027\u3002\n</code></pre>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark_4","title":"Spark \u5e94\u7528\u6267\u884c\u6d41\u7a0b","text":"<ol> <li>Spark \u7a0b\u5e8f\u63d0\u4ea4\u540e\uff0cDriver \u7aef\u521b\u5efa SparkContext\uff0cSparkContext \u5411\u8d44\u6e90\u7ba1\u7406\u5668\uff08StandAlone/Yarn\uff09\u6ce8\u518c\u5e76\u7533\u8bf7 Executor \u8d44\u6e90\u3002</li> <li>\u8d44\u6e90\u7ba1\u7406\u5668\u5206\u914d Executor \u8d44\u6e90\u5e76\u542f\u52a8 Executor \u8fdb\u7a0b</li> <li>DAGScheduler \u6784\u5efa DAG \u56fe\uff0c\u5e76\u5212\u5206 Stage\uff0c\u5c06\u6bcf\u4e2a Stage \u5e76\u884c\u6267\u884c\u7684 task \u5c01\u88c5\u4e3a TaskSet\uff0c\u4ea4\u7ed9 TaskScheduler\u3002</li> <li>Executor \u5411 SparkContext \u7533\u8bf7 task\uff0cTaskScheduler \u5c06 task \u548c\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u53d1\u9001\u7ed9 Executor\u3002</li> <li>Executor \u8fd0\u884c task\uff0c\u8fd0\u884c\u5b8c\u91ca\u653e\u6240\u6709\u8d44\u6e90\u3002</li> </ol>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark_5","title":"Spark \u8c03\u5ea6\u7cfb\u7edf","text":"<p>Spark \u7684\u8c03\u5ea6\u7cfb\u7edf\u4e3b\u8981\u5305\u62ec\u4e09\u4e2a\u90e8\u5206\uff1aDAGScheduler, SchedulerBackend \u548c TaskScheduler\u3002</p> <p>\u4efb\u52a1\u8c03\u5ea6\u6d41\u7a0b\uff1a</p> <ol> <li>DAGScheduler \u6839\u636e\u7528\u6237\u4ee3\u7801\u6784\u5efa DAG\uff0c\u4ee5 Shuffle \u4e3a\u8fb9\u754c\u5212\u5206 Stages</li> <li>DAGScheduler \u57fa\u4e8e Stages \u521b\u5efa TaskSets\uff0c\u5e76\u4ea4\u7ed9 TaskScheduler \u8bf7\u6c42\u8c03\u5ea6</li> <li>SchedulerBackend \u83b7\u53d6\u96c6\u7fa4\u5185\u53ef\u7528\u8ba1\u7b97\u8d44\u6e90\uff08\u4ee5 WorkOffer \u4e3a\u7c92\u5ea6\u63d0\u4f9b\u8ba1\u7b97\u8d44\u6e90\uff09</li> <li>TaskScheduler \u5bf9\u4e8e\u7ed9\u5b9a\u7684 WorkOffer\uff0c\u7ed3\u5408\u4efb\u52a1\u7684\u672c\u5730\u503e\u5411\u6027\u5b8c\u6210\u4efb\u52a1\u8c03\u5ea6</li> <li>SchedulerBackend \u5c06\u4efb\u52a1\u5206\u53d1\u7ed9 Executor \u8fdb\u884c\u6267\u884c</li> </ol>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark-mr","title":"Spark \u4e3a\u4ec0\u4e48\u6bd4 MR \u5feb","text":"<ol> <li>Spark \u91c7\u7528 RDD + DAG \u7684\u8ba1\u7b97\u6a21\u578b\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u4e2d\u95f4\u7ed3\u679c\u4e0d\u9700\u8981\u843d\u76d8\uff0c\u53ea\u9700\u8981\u5728\u6700\u540e\u4e00\u6b21 reduce \u843d\u76d8\u5373\u53ef\u3002\u800c MR \u6bcf\u4e00\u8f6e\u8ba1\u7b97\u53ea\u80fd\u5305\u542b\u4e00\u4e2a Map \u548c\u4e00\u4e2a Reduce\uff0c\u591a\u8f6e\u8ba1\u7b97\u7684\u4e2d\u95f4\u7ed3\u679c\u9700\u8981\u843d\u76d8\uff0c\u56e0\u6b64\u4f1a\u9020\u6210\u5927\u91cf\u7684\u78c1\u76d8 IO\uff0c\u964d\u4f4e\u4e86\u8ba1\u7b97\u6548\u7387\u3002</li> <li>Spark \u5bf9 Shuffle \u7684\u4f18\u5316\uff1aMR \u7684 Shuffle \u4f1a\u5f3a\u5236\u8981\u6c42\u6309\u7167 Key \u8fdb\u884c\u6392\u5e8f\uff0c\u800c Spark \u5219\u53ea\u6709\u90e8\u5206\u573a\u666f\u624d\u9700\u8981\u6392\u5e8f\uff08bypass \u673a\u5236\u4e0d\u9700\u8981\u6392\u5e8f\uff09\u3002\u800c\u6392\u5e8f\u662f\u975e\u5e38\u8017\u65f6\u7684\u64cd\u4f5c\u3002</li> <li>Spark \u652f\u6301\u5c06\u9891\u7e41\u4f7f\u7528\u7684\u6570\u636e\u8fdb\u884c\u7f13\u5b58\uff0c\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u8ba1\u7b97\uff0c\u800c MR \u6bcf\u6b21\u8ba1\u7b97\u90fd\u9700\u8981\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\u3002</li> <li>Spark \u91c7\u7528\u591a\u7ebf\u7a0b\u6a21\u578b\uff0c\u800c MR \u91c7\u7528\u591a\u8fdb\u7a0b\u6a21\u578b\uff0c\u8fdb\u7a0b\u7684\u542f\u505c\u9700\u8981\u505a\u5f88\u591a\u521d\u59cb\u5316\u7b49\u5de5\u4f5c\uff0c\u6548\u7387\u6bd4\u8f83\u4f4e\u3002</li> </ol>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#sparksession","title":"SparkSession","text":"<p>SparkSession \u662f Spark 2.0 \u4ee5\u540e Spark \u7a0b\u5e8f\u7684\u5165\u53e3\uff0cSparkSession \u5c06 SparkContext\u3001SQLContext\u3001HiveContext \u96c6\u6210\u5230\u4e86\u4e00\u8d77\uff0c\u4f7f\u5f97 Spark \u7a0b\u5e8f\u66f4\u52a0\u65b9\u4fbf\u3002</p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#rdd","title":"RDD \u662f\u4ec0\u4e48","text":"<p>RDD(Resilient Distributed Dataset) \u53eb\u505a\u5f39\u6027\u5206\u5e03\u5f0f\u6570\u636e\u96c6\uff0c\u662f Spark \u4e2d\u6700\u57fa\u672c\u7684\u6570\u636e\u5904\u7406\u6a21\u578b\u3002\u4ee3\u7801\u4e2d\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u4ee3\u8868\u4e00\u4e2a\u5f39\u6027\u7684\u3001\u4e0d\u53ef\u53d8\u3001\u53ef\u5206\u533a\u3001\u91cc\u9762\u7684\u5143\u7d20\u53ef\u5e76\u884c\u8ba1\u7b97\u7684\u96c6\u5408\u3002</p> <p>\u5f39\u6027\uff1a</p> <ul> <li>\u5b58\u50a8\u7684\u5f39\u6027\uff1a\u5185\u5b58\u4e0e\u78c1\u76d8\u7684\u81ea\u52a8\u5207\u6362</li> <li>\u5bb9\u9519\u7684\u5f39\u6027\uff1a\u57fa\u4e8e\u8840\u7f18\u7684\u9ad8\u6548\u5bb9\u9519</li> <li>\u8ba1\u7b97\u7684\u5f39\u6027\uff1aTask \u5931\u8d25\u540e\u7684\u81ea\u52a8\u91cd\u8bd5</li> <li>\u5206\u7247\u7684\u5f39\u6027\uff1a\u53ef\u6839\u636e\u9700\u8981\u91cd\u65b0\u5206\u7247</li> </ul> <p>\u5206\u5e03\u5f0f\uff1a\u6570\u636e\u5b58\u50a8\u5728\u5927\u6570\u636e\u96c6\u7fa4\u4e0d\u540c\u8282\u70b9\u4e0a</p> <p>\u6570\u636e\u96c6\uff1aRDD \u5c01\u88c5\u4e86\u8ba1\u7b97\u903b\u8f91\uff0c\u5e76\u4e0d\u4fdd\u5b58\u6570\u636e</p> <p>\u6570\u636e\u62bd\u8c61\uff1aRDD \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u9700\u8981\u5b50\u7c7b\u5177\u4f53\u5b9e\u73b0</p> <p>\u4e0d\u53ef\u53d8\uff1aRDD \u5c01\u88c5\u4e86\u8ba1\u7b97\u903b\u8f91\uff0c\u662f\u4e0d\u53ef\u4ee5\u6539\u53d8\u7684\u3002\u5982\u679c\u60f3\u8981\u6539\u53d8\uff0c\u53ea\u80fd\u4ea7\u751f\u65b0\u7684 RDD\uff0c\u5728\u65b0\u7684 RDD \u91cc\u9762\u5c01\u88c5\u8ba1\u7b97\u903b\u8f91</p> <p>\u53ef\u5206\u533a\u3001\u5e76\u884c\u8ba1\u7b97</p> <p></p> <p>RDD \u662f Spark \u5bf9\u4e8e\u5206\u5e03\u5f0f\u6570\u636e\u96c6\u7684\u62bd\u8c61\uff0c\u6bcf\u4e00\u4e2a RDD \u90fd\u4ee3\u8868\u7740\u4e00\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u5f62\u6001\u3002\u6bd4\u5982 lineRDD\uff0c\u5b83\u8868\u793a\u6570\u636e\u5728\u96c6\u7fa4\u4e2d\u4ee5\u884c\uff08Line\uff09\u7684\u5f62\u5f0f\u5b58\u5728\uff1b\u800c wordRDD \u5219\u610f\u5473\u7740\u6570\u636e\u7684\u5f62\u6001\u662f\u5355\u8bcd\uff0c\u5206\u5e03\u5728\u8ba1\u7b97\u96c6\u7fa4\u4e2d\u3002</p> <p>RDD \u548c\u666e\u901a\u6570\u636e\u7ed3\u6784/\u5bb9\u5668\u7684\u533a\u522b\uff1f</p> <ol> <li>RDD\u53ea\u662f\u4e00\u4e2a\u903b\u8f91\u6982\u5ff5\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u4e0d\u4f1a\u771f\u6b63\u5730\u4e3a\u67d0\u4e2a RDD \u5206\u914d\u7a7a\u95f4\uff08\u9664\u975e\u9700\u8981\u88ab\u7f13\u5b58\uff09\u3002RDD \u4e2d\u7684\u6570\u636e\u53ea\u4f1a\u5728\u8ba1\u7b97\u4e2d\u4ea7\u751f\uff0c\u800c\u4e14\u5728\u8ba1\u7b97\u5b8c\u6210\u540e\u6d88\u5931\u3002</li> <li>RDD \u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6570\u636e\u5206\u533a\uff0c\u4e0d\u540c\u5206\u533a\u53ef\u4ee5\u7531\u4e0d\u540c\u7684 task \u5728\u4e0d\u540c\u8282\u70b9\u8fdb\u884c\u5904\u7406\u3002</li> </ol>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#rdd_1","title":"RDD \u7684\u4e94\u5927\u6838\u5fc3\u5c5e\u6027","text":"<p>Internally, each RDD is characterized by five main properties:</p> <ul> <li>A list of partitions</li> <li>A function for computing each split</li> <li>A list of dependencies on other RDDs</li> <li>Optionally, a Partitioner for key-value RDDs (e.g. to say that the RDD is hash-partitioned)</li> <li>Optionally, a list of preferred locations to compute each split on (e.g. block locations for an HDFS file)</li> </ul> <ul> <li>\u5206\u533a\u5217\u8868\uff1a\u6bcf\u4e2a\u5206\u533a\u4e3a RDD \u7684\u4e00\u90e8\u5206\u6570\u636e\uff0c\u5206\u533a\u7684\u6570\u91cf\u51b3\u5b9a\u4e86 RDD \u7684\u5e76\u884c\u5ea6\u3002</li> <li>\u5206\u533a\u8ba1\u7b97\u51fd\u6570\uff1aSpark \u5728\u8ba1\u7b97\u65f6\uff0c\u662f\u4f7f\u7528\u5206\u533a\u51fd\u6570\u5bf9\u6bcf\u4e00\u4e2a\u5206\u533a\u8fdb\u884c\u8ba1\u7b97\u3002</li> <li>RDD \u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff1aRDD \u662f\u8ba1\u7b97\u6a21\u578b\u7684\u5c01\u88c5\uff0c\u5f53\u9700\u6c42\u4e2d\u9700\u8981\u5c06\u591a\u4e2a\u8ba1\u7b97\u6a21\u578b\u8fdb\u884c\u7ec4\u5408\u65f6\uff0c\u5c31\u9700\u8981\u5c06\u591a\u4e2a RDD \u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\u3002</li> <li>\u5206\u533a\u5668 (\u53ef\u9009) \uff1a\u5f53\u6570\u636e\u4e3a KV \u7c7b\u578b\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u5206\u533a\u5668\uff08Hash/Range/\u81ea\u5b9a\u4e49\uff09\u3002</li> <li>\u9996\u9009\u4f4d\u7f6e (\u53ef\u9009)\uff1a\u8ba1\u7b97\u6570\u636e\u65f6\uff0c\u5224\u65ad\u628a\u8ba1\u7b97\u53d1\u9001\u5230\u54ea\u4e2a\u8282\u70b9\u6548\u7387\u6700\u4f18\uff1a\u79fb\u52a8\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u79fb\u52a8\u6570\u636e\u3002</li> </ul> <p>\u603b\u7ed3\uff1a</p> <ul> <li>RDD \u53ef\u4ee5\u770b\u505a\u662f\u4e00\u7cfb\u5217\u7684\u5206\u533a\uff0c\u6bcf\u4e2a\u5206\u533a\u5c31\u662f\u4e00\u4e2a\u6570\u636e\u96c6\u7247\u6bb5</li> <li>RDD \u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb</li> <li>\u7b97\u5b50\u662f\u4f5c\u7528\u5728\u5206\u533a\u4e4b\u4e0a\u7684</li> <li>\u5206\u533a\u5668\u662f\u4f5c\u7528\u5728 KV \u7c7b\u578b\u7684 RDD \u4e0a\u7684</li> <li>\u79fb\u52a8\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u79fb\u52a8\u6570\u636e</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#jobstagetask","title":"Job\u3001Stage\u3001Task","text":"<ul> <li>\u4e00\u4e2a Action \u7b97\u5b50\u5bf9\u5e94\u4e00\u4e2a Job</li> <li>Stage \u6309\u7167\u5bbd\u4f9d\u8d56\u5212\u5206</li> <li>\u4e00\u4e2a\u5206\u533a\u5bf9\u5e94\u4e00\u4e2a Task</li> </ul> <p>\u7406\u8bba\u4e0a\uff1a\u6bcf\u4e00\u4e2a Stage \u4e0b\u6709\u591a\u5c11\u4e2a\u5206\u533a\uff0c\u5c31\u6709\u591a\u5c11\u4e2a Task\uff0cTask \u7684\u6570\u91cf\u5c31\u662f\u4efb\u52a1\u7684\u6700\u5927\u5e76\u884c\u5ea6\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4e00\u4e2a Task \u4f7f\u7528\u4e00\u4e2a core\u3002</p> <p>\u5b9e\u9645\u4e0a\uff1a\u6700\u5927\u7684\u5e76\u884c\u5ea6\uff0c\u53d6\u51b3\u4e8e\u4efb\u52a1\u8fd0\u884c\u65f6\u4f7f\u7528\u7684 Executor \u62e5\u6709\u7684\u6700\u5927\u6838\u6570\u3002</p> <p>\u5982\u679c Task \u7684\u6570\u91cf\u8d85\u8fc7\u4e86\u6838\u6570\uff0c\u90a3\u4e48\u591a\u51fa\u6765\u7684 Task \u5c31\u9700\u8981\u7b49\u5f85\u4e4b\u524d\u7684 Task \u6267\u884c\u5b8c\u6bd5\u540e\u624d\u80fd\u6267\u884c\u3002</p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_1","title":"\u5206\u533a\u4e0e\u5e76\u884c\u5ea6","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpark \u53ef\u4ee5\u5c06\u4e00\u4e2a\u4f5c\u4e1a\u5207\u5206\u591a\u4e2a\u4efb\u52a1\u540e\uff0c\u53d1\u9001\u7ed9 Executor \u8282\u70b9\u5e76\u884c\u8ba1\u7b97\uff0c\u800c\u80fd\u591f\u5e76\u884c\u8ba1\u7b97\u7684\u4efb\u52a1\u6570\u91cf\u6211\u4eec\u79f0\u4e4b\u4e3a\u5e76\u884c\u5ea6\u3002\u8fd9\u4e2a\u6570\u91cf\u53ef\u4ee5\u5728\u6784\u5efa RDD \u65f6\u6307\u5b9a\u3002</p> <p>\u5206\u533a\u6570\uff1a\u662f\u4e00\u4e2a\u9759\u6001\u7684\u6982\u5ff5\uff0c\u5982\u679c\u662f\u5185\u5b58\u6570\u636e\uff0c\u90a3\u4e48\u5206\u533a\u6570\u548c\u8bbe\u7f6e\u7684\u5e76\u884c\u5ea6\u4e00\u81f4\uff1b\u5982\u679c\u662f HDFS \u6587\u4ef6\uff0c\u90a3\u4e48\u5206\u533a\u6570\u5c31\u662f HDFS \u6587\u4ef6 Block \u4e2a\u6570\u3002</p> <p>\u5e76\u884c\u5ea6\uff1a\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u6982\u5ff5\uff0c\u53d6\u51b3\u4e8e\u5f53\u524d\u8d44\u6e90\u7684\u53ef\u7528\u6838\u6570\u3002</p> <p>\u5e76\u884c\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u5206\u533a\u6570\u3002</p> <pre><code>object RDD_Par {\n  def main(args: Array[String]): Unit = {\n    // \u51c6\u5907\u73af\u5883\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"RDD\")\n    val sc = new SparkContext(sparkConf)\n\n    // RDD\u7684\u5e76\u884c\u5ea6\u548c\u5206\u533a\n    // makeRDD\u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u5206\u533a\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3adefaultParallelism\uff08\u9ed8\u8ba4\u5e76\u884c\u5ea6\uff09,\n    // \u662f\u4ece\u4e0a\u9762\u7684sparkConf\u4e2d\u83b7\u53d6\u7684\uff0c\u5373\u5f53\u524d\u73af\u5883\u7684\u6700\u5927\u53ef\u7528\u6838\u6570\n    val rdd = sc.makeRDD(List(1, 2, 3, 4), 2)\n    rdd.saveAsTextFile(\"output\")\n\n    // \u5173\u95ed\u73af\u5883\n    sc.stop()\n  }\n}\n</code></pre> <p>\u8bfb\u53d6\u5185\u5b58\u6570\u636e\u65f6\uff0c\u6570\u636e\u53ef\u4ee5\u6309\u7167\u5e76\u884c\u5ea6\u7684\u8bbe\u5b9a\u8fdb\u884c\u6570\u636e\u7684\u5206\u533a\u64cd\u4f5c\uff0c\u6570\u636e\u5206\u533a\u89c4\u5219\u7684 Spark \u6838\u5fc3\u6e90\u7801\u5982\u4e0b\uff1a</p> <pre><code>def positions(length: Long, numSlices: Int): Iterator[(Int, Int)] = {\n  (0 until numSlices).iterator.map { i =&gt;\n    val start = ((i * length) / numSlices).toInt\n    val end = (((i + 1) * length) / numSlices).toInt\n    (start, end)\n  }\n}\nobject RDD_Par_File {\n  def main(args: Array[String]): Unit = {\n    // \u51c6\u5907\u73af\u5883\n    val sparkConf = new SparkConf().setMaster(\"local[*]\").setAppName(\"RDD\")\n    val sc = new SparkContext(sparkConf)\n\n    // textFile\u53ef\u4ee5\u5c06\u6587\u4ef6\u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u9ed8\u8ba4\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5206\u533a\uff08\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09\n    // minPartitions\uff1a\u6700\u5c0f\u5206\u533a\u6570\u91cf\n    // math.min(defaultParallelism, 2)\n    val rdd = sc.textFile(\"data/1.txt\", 2)\n    rdd.saveAsTextFile(\"output\")\n\n    // \u5173\u95ed\u73af\u5883\n    sc.stop()\n  }\n}\n</code></pre> <p>\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u65f6\uff0c\u5206\u533a\u4e2a\u6570\u9ed8\u8ba4 = HDFS \u6587\u4ef6\u5207\u7247\u7684\u4e2a\u6570\u3002</p> <p>\u5047\u8bbe\u6587\u4ef6\u6709 7 \u4e2a\u5b57\u8282\uff0c<code>totalSize = 7</code> \uff0c<code>goalSize = 7/2 = 3</code> \uff0c<code>7/3 = 2 ... 1</code> \uff0c\u4e5f\u5c31\u662f\u8bf4 2 \u4e2a\u5206\u533a\u591f\u88c5 6 \u4e2a\u5b57\u8282\uff0c\u8fd8\u6709\u5269\u4f59 1 \u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u6b64\u65f6\u8fd9\u4e00\u4e2a\u5b57\u8282 <code>1/3 = 33.3% &gt; 10%</code> \uff0c\u8d85\u8fc7\u4e86 hadoop \u7684 1.1 \u500d\u539f\u5219\uff0c\u4f1a\u591a\u521b\u5efa\u4e00\u4e2a\u5206\u533a\uff0c\u56e0\u6b64\u6700\u7ec8\u4f1a\u521b\u5efa 3 \u4e2a\u5206\u533a\u3002</p> <p>Spark \u5206\u533a\u6570\u636e\u7684\u5206\u914d\uff1a</p> <ul> <li>Spark \u8bfb\u53d6\u6587\u4ef6\uff0c\u91c7\u53d6\u7684\u662f hadoop \u7684\u65b9\u5f0f\u8bfb\u53d6\uff0c\u5373\u4e00\u884c\u4e00\u884c\u5730\u8bfb\u53d6\uff0c\u548c\u5b57\u8282\u6570\u65e0\u5173\u3002</li> <li>\u6570\u636e\u8bfb\u53d6\u65f6\u4ee5\u504f\u79fb\u91cf\u4e3a\u5355\u4f4d\u3002</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#rdd_2","title":"RDD \u7b97\u5b50","text":"<p>\u7b97\u5b50\uff1a\u5373 RDD \u7684\u65b9\u6cd5\u3002</p> <ul> <li>\u5206\u5e03\u5f0f\u96c6\u5408\u5bf9\u8c61\u4e0a\u7684 API \u79f0\u4e4b\u4e3a\u7b97\u5b50\u3002</li> <li>\u672c\u5730\u5bf9\u8c61\u7684 API \u79f0\u4e4b\u4e3a\u65b9\u6cd5\u3002</li> </ul> <p>RDD \u7b97\u5b50\u5206\u4e3a\u4e24\u5927\u7c7b\uff1aTransformation \u548c Action\u3002</p> <ul> <li>Transformation\uff1a\u8f6c\u6362\u7b97\u5b50\uff0c\u5c06\u539f\u6709 RDD \u8f6c\u6362\u4e3a\u65b0\u7684 RDD\uff0c\u61d2\u52a0\u8f7d\uff0c\u4e0d\u4f1a\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002</li> <li>Action\uff1a\u884c\u52a8\u7b97\u5b50\uff0c\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_2","title":"\u76f8\u4f3c\u7b97\u5b50\u6bd4\u8f83","text":""},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#shuffle","title":"\u54ea\u4e9b\u7b97\u5b50\u4f1a\u4ea7\u751f Shuffle","text":""},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_3","title":"\u5bbd\u7a84\u4f9d\u8d56","text":"<p>\u5982\u679c\u7236 RDD \u4e2d\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\u53ea\u6d41\u5411\u5b50 RDD \u4e2d\u7684\u4e00\u4e2a\u5206\u533a\uff0c\u8fd9\u79cd\u4f9d\u8d56\u88ab\u79f0\u4e3a\u7a84\u4f9d\u8d56\uff08Narrow Dependency\uff09\u3002</p> <p>\u5982\u679c\u7236 RDD \u4e2d\u4e00\u4e2a\u5206\u533a\u7684\u6570\u636e\u9700\u8981\u4e00\u90e8\u5206\u6d41\u5165\u5b50 RDD \u7684\u67d0\u4e00\u4e2a\u5206\u533a\uff0c\u53e6\u5916\u4e00\u90e8\u5206\u6d41\u5165\u5b50 RDD \u7684\u53e6\u5916\u5206\u533a\uff0c\u8fd9\u79cd\u4f9d\u8d56\u88ab\u79f0\u4e3a\u5bbd\u4f9d\u8d56\uff08Shuffle Dependency\uff09\u3002</p> <p>Summary</p> <p>\u5982\u679c parent RDD \u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u533a\u4e2d\u7684\u6570\u636e\u9700\u8981\u5168\u90e8\u6d41\u5165 child RDD \u7684\u67d0\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u533a\uff0c\u5219\u662f\u7a84\u4f9d\u8d56\u3002\u5982\u679c parent RDD \u5206\u533a\u4e2d\u7684\u6570\u636e\u9700\u8981\u4e00\u90e8\u5206\u6d41\u5165 child RDD \u7684\u67d0\u4e00\u4e2a\u5206\u533a\uff0c\u53e6\u5916\u4e00\u90e8\u5206\u6d41\u5165 child RDD \u7684\u53e6\u5916\u5206\u533a\uff0c\u5219\u662f\u5bbd\u4f9d\u8d56\u3002</p> <p></p> <p></p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#stage","title":"Stage \u5212\u5206","text":"<p>DAG \u8bb0\u5f55\u4e86 RDD \u7684\u8f6c\u6362\u8fc7\u7a0b\u548c\u4efb\u52a1\u7684\u9636\u6bb5\uff08stage\uff09\u3002</p> <p></p> <p>\u7528\u4e00\u53e5\u8bdd\u6765\u6982\u62ec\u4ece DAG \u5230 Stages \u7684\u62c6\u5206\u8fc7\u7a0b\uff0c\u90a3\u5c31\u662f\uff1a\u4ee5 Actions \u7b97\u5b50\u4e3a\u8d77\u70b9\uff0c\u4ece\u540e\u5411\u524d\u56de\u6eaf DAG\uff0c\u4ee5 Shuffle \u64cd\u4f5c\u4e3a\u8fb9\u754c\u53bb\u5212\u5206 Stages\u3002\u6bcf\u4e2a Stage \u91cc Task \u7684\u6570\u91cf\u7531 Stage \u4e2d\u6700\u540e\u4e00\u4e2a RDD \u7684\u5206\u533a\u6570\u91cf\u51b3\u5b9a\u3002</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u5212\u5206\u9636\u6bb5\uff1f</p> <ol> <li>stage \u4e2d\u751f\u6210\u7684 task \u4e0d\u4f1a\u592a\u5927\u4e5f\u4e0d\u4f1a\u592a\u5c0f\uff0c\u800c\u4e14\u662f\u540c\u6784\u7684\uff0c\u4fbf\u4e8e\u5e76\u884c\u6267\u884c</li> <li>\u53ef\u4ee5\u5c06\u591a\u4e2a\u64cd\u4f5c\u653e\u5728\u4e00\u4e2a task \u91cc\u5904\u7406\uff0c\u4f7f\u5f97\u64cd\u4f5c\u53ef\u4ee5\u8fdb\u884c\u4e32\u884c\u3001\u6d41\u6c34\u7ebf\u5f0f\u7684\u5904\u7406\uff0c\u63d0\u9ad8\u6570\u636e\u5904\u7406\u6548\u7387</li> <li>\u65b9\u4fbf\u5bb9\u9519\uff0c\u5982\u4e00\u4e2a stage \u5931\u6548\uff0c\u53ef\u4ee5\u91cd\u65b0\u8fd0\u884c stage \u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8fd0\u884c\u6574\u4e2a job</li> </ol> <p>\u7269\u7406\u8ba1\u5212\u751f\u6210\u8fc7\u7a0b\uff1a</p> <ol> <li>\u6839\u636e action \u7b97\u5b50\u5c06\u5e94\u7528\u5212\u5206\u4e3a\u591a\u4e2a job</li> <li>\u6839\u636e\u5bbd\u4f9d\u8d56\u5c06 job \u5212\u5206\u4e3a\u591a\u4e2a stage</li> <li>\u5728\u6bcf\u4e2a stage \u4e2d\uff0c\u6839\u636e\u6700\u540e\u4e00\u4e2a RDD \u7684\u5206\u533a\u4e2a\u6570\u5c06 stage \u5212\u5206\u4e3a\u591a\u4e2a task</li> </ol>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#shuffle_1","title":"Shuffle \u673a\u5236","text":"<p>Shuffle \u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u573a\u666f\u4e2d\uff0c\u5b83\u88ab\u5f15\u7533\u4e3a\u96c6\u7fa4\u8303\u56f4\u5185\u8de8\u8282\u70b9\u3001\u8de8\u8fdb\u7a0b\u7684\u6570\u636e\u5206\u53d1\u3002\u5206\u5e03\u5f0f\u6570\u636e\u96c6\u5728\u96c6\u7fa4\u5185\u7684\u5206\u53d1\uff0c\u4f1a\u5f15\u5165\u5927\u91cf\u7684\u78c1\u76d8 I/O \u4e0e\u7f51\u7edc I/O\u3002</p> <p>Shuffle \u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u5c06\u6570\u636e\u91cd\u65b0\u7ec4\u7ec7\uff0c\u4f7f\u5176\u80fd\u591f\u5728\u4e0a\u6e38\u548c\u4e0b\u6e38 task \u4e4b\u95f4\u8fdb\u884c\u4f20\u9012\u548c\u8ba1\u7b97\u3002</p> <p>Map \u9636\u6bb5\u548c Reduce \u9636\u6bb5\u4e4b\u95f4\u5982\u4f55\u5b8c\u6210\u6570\u636e\u4ea4\u6362\uff1f</p> <p>\u901a\u8fc7\u751f\u4ea7\u4e0e\u6d88\u8d39 Shuffle \u4e2d\u95f4\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u6765\u5b8c\u6210\u96c6\u7fa4\u8303\u56f4\u5185\u7684\u6570\u636e\u4ea4\u6362\u3002</p> <p></p> <p>\u5728 Map \u6267\u884c\u9636\u6bb5\uff0c\u6bcf\u4e2a Task \u90fd\u4f1a\u751f\u6210\u5305\u542b data \u6587\u4ef6\u4e0e index \u6587\u4ef6\u7684 Shuffle \u4e2d\u95f4\u6587\u4ef6\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cShuffle \u6587\u4ef6\u7684\u751f\u6210\uff0c\u662f\u4ee5 Map Task \u4e3a\u7c92\u5ea6\u7684\uff0cMap \u9636\u6bb5\u6709\u591a\u5c11\u4e2a Map Task\uff0c\u5c31\u4f1a\u751f\u6210\u591a\u5c11\u4efd Shuffle \u4e2d\u95f4\u6587\u4ef6\u3002</p> <p>Spark Shuffle \u5206\u4e3a\u4e24\u79cd\uff1a\u4e00\u79cd\u662f\u57fa\u4e8e Hash \u7684 Shuffle\uff0c\u53e6\u4e00\u79cd\u662f\u57fa\u4e8e Sort \u7684 Shuffle\u3002\u4f46\u662f\u5728 Spark 2.0 \u7248\u672c\u4e2d\uff0cHash Shuffle \u65b9\u5f0f\u5df1\u7ecf\u4e0d\u518d\u4f7f\u7528\u3002Spark \u653e\u5f03\u57fa\u4e8e Hash \u7684 Shuffle \u7684\u539f\u56e0\u662f\uff0cHash Shuffle \u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u5c0f\u6587\u4ef6\uff0c\u5f53\u6570\u636e\u91cf\u8d8a\u6765\u8d8a\u591a\u65f6\uff0c\u4ea7\u751f\u7684\u6587\u4ef6\u91cf\u662f\u4e0d\u53ef\u63a7\u7684\uff0c\u8fd9\u4e25\u91cd\u5236\u7ea6\u4e86 Spark \u7684\u6027\u80fd\u53ca\u6269\u5c55\u80fd\u529b\u3002\u4f46\u662f\u57fa\u4e8e Sort \u7684 Shuffle \u4f1a\u5f3a\u5236\u8981\u6c42\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u4f1a\u589e\u52a0\u8ba1\u7b97\u65f6\u5ef6\u3002</p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hashshuffle","title":"HashShuffle","text":"<p>\u5c06\u6bcf\u4e2a task \u5904\u7406\u7684\u6570\u636e\u6309 key \u8fdb\u884c hash partition\uff0c\u4ece\u800c\u5c06\u76f8\u540c key \u90fd\u5199\u5165\u540c\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\u4e2d\uff0c\u800c\u6bcf\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\u90fd\u53ea\u5c5e\u4e8e\u4e0b\u6e38 stage \u7684\u4e00\u4e2a task\u3002\u5728\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\u4e4b\u524d\uff0c\u4f1a\u5148\u5c06\u6570\u636e\u5199\u5165\u5185\u5b58\u7f13\u51b2\u4e2d\uff0c\u5f53\u5185\u5b58\u7f13\u51b2\u586b\u6ee1\u4e4b\u540e\uff0c\u624d\u4f1a\u6ea2\u5199\u5230\u78c1\u76d8\u6587\u4ef6\u4e2d\u53bb\u3002</p> <p>\u672a\u7ecf\u4f18\u5316\u7684 Hash Shuffle \u4f1a\u4ea7\u751f \u4e0a\u6e38 <code>task \u4e2a\u6570 * \u4e0b\u6e38 task \u4e2a\u6570</code> \u7684\u6587\u4ef6\u6570\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u5c0f\u6587\u4ef6\u548c\u78c1\u76d8 IO\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\u3002</p> <p></p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hashshuffle_1","title":"\u4f18\u5316\u7684 HashShuffle","text":"<p>\u4e3a\u4e86\u4f18\u5316 HashShuffle \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u53c2\u6570\uff1a<code>spark.shuffle.consolidateFiles</code></p> <p>\u76f8\u6bd4\u4e8e\u672a\u7ecf\u4f18\u5316\u7684\u7248\u672c\uff0c\u5c31\u662f\u5728\u4e00\u4e2a Executor \u4e2d\u7684\u6240\u6709\u7684 task \u662f\u53ef\u4ee5\u5171\u7528\u4e00\u4e2a buffer \u5185\u5b58\u3002\u5728 shuffle write \u8fc7\u7a0b\u4e2d\uff0ctask \u5c31\u4e0d\u662f\u4e3a\u4e0b\u6e38 stage \u7684\u6bcf\u4e2a task \u521b\u5efa\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\u4e86\uff0c\u800c\u662f\u5141\u8bb8\u4e0d\u540c\u7684 task \u590d\u7528\u540c\u4e00\u6279\u78c1\u76d8\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6709\u6548\u5c06\u591a\u4e2a task \u7684\u78c1\u76d8\u6587\u4ef6\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7684\u5408\u5e76\uff0c\u4ece\u800c\u5927\u5e45\u5ea6\u51cf\u5c11\u78c1\u76d8\u6587\u4ef6\u7684\u6570\u91cf\uff0c\u8fdb\u800c\u63d0\u5347 shuffle write \u7684\u6027\u80fd\u3002\u6b64\u65f6\u7684\u6587\u4ef6\u4e2a\u6570\u662f <code>CPU core \u7684\u6570\u91cf \u00d7 \u4e0b\u4e00\u4e2a stage \u7684 task \u6570\u91cf</code>\u3002</p> <p></p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#hashshuffle_2","title":"HashShuffle \u603b\u7ed3","text":"<p>\u57fa\u4e8e Hash \u7684 Shuffle \u673a\u5236\u7684\u4f18\u7f3a\u70b9</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u53ef\u4ee5\u7701\u7565\u4e0d\u5fc5\u8981\u7684\u6392\u5e8f\u5f00\u9500\u3002</li> <li>\u907f\u514d\u4e86\u6392\u5e8f\u6240\u9700\u7684\u5185\u5b58\u5f00\u9500\u3002</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u751f\u4ea7\u7684\u6587\u4ef6\u8fc7\u591a\uff0c\u4f1a\u5bf9\u6587\u4ef6\u7cfb\u7edf\u9020\u6210\u538b\u529b\u3002</li> <li>\u5927\u91cf\u5c0f\u6587\u4ef6\u7684\u968f\u673a\u8bfb\u5199\u5e26\u6765\u4e00\u5b9a\u7684\u78c1\u76d8\u5f00\u9500\u3002</li> <li>\u6570\u636e\u5757\u5199\u5165\u65f6\u6240\u9700\u7684\u7f13\u5b58\u7a7a\u95f4\u4e5f\u4f1a\u968f\u4e4b\u589e\u52a0\uff0c\u5bf9\u5185\u5b58\u9020\u6210\u538b\u529b\u3002</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#sortshuffle","title":"SortShuffle","text":"<p>SortShuffleManager \u7684\u8fd0\u884c\u673a\u5236\u4e3b\u8981\u5206\u6210\u4e09\u79cd\uff1a</p> <ul> <li>\u666e\u901a\u8fd0\u884c\u673a\u5236</li> <li>bypass \u8fd0\u884c\u673a\u5236\uff0c\u5f53 shuffle read task \u7684\u6570\u91cf\u5c0f\u4e8e\u7b49\u4e8e <code>spark.shuffle.sort.bypassMergeThreshold</code> \u53c2\u6570\u7684\u503c\u65f6\uff08\u9ed8\u8ba4\u4e3a 200\uff09\uff0c\u5c31\u4f1a\u542f\u7528 bypass \u673a\u5236</li> <li>Tungsten Sort \u8fd0\u884c\u673a\u5236\uff0c\u5f00\u542f\u6b64\u8fd0\u884c\u673a\u5236\u9700\u8bbe\u7f6e\u914d\u7f6e\u9879 <code>spark.shuffle.manager=tungsten-sort</code>\u3002\u5f00\u542f\u6b64\u9879\u914d\u7f6e\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u5c31\u4e00\u5b9a\u91c7\u7528\u6b64\u8fd0\u884c\u673a\u5236\u3002</li> </ul> <p>\u666e\u901a\u8fd0\u884c\u673a\u5236\uff1a</p> <p>\u5728\u8be5\u6a21\u5f0f\u4e0b\uff0c\u6570\u636e\u4f1a\u5148\u5199\u5165\u4e00\u4e2a\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u6b64\u65f6\u6839\u636e\u4e0d\u540c\u7684 shuffle \u7b97\u5b50\uff0c\u53ef\u80fd\u9009\u7528\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u662f reduceByKey \u8fd9\u79cd\u805a\u5408\u7c7b\u7684 shuffle \u7b97\u5b50\uff0c\u90a3\u4e48\u4f1a\u9009\u7528 Map \u6570\u636e\u7ed3\u6784\uff0c\u4e00\u8fb9\u901a\u8fc7 Map \u8fdb\u884c\u805a\u5408\uff0c\u4e00\u8fb9\u5199\u5165\u5185\u5b58\uff1b\u5982\u679c\u662f join \u8fd9\u79cd\u666e\u901a\u7684 shuffle \u7b97\u5b50\uff0c\u90a3\u4e48\u4f1a\u9009\u7528 Array \u6570\u636e\u7ed3\u6784\uff0c\u76f4\u63a5\u5199\u5165\u5185\u5b58\u3002\u63a5\u7740\uff0c\u6bcf\u5199\u4e00\u6761\u6570\u636e\u8fdb\u5165\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e4b\u540e\uff0c\u5c31\u4f1a\u5224\u65ad\u4e00\u4e0b\uff0c\u662f\u5426\u8fbe\u5230\u4e86\u67d0\u4e2a\u4e34\u754c\u9608\u503c\u3002\u5982\u679c\u8fbe\u5230\u4e34\u754c\u9608\u503c\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c1d\u8bd5\u5c06\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6570\u636e\u6ea2\u5199\u5230\u78c1\u76d8\uff0c\u7136\u540e\u6e05\u7a7a\u5185\u5b58\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u5728\u6ea2\u5199\u5230\u78c1\u76d8\u6587\u4ef6\u4e4b\u524d\uff0c\u4f1a\u5148\u6839\u636e key \u5bf9\u5185\u5b58\u6570\u636e\u7ed3\u6784\u4e2d\u5df2\u6709\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u8fc7\u540e\uff0c\u4f1a\u5206\u6279\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u3002\u9ed8\u8ba4\u7684 batch \u6570\u91cf\u662f 10000 \u6761\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u4f1a\u4ee5\u6bcf\u6279 1 \u4e07\u6761\u6570\u636e\u7684\u5f62\u5f0f\u5206\u6279\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u3002\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u662f\u901a\u8fc7 Java \u7684 BufferedOutputStream \u5b9e\u73b0\u7684\u3002BufferedOutputStream \u662f Java \u7684\u7f13\u51b2\u8f93\u51fa\u6d41\uff0c\u9996\u5148\u4f1a\u5c06\u6570\u636e\u7f13\u51b2\u5728\u5185\u5b58\u4e2d\uff0c\u5f53\u5185\u5b58\u7f13\u51b2\u6ee1\u6ea2\u4e4b\u540e\u518d\u4e00\u6b21\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u78c1\u76d8 IO \u6b21\u6570\uff0c\u63d0\u5347\u6027\u80fd\u3002</p> <p>\u4e00\u4e2a task \u5c06\u6240\u6709\u6570\u636e\u5199\u5165\u5185\u5b58\u6570\u636e\u7ed3\u6784\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u53d1\u751f\u591a\u6b21\u78c1\u76d8\u6ea2\u5199\u64cd\u4f5c\uff0c\u4e5f\u5c31\u4f1a\u4ea7\u751f\u591a\u4e2a\u4e34\u65f6\u6587\u4ef6\u3002\u6700\u540e\u4f1a\u5c06\u4e4b\u524d\u6240\u6709\u7684\u4e34\u65f6\u78c1\u76d8\u6587\u4ef6\u90fd\u8fdb\u884c\u5408\u5e76\uff0c\u8fd9\u5c31\u662f merge \u8fc7\u7a0b\uff0c\u6b64\u65f6\u4f1a\u5c06\u4e4b\u524d\u6240\u6709\u4e34\u65f6\u78c1\u76d8\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u8bfb\u53d6\u51fa\u6765\uff0c\u7136\u540e\u4f9d\u6b21\u5199\u5165\u6700\u7ec8\u7684\u78c1\u76d8\u6587\u4ef6\u4e4b\u4e2d\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u4e00\u4e2a task \u5c31\u53ea\u5bf9\u5e94\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u8be5 task \u4e3a\u4e0b\u6e38 stage \u7684 task \u51c6\u5907\u7684\u6570\u636e\u90fd\u5728\u8fd9\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u8fd8\u4f1a\u5355\u72ec\u5199\u4e00\u4efd\u7d22\u5f15\u6587\u4ef6\uff0c\u5176\u4e2d\u6807\u8bc6\u4e86\u4e0b\u6e38\u5404\u4e2a task \u7684\u6570\u636e\u5728\u6587\u4ef6\u4e2d\u7684 start offset \u4e0e end offset\u3002</p> <p></p> <p>Bypass \u8fd0\u884c\u673a\u5236\uff1a</p> <p>\u4e0b\u6e38\u4efb\u52a1\u6570\u6bd4\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u4e8e Hash Shuffle \u5b9e\u73b0\u673a\u5236\u660e\u663e\u6bd4\u57fa\u4e8e Sort Shuffle \u5b9e\u73b0\u673a\u5236\u8981\u5feb\uff0c\u56e0\u6b64\u57fa\u4e8e Sort Shuffle \u5b9e\u73b0\u673a\u5236\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e26 Hash \u98ce\u683c\u7684\u56de\u9000\u65b9\u6848\uff0c\u5c31\u662f bypass \u8fd0\u884c\u673a\u5236\u3002\u5bf9\u4e8e Reducer \u7aef\u5206\u533a\u4e2a\u6570\u5c11\u4e8e\u914d\u7f6e\u5c5e\u6027 <code>spark.shuffle.sort.bypassMergeThreshold</code> \u8bbe\u7f6e\u7684\u4e2a\u6570\u65f6\uff0c\u4f7f\u7528\u5e26 Hash \u98ce\u683c\u7684\u56de\u9000\u8ba1\u5212\u3002</p> <p>bypass \u8fd0\u884c\u673a\u5236\u7684\u89e6\u53d1\u6761\u4ef6\u5982\u4e0b\uff1a</p> <ul> <li>\u5206\u533a\u4e2a\u6570\u5c0f\u4e8e <code>spark.shuffle.sort.bypassMergeThreshold</code> \u53c2\u6570\u7684\u503c\u3002</li> <li>\u4e0d\u662f\u805a\u5408\u7c7b\u7684 shuffle \u7b97\u5b50\u3002\uff08\u56e0\u4e3a\u805a\u5408\u7c7b\u7b97\u5b50\u901a\u5e38\u9700\u8981\u4f7f\u7528 Map \u6570\u636e\u7ed3\u6784\u5206\u533a\u3001\u805a\u5408\u548c\u6392\u5e8f\uff09</li> </ul> <p>\u6b64\u65f6\uff0c\u6bcf\u4e2a task \u4f1a\u4e3a\u6bcf\u4e2a\u4e0b\u6e38 task \u90fd\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u78c1\u76d8\u6587\u4ef6\uff0c\u5e76\u5c06\u6570\u636e\u6309 key \u8fdb\u884c hash \u7136\u540e\u6839\u636e key \u7684 hash \u503c\uff0c\u5c06 key \u5199\u5165\u5bf9\u5e94\u7684\u78c1\u76d8\u6587\u4ef6\u4e4b\u4e2d\u3002\u5f53\u7136\uff0c\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u65f6\u4e5f\u662f\u5148\u5199\u5165\u5185\u5b58\u7f13\u51b2\uff0c\u7f13\u51b2\u5199\u6ee1\u4e4b\u540e\u518d\u6ea2\u5199\u5230\u78c1\u76d8\u6587\u4ef6\u7684\u3002\u6700\u540e\uff0c\u540c\u6837\u4f1a\u5c06\u6240\u6709\u4e34\u65f6\u78c1\u76d8\u6587\u4ef6\u90fd\u5408\u5e76\u6210\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u7d22\u5f15\u6587\u4ef6\u3002</p> <p>\u8be5\u8fc7\u7a0b\u7684\u78c1\u76d8\u5199\u673a\u5236\u5176\u5b9e\u8ddf\u672a\u7ecf\u4f18\u5316\u7684 HashShuffleManager \u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u90fd\u8981\u521b\u5efa\u6570\u91cf\u60ca\u4eba\u7684\u78c1\u76d8\u6587\u4ef6\uff0c\u53ea\u662f\u5728\u6700\u540e\u4f1a\u505a\u4e00\u4e2a\u78c1\u76d8\u6587\u4ef6\u7684\u5408\u5e76\u800c\u5df2\u3002\u56e0\u6b64\u5c11\u91cf\u7684\u6700\u7ec8\u78c1\u76d8\u6587\u4ef6\uff0c\u4e5f\u8ba9\u8be5\u673a\u5236\u76f8\u5bf9\u672a\u7ecf\u4f18\u5316\u7684 HashShuffleManager \u6765\u8bf4\uff0cshuffle read \u7684\u6027\u80fd\u4f1a\u66f4\u597d\u3002</p> <p>\u800c\u8be5\u673a\u5236\u4e0e\u666e\u901a SortShuffleManager \u8fd0\u884c\u673a\u5236\u7684\u4e0d\u540c\u5728\u4e8e\uff1a</p> <ul> <li>\u78c1\u76d8\u5199\u673a\u5236\u4e0d\u540c\uff08\u666e\u901a\u673a\u5236\u662f\u8fbe\u5230\u9608\u503c\u5c31\u6ea2\u5199\uff0cbypass \u673a\u5236\u662f hash partition\uff09</li> <li>\u4e0d\u4f1a\u8fdb\u884c\u6392\u5e8f\u3002</li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u542f\u7528\u8be5\u673a\u5236\u7684\u6700\u5927\u597d\u5904\u5728\u4e8e\uff0cshuffle write \u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u6570\u636e\u7684\u6392\u5e8f\u64cd\u4f5c\uff0c\u4e5f\u5c31\u8282\u7701\u6389\u4e86\u8fd9\u90e8\u5206\u7684\u6027\u80fd\u5f00\u9500\u3002</p> <p></p> <p>Tungsten Sort \u8fd0\u884c\u673a\u5236\uff1a</p> <p>Tungsten Sort \u662f\u5bf9\u666e\u901a Sort \u7684\u4e00\u79cd\u4f18\u5316\uff0cTungsten Sort \u4f1a\u8fdb\u884c\u6392\u5e8f\uff0c\u4f46\u6392\u5e8f\u7684\u4e0d\u662f\u5185\u5bb9\u672c\u8eab\uff0c\u800c\u662f\u5185\u5bb9\u5e8f\u5217\u5316\u540e\u5b57\u8282\u6570\u7ec4\u7684\u6307\u9488(\u5143\u6570\u636e)\uff0c\u628a\u6570\u636e\u7684\u6392\u5e8f\u8f6c\u53d8\u4e3a\u4e86\u6307\u9488\u6570\u7ec4\u7684\u6392\u5e8f\uff0c\u5b9e\u73b0\u4e86\u76f4\u63a5\u5bf9\u5e8f\u5217\u5316\u540e\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u7531\u4e8e\u76f4\u63a5\u57fa\u4e8e\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u9762\u6ca1\u6709\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u3002\u5185\u5b58\u7684\u6d88\u8017\u5927\u5927\u964d\u4f4e\uff0c\u76f8\u5e94\u7684\uff0c\u4f1a\u6781\u5927\u7684\u51cf\u5c11\u7684 GC \u7684\u5f00\u9500\u3002</p> <p>\u8981\u5b9e\u73b0 Tungsten Sort Shuffle \u673a\u5236\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>Shuffle \u4f9d\u8d56\u4e2d\u4e0d\u5e26\u805a\u5408\u64cd\u4f5c\u6216\u6ca1\u6709\u5bf9\u8f93\u51fa\u8fdb\u884c\u6392\u5e8f\u7684\u8981\u6c42\u3002</li> <li>Shuffle \u7684\u5e8f\u5217\u5316\u5668\u652f\u6301\u5e8f\u5217\u5316\u503c\u7684\u91cd\u5b9a\u4f4d\uff08\u5f53\u524d\u4ec5\u652f\u6301 KryoSerializer Spark SQL \u6846\u67b6\u81ea\u5b9a\u4e49\u7684\u5e8f\u5217\u5316\u5668\uff09\u3002</li> <li>Shuffle \u8fc7\u7a0b\u4e2d\u7684\u8f93\u51fa\u5206\u533a\u4e2a\u6570\u5c11\u4e8e 16777216 \u4e2a\u3002</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#sortshuffle_1","title":"SortShuffle \u603b\u7ed3","text":"<p>\u57fa\u4e8e Sort \u7684 Shuffle \u673a\u5236\u7684\u4f18\u7f3a\u70b9</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u5c0f\u6587\u4ef6\u7684\u6570\u91cf\u5927\u91cf\u51cf\u5c11\uff0cMapper \u7aef\u7684\u5185\u5b58\u5360\u7528\u53d8\u5c11</li> <li>Spark \u4e0d\u4ec5\u53ef\u4ee5\u5904\u7406\u5c0f\u89c4\u6a21\u7684\u6570\u636e\uff0c\u5373\u4f7f\u5904\u7406\u5927\u89c4\u6a21\u7684\u6570\u636e\uff0c\u4e5f\u4e0d\u4f1a\u5f88\u5bb9\u6613\u8fbe\u5230\u6027\u80fd\u74f6\u9888</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u5982\u679c Mapper \u4e2d Task \u7684\u6570\u91cf\u8fc7\u5927\uff0c\u4f9d\u65e7\u4f1a\u4ea7\u751f\u5f88\u591a\u5c0f\u6587\u4ef6\uff0c\u6b64\u65f6\u5728 Shuffle \u4f20\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\u5230 Reducer \u7aef\uff0c Reducer \u4f1a\u9700\u8981\u540c\u65f6\u5927\u91cf\u5730\u8bb0\u5f55\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u5bfc\u81f4\u5927\u91cf\u5185\u5b58\u6d88\u8017\u548c GC \u8d1f\u62c5\u5de8\u5927\uff0c\u9020\u6210\u7cfb\u7edf\u7f13\u6162\uff0c\u751a\u81f3\u5d29\u6e83</li> <li>\u5f3a\u5236\u4e86\u5728 Mapper \u7aef\u5fc5\u987b\u8981\u6392\u5e8f\uff0c\u5373\u4f7f\u6570\u636e\u672c\u8eab\u5e76\u4e0d\u9700\u8981\u6392\u5e8f</li> <li>\u5b83\u8981\u57fa\u4e8e\u8bb0\u5f55\u672c\u8eab\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u5c31\u662f Sort-Based Shuffle \u6700\u81f4\u547d\u7684\u6027\u80fd\u6d88\u8017\u3002</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#shuffle_2","title":"Shuffle \u4e3a\u4ec0\u4e48\u9700\u8981\u6392\u5e8f\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u8981\u5408\u5e76\u6ea2\u5199\u6587\u4ef6","text":"<p>\u4e3a\u4ec0\u4e48\u9700\u8981\u6392\u5e8f\uff1a</p> <ol> <li>\u65b9\u4fbf map \u7aef\u548c reduce \u7aef\u805a\u5408\uff0c\u76f8\u540c key \u7684\u6570\u636e\u4f1a\u88ab\u653e\u5230\u4e00\u8d77\uff0c\u907f\u514d\u6bcf\u6b21\u90fd\u8981\u5168\u91cf\u626b\u63cf\uff0c\u51cf\u5c11\u78c1\u76d8 IO</li> <li>\u6ea2\u5199\u524d\u7684\u6392\u5e8f\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u6ea2\u5199\u6587\u4ef6\u5c40\u90e8\u6709\u5e8f\uff0c\u65b9\u4fbf\u6700\u7ec8\u7684\u5408\u5e76\uff08merge\uff09\uff0c\u51cf\u5c11\u78c1\u76d8 IO</li> </ol> <p>\u4e3a\u4ec0\u4e48\u8981\u5408\u5e76\u6ea2\u5199\u6587\u4ef6\uff1a</p> <ul> <li>\u907f\u514d\u4ea7\u751f\u5927\u91cf\u7684\u5c0f\u6587\u4ef6\uff0c\u51cf\u5c11\u96c6\u7fa4\u7684\u7ba1\u7406\u8d44\u6e90\u5f00\u9500</li> <li>\u51cf\u5c11 reduce \u7aef\u8bfb\u53d6\u7684\u6587\u4ef6\u6570\u91cf\uff0c\u51cf\u5c11\u5185\u5b58\u5360\u7528\u548c\u78c1\u76d8 IO</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark-task","title":"Spark \u4e3a\u4ec0\u4e48\u8ba9 Task \u4ee5\u7ebf\u7a0b\u7684\u65b9\u5f0f\u8fd0\u884c\u800c\u4e0d\u662f\u8fdb\u7a0b","text":"<p>\u5728 Hadoop MapReduce \u4e2d\uff0c\u6bcf\u4e2a map/reduce task \u4ee5\u4e00\u4e2a Java \u8fdb\u7a0b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f task \u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u6bcf\u4e2a task \u72ec\u4eab\u8fdb\u7a0b\u8d44\u6e90\uff0c\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270\uff0c\u800c\u4e14\u76d1\u63a7\u7ba1\u7406\u4e5f\u6bd4\u8f83\u65b9\u4fbf\u3002\u4f46\u574f\u5904\u662f task \u4e4b\u95f4\u4e0d\u65b9\u4fbf\u5171\u4eab\u6570\u636e\uff08e.g.\u591a\u4e2a map task \u9700\u8981\u8bfb\u53d6\u540c\u4e00\u4efd\u5b57\u5178\uff0c\u9700\u8981\u5c06\u5b57\u5178\u52a0\u8f7d\u5230\u6bcf\u4e2a map task \u8fdb\u7a0b\u4e2d\uff0c\u9020\u6210\u91cd\u590d\u52a0\u8f7d\u3001\u8d44\u6e90\u6d6a\u8d39\uff09\u3002\u53e6\u5916\uff0c\u5728\u5e94\u7528\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u4e0d\u65ad\u542f\u505c\u65b0\u65e7 task\uff0c\u8fdb\u7a0b\u7684\u542f\u505c\u9700\u8981\u505a\u5f88\u591a\u521d\u59cb\u5316\u7b49\u5de5\u4f5c\uff0c\u6548\u7387\u6bd4\u8f83\u4f4e\u3002</p> <p>\u4e3a\u4e86\u6570\u636e\u5171\u4eab\u548c\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0cSpark \u91c7\u7528\u4ee5\u7ebf\u7a0b\u4e3a\u6700\u5c0f\u7684\u6267\u884c\u5355\u4f4d\uff0c\u4f46\u7f3a\u70b9\u662f\u7ebf\u7a0b\u95f4\u4f1a\u6709\u8d44\u6e90\u7ade\u4e89\u3002</p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#cache-persist","title":"cache \u548c persist","text":"<p>\u7f13\u5b58\u673a\u5236\u7684\u4e3b\u8981\u76ee\u7684\u662f\u52a0\u901f\u8ba1\u7b97\u3002</p> <ul> <li><code>rdd.cache()</code>\uff1a\u5c06 RDD \u6301\u4e45\u5316\u5230\u5185\u5b58\u4e2d</li> <li><code>rdd.persist()</code>\uff1a\u5c06 RDD \u6301\u4e45\u5316\u5230\u5185\u5b58\u6216\u78c1\u76d8\u4e2d</li> <li><code>rdd.unpersist()</code>\uff1a\u5c06 RDD \u4ece\u7f13\u5b58\u4e2d\u79fb\u9664</li> </ul> <p>Spark \u7684\u7f13\u5b58\u5177\u6709\u5bb9\u9519\u673a\u5236\uff0c\u5982\u679c\u4e00\u4e2a\u7f13\u5b58\u7684 RDD \u7684\u67d0\u4e2a\u5206\u533a\u4e22\u5931\u4e86\uff0cSpark \u5c06\u6309\u7167\u539f\u6765\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u81ea\u52a8\u91cd\u65b0\u8ba1\u7b97\u5e76\u8fdb\u884c\u7f13\u5b58\u3002</p> <p>cache() \u662f lazy \u6267\u884c\u7684\uff0c\u53ea\u6709\u9047\u5230 Action \u7b97\u5b50\u65f6\u624d\u4f1a\u6267\u884c\u3002</p> <p><code>cache() = persist(StorageLevel.MEMORY_ONLY)</code></p> <p>RDD \u7684 cache \u9ed8\u8ba4\u65b9\u5f0f\u91c7\u7528 MEMORY_ONLY\uff0cDataFrame \u7684 cache \u9ed8\u8ba4\u91c7\u7528 MEMORY_AND_DISK\uff08\u4f7f\u7528\u672a\u5e8f\u5217\u5316\u7684 Java \u5bf9\u8c61\u683c\u5f0f\uff0c\u4f18\u5148\u5c1d\u8bd5\u5c06\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u3002\u5982\u679c\u5185\u5b58\u4e0d\u591f\u5b58\u653e\u6240\u6709\u7684\u6570\u636e\uff0c\u4f1a\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\u6587\u4ef6\u4e2d\uff09\u3002</p> <p>\u7f13\u5b58\u7531 Executor \u7684 blockManager \u7ba1\u7406\uff0c\u4e00\u65e6 Driver \u6267\u884c\u7ed3\u675f\uff0cblockManager \u4e5f\u4f1a\u88ab\u91ca\u653e\uff0c\u56e0\u6b64\u7f13\u5b58\u7684\u6570\u636e\u4e5f\u4f1a\u4e22\u5931\u3002\u7f13\u5b58 RDD \u7684\u5206\u533a\u5b58\u50a8\u5728 blockManager \u7684 memoryStore \u4e2d\uff0cmemoryStore \u5305\u542b\u4e86\u4e00\u4e2a LinkedHashMap\uff0c\u7528\u6765\u5b58\u653e RDD \u7684\u5206\u533a\u3002\u540c\u65f6 Spark \u4e5f\u76f4\u63a5\u5229\u7528\u4e86 LinkedHashMap \u7684 LRU \u529f\u80fd\u5b9e\u73b0\u4e86\u7f13\u5b58\u66ff\u6362\u3002</p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#checkpoint","title":"checkpoint","text":"<p>Spark \u7684\u9519\u8bef\u5bb9\u5fcd\u673a\u5236\u7684\u6838\u5fc3\u65b9\u6cd5\uff1a</p> <ol> <li>\u91cd\u65b0\u6267\u884c\u8ba1\u7b97\u4efb\u52a1\uff08\u6839\u636e lineage \u6570\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c\u5728\u9519\u8bef\u53d1\u751f\u65f6\u56de\u6eaf\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u7684\u90e8\u5206\uff09</li> <li>checkpoint \u673a\u5236</li> </ol> <p>\u6240\u8c13\u7684\u68c0\u67e5\u70b9\u5176\u5b9e\u5c31\u662f\u901a\u8fc7\u5c06 RDD \u4e2d\u95f4\u7ed3\u679c\u5199\u5165\u78c1\u76d8\u7531\u4e8e\u8840\u7f18\u4f9d\u8d56\u8fc7\u957f\u4f1a\u9020\u6210\u5bb9\u9519\u6210\u672c\u8fc7\u9ad8\uff0c\u8fd9\u6837\u5c31\u4e0d\u5982\u5728\u4e2d\u95f4\u9636\u6bb5\u505a\u68c0\u67e5\u70b9\u5bb9\u9519\uff0c\u5982\u679c\u68c0\u67e5\u70b9\u4e4b\u540e\u6709\u8282\u70b9\u51fa\u73b0\u95ee\u9898\uff0c\u53ef\u4ee5\u4ece\u68c0\u67e5\u70b9\u5f00\u59cb\u91cd\u505a\u8840\u7f18\uff0c\u51cf\u5c11\u4e86\u5f00\u9500\u3002</p> <p>RDD Checkpoint \u4e5f\u662f\u5c06 RDD \u8fdb\u884c\u6301\u4e45\u5316\uff0c\u4f46\u662f\u53ea\u652f\u6301\u786c\u76d8\u5b58\u50a8\u3002\u548c\u7f13\u5b58\u4e0d\u540c\uff0cCheckpoint \u88ab\u8ba4\u4e3a\u662f\u5b89\u5168\u7684\uff0c\u4f1a\u5207\u65ad RDD \u7684\u8840\u7f18\u5173\u7cfb\u3002</p> <p>\u6211\u4eec\u77e5\u9053\u7f13\u5b58\u662f\u5206\u6563\u5b58\u50a8\u5728\u5404\u4e2a Executor \u4e0a\u7684\uff0cCheckpoint \u662f\u6536\u96c6\u5404\u4e2a\u5206\u533a\u7684\u6570\u636e\uff0c\u96c6\u4e2d\u5b58\u50a8\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u662f HDFS\u3001\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7b49\u3002</p> <p>checkpoint() \u662f\u7b49\u5230 job \u8ba1\u7b97\u7ed3\u675f\u4e4b\u540e\u518d\u91cd\u65b0\u542f\u52a8\u8be5 job \u8ba1\u7b97\u4e00\u904d\uff0c\u5bf9\u5176\u4e2d\u9700\u8981 checkpoint \u7684 RDD \u8fdb\u884c\u6301\u4e45\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u9700\u8981 checkpoint \u7684 RDD \u4f1a\u88ab\u8ba1\u7b97\u4e24\u6b21\u3002</p> <p>\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0cCheckpoint \u4e00\u822c\u548c Cache \u914d\u5408\u4f7f\u7528\uff0c\u5148\u5c06\u6570\u636e Cache \u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u518d\u5c06\u6570\u636e Checkpoint \u5230\u78c1\u76d8\u4e2d\u3002\u8fd9\u6837\u6267\u884c checkpoint \u7684 Job \u53ea\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6548\u7387\u3002</p> <p>Cache VS Checkpoint</p> <ul> <li>\u76ee\u7684\u4e0d\u540c\uff1acache \u7684\u76ee\u7684\u662f\u52a0\u901f\u8ba1\u7b97\uff0ccheckpoint \u7684\u76ee\u7684\u66f4\u591a\u662f\u4e3a\u4e86\u5bb9\u9519\uff0c\u5728 job \u8fd0\u884c\u5931\u8d25\u540e\u80fd\u591f\u5feb\u901f\u6062\u590d</li> <li>\u5b58\u50a8\u6027\u8d28\u548c\u4f4d\u7f6e\u4e0d\u540c\uff1acache \u662f\u4e3a\u4e86\u8bfb\u5199\u901f\u5ea6\u5feb\uff0c\u56e0\u6b64\u4e3b\u8981\u4f7f\u7528\u5185\u5b58\uff1b\u800c checkpoint \u662f\u4e3a\u4e86\u80fd\u591f\u53ef\u9760\u8bfb\u5199\uff0c\u56e0\u6b64\u4e3b\u8981\u4f7f\u7528\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf</li> <li>\u5199\u5165\u901f\u5ea6\u548c\u89c4\u5219\u4e0d\u540c\uff1a\u6570\u636e\u7f13\u5b58\u901f\u5ea6\u8f83\u5feb\uff0c\u5bf9 job \u7684\u6267\u884c\u65f6\u95f4\u5f71\u54cd\u8f83\u5c0f\uff1b\u800c checkpoint \u901f\u5ea6\u8f83\u6162\uff0c\u4f1a\u989d\u5916\u542f\u52a8\u4e13\u95e8\u7684 job \u8fdb\u884c\u6301\u4e45\u5316</li> <li>\u5bf9 lineage \u7684\u5f71\u54cd\u4e0d\u540c\uff1acache \u4e0d\u4f1a\u5207\u65ad RDD \u7684\u8840\u7f18\u5173\u7cfb\uff0ccheckpoint \u4f1a\u5207\u65ad RDD \u7684\u8840\u7f18\u5173\u7cfb</li> <li> <p>\u5e94\u7528\u573a\u666f\u4e0d\u540c\uff1acache \u9002\u5408\u4f1a\u88ab\u591a\u6b21\u8bfb\u53d6\u3001\u5360\u7528\u7a7a\u95f4\u4e0d\u662f\u5f88\u5927\u7684 RDD\uff1bcheckpoint \u9002\u7528\u4e8e\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\u590d\u6742\u3001\u91cd\u65b0\u8ba1\u7b97\u4ee3\u4ef7\u8f83\u9ad8\u7684 RDD</p> </li> <li> <p>cache \u662f\u5206\u6563\u5b58\u50a8\uff0c\u5404\u4e2a Executor \u5e76\u884c\u6267\u884c\uff0c\u6548\u7387\u9ad8</p> </li> <li>checkpoint \u662f\u96c6\u4e2d\u5b58\u50a8\uff0c\u9700\u8981\u5c06\u6570\u636e\u4ece\u5404\u4e2a Executor \u6536\u96c6\u5230 Driver</li> <li>cache \u7684\u6570\u636e\u5728 Driver \u6267\u884c\u7ed3\u675f\u540e\u4f1a\u88ab\u5220\u9664\uff0c\u800c checkpoint \u7684\u6570\u636e\u6301\u4e45\u5316\u5230\u4e86 HDFS \u6216\u672c\u5730\u78c1\u76d8\uff0c\u4e0d\u4f1a\u88ab\u5220\u9664\uff0c\u4e5f\u80fd\u88ab\u5176\u4ed6 Driver program \u4f7f\u7528</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_4","title":"\u5e7f\u64ad\u53d8\u91cf","text":"<p>\u5e7f\u64ad\u53d8\u91cf\uff1a\u5206\u5e03\u5f0f\u5171\u4eab\u53ea\u8bfb\u53d8\u91cf</p> <p>\u5e7f\u64ad\u53d8\u91cf\uff08Broadcast Variables\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u9ad8\u6548\u5206\u53d1\u8f83\u5927\u6570\u636e\u96c6\u7ed9\u6240\u6709\u5de5\u4f5c\u8282\u70b9\u7684\u673a\u5236\u3002\u5b83\u4eec\u53ef\u4ee5\u7528\u4e8e\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7f13\u5b58\u4e00\u4e2a\u53ea\u8bfb\u7684\u5927\u578b\u53d8\u91cf\uff0c\u4ee5\u4fbf\u5728\u5e76\u884c\u64cd\u4f5c\u4e2d\u5171\u4eab\u3002</p> <p>\u7531\u4e8e Executor \u662f\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u5185\u5404\u7ebf\u7a0b\u8d44\u6e90\u5171\u4eab\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u653e\u7f6e\u5728 Executor \u7684\u5185\u5b58\u4e2d\uff0c\u8fbe\u5230\u5171\u4eab\u7684\u76ee\u7684\u3002</p> <p>\u76f8\u6bd4\u4e8e\u95ed\u5305\u6570\u636e\u90fd\u662f\u4ee5 Task \u4e3a\u5355\u4f4d\u53d1\u9001\u7684\uff0c\u6bcf\u4e2a Task \u4e2d\u90fd\u5305\u542b\u95ed\u5305\u6570\u636e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e2a Executor \u4e2d\u542b\u6709\u5927\u91cf\u91cd\u590d\u7684\u6570\u636e\uff0c\u5360\u7528\u5927\u91cf\u7684\u5185\u5b58\u3002\u56e0\u6b64\uff0c\u5b8c\u5168\u53ef\u4ee5\u5c06\u4efb\u52a1\u4e2d\u7684\u95ed\u5305\u6570\u636e\u653e\u7f6e\u5728 Executor \u7684\u5185\u5b58\u4e2d\uff0c\u8fbe\u5230\u5171\u4eab\u7684\u76ee\u7684\u3002</p> <p>\u5f53\u591a\u4e2a Executor \u4e0a\u9700\u8981\u540c\u4e00\u4efd\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5e7f\u64ad\u53d8\u91cf\u5f62\u5f0f\u53d1\u9001\u6570\u636e\u3002\u5c24\u5176\u5f53\u8be5\u4efd\u6570\u636e\u5728\u591a\u4e2a Stage \u4e2d\u4f7f\u7528\u65f6\uff0c\u901a\u8fc7\u5e7f\u64ad\u53d8\u91cf\u4e00\u6b21\u6027\u53d1\u9001\u7684\u65b9\u6848\uff0c\u6267\u884c\u6027\u80fd\u5c06\u660e\u663e\u4f18\u4e8e\u5f53\u6570\u636e\u9700\u8981\u65f6\u518d\u53d1\u9001\u7684\u591a\u6b21\u53d1\u9001\u65b9\u6848\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u51cf\u5c11\u6570\u636e\u4f20\u8f93\uff1a\u901a\u8fc7\u5c06\u53ea\u8bfb\u53d8\u91cf\u5e7f\u64ad\u5230\u96c6\u7fa4\u4e2d\uff0c\u907f\u514d\u4e86\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u5927\u91cf\u6570\u636e\u7684\u5f00\u9500\uff0c\u51cf\u5c11\u4e86\u7f51\u7edc\u901a\u4fe1\u7684\u8d1f\u62c5\u3002</li> <li>\u63d0\u9ad8\u6027\u80fd\uff1a\u5e7f\u64ad\u53d8\u91cf\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u53ea\u6709\u4e00\u4efd\u526f\u672c\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u4f7f\u7528\u548c\u5783\u573e\u56de\u6536\u7684\u538b\u529b\uff0c\u63d0\u9ad8\u4e86\u4efb\u52a1\u7684\u6267\u884c\u6548\u7387\u3002</li> <li>\u5171\u4eab\u6570\u636e\uff1a\u5e7f\u64ad\u53d8\u91cf\u53ef\u4ee5\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u4efb\u52a1\u4e2d\u5171\u4eab\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u4efb\u52a1\u90fd\u53ef\u4ee5\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u636e\uff0c\u65b9\u4fbf\u6570\u636e\u5171\u4eab\u548c\u64cd\u4f5c\u3002</li> </ul> <p></p>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#_5","title":"\u7d2f\u52a0\u5668","text":"<p>\u7d2f\u52a0\u5668\uff1a\u5206\u5e03\u5f0f\u5171\u4eab\u53ea\u5199\u53d8\u91cf</p> <p>\u7d2f\u52a0\u5668\u7528\u6765\u628a Executor \u7aef\u53d8\u91cf\u4fe1\u606f\u805a\u5408\u5230 Driver \u7aef\u3002\u5728 Driver \u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5728 Executor \u7aef\u7684\u6bcf\u4e2a Task \u90fd\u4f1a\u5f97\u5230\u8fd9\u4e2a\u53d8\u91cf\u7684\u4e00\u4efd\u65b0\u7684\u526f\u672c\uff0c\u6bcf\u4e2a task \u66f4\u65b0\u8fd9\u4e9b\u526f\u672c\u7684\u503c\u540e\uff0c\u4f20\u56de Driver \u7aef\u8fdb\u884c merge\u3002</p> <p>\u7d2f\u52a0\u5668\u533a\u522b\u4e8e\u5e7f\u64ad\u53d8\u91cf\u7684\u7279\u6027\u662f\uff1a\u7d2f\u52a0\u5668\u53d6\u503c accumulator.value \u5728 Executor \u7aef\u65e0\u6cd5\u88ab\u8bfb\u53d6\uff0c\u53ea\u80fd\u5728 Driver \u7aef\u88ab\u8bfb\u53d6\uff0c\u800c Executor \u7aef\u53ea\u80fd\u6267\u884c\u7d2f\u52a0\u64cd\u4f5c\u3002</p> <p>\u6ce8\u610f\uff1a\u5728\u8f6c\u6362\u7b97\u5b50\u4e2d\u8c03\u7528\u7d2f\u52a0\u5668\uff0c\u5982\u679c\u6ca1\u6709\u884c\u52a8\u7b97\u5b50\u7684\u8bdd\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u6ca1\u6709\u6267\u884c\uff0c\u7d2f\u52a0\u5668\u7ed3\u679c\u4f1a\u4e0d\u6b63\u786e\u3002\u56e0\u6b64\u4e00\u822c\u60c5\u51b5\u4e0b\u7d2f\u52a0\u5668\u8981\u653e\u5728\u884c\u52a8\u7b97\u5b50\u4e2d\u4f7f\u7528\u3002\u540c\u65f6\u6ce8\u610f\uff0c\u5982\u679c\u4f7f\u7528\u7d2f\u52a0\u5668\u7684 RDD \u88ab\u591a\u6b21\u884c\u52a8\u7b97\u5b50\u4f7f\u7528\uff0c\u90a3\u4e48\u7d2f\u52a0\u5668\u4f1a\u88ab\u591a\u6b21\u8c03\u7528\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4ea7\u751f\u975e\u9884\u671f\u7684\u7ed3\u679c\uff08\u5efa\u8bae\u5728\u884c\u52a8\u7b97\u5b50\u524d <code>cache()</code>\uff09\u3002</p> <p>\u4e00\u4e9b\u601d\u8003\uff1a\u4e00\u4e9b\u7b80\u5355\u7684\u7edf\u8ba1\u7c7b\u7d2f\u52a0\u903b\u8f91\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u89e3\u51b3\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5168\u5c40\u5206\u5e03\u5f0f\u7684\u7d2f\u52a0\u5668\u907f\u514d shuffle\u3002</p> <p>\u7d2f\u52a0\u5668\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f</p> <p>\u5728\u5206\u5e03\u5f0f\u4ee3\u7801\u6267\u884c\u4e2d\uff0c\u8fdb\u884c\u5168\u5c40\u7d2f\u52a0\u6216\u7edf\u8ba1\u4fe1\u606f\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a\u5148\u5b9a\u4e49\u7d2f\u52a0\u5668\u53d8\u91cf\uff0c\u7136\u540e\u5728 RDD \u7b97\u5b50\u4e2d\u8c03\u7528 add \u51fd\u6570\uff0c\u4ece\u800c\u66f4\u65b0\u7d2f\u52a0\u5668\u72b6\u6001\uff0c\u6700\u540e\u901a\u8fc7\u8c03\u7528 value \u51fd\u6570\u6765\u83b7\u53d6\u7d2f\u52a0\u5668\u7684\u6700\u7ec8\u7ed3\u679c\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5206\u5e03\u5f0f\u7d2f\u52a0\uff1a\u7d2f\u52a0\u5668\u53d8\u91cf\u53ef\u4ee5\u5728\u5e76\u884c\u4efb\u52a1\u4e2d\u8fdb\u884c\u7d2f\u52a0\u64cd\u4f5c\uff0c\u65e0\u8bba\u4efb\u52a1\u5728\u96c6\u7fa4\u4e2d\u7684\u54ea\u4e2a\u8282\u70b9\u6267\u884c\uff0c\u90fd\u53ef\u4ee5\u6b63\u786e\u5730\u5bf9\u53d8\u91cf\u8fdb\u884c\u66f4\u65b0\uff0c\u786e\u4fdd\u4e86\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</li> <li>\u7edf\u8ba1\u4fe1\u606f\u6536\u96c6\uff1a\u7d2f\u52a0\u5668\u53d8\u91cf\u53ef\u4ee5\u7528\u4e8e\u6536\u96c6\u4efb\u52a1\u6267\u884c\u671f\u95f4\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u4f8b\u5982\u8ba1\u6570\u3001\u6c42\u548c\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u7b49\u3002\u8fd9\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8ba1\u7b97\u4e2d\u7684\u8c03\u8bd5\u548c\u76d1\u63a7\u975e\u5e38\u6709\u7528\u3002</li> </ul>"},{"location":"Spark/Spark%20%E9%9D%A2%E8%AF%95%E9%A2%98/#spark-oom","title":"Spark OOM","text":"<ul> <li>\u60c5\u51b5\u4e00\uff1a\u5728 Driver \u7aef\u51fa\u73b0 OOM</li> </ul> <p>\u4e00\u822c\u6765\u8bf4 Driver \u7684\u5185\u5b58\u5927\u5c0f\u4e0d\u7528\u8bbe\u7f6e\uff0c\u4f46\u662f\u5f53\u51fa\u73b0\u4f7f\u7528 collect() \u7b49 Action \u7b97\u5b50\u65f6\uff0cDriver \u4f1a\u5c06\u6240\u6709\u7684\u6570\u636e\u90fd\u62c9\u53d6\u5230 Driver \u7aef\uff0c\u5982\u679c\u6570\u636e\u91cf\u8fc7\u5927\uff0c\u5c31\u4f1a\u51fa\u73b0 OOM \u7684\u60c5\u51b5\u3002</p> <ul> <li>\u60c5\u51b5\u4e8c\uff1amapPartitions OOM</li> </ul> <p>mapPartitions \u53ef\u4ee5\u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u8fdb\u884c\u6570\u636e\u8f6c\u6362\u64cd\u4f5c\uff0c\u4f46\u662f\u4f1a\u5c06\u6574\u4e2a\u5206\u533a\u7684\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u8fdb\u884c\u5f15\u7528\uff0c\u5904\u7406\u5b8c\u7684\u6570\u636e\u662f\u4e0d\u4f1a\u88ab\u91ca\u653e\u7684\uff0c\u5b58\u5728\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u53ea\u6709\u7a0b\u5e8f\u7ed3\u675f\u624d\u4f1a\u91ca\u653e\u3002\u56e0\u6b64\u5728\u5185\u5b58\u8f83\u5c0f\u3001\u6570\u636e\u91cf\u8f83\u5927\u7684\u573a\u5408\u4e0b\uff0c\u5bb9\u6613\u5bfc\u81f4 OOM\u3002</p> <ul> <li>\u60c5\u51b5\u4e09\uff1aHash Join OOM</li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/","title":"Linux","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#_1","title":"\u6587\u4ef6\u7cfb\u7edf\u5e38\u89c1\u547d\u4ee4","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684 Linux \u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u64cd\u4f5c\u7684\u547d\u4ee4\uff1a</p> <ol> <li> <p><code>ls</code>\uff1a\u5217\u51fa\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u3002</p> </li> <li> <p><code>cd</code>\uff1a\u5207\u6362\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002</p> </li> <li> <p><code>pwd</code>\uff1a\u663e\u793a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u8def\u5f84\u3002</p> </li> <li> <p><code>mkdir</code>\uff1a\u521b\u5efa\u65b0\u76ee\u5f55\u3002</p> </li> <li> <p><code>rmdir</code>\uff1a\u5220\u9664\u7a7a\u76ee\u5f55\u3002</p> </li> <li> <p><code>cp</code>\uff1a\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\u3002</p> </li> <li> <p><code>mv</code>\uff1a\u79fb\u52a8\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u4e5f\u53ef\u7528\u4e8e\u91cd\u547d\u540d\u6587\u4ef6\u6216\u76ee\u5f55\u3002</p> </li> <li> <p><code>rm</code>\uff1a\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55\u3002</p> </li> <li> <p><code>touch</code>\uff1a\u521b\u5efa\u7a7a\u6587\u4ef6\u6216\u66f4\u65b0\u6587\u4ef6\u7684\u8bbf\u95ee\u548c\u4fee\u6539\u65f6\u95f4\u6233\u3002</p> </li> <li> <p><code>cat/head/tail/more/less</code>\uff1a\u5c06\u6587\u4ef6\u5185\u5bb9\u8f93\u51fa\u5230\u7ec8\u7aef\u3002</p> </li> <li> <p><code>chmod</code>\uff1a\u4fee\u6539\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6743\u9650\u3002</p> <pre><code>chmod permissions file_name\nchmod u+x file_name #\u7ed9\u6587\u4ef6\u6240\u6709\u8005\u6dfb\u52a0\u6267\u884c\u6743\u9650\n</code></pre> </li> <li> <p><code>chown</code>\uff1a\u4fee\u6539\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6240\u6709\u8005\u3002</p> <pre><code>chown user_name file_name\n</code></pre> </li> <li> <p><code>chgrp</code>\uff1a\u4fee\u6539\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6240\u5c5e\u7ec4\u3002</p> <pre><code>chgrp group_name file_name\n</code></pre> </li> <li> <p><code>find</code>\uff1a\u6839\u636e\u6761\u4ef6\u67e5\u627e\u6587\u4ef6\u3002</p> <pre><code>find directory -name \"filename_pattern\"\n</code></pre> </li> <li> <p><code>grep</code>\uff1a\u5728\u6587\u4ef6\u4e2d\u641c\u7d22\u5339\u914d\u6307\u5b9a\u6a21\u5f0f\u7684\u6587\u672c\u3002</p> <pre><code>grep \"pattern\" file_name\n</code></pre> </li> <li> <p><code>&gt;</code> \uff1a\u8f93\u51fa\u91cd\u5b9a\u5411\uff08\u8986\u76d6\uff09</p> <pre><code>echo \"aaa\" &gt; a.txt\n</code></pre> </li> <li> <p><code>&gt;&gt;</code> \uff1a\u8ffd\u52a0\u5185\u5bb9</p> </li> </ol>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#_2","title":"\u6253\u5305\u548c\u89e3\u538b\u7f29\u5e38\u89c1\u547d\u4ee4","text":"<pre><code>tar -zcvf test.tar.gz 1.txt 2.txt 3.txt # \u6253\u5305 + \u538b\u7f29\ntar -zxvf test.tar -C /home/destination # -C \u6307\u5b9a\u76ee\u5f55\u89e3\u538b\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#linux","title":"Linux \u6587\u4ef6\u6743\u9650","text":"<p>Linux \u4e2d\u7684\u6743\u9650\u7531\u4e09\u4e2a\u57fa\u672c\u6743\u9650\u7ec4\u6210\uff1a\u8bfb\u53d6\u6743\u9650\uff08Read\uff0c\u7b80\u5199\u4e3a \u00a0<code>r</code>\uff09\u3001\u5199\u5165\u6743\u9650\uff08Write\uff0c\u7b80\u5199\u4e3a \u00a0<code>w</code>\uff09\u548c\u6267\u884c\u6743\u9650\uff08Execute\uff0c\u7b80\u5199\u4e3a \u00a0<code>x</code>\uff09\u3002</p> <p>\u8fd9\u4e9b\u6743\u9650\u53ef\u4ee5\u5e94\u7528\u4e8e\u4e09\u4e2a\u4e0d\u540c\u7684\u7528\u6237\u7c7b\u522b\uff1a\u6587\u4ef6\u6240\u6709\u8005\uff08Owner\uff09\u3001\u6587\u4ef6\u6240\u5c5e\u7ec4\uff08Group\uff09\u548c\u5176\u4ed6\u7528\u6237\uff08Others\uff09\u3002</p> <p></p> <p>\u5728 Linux \u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4ee3\u8868\u8fd9\u4e2a\u6587\u4ef6\u662f\u76ee\u5f55\u3001\u6587\u4ef6\u6216\u94fe\u63a5\u6587\u4ef6\u7b49\u7b49\u3002</p> <ul> <li>\u5f53\u4e3a \u00a0<code>d</code>\u00a0 \u5219\u662f\u76ee\u5f55</li> <li>\u5f53\u4e3a \u00a0<code>-</code>\u00a0 \u5219\u662f\u6587\u4ef6\uff1b</li> <li>\u82e5\u662f \u00a0<code>l</code>\u00a0 \u5219\u8868\u793a\u4e3a\u94fe\u63a5\u6587\u6863 (link file)\uff1b</li> <li>\u82e5\u662f \u00a0<code>b</code>\u00a0 \u5219\u8868\u793a\u4e3a\u88c5\u7f6e\u6587\u4ef6\u91cc\u9762\u7684\u53ef\u4f9b\u50a8\u5b58\u7684\u63a5\u53e3\u8bbe\u5907 (\u53ef\u968f\u673a\u5b58\u53d6\u88c5\u7f6e)\uff1b</li> <li>\u82e5\u662f \u00a0<code>c</code>\u00a0 \u5219\u8868\u793a\u4e3a\u88c5\u7f6e\u6587\u4ef6\u91cc\u9762\u7684\u4e32\u884c\u7aef\u53e3\u8bbe\u5907\uff0c\u4f8b\u5982\u952e\u76d8\u3001\u9f20\u6807 (\u4e00\u6b21\u6027\u8bfb\u53d6\u88c5\u7f6e)\u3002</li> </ul> <p>Linux \u6587\u4ef6\u5c5e\u6027\u6709\u4e24\u79cd\u8bbe\u7f6e\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u6570\u5b57\uff0c\u4e00\u79cd\u662f\u7b26\u53f7\u3002</p> <p>Linux \u6587\u4ef6\u7684\u57fa\u672c\u6743\u9650\u5c31\u6709\u4e5d\u4e2a\uff0c\u5206\u522b\u662f \u00a0owner/group/others(\u62e5\u6709\u8005/\u7ec4/\u5176\u4ed6)\u00a0 \u4e09\u79cd\u8eab\u4efd\u5404\u6709\u81ea\u5df1\u7684 \u00a0read/write/execute\u00a0 \u6743\u9650\u3002</p> <p>\u82e5\u6587\u4ef6\u7684\u6743\u9650\u5b57\u7b26\u4e3a\uff1a<code>-rwxrwxrwx</code>\u00a0\uff0c\u5176\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6570\u5b57\u6765\u4ee3\u8868\u5404\u4e2a\u6743\u9650\uff0c\u5404\u6743\u9650\u7684\u5206\u6570\u5bf9\u7167\u8868\u5982\u4e0b\uff1a</p> <ul> <li>r: 4</li> <li>w: 2</li> <li>x: 1</li> </ul> <p>\u6bcf\u79cd\u8eab\u4efd (owner/group/others) \u5404\u81ea\u7684\u4e09\u4e2a\u6743\u9650 (r/w/x) \u5206\u6570\u662f\u9700\u8981\u7d2f\u52a0\u7684\uff0c\u4f8b\u5982\u5f53\u6743\u9650\u4e3a\uff1a\u00a0<code>-rwxrwx---</code>\u00a0 \u5206\u6570\u5219\u662f\uff1a</p> <ul> <li>owner = rwx = 4+2+1 = 7</li> <li>group = rwx = 4+2+1 = 7</li> <li>others = --- = 0+0+0 = 0</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#shell","title":"Shell \u7f16\u7a0b","text":"<p>Bash scripting cheatsheet (devhints.io)</p> <p>Example:</p> <pre><code>#!/bin/bash\necho \"Today is \" `date`\n\necho -e \"\\nenter the path to directory\"\nread the_path\n\necho -e \"\\n you path has the following files and folders: \"\nls $the_path\n</code></pre> <pre><code>chmod u+x run_all.sh\nsh run_all.sh\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#_3","title":"\u6761\u4ef6\u63a7\u5236","text":"<pre><code>if [[ condition ]];\nthen\n statement\nelif [[ condition ]]; then\n statement\nelse\n do this by default\nfi\n</code></pre> <pre><code>#!/bin/bash\necho \"Please enter a number: \"\nread num\n\nif [ $num -gt 0 ]; then\n  echo \"$num is positive\"\nelif [ $num -lt 0 ]; then\n  echo \"$num is negative\"\nelse\n  echo \"$num is zero\"\nfi\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#_4","title":"\u5faa\u73af","text":"<pre><code>#!/bin/bash\ni=1\nwhile [[ $i -le 10 ]] ; do\n   echo \"$i\"\n  (( i += 1 ))\ndone\n</code></pre> <pre><code>for ((i = 0 ; i &lt; 100 ; i++)); do\n  echo \"$i\"\ndone\n</code></pre> <pre><code>for i in {1..5}; do\n    echo \"Welcome $i\"\ndone\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#grep","title":"grep","text":"<p><code>grep</code> \u662f\u4e00\u4e2a\u5728 Linux \u7cfb\u7edf\u4e2d\u7528\u4e8e\u641c\u7d22\u6587\u672c\u7684\u5f3a\u5927\u547d\u4ee4\u3002\u5b83\u53ef\u4ee5\u6839\u636e\u6307\u5b9a\u7684\u6a21\u5f0f\uff08\u6b63\u5219\u8868\u8fbe\u5f0f\uff09\u5728\u6587\u4ef6\u4e2d\u67e5\u627e\u5339\u914d\u7684\u884c\uff0c\u5e76\u5c06\u5b83\u4eec\u8f93\u51fa\u5230\u7ec8\u7aef\u3002</p> <p>\u4ee5\u4e0b\u662f <code>grep</code> \u547d\u4ee4\u7684\u4e00\u822c\u8bed\u6cd5\uff1a</p> <pre><code>grep options pattern file\n</code></pre> <ul> <li> <p><code>options</code> \u662f\u53ef\u9009\u7684\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a <code>grep</code> \u547d\u4ee4\u7684\u4e0d\u540c\u9009\u9879\u548c\u6807\u5fd7\u3002</p> </li> <li> <p><code>pattern</code> \u662f\u8981\u641c\u7d22\u7684\u6a21\u5f0f\uff0c\u53ef\u4ee5\u662f\u666e\u901a\u5b57\u7b26\u4e32\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</p> </li> <li> <p><code>file</code> \u662f\u8981\u5728\u5176\u4e2d\u8fdb\u884c\u641c\u7d22\u7684\u6587\u4ef6\u540d\u6216\u6587\u4ef6\u5217\u8868\u3002\u5982\u679c\u7701\u7565\u6587\u4ef6\u540d\uff0c\u5219 <code>grep</code> \u4f1a\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6570\u636e\u3002</p> </li> </ul> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684 <code>grep</code> \u9009\u9879\u548c\u7528\u6cd5\u793a\u4f8b\uff1a</p> <ul> <li>\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d\u641c\u7d22\u5339\u914d\u7684\u884c\uff1a</li> </ul> <pre><code>grep \"pattern\" file.txt\n</code></pre> <ul> <li>\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u641c\u7d22\u5339\u914d\u7684\u884c\uff1a</li> </ul> <pre><code>grep \"pattern\" file1.txt file2.txt\n</code></pre> <ul> <li>\u5728\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u4e2d\u9012\u5f52\u641c\u7d22\u5339\u914d\u7684\u884c\uff1a</li> </ul> <pre><code>grep -r \"pattern\" directory/\n</code></pre> <ul> <li>\u5ffd\u7565\u5339\u914d\u6a21\u5f0f\u7684\u5927\u5c0f\u5199\uff1a</li> </ul> <pre><code>grep -i \"pattern\" file.txt\n</code></pre> <ul> <li>\u663e\u793a\u5339\u914d\u884c\u4e4b\u524d\u7684\u51e0\u884c\uff1a</li> </ul> <pre><code>grep -B 2 \"pattern\" file.txt\n</code></pre> <ul> <li>\u663e\u793a\u5339\u914d\u884c\u4e4b\u540e\u7684\u51e0\u884c\uff1a</li> </ul> <pre><code>grep -A 2 \"pattern\" file.txt\n</code></pre> <ul> <li>\u663e\u793a\u5339\u914d\u884c\u53ca\u5176\u4e0a\u4e0b\u6587\u7684\u51e0\u884c\uff1a</li> </ul> <pre><code>grep -C 2 \"pattern\" file.txt\n</code></pre> <ul> <li>\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u9ad8\u7ea7\u6a21\u5f0f\u5339\u914d\uff1a</li> </ul> <pre><code>grep \"[0-9]+[A-Z]+\" file.txt\n</code></pre> <ul> <li>\u53cd\u5411\u641c\u7d22\uff0c\u663e\u793a\u4e0d\u5339\u914d\u6a21\u5f0f\u7684\u884c\uff1a</li> </ul> <pre><code>grep -v \"pattern\" file.txt\n</code></pre> <ul> <li>\u7edf\u8ba1\u5339\u914d\u7684\u884c\u6570\uff1a</li> </ul> <pre><code>grep -c \"pattern\" file.txt\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#sed","title":"sed","text":"<p><code>sed</code>\uff08Stream Editor\uff09\u662f\u4e00\u4e2a\u6d41\u5f0f\u6587\u672c\u7f16\u8f91\u5668\uff0c\u7528\u4e8e\u5bf9\u6587\u672c\u8fdb\u884c\u8f6c\u6362\u3001\u66ff\u6362\u548c\u4fee\u6539\u3002\u5b83\u53ef\u4ee5\u5728\u6587\u4ef6\u5904\u7406\u7ba1\u9053\u4e2d\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u6587\u4ef6\u8fdb\u884c\u76f4\u63a5\u7f16\u8f91\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684 <code>sed</code> \u547d\u4ee4\u548c\u7528\u6cd5\u793a\u4f8b\uff1a</p> <ul> <li>\u66ff\u6362\u6587\u672c\u4e2d\u7684\u5b57\u7b26\u4e32\uff1a</li> </ul> <pre><code>sed 's/old_string/new_string/' file.txt\n</code></pre> <ul> <li>\u66ff\u6362\u6587\u672c\u4e2d\u7684\u6240\u6709\u5339\u914d\u9879\uff1a</li> </ul> <pre><code>sed 's/old_string/new_string/g' file.txt\n</code></pre> <ul> <li>\u66ff\u6362\u6587\u672c\u4e2d\u7684\u7b2c N \u4e2a\u5339\u914d\u9879\uff1a</li> </ul> <pre><code>sed 's/old_string/new_string/N' file.txt\n</code></pre> <ul> <li>\u5220\u9664\u6587\u672c\u4e2d\u7684\u5339\u914d\u884c\uff1a</li> </ul> <pre><code>sed '/pattern/d' file.txt\n</code></pre> <ul> <li>\u5220\u9664\u6587\u672c\u4e2d\u7684\u7a7a\u884c\uff1a</li> </ul> <pre><code>sed '/^$/d' file.txt\n</code></pre> <ul> <li>\u5728\u6307\u5b9a\u884c\u4e4b\u524d\u6216\u4e4b\u540e\u63d2\u5165\u6587\u672c\uff1a</li> </ul> <pre><code>sed '3i\\inserted_text' file.txt   # \u5728\u7b2c 3 \u884c\u4e4b\u524d\u63d2\u5165\u6587\u672c\nsed '5a\\appended_text' file.txt   # \u5728\u7b2c 5 \u884c\u4e4b\u540e\u63d2\u5165\u6587\u672c\n</code></pre> <ul> <li>\u6309\u6a21\u5f0f\u8fdb\u884c\u6587\u672c\u622a\u53d6\u548c\u63d0\u53d6\uff1a</li> </ul> <pre><code>sed -n '2,5p' file.txt   # \u63d0\u53d6\u7b2c 2 \u5230 5 \u884c\u7684\u6587\u672c\nsed -n '/pattern/p' file.txt   # \u63d0\u53d6\u5339\u914d\u6a21\u5f0f\u7684\u884c\n</code></pre> <ul> <li>\u6839\u636e\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u9ad8\u7ea7\u6a21\u5f0f\u5339\u914d\u548c\u66ff\u6362\uff1a</li> </ul> <pre><code>sed 's/[0-9]\\+/replacement/' file.txt   # \u66ff\u6362\u6570\u5b57\u4e3a\u6307\u5b9a\u5b57\u7b26\u4e32\nsed '/pattern/ s/replace_string/replacement/g' file.txt   # \u4ec5\u5728\u5339\u914d\u884c\u4e2d\u66ff\u6362\n</code></pre> <ul> <li>\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6 <code>sed</code> \u547d\u4ee4\uff1a</li> </ul> <pre><code>sed -f script.sed file.txt\n</code></pre> <p>\u8fd9\u4e9b\u662f <code>sed</code> \u547d\u4ee4\u7684\u4e00\u4e9b\u5e38\u89c1\u7528\u6cd5\u793a\u4f8b\uff0c\u6db5\u76d6\u4e86\u6587\u672c\u66ff\u6362\u3001\u5220\u9664\u3001\u63d2\u5165\u3001\u622a\u53d6\u548c\u9ad8\u7ea7\u6a21\u5f0f\u5339\u914d\u7b49\u529f\u80fd\u3002<code>sed</code> \u547d\u4ee4\u975e\u5e38\u5f3a\u5927\u4e14\u7075\u6d3b\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u548c\u4f7f\u7528\u4e0d\u540c\u7684\u9009\u9879\u548c\u547d\u4ee4\u5b9e\u73b0\u5404\u79cd\u6587\u672c\u8f6c\u6362\u548c\u7f16\u8f91\u64cd\u4f5c\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Linux/#awk","title":"awk","text":"<p>Awk \u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6587\u672c\u5904\u7406\u5de5\u5177\uff0c\u5e7f\u6cdb\u7528\u4e8e Linux \u7cfb\u7edf\u4e2d\u7684\u547d\u4ee4\u884c\u73af\u5883\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u800c\u7075\u6d3b\u7684\u65b9\u5f0f\u6765\u5bf9\u6587\u672c\u6587\u4ef6\u8fdb\u884c\u5206\u6790\u3001\u5904\u7406\u548c\u8f6c\u6362\u3002</p> <p>Awk \u7684\u540d\u5b57\u662f\u7531\u5176\u4e09\u4f4d\u521b\u59cb\u4eba\uff08Alfred Aho\u3001Peter Weinberger \u548c Brian Kernighan\uff09\u7684\u59d3\u6c0f\u9996\u5b57\u6bcd\u7ec4\u6210\u7684\u3002\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u9010\u884c\u8bfb\u53d6\u8f93\u5165\u6587\u672c\uff0c\u5c06\u6bcf\u884c\u5206\u5272\u6210\u5b57\u6bb5\uff0c\u5e76\u6839\u636e\u7528\u6237\u5b9a\u4e49\u7684\u89c4\u5219\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b Awk \u7684\u5e38\u7528\u7279\u6027\u548c\u7528\u6cd5\uff1a</p> <ul> <li>\u6a21\u5f0f\u4e0e\u52a8\u4f5c\uff1aAwk \u7684\u57fa\u672c\u7ed3\u6784\u662f\u6a21\u5f0f\u4e0e\u52a8\u4f5c\u7684\u7ec4\u5408\u3002\u6a21\u5f0f\u7528\u4e8e\u9009\u62e9\u611f\u5174\u8da3\u7684\u884c\uff0c\u800c\u52a8\u4f5c\u5219\u662f\u5728\u9009\u5b9a\u7684\u884c\u4e0a\u6267\u884c\u7684\u64cd\u4f5c\u3002\u5982\u679c\u672a\u63d0\u4f9b\u6a21\u5f0f\uff0c\u5219\u52a8\u4f5c\u5c06\u9002\u7528\u4e8e\u6240\u6709\u884c\u3002</li> </ul> <pre><code>awk '/pattern/ { action }' file.txt\n</code></pre> <ul> <li>\u5b57\u6bb5\u5206\u5272\uff1aAwk \u9ed8\u8ba4\u5c06\u6bcf\u884c\u6309\u7a7a\u683c\u6216\u5236\u8868\u7b26\u5206\u5272\u6210\u5b57\u6bb5\uff0c\u5e76\u5c06\u5b57\u6bb5\u5b58\u50a8\u5728\u53d8\u91cf <code>$1</code>, <code>$2</code>, <code>$3</code> \u7b49\u4e2d\u3002\u53ef\u4ee5\u4f7f\u7528 <code>-F</code> \u9009\u9879\u6307\u5b9a\u4e0d\u540c\u7684\u5b57\u6bb5\u5206\u9694\u7b26\u3002</li> </ul> <pre><code>awk -F ',' '{ print $1 }' file.csv\n</code></pre> <ul> <li>\u5185\u7f6e\u53d8\u91cf\uff1aAwk \u63d0\u4f9b\u4e86\u8bb8\u591a\u5185\u7f6e\u53d8\u91cf\uff0c\u7528\u4e8e\u8bbf\u95ee\u8f93\u5165\u6587\u672c\u7684\u5404\u79cd\u5c5e\u6027\uff0c\u5982\u884c\u53f7 (<code>NR</code>)\u3001\u5b57\u6bb5\u6570 (<code>NF</code>) \u7b49\u3002</li> </ul> <pre><code>awk '{ print NR, NF }' file.txt\n</code></pre> <ul> <li>\u6761\u4ef6\u5224\u65ad\uff1aAwk \u652f\u6301\u6761\u4ef6\u8bed\u53e5\uff0c\u53ef\u4ee5\u6839\u636e\u6761\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u52a8\u4f5c\u3002</li> </ul> <pre><code>awk '{ if ($1 &gt; 10) print $0 }' file.txt\n</code></pre> <ul> <li>\u63a7\u5236\u7ed3\u6784\uff1aAwk \u5177\u6709\u7c7b\u4f3c\u4e8e\u5faa\u73af\u548c\u5206\u652f\u8bed\u53e5\u7684\u63a7\u5236\u7ed3\u6784\uff0c\u53ef\u4ee5\u7528\u4e8e\u8fed\u4ee3\u5904\u7406\u6587\u672c\u548c\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\u3002</li> </ul> <pre><code>awk '{ for (i = 1; i &lt;= NF; i++) print $i }' file.txt\n</code></pre> <ul> <li>\u5185\u7f6e\u51fd\u6570\uff1aAwk \u63d0\u4f9b\u4e86\u8bb8\u591a\u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u4e8e\u6267\u884c\u5404\u79cd\u64cd\u4f5c\uff0c\u5982\u5b57\u7b26\u4e32\u5904\u7406\u3001\u6570\u5b66\u8ba1\u7b97\u7b49\u3002</li> </ul> <pre><code>awk '{ print length($0) }' file.txt\n</code></pre> <p>Awk \u662f\u4e00\u79cd\u975e\u5e38\u5f3a\u5927\u800c\u7075\u6d3b\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u8fdb\u884c\u6587\u672c\u5904\u7406\u548c\u6570\u636e\u5206\u6790\u3002\u5b83\u5728\u547d\u4ee4\u884c\u73af\u5883\u4e2d\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6570\u636e\u63d0\u53d6\u3001\u62a5\u544a\u751f\u6210\u3001\u65e5\u5fd7\u5206\u6790\u7b49\u5404\u79cd\u4efb\u52a1\u3002\u5728 Linux \u4e2d\uff0cAwk \u901a\u5e38\u4e0e\u5176\u4ed6\u547d\u4ee4\uff08\u5982 grep\u3001sed \u548c sort\uff09\u4ee5\u53ca\u91cd\u5b9a\u5411\u548c\u7ba1\u9053\u64cd\u4f5c\u7b26\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u6587\u672c\u5904\u7406\u4efb\u52a1\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/","title":"HBase","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#hbase_1","title":"HBase \u7b80\u4ecb","text":"<p>HBase \u662f\u4e00\u6b3e\u9ad8\u53ef\u9760\u3001\u6613\u6269\u5c55\u3001\u9ad8\u6027\u80fd\u7684\u5206\u5e03\u5f0f KV \u6570\u636e\u5e93\u7cfb\u7edf\u3002\u5b83\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u3001\u9762\u5411\u5217\u7684\u5f00\u6e90\u6570\u636e\u5e93\uff0c\u8fd0\u884c\u5728 HDFS \u4e4b\u4e0a\u3002HBase \u662f\u4e00\u4e2a\u9002\u5408\u5b58\u50a8\u5927\u89c4\u6a21\u8868\u7684\u6570\u636e\u5e93\uff0c\u5b83\u53ef\u4ee5\u5b58\u50a8\u6d77\u91cf\u7684\u6570\u636e\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u7684\u968f\u673a\u8bfb\u5199\u64cd\u4f5c\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#hbase_2","title":"HBase \u6570\u636e\u6a21\u578b","text":"<p>HBase: sparse\uff0cdistributed\uff0cpersistent multidimensional sorted map</p> <p>\u4ece\u903b\u8f91\u89c6\u56fe\u6765\u770b\uff0cHBase \u4e2d\u7684\u6570\u636e\u662f\u4ee5\u8868\u5f62\u5f0f\u8fdb\u884c\u7ec4\u7ec7\u7684\uff0c\u800c\u4e14\u548c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u8868\u4e00\u6837\uff0cHBase \u4e2d\u7684\u8868\u4e5f\u7531\u884c\u548c\u5217\u6784\u6210\uff0c\u56e0\u6b64 HBase \u975e\u5e38\u5bb9\u6613\u7406\u89e3\u3002</p> <p>\u4f46\u4ece\u7269\u7406\u89c6\u56fe\u6765\u770b\uff0cHBase \u662f\u4e00\u4e2a Map\uff0c\u7531\u952e\u503c\uff08KeyValue\uff0cKV\uff09\u6784\u6210\uff0c\u4e0d\u8fc7\u4e0e\u666e\u901a\u7684 Map \u4e0d\u540c\uff0cHBase \u662f\u4e00\u4e2a\u7a00\u758f\u7684\u3001\u5206\u5e03\u5f0f\u7684\u3001\u591a\u7ef4\u6392\u5e8f\u7684 Map\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#_1","title":"\u903b\u8f91\u89c6\u56fe","text":"<p>\u5728\u5177\u4f53\u4e86\u89e3\u903b\u8f91\u89c6\u56fe\u4e4b\u524d\u6709\u5fc5\u8981\u5148\u770b\u770b HBase \u4e2d\u7684\u57fa\u672c\u6982\u5ff5\uff1a</p> <ul> <li>table\uff1a\u8868\uff0c\u4e00\u4e2a\u8868\u5305\u542b\u591a\u884c\u6570\u636e\u3002</li> <li>row\uff1a\u884c\uff0c\u4e00\u884c\u6570\u636e\u5305\u542b\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6 rowkey\u3001\u591a\u4e2a column \u4ee5\u53ca\u5bf9\u5e94\u7684\u503c\u3002\u5728 HBase \u4e2d\uff0c\u4e00\u5f20\u8868\u4e2d\u6240\u6709 row \u90fd\u6309\u7167 rowkey \u7684\u5b57\u5178\u5e8f\u7531\u5c0f\u5230\u5927\u6392\u5e8f\u3002</li> <li>column\uff1a\u5217\uff0c\u4e0e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u5217\u4e0d\u540c\uff0cHBase \u4e2d\u7684 column \u7531 column family\uff08\u5217\u7c07\uff09\u4ee5\u53ca qualifier\uff08\u5217\u540d\uff09\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u4e24\u8005\u4e2d\u95f4\u4f7f\u7528 <code>:</code> \u76f8\u8fde\u3002\u6bd4\u5982 contents\uff1ahtml\uff0c\u5176\u4e2d contents \u4e3a\u5217\u7c07\uff0chtml \u4e3a\u5217\u7c07\u4e0b\u5177\u4f53\u7684\u4e00\u5217\u3002column family \u5728\u8868\u521b\u5efa\u7684\u65f6\u5019\u9700\u8981\u6307\u5b9a\uff0c\u7528\u6237\u4e0d\u80fd\u968f\u610f\u589e\u51cf\u3002\u4e00\u4e2a column family \u4e0b\u53ef\u4ee5\u8bbe\u7f6e\u4efb\u610f\u591a\u4e2a qualifier\uff0c\u56e0\u6b64\u53ef\u4ee5\u7406\u89e3\u4e3a HBase \u4e2d\u7684\u5217\u53ef\u4ee5\u52a8\u6001\u589e\u52a0\uff0c\u7406\u8bba\u4e0a\u751a\u81f3\u53ef\u4ee5\u6269\u5c55\u5230\u4e0a\u767e\u4e07\u5217\u3002</li> <li>timestamp\uff1a\u65f6\u95f4\u6233\uff0c\u6bcf\u4e2a cell \u5728\u5199\u5165 HBase \u7684\u65f6\u5019\u90fd\u4f1a\u9ed8\u8ba4\u5206\u914d\u4e00\u4e2a\u65f6\u95f4\u6233\u4f5c\u4e3a\u8be5 cell \u7684\u7248\u672c\uff0c\u5f53\u7136\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u5728\u5199\u5165\u7684\u65f6\u5019\u81ea\u5e26\u65f6\u95f4\u6233\u3002HBase \u652f\u6301\u591a\u7248\u672c\u7279\u6027\uff0c\u5373\u540c\u4e00 rowkey\u3001column \u4e0b\u53ef\u4ee5\u6709\u591a\u4e2a value \u5b58\u5728\uff0c\u8fd9\u4e9b value \u4f7f\u7528 timestamp \u4f5c\u4e3a\u7248\u672c\u53f7\uff0c\u7248\u672c\u8d8a\u5927\uff0c\u8868\u793a\u6570\u636e\u8d8a\u65b0\u3002</li> <li>cell\uff1a\u5355\u5143\u683c\uff0c\u7531\u4e94\u5143\u7ec4\uff08row\uff0ccolumn\uff0ctimestamp\uff0ctype\uff0cvalue\uff09\u7ec4\u6210\u7684\u7ed3\u6784\uff0c\u5176\u4e2d type \u8868\u793a Put/Delete \u8fd9\u6837\u7684\u64cd\u4f5c\u7c7b\u578b\uff0ctimestamp \u4ee3\u8868\u8fd9\u4e2a cell \u7684\u7248\u672c\u3002\u8fd9\u4e2a\u7ed3\u6784\u5728\u6570\u636e\u5e93\u4e2d\u5b9e\u9645\u662f\u4ee5 KV \u7ed3\u6784\u5b58\u50a8\u7684\uff0c\u5176\u4e2d\uff08row\uff0ccolumn\uff0ctimestamp\uff0ctype\uff09\u662f K\uff0cvalue \u5b57\u6bb5\u5bf9\u5e94 KV \u7ed3\u6784\u7684 V\u3002</li> </ul> <p>\u4e0b\u56fe\u662f BigTable \u4e2d\u4e00\u5f20\u793a\u4f8b\u8868\u7684\u903b\u8f91\u89c6\u56fe\uff0c\u8868\u4e2d\u4e3b\u8981\u5b58\u50a8\u7f51\u9875\u4fe1\u606f\u3002\u793a\u4f8b\u8868\u4e2d\u5305\u542b\u4e24\u884c\u6570\u636e\uff0c\u4e24\u4e2a rowkey \u5206\u522b\u4e3a com.cnn.www \u548c com.example.www\uff0c\u6309\u7167\u5b57\u5178\u5e8f\u7531\u5c0f\u5230\u5927\u6392\u5217\u3002\u6bcf\u884c\u6570\u636e\u6709\u4e09\u4e2a\u5217\u7c07\uff0c\u5206\u522b\u4e3a anchor\u3001contents \u4ee5\u53ca people\uff0c\u5176\u4e2d\u5217\u7c07 anchor \u4e0b\u6709\u4e24\u5217\uff0c\u5206\u522b\u4e3a cnnsi.com \u4ee5\u53ca my.look.ca\uff0c\u5176\u4ed6\u4e24\u4e2a\u5217\u7c07\u90fd\u4ec5\u6709\u4e00\u5217\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6839\u636e\u884c com.cnn.www \u4ee5\u53ca\u5217 anchor:nnsi.com \u53ef\u4ee5\u5b9a\u4f4d\u5230\u6570\u636e CNN\uff0c\u5bf9\u5e94\u7684\u65f6\u95f4\u6233\u4fe1\u606f\u662f t9\u3002\u800c\u540c\u4e00\u884c\u7684\u53e6\u4e00\u5217 contents:html \u4e0b\u5374\u6709\u4e09\u4e2a\u7248\u672c\u7684\u6570\u636e\uff0c\u7248\u672c\u53f7\u5206\u522b\u4e3a t5\u3001t6 \u548c t7\u3002</p> <p></p> <p>\u603b\u4f53\u6765\u770b\uff0cHBase \u7684\u903b\u8f91\u89c6\u56fe\u662f\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cHBase \u5f15\u5165\u4e86\u5217\u7c07\u7684\u6982\u5ff5\uff0c\u5217\u7c07\u4e0b\u7684\u5217\u53ef\u4ee5\u52a8\u6001\u6269\u5c55\uff1b\u53e6\u5916\uff0cHBase \u4f7f\u7528\u65f6\u95f4\u6233\u5b9e\u73b0\u4e86\u6570\u636e\u7684\u591a\u7248\u672c\u652f\u6301\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#map","title":"\u591a\u7ef4\u7a00\u758f\u6392\u5e8f Map","text":"<p>\u8981\u771f\u6b63\u7406\u89e3 HBase \u7684\u5de5\u4f5c\u539f\u7406\uff0c\u9700\u8981\u4ece KV \u6570\u636e\u5e93\u8fd9\u4e2a\u89c6\u89d2\u91cd\u65b0\u5bf9\u5176\u5ba1\u89c6\u3002BigTable \u8bba\u6587\u4e2d\u79f0 BigTable \u4e3a\"sparse\uff0cdistributed\uff0cpersistent multidimensionalsorted map\"\uff0c\u53ef\u89c1 BigTable \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a Map \u7ed3\u6784\u6570\u636e\u5e93\uff0cHBase \u4ea6\u7136\uff0c\u4e5f\u662f\u7531\u4e00\u7cfb\u5217 KV \u6784\u6210\u7684\u3002\u7136\u800c HBase \u8fd9\u4e2a Map \u7cfb\u7edf\u5374\u5e76\u4e0d\u7b80\u5355\uff0c\u6709\u5f88\u591a\u9650\u5b9a\u8bcd\u2014\u2014\u7a00\u758f\u7684\u3001\u5206\u5e03\u5f0f\u7684\u3001\u6301\u4e45\u6027\u7684\u3001\u591a\u7ef4\u7684\u4ee5\u53ca\u6392\u5e8f\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5148\u5bf9\u8fd9\u4e2a Map \u8fdb\u884c\u89e3\u6790\uff0c\u8fd9\u5bf9\u4e8e\u4e4b\u540e\u7406\u89e3 HBase \u7684\u5de5\u4f5c\u539f\u7406\u975e\u5e38\u91cd\u8981\u3002</p> <p>HBase \u4e2d Map \u7684 key \u662f\u4e00\u4e2a\u590d\u5408\u952e\uff0c\u7531 rowkey\u3001column family\u3001qualifier\u3001type \u4ee5\u53ca timestamp \u7ec4\u6210\uff0cvalue \u5373\u4e3a cell \u7684\u503c\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e0a\u8282\u903b\u8f91\u89c6\u56fe\u4e2d\u884c <code>com.cnn.www</code> \u4ee5\u53ca\u5217 <code>anchor\uff1acnnsi.com</code> \u5bf9\u5e94\u7684\u6570\u503c <code>CNN</code> \u5b9e\u9645\u4e0a\u5728 HBase \u4e2d\u5b58\u50a8\u4e3a\u5982\u4e0b KV \u7ed3\u6784\uff1a</p> <pre><code>{\"com.cnn.www\",\"anchor\",\"cnnsi.com\",\"put\",\"t9\"} -&gt; \"CNN\"\n</code></pre> <p>\u5728\u6b64\u57fa\u7840\u4e0a\u518d\u6765\u4ecb\u7ecd\u591a\u7ef4\u3001\u7a00\u758f\u3001\u6392\u5e8f\u7b49\u5173\u952e\u8bcd\uff1a</p> \u591a\u7ef4 <p>\u8fd9\u4e2a\u7279\u6027\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u3002HBase \u4e2d\u7684 Map \u4e0e\u666e\u901a Map \u6700\u5927\u7684\u4e0d\u540c\u5728\u4e8e\uff0ckey \u662f\u4e00\u4e2a\u590d\u5408\u6570\u636e\u7ed3\u6784\uff0c\u7531\u591a\u7ef4\u5143\u7d20\u6784\u6210\uff0c\u5305\u62ec rowkey\u3001column family\u3001qualifier\u3001type \u4ee5\u53ca timestamp\u3002</p> \u7a00\u758f <p>\u7a00\u758f\u6027\u662f HBase \u4e00\u4e2a\u7a81\u51fa\u7279\u70b9\u3002\u4ece\u4e0a\u56fe\u903b\u8f91\u8868\u4e2d\u884c <code>com.example.www</code> \u53ef\u4ee5\u770b\u51fa\uff0c\u6574\u6574\u4e00\u884c\u4ec5\u6709\u4e00\u5217\uff08people\uff1aauthor\uff09\u6709\u503c\uff0c\u5176\u4ed6\u5217\u90fd\u4e3a\u7a7a\u503c\u3002\u5728\u5176\u4ed6\u6570\u636e\u5e93\u4e2d\uff0c\u5bf9\u4e8e\u7a7a\u503c\u7684\u5904\u7406\u4e00\u822c\u90fd\u4f1a\u586b\u5145 null\uff0c\u800c\u5bf9\u4e8e HBase\uff0c\u7a7a\u503c\u4e0d\u9700\u8981\u4efb\u4f55\u586b\u5145\u3002\u8fd9\u4e2a\u7279\u6027\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1f\u56e0\u4e3a HBase \u7684\u5217\u5728\u7406\u8bba\u4e0a\u662f\u5141\u8bb8\u65e0\u9650\u6269\u5c55\u7684\uff0c\u5bf9\u4e8e\u6210\u767e\u4e07\u5217\u7684\u8868\u6765\u8bf4\uff0c\u901a\u5e38\u90fd\u4f1a\u5b58\u5728\u5927\u91cf\u7684\u7a7a\u503c\uff0c\u5982\u679c\u4f7f\u7528\u586b\u5145 null \u7684\u7b56\u7565\uff0c\u52bf\u5fc5\u4f1a\u9020\u6210\u5927\u91cf\u7a7a\u95f4\u7684\u6d6a\u8d39\u3002\u56e0\u6b64\u7a00\u758f\u6027\u662f HBase \u7684\u5217\u53ef\u4ee5\u65e0\u9650\u6269\u5c55\u7684\u4e00\u4e2a\u91cd\u8981\u6761\u4ef6\u3002</p> \u6392\u5e8f <p>\u6784\u6210 HBase \u7684 KV \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u4f46\u89c4\u5219\u5e76\u4e0d\u662f\u4ec5\u4ec5\u6309\u7167 rowkey \u6392\u5e8f\uff0c\u800c\u662f\u6309\u7167 KV \u4e2d\u7684 key \u8fdb\u884c\u6392\u5e8f\u2014\u2014\u5148\u6bd4\u8f83 rowkey\uff0crowkey \u5c0f\u7684\u6392\u5728\u524d\u9762\uff1b\u5982\u679c rowkey \u76f8\u540c\uff0c\u518d\u6bd4\u8f83 column\uff0c\u5373 column family\uff1aqualifier\uff0ccolumn \u5c0f\u7684\u6392\u5728\u524d\u9762\uff1b\u5982\u679c column \u8fd8\u76f8\u540c\uff0c\u518d\u6bd4\u8f83\u65f6\u95f4\u6233 timestamp\uff0c\u5373\u7248\u672c\u4fe1\u606f\uff0ctimestamp \u5927\u7684\u6392\u5728\u524d\u9762\u3002\u8fd9\u6837\u7684\u591a\u7ef4\u5143\u7d20\u6392\u5e8f\u89c4\u5219\u5bf9\u4e8e\u63d0\u5347 HBase \u7684\u8bfb\u53d6\u6027\u80fd\u81f3\u5173\u91cd\u8981\u3002</p> \u5206\u5e03\u5f0f <p>\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u6784\u6210 HBase \u7684\u6240\u6709 Map \u5e76\u4e0d\u96c6\u4e2d\u5728\u67d0\u53f0\u673a\u5668\u4e0a\uff0c\u800c\u662f\u5206\u5e03\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#_2","title":"\u7269\u7406\u89c6\u56fe","text":"<p>\u4e0e\u5927\u591a\u6570\u6570\u636e\u5e93\u7cfb\u7edf\u4e0d\u540c\uff0cHBase \u4e2d\u7684\u6570\u636e\u662f\u6309\u7167\u5217\u7c07\u5b58\u50a8\u7684\uff0c\u5373\u5c06\u6570\u636e\u6309\u7167\u5217\u7c07\u5206\u522b\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u76ee\u5f55\u4e2d\u3002</p> <p>\u5217\u7c07 anchor \u7684\u6240\u6709\u6570\u636e\u5b58\u50a8\u5728\u4e00\u8d77\u5f62\u6210\uff1a</p> <p></p> <p>\u5217\u7c07 contents \u7684\u6240\u6709\u6570\u636e\u5b58\u50a8\u5728\u4e00\u8d77\u5f62\u6210\uff1a</p> <p></p> <p>\u4e3a\u4ec0\u4e48 HBase \u8981\u5c06\u6570\u636e\u6309\u7167\u5217\u7c07\u5206\u522b\u5b58\u50a8\uff1f</p> <p>\u5217\u7c07\u5f0f\u5b58\u50a8\uff1a\u4ece\u6982\u5ff5\u4e0a\u6765\u8bf4\uff0c\u5217\u7c07\u5f0f\u5b58\u50a8\u4ecb\u4e8e\u884c\u5f0f\u5b58\u50a8\u548c\u5217\u5f0f\u5b58\u50a8\u4e4b\u95f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u8bbe\u8ba1\u601d\u8def\u5728\u884c\u5f0f\u5b58\u50a8\u548c\u5217\u5f0f\u5b58\u50a8\u4e24\u8005\u4e4b\u95f4\u76f8\u4e92\u5207\u6362\u3002\u6bd4\u5982\uff0c\u4e00\u5f20\u8868\u53ea\u8bbe\u7f6e\u4e00\u4e2a\u5217\u7c07\uff0c\u8fd9\u4e2a\u5217\u7c07\u5305\u542b\u6240\u6709\u7528\u6237\u7684\u5217\u3002HBase \u4e2d\u4e00\u4e2a\u5217\u7c07\u7684\u6570\u636e\u662f\u5b58\u50a8\u5728\u4e00\u8d77\u7684\uff0c\u56e0\u6b64\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u7b49\u540c\u4e8e\u884c\u5f0f\u5b58\u50a8\u3002\u518d\u6bd4\u5982\uff0c\u4e00\u5f20\u8868\u8bbe\u7f6e\u5927\u91cf\u5217\u7c07\uff0c\u6bcf\u4e2a\u5217\u7c07\u4e0b\u4ec5\u6709\u4e00\u5217\uff0c\u5f88\u663e\u7136\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u7b49\u540c\u4e8e\u5217\u5f0f\u5b58\u50a8\u3002\u4e0a\u9762\u4e24\u4f8b\u5f53\u7136\u662f\u4e24\u79cd\u6781\u7aef\u7684\u60c5\u51b5\uff0c\u5728\u5f53\u524d\u4f53\u7cfb\u4e2d\u4e0d\u5efa\u8bae\u8bbe\u7f6e\u592a\u591a\u5217\u7c07\uff0c\u4f46\u662f\u8fd9\u79cd\u67b6\u6784\u4e3a HBase \u5c06\u6765\u6f14\u53d8\u6210 HTAP\uff08Hybrid Transactional and Analytical Processing\uff09\u7cfb\u7edf\u63d0\u4f9b\u4e86\u6700\u6838\u5fc3\u7684\u57fa\u7840\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#hbase_3","title":"HBase \u4f53\u7cfb\u67b6\u6784","text":"<p>HBase \u4f53\u7cfb\u7ed3\u6784\u501f\u9274\u4e86 BigTable \u8bba\u6587\uff0c\u662f\u5178\u578b\u7684 Master-Slave \u6a21\u578b\u3002\u7cfb\u7edf\u4e2d\u6709\u4e00\u4e2a\u7ba1\u7406\u96c6\u7fa4\u7684 Master \u8282\u70b9\u4ee5\u53ca\u5927\u91cf\u5b9e\u9645\u670d\u52a1\u7528\u6237\u8bfb\u5199\u7684 RegionServer \u8282\u70b9\u3002\u9664\u6b64\u4e4b\u5916\uff0cHBase \u4e2d\u6240\u6709\u6570\u636e\u6700\u7ec8\u90fd\u5b58\u50a8\u5728 HDFS \u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4e0e BigTable \u5b9e\u9645\u6570\u636e\u5b58\u50a8\u5728 GFS \u4e2d\u76f8\u5bf9\u5e94\uff1b\u7cfb\u7edf\u4e2d\u8fd8\u6709\u4e00\u4e2a ZooKeeper \u8282\u70b9\uff0c\u534f\u52a9 Master \u5bf9\u96c6\u7fa4\u8fdb\u884c\u7ba1\u7406\u3002</p> <p></p> HBase \u5ba2\u6237\u7aef <p>HBase \u5ba2\u6237\u7aef\uff08Client\uff09\u63d0\u4f9b\u4e86 Shell \u547d\u4ee4\u884c\u63a5\u53e3\u3001\u539f\u751f Java API \u7f16\u7a0b\u63a5\u53e3\u3001Thrift/REST API \u7f16\u7a0b\u63a5\u53e3\u4ee5\u53ca MapReduce \u7f16\u7a0b\u63a5\u53e3\u3002HBase \u5ba2\u6237\u7aef\u652f\u6301\u6240\u6709\u5e38\u89c1\u7684 DML \u64cd\u4f5c\u4ee5\u53ca DDL \u64cd\u4f5c\uff0c\u5373\u6570\u636e\u7684\u589e\u5220\u6539\u67e5\u548c\u8868\u7684\u65e5\u5e38\u7ef4\u62a4\u7b49\u3002\u5176\u4e2d Thrift/REST API \u4e3b\u8981\u7528\u4e8e\u652f\u6301\u975e Java \u7684\u4e0a\u5c42\u4e1a\u52a1\u9700\u6c42\uff0cMapReduce \u63a5\u53e3\u4e3b\u8981\u7528\u4e8e\u6279\u91cf\u6570\u636e\u5bfc\u5165\u4ee5\u53ca\u6279\u91cf\u6570\u636e\u8bfb\u53d6\u3002</p> <p>HBase \u5ba2\u6237\u7aef\u8bbf\u95ee\u6570\u636e\u884c\u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u901a\u8fc7\u5143\u6570\u636e\u8868\u5b9a\u4f4d\u76ee\u6807\u6570\u636e\u6240\u5728 RegionServer\uff0c\u4e4b\u540e\u624d\u4f1a\u53d1\u9001\u8bf7\u6c42\u5230\u8be5 RegionServer\u3002\u540c\u65f6\u8fd9\u4e9b\u5143\u6570\u636e\u4f1a\u88ab\u7f13\u5b58\u5728\u5ba2\u6237\u7aef\u672c\u5730\uff0c\u4ee5\u65b9\u4fbf\u4e4b\u540e\u7684\u8bf7\u6c42\u8bbf\u95ee\u3002\u5982\u679c\u96c6\u7fa4 RegionServer \u53d1\u751f\u5b95\u673a\u6216\u8005\u6267\u884c\u4e86\u8d1f\u8f7d\u5747\u8861\u7b49\uff0c\u4ece\u800c\u5bfc\u81f4\u6570\u636e\u5206\u7247\u53d1\u751f\u8fc1\u79fb\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u91cd\u65b0\u8bf7\u6c42\u6700\u65b0\u7684\u5143\u6570\u636e\u5e76\u7f13\u5b58\u5728\u672c\u5730\u3002</p> <p>Zookeeper</p> <p>\u5728 HBase \u7cfb\u7edf\u4e2d\uff0cZooKeeper \u626e\u6f14\u7740\u975e\u5e38\u91cd\u8981\u7684\u89d2\u8272\uff1a</p> <ul> <li>\u5b9e\u73b0 Master \u9ad8\u53ef\u7528\uff1a\u901a\u5e38\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a Master \u5de5\u4f5c\uff0c\u4e00\u65e6 Active Master \u7531\u4e8e\u5f02\u5e38\u5b95\u673a\uff0cZooKeeper \u4f1a\u68c0\u6d4b\u5230\u8be5\u5b95\u673a\u4e8b\u4ef6\uff0c\u5e76\u901a\u8fc7\u4e00\u5b9a\u673a\u5236\u9009\u4e3e\u51fa\u65b0\u7684 Master\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u6b63\u5e38\u8fd0\u8f6c\u3002</li> <li>\u7ba1\u7406\u7cfb\u7edf\u6838\u5fc3\u5143\u6570\u636e\uff1a\u6bd4\u5982\uff0c\u7ba1\u7406\u5f53\u524d\u7cfb\u7edf\u4e2d\u6b63\u5e38\u5de5\u4f5c\u7684 RegionServer \u96c6\u5408\uff0c\u4fdd\u5b58\u7cfb\u7edf\u5143\u6570\u636e\u8868 <code>hbase:meta</code> \u6240\u5728\u7684 RegionServer \u5730\u5740\u7b49\u3002</li> <li>\u53c2\u4e0e RegionServer \u5b95\u673a\u6062\u590d\uff1aZooKeeper \u901a\u8fc7\u5fc3\u8df3\u53ef\u4ee5\u611f\u77e5\u5230 RegionServer \u662f\u5426\u5b95\u673a\uff0c\u5e76\u5728\u5b95\u673a\u540e\u901a\u77e5 Master \u8fdb\u884c\u5b95\u673a\u5904\u7406\u3002</li> <li>\u5b9e\u73b0\u5206\u5e03\u5f0f\u8868\u9501\uff1aHBase \u4e2d\u5bf9\u4e00\u5f20\u8868\u8fdb\u884c\u5404\u79cd\u7ba1\u7406\u64cd\u4f5c\uff08\u6bd4\u5982 alter \u64cd\u4f5c\uff09\u9700\u8981\u5148\u52a0\u8868\u9501\uff0c\u9632\u6b62\u5176\u4ed6\u7528\u6237\u5bf9\u540c\u4e00\u5f20\u8868\u8fdb\u884c\u7ba1\u7406\u64cd\u4f5c\uff0c\u9020\u6210\u8868\u72b6\u6001\u4e0d\u4e00\u81f4\u3002\u548c\u5176\u4ed6 RDBMS \u8868\u4e0d\u540c\uff0cHBase \u4e2d\u7684\u8868\u901a\u5e38\u90fd\u662f\u5206\u5e03\u5f0f\u5b58\u50a8\uff0cZooKeeper \u53ef\u4ee5\u901a\u8fc7\u7279\u5b9a\u673a\u5236\u5b9e\u73b0\u5206\u5e03\u5f0f\u8868\u9501\u3002</li> </ul> <p>Master</p> <p>Master \u4e3b\u8981\u8d1f\u8d23 HBase \u7cfb\u7edf\u7684\u5404\u79cd\u7ba1\u7406\u5de5\u4f5c\uff1a</p> <ul> <li>\u5904\u7406\u7528\u6237\u7684\u5404\u79cd\u7ba1\u7406\u8bf7\u6c42\uff0c\u5305\u62ec\u5efa\u8868\u3001\u4fee\u6539\u8868\u3001\u6743\u9650\u64cd\u4f5c\u3001\u5207\u5206\u8868\u3001\u5408\u5e76\u6570\u636e\u5206\u7247\u4ee5\u53ca Compaction \u7b49\u3002</li> <li>\u7ba1\u7406\u96c6\u7fa4\u4e2d\u6240\u6709 RegionServer\uff0c\u5305\u62ec RegionServer \u4e2d Region \u7684\u8d1f\u8f7d\u5747\u8861\u3001RegionServer \u7684\u5b95\u673a\u6062\u590d\u4ee5\u53ca Region \u7684\u8fc1\u79fb\u7b49\u3002</li> <li>\u6e05\u7406\u8fc7\u671f\u65e5\u5fd7\u4ee5\u53ca\u6587\u4ef6\uff0cMaster \u4f1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u68c0\u67e5 HDFS \u4e2d HLog \u662f\u5426\u8fc7\u671f\u3001HFile \u662f\u5426\u5df2\u7ecf\u88ab\u5220\u9664\uff0c\u5e76\u5728\u8fc7\u671f\u4e4b\u540e\u5c06\u5176\u5220\u9664\u3002</li> </ul> <p>RegionServer</p> <p>RegionServer \u4e3b\u8981\u7528\u6765\u54cd\u5e94\u7528\u6237\u7684 IO \u8bf7\u6c42\uff0c\u662f HBase \u4e2d\u6700\u6838\u5fc3\u7684\u6a21\u5757\uff0c\u7531 WAL\uff08HLog\uff09\u3001BlockCache \u4ee5\u53ca\u591a\u4e2a Region \u6784\u6210\u3002</p> <ul> <li>WAL\uff08HLog\uff09\uff1aHLog \u5728 HBase \u4e2d\u6709\u4e24\u4e2a\u6838\u5fc3\u4f5c\u7528\u2014\u2014\u5176\u4e00\uff0c\u7528\u4e8e\u5b9e\u73b0\u6570\u636e\u7684\u9ad8\u53ef\u9760\u6027\uff0cHBase \u6570\u636e\u968f\u673a\u5199\u5165\u65f6\uff0c\u5e76\u975e\u76f4\u63a5\u5199\u5165 HFile \u6570\u636e\u6587\u4ef6\uff0c\u800c\u662f\u5148\u5199\u5165\u7f13\u5b58\uff0c\u518d\u5f02\u6b65\u5237\u65b0\u843d\u76d8\u3002\u4e3a\u4e86\u9632\u6b62\u7f13\u5b58\u6570\u636e\u4e22\u5931\uff0c\u6570\u636e\u5199\u5165\u7f13\u5b58\u4e4b\u524d\u9700\u8981\u9996\u5148\u987a\u5e8f\u5199\u5165 HLog\uff0c\u8fd9\u6837\uff0c\u5373\u4f7f\u7f13\u5b58\u6570\u636e\u4e22\u5931\uff0c\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7 HLog \u65e5\u5fd7\u6062\u590d\uff1b\u5176\u4e8c\uff0c\u7528\u4e8e\u5b9e\u73b0 HBase \u96c6\u7fa4\u95f4\u4e3b\u4ece\u590d\u5236\uff0c\u901a\u8fc7\u56de\u653e\u4e3b\u96c6\u7fa4\u63a8\u9001\u8fc7\u6765\u7684 HLog \u65e5\u5fd7\u5b9e\u73b0\u4e3b\u4ece\u590d\u5236\u3002</li> <li>BlockCache\uff1aHBase \u7cfb\u7edf\u4e2d\u7684\u8bfb\u7f13\u5b58\u3002\u5ba2\u6237\u7aef\u4ece\u78c1\u76d8\u8bfb\u53d6\u6570\u636e\u4e4b\u540e\u901a\u5e38\u4f1a\u5c06\u6570\u636e\u7f13\u5b58\u5230\u7cfb\u7edf\u5185\u5b58\u4e2d\uff0c\u540e\u7eed\u8bbf\u95ee\u540c\u4e00\u884c\u6570\u636e\u53ef\u4ee5\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u800c\u4e0d\u9700\u8981\u8bbf\u95ee\u78c1\u76d8\u3002\u5bf9\u4e8e\u5e26\u6709\u5927\u91cf\u70ed\u70b9\u8bfb\u7684\u4e1a\u52a1\u8bf7\u6c42\u6765\u8bf4\uff0c\u7f13\u5b58\u673a\u5236\u4f1a\u5e26\u6765\u6781\u5927\u7684\u6027\u80fd\u63d0\u5347\u3002</li> </ul> <p>BlockCache</p> <p>BlockCache \u7f13\u5b58\u5bf9\u8c61\u662f\u4e00\u7cfb\u5217 Block \u5757\uff0c\u4e00\u4e2a Block \u9ed8\u8ba4\u4e3a 64K\uff0c\u7531\u7269\u7406\u4e0a\u76f8\u90bb\u7684\u591a\u4e2a KV \u6570\u636e\u7ec4\u6210\u3002BlockCache \u540c\u65f6\u5229\u7528\u4e86\u7a7a\u95f4\u5c40\u90e8\u6027\u548c\u65f6\u95f4\u5c40\u90e8\u6027\u539f\u7406\uff0c\u524d\u8005\u8868\u793a\u6700\u8fd1\u5c06\u8bfb\u53d6\u7684 KV \u6570\u636e\u5f88\u53ef\u80fd\u4e0e\u5f53\u524d\u8bfb\u53d6\u5230\u7684 KV \u6570\u636e\u5728\u5730\u5740\u4e0a\u662f\u90bb\u8fd1\u7684\uff0c\u7f13\u5b58\u5355\u4f4d\u662f Block\uff08\u5757\uff09\u800c\u4e0d\u662f\u5355\u4e2a KV \u5c31\u53ef\u4ee5\u5b9e\u73b0\u7a7a\u95f4\u5c40\u90e8\u6027\uff1b\u540e\u8005\u8868\u793a\u4e00\u4e2a KV \u6570\u636e\u6b63\u5728\u88ab\u8bbf\u95ee\uff0c\u90a3\u4e48\u8fd1\u671f\u5b83\u8fd8\u53ef\u80fd\u518d\u6b21\u88ab\u8bbf\u95ee\u3002\u5f53\u524d BlockCache \u4e3b\u8981\u6709\u4e24\u79cd\u5b9e\u73b0\u2014\u2014LRUBlockCache \u548c BucketCache\uff0c\u524d\u8005\u5b9e\u73b0\u76f8\u5bf9\u7b80\u5355\uff0c\u800c\u540e\u8005\u5728 GC \u4f18\u5316\u65b9\u9762\u6709\u660e\u663e\u7684\u63d0\u5347\u3002</p> <ul> <li>Region\uff1a\u6570\u636e\u8868\u7684\u4e00\u4e2a\u5206\u7247\uff0c\u5f53\u6570\u636e\u8868\u5927\u5c0f\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\u5c31\u4f1a\u201c\u6c34\u5e73\u5207\u5206\u201d\uff0c\u5206\u88c2\u4e3a\u4e24\u4e2a Region\u3002Region \u662f\u96c6\u7fa4\u8d1f\u8f7d\u5747\u8861\u7684\u57fa\u672c\u5355\u4f4d\u3002\u901a\u5e38\u4e00\u5f20\u8868\u7684 Region \u4f1a\u5206\u5e03\u5728\u6574\u4e2a\u96c6\u7fa4\u7684\u591a\u53f0 RegionServer \u4e0a\uff0c\u4e00\u4e2a RegionServer \u4e0a\u4f1a\u7ba1\u7406\u591a\u4e2a Region\uff0c\u5f53\u7136\uff0c\u8fd9\u4e9b Region \u4e00\u822c\u6765\u81ea\u4e0d\u540c\u7684\u6570\u636e\u8868\u3002</li> </ul> <p>Region</p> <p>\u4e00\u4e2a Region \u7531\u4e00\u4e2a\u6216\u8005\u591a\u4e2a Store \u6784\u6210\uff0cStore \u7684\u4e2a\u6570\u53d6\u51b3\u4e8e\u8868\u4e2d\u5217\u7c07\uff08column family\uff09\u7684\u4e2a\u6570\uff0c\u591a\u5c11\u4e2a\u5217\u7c07\u5c31\u6709\u591a\u5c11\u4e2a Store\u3002HBase \u4e2d\uff0c\u6bcf\u4e2a\u5217\u7c07\u7684\u6570\u636e\u90fd\u96c6\u4e2d\u5b58\u653e\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u5b58\u50a8\u5355\u5143 Store\uff0c\u56e0\u6b64\u5efa\u8bae\u5c06\u5177\u6709\u76f8\u540c IO \u7279\u6027\u7684\u6570\u636e\u8bbe\u7f6e\u5728\u540c\u4e00\u4e2a\u5217\u7c07\u4e2d\u3002 \u6bcf\u4e2a Store \u7531\u4e00\u4e2a MemStore \u548c\u4e00\u4e2a\u6216\u591a\u4e2a HFile \u7ec4\u6210\u3002MemStore \u79f0\u4e3a\u5199\u7f13\u5b58\uff0c\u7528\u6237\u5199\u5165\u6570\u636e\u65f6\u9996\u5148\u4f1a\u5199\u5230 MemStore\uff0c\u5f53 MemStore \u5199\u6ee1\u4e4b\u540e\uff08\u7f13\u5b58\u6570\u636e\u8d85\u8fc7\u9608\u503c\uff0c\u9ed8\u8ba4 128M\uff09\u7cfb\u7edf\u4f1a\u5f02\u6b65\u5730\u5c06\u6570\u636e flush \u6210\u4e00\u4e2a HFile \u6587\u4ef6\u3002\u663e\u7136\uff0c\u968f\u7740\u6570\u636e\u4e0d\u65ad\u5199\u5165\uff0cHFile \u6587\u4ef6\u4f1a\u8d8a\u6765\u8d8a\u591a\uff0c\u5f53 HFile \u6587\u4ef6\u6570\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\u4e4b\u540e\u7cfb\u7edf\u5c06\u4f1a\u6267\u884c Compact \u64cd\u4f5c\uff0c\u5c06\u8fd9\u4e9b\u5c0f\u6587\u4ef6\u901a\u8fc7\u4e00\u5b9a\u7b56\u7565\u5408\u5e76\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u5927\u6587\u4ef6\u3002</p> <p>HDFS</p> <p>HBase \u5e95\u5c42\u4f9d\u8d56 HDFS \u7ec4\u4ef6\u5b58\u50a8\u5b9e\u9645\u6570\u636e\uff0c\u5305\u62ec\u7528\u6237\u6570\u636e\u6587\u4ef6\u3001HLog \u65e5\u5fd7\u6587\u4ef6\u7b49\u6700\u7ec8\u90fd\u4f1a\u5199\u5165 HDFS \u843d\u76d8\u3002HDFS \u662f Hadoop \u751f\u6001\u5708\u5185\u6700\u6210\u719f\u7684\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u6570\u636e\u9ed8\u8ba4\u4e09\u526f\u672c\u5b58\u50a8\u7b56\u7565\u53ef\u4ee5\u6709\u6548\u4fdd\u8bc1\u6570\u636e\u7684\u9ad8\u53ef\u9760\u6027\u3002HBase \u5185\u90e8\u5c01\u88c5\u4e86\u4e00\u4e2a\u540d\u4e3a DFSClient \u7684 HDFS \u5ba2\u6237\u7aef\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u5bf9 HDFS \u7684\u5b9e\u9645\u6570\u636e\u8fdb\u884c\u8bfb\u5199\u8bbf\u95ee\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#hbase_4","title":"HBase \u7cfb\u7edf\u4f18\u7f3a\u70b9","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#_3","title":"\u4f18\u70b9","text":"<p>\u4e0e\u5176\u4ed6\u6570\u636e\u5e93\u76f8\u6bd4\uff0cHBase \u5728\u7cfb\u7edf\u8bbe\u8ba1\u4ee5\u53ca\u5b9e\u9645\u5b9e\u8df5\u4e2d\u6709\u5f88\u591a\u72ec\u7279\u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u5bb9\u91cf\u5de8\u5927\uff1aHBase \u7684\u5355\u8868\u53ef\u4ee5\u652f\u6301\u5343\u4ebf\u884c\u3001\u767e\u4e07\u5217\u7684\u6570\u636e\u89c4\u6a21\uff0c\u6570\u636e\u5bb9\u91cf\u53ef\u4ee5\u8fbe\u5230 TB \u751a\u81f3 PB \u7ea7\u522b\u3002\u4f20\u7edf\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5982 Oracle \u548c MySQL \u7b49\uff0c\u5982\u679c\u5355\u8868\u8bb0\u5f55\u6761\u6570\u8d85\u8fc7\u4ebf\u884c\uff0c\u8bfb\u5199\u6027\u80fd\u90fd\u4f1a\u6025\u5267\u4e0b\u964d\uff0c\u5728 HBase \u4e2d\u5e76\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\u3002</li> <li>\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\uff1aHBase \u96c6\u7fa4\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u5b9e\u73b0\u96c6\u7fa4\u5bb9\u91cf\u6269\u5c55\uff0c\u4e3b\u8981\u5305\u62ec\u6570\u636e\u5b58\u50a8\u8282\u70b9\u6269\u5c55\u4ee5\u53ca\u8bfb\u5199\u670d\u52a1\u8282\u70b9\u6269\u5c55\u3002HBase \u5e95\u5c42\u6570\u636e\u5b58\u50a8\u4f9d\u8d56\u4e8e HDFS \u7cfb\u7edf\uff0cHDFS \u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u589e\u52a0 DataNode \u5b9e\u73b0\u6269\u5c55\uff0cHBase \u8bfb\u5199\u670d\u52a1\u8282\u70b9\u4e5f\u4e00\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u589e\u52a0 RegionServer \u8282\u70b9\u5b9e\u73b0\u8ba1\u7b97\u5c42\u7684\u6269\u5c55\u3002</li> <li>\u7a00\u758f\u6027\uff1aHBase \u652f\u6301\u5927\u91cf\u7a00\u758f\u5b58\u50a8\uff0c\u5373\u5141\u8bb8\u5927\u91cf\u5217\u503c\u4e3a\u7a7a\uff0c\u5e76\u4e0d\u5360\u7528\u4efb\u4f55\u5b58\u50a8\u7a7a\u95f4\u3002\u8fd9\u4e0e\u4f20\u7edf\u6570\u636e\u5e93\u4e0d\u540c\uff0c\u4f20\u7edf\u6570\u636e\u5e93\u5bf9\u4e8e\u7a7a\u503c\u7684\u5904\u7406\u8981\u5360\u7528\u4e00\u5b9a\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u8fd9\u4f1a\u9020\u6210\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5b58\u50a8\u7a7a\u95f4\u6d6a\u8d39\u3002\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528 HBase \u5b58\u50a8\u591a\u81f3\u4e0a\u767e\u4e07\u5217\u7684\u6570\u636e\uff0c\u5373\u4f7f\u8868\u4e2d\u5b58\u5728\u5927\u91cf\u7684\u7a7a\u503c\uff0c\u4e5f\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7a7a\u95f4\u3002</li> <li>\u9ad8\u6027\u80fd\uff1aHBase \u76ee\u524d\u4e3b\u8981\u64c5\u957f\u4e8e OLTP \u573a\u666f\uff0c\u6570\u636e\u5199\u64cd\u4f5c\u6027\u80fd\u5f3a\u52b2\uff0c\u5bf9\u4e8e\u968f\u673a\u5355\u70b9\u8bfb\u4ee5\u53ca\u5c0f\u8303\u56f4\u7684\u626b\u63cf\u8bfb\uff0c\u5176\u6027\u80fd\u4e5f\u80fd\u591f\u5f97\u5230\u4fdd\u8bc1\u3002\u5bf9\u4e8e\u5927\u8303\u56f4\u7684\u626b\u63cf\u8bfb\u53ef\u4ee5\u4f7f\u7528 MapReduce \u63d0\u4f9b\u7684 API\uff0c\u4ee5\u4fbf\u5b9e\u73b0\u66f4\u9ad8\u6548\u7684\u5e76\u884c\u626b\u63cf\u3002</li> <li>\u591a\u7248\u672c\uff1aHBase \u652f\u6301\u591a\u7248\u672c\u7279\u6027\uff0c\u5373\u4e00\u4e2a KV \u53ef\u4ee5\u540c\u65f6\u4fdd\u7559\u591a\u4e2a\u7248\u672c\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u9009\u62e9\u6700\u65b0\u7248\u672c\u6216\u8005\u67d0\u4e2a\u5386\u53f2\u7248\u672c\u3002</li> <li>\u652f\u6301\u8fc7\u671f\uff1aHBase \u652f\u6301 TTL \u8fc7\u671f\u7279\u6027\uff0c\u7528\u6237\u53ea\u9700\u8981\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c\u8d85\u8fc7 TTL \u7684\u6570\u636e\u5c31\u4f1a\u88ab\u81ea\u52a8\u6e05\u7406\uff0c\u4e0d\u9700\u8981\u7528\u6237\u5199\u7a0b\u5e8f\u624b\u52a8\u5220\u9664\u3002</li> <li>Hadoop \u539f\u751f\u652f\u6301\uff1aHBase \u662f Hadoop \u751f\u6001\u4e2d\u7684\u6838\u5fc3\u6210\u5458\u4e4b\u4e00\uff0c\u5f88\u591a\u751f\u6001\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u4e0e\u5176\u76f4\u63a5\u5bf9\u63a5\u3002HBase \u6570\u636e\u5b58\u50a8\u4f9d\u8d56\u4e8e HDFS\uff0c\u8fd9\u6837\u7684\u67b6\u6784\u53ef\u4ee5\u5e26\u6765\u5f88\u591a\u597d\u5904\uff0c\u6bd4\u5982\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u7ed5\u8fc7 HBase \u7cfb\u7edf\u64cd\u4f5c HDFS \u6587\u4ef6\uff0c\u9ad8\u6548\u5730\u5b8c\u6210\u6570\u636e\u626b\u63cf\u6216\u8005\u6570\u636e\u5bfc\u5165\u5de5\u4f5c\uff1b\u518d\u6bd4\u5982\u53ef\u4ee5\u5229\u7528 HDFS \u63d0\u4f9b\u7684\u591a\u7ea7\u5b58\u50a8\u7279\u6027\uff08Archival Storage Feature\uff09\uff0c\u6839\u636e\u4e1a\u52a1\u7684\u91cd\u8981\u7a0b\u5ea6\u5c06 HBase \u8fdb\u884c\u5206\u7ea7\u5b58\u50a8\uff0c\u91cd\u8981\u7684\u4e1a\u52a1\u653e\u5230 SSD\uff0c\u4e0d\u91cd\u8981\u7684\u4e1a\u52a1\u653e\u5230 HDD\u3002\u6216\u8005\u7528\u6237\u53ef\u4ee5\u8bbe\u7f6e\u5f52\u6863\u65f6\u95f4\uff0c\u8fdb\u800c\u5c06\u6700\u8fd1\u7684\u6570\u636e\u653e\u5728 SSD\uff0c\u5c06\u5f52\u6863\u6570\u636e\u6587\u4ef6\u653e\u5728 HDD\u3002\u53e6\u5916\uff0cHBase \u5bf9 MapReduce \u7684\u652f\u6301\u4e5f\u5df2\u7ecf\u6709\u4e86\u5f88\u591a\u6848\u4f8b\uff0c\u540e\u7eed\u8fd8\u4f1a\u9488\u5bf9 Spark \u505a\u66f4\u591a\u7684\u5de5\u4f5c\u3002</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/1.HBase/#_4","title":"\u7f3a\u70b9","text":"<ul> <li>HBase \u672c\u8eab\u4e0d\u652f\u6301\u5f88\u590d\u6742\u7684\u805a\u5408\u8fd0\u7b97\uff08\u5982 Join\u3001GroupBy \u7b49\uff09\u3002\u5982\u679c\u4e1a\u52a1\u4e2d\u9700\u8981\u4f7f\u7528\u805a\u5408\u8fd0\u7b97\uff0c\u53ef\u4ee5\u5728 HBase \u4e4b\u4e0a\u67b6\u8bbe Phoenix \u7ec4\u4ef6\u6216\u8005 Spark \u7ec4\u4ef6\uff0c\u524d\u8005\u4e3b\u8981\u5e94\u7528\u4e8e\u5c0f\u89c4\u6a21\u805a\u5408\u7684 OLTP \u573a\u666f\uff0c\u540e\u8005\u5e94\u7528\u4e8e\u5927\u89c4\u6a21\u805a\u5408\u7684 OLAP \u573a\u666f\u3002</li> <li>HBase \u672c\u8eab\u5e76\u6ca1\u6709\u5b9e\u73b0\u4e8c\u7ea7\u7d22\u5f15\u529f\u80fd\uff0c\u6240\u4ee5\u4e0d\u652f\u6301\u4e8c\u7ea7\u7d22\u5f15\u67e5\u627e\u3002\u597d\u5728\u9488\u5bf9 HBase \u5b9e\u73b0\u7684\u7b2c\u4e09\u65b9\u4e8c\u7ea7\u7d22\u5f15\u65b9\u6848\u975e\u5e38\u4e30\u5bcc\uff0c\u6bd4\u5982\u76ee\u524d\u6bd4\u8f83\u666e\u904d\u7684\u4f7f\u7528 Phoenix \u63d0\u4f9b\u7684\u4e8c\u7ea7\u7d22\u5f15\u529f\u80fd\u3002</li> <li>HBase \u539f\u751f\u4e0d\u652f\u6301\u5168\u5c40\u8de8\u884c\u4e8b\u52a1\uff0c\u53ea\u652f\u6301\u5355\u884c\u4e8b\u52a1\u6a21\u578b\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528 Phoenix \u63d0\u4f9b\u7684\u5168\u5c40\u4e8b\u52a1\u6a21\u578b\u7ec4\u4ef6\u6765\u5f25\u8865 HBase \u7684\u8fd9\u4e2a\u7f3a\u9677\u3002</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/HBase/99.inbox/","title":"Inbox","text":"<p>\u53c2\u8003\u8d44\u6599\uff1a</p> <ul> <li>\u5b98\u7f51 Data Model</li> <li>Understanding HBase and BigTable</li> <li>Introduction to HBase Schema Design</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/","title":"Kafka","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#_1","title":"\u6d88\u606f\u961f\u5217","text":"<p>\u6d88\u606f\u961f\u5217\u662f\u4e00\u79cd\u5728\u5206\u5e03\u5f0f\u8ba1\u7b97\u73af\u5883\u4e2d\u4f7f\u7528\u7684\u6280\u672f\uff0c\u7528\u4e8e\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u6216\u670d\u52a1\u4e4b\u95f4\u4f20\u9012\u6d88\u606f\u3002\u5b83\u901a\u5e38\u88ab\u89c6\u4e3a\u4e00\u79cd\u4e2d\u95f4\u4ef6\uff0c\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <p>\u6d88\u606f\u961f\u5217\u7684\u7279\u70b9:</p> <ul> <li>\u961f\u5217\u7ed3\u6784\uff1a\u6d88\u606f\u961f\u5217\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u961f\u5217\uff0c\u5176\u4e2d\u7684\u6d88\u606f\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6392\u5217\uff0c\u786e\u4fdd FIFO \u7684\u539f\u5219\u5f97\u5230\u6267\u884c\u3002</li> <li>\u5f02\u6b65\u5904\u7406\uff1a\u6d88\u606f\u961f\u5217\u5141\u8bb8\u5c06\u6d88\u606f\u653e\u5165\u961f\u5217\u540e\uff0c\u65e0\u9700\u7b49\u5f85\u7acb\u5373\u5904\u7406\uff0c\u800c\u662f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002\u968f\u540e\uff0c\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u4f1a\u5b9a\u671f\u8bfb\u53d6\u961f\u5217\u4e2d\u7684\u6d88\u606f\uff0c\u5e76\u6839\u636e\u4e1a\u52a1\u903b\u8f91\u6309\u987a\u5e8f\u8fdb\u884c\u5904\u7406\u3002</li> <li>\u5e94\u7528\u89e3\u8026\uff1a\u901a\u8fc7\u4f7f\u7528\u6d88\u606f\u961f\u5217\uff0c\u53ef\u4ee5\u5c06\u4e0d\u540c\u670d\u52a1\u7684\u901a\u4fe1\u9700\u6c42\u62bd\u8c61\u5316\uff0c\u4ece\u800c\u964d\u4f4e\u5b83\u4eec\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u3002</li> <li>\u8d1f\u8f7d\u5747\u8861\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5982\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6d88\u606f\u961f\u5217\u53ef\u4ee5\u5e2e\u52a9\u5e73\u8861\u5e76\u53d1\u8bf7\u6c42\uff0c\u9632\u6b62\u8fc7\u8f7d\u3002</li> <li>\u53ef\u9760\u6027\u4fdd\u969c\uff1a\u6d88\u606f\u961f\u5217\u901a\u5e38\u4f1a\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u7684\u53ef\u9760\u6027\u548c\u6301\u4e45\u6027\uff0c\u4ee5\u786e\u4fdd\u6d88\u606f\u4e0d\u4f1a\u4e22\u5931\u6216\u5728\u7f51\u7edc\u5206\u533a\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u80fd\u591f\u4fdd\u6301\u72b6\u6001\u3002</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#kafka_1","title":"Kafka \u7b80\u4ecb","text":"<p>kafka \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u6d88\u606f\u961f\u5217\uff0c\u5177\u6709\u9ad8\u6027\u80fd\u3001\u6301\u4e45\u5316\u3001\u591a\u526f\u672c\u5907\u4efd\u3001\u6a2a\u5411\u6269\u5c55\u80fd\u529b\u3002</p> <p>Kafka \u7684\u7279\u6027\uff1a</p> <ul> <li>\u9ad8\u541e\u5410\u91cf\u3001\u4f4e\u5ef6\u8fdf\uff1aKafka \u6bcf\u79d2\u53ef\u4ee5\u5904\u7406\u51e0\u5341\u4e07\u6761\u6d88\u606f\uff0c\u5b83\u7684\u5ef6\u8fdf\u6700\u4f4e\u53ea\u6709\u51e0\u6beb\u79d2</li> <li>\u53ef\u6269\u5c55\u6027\uff1aKafka \u96c6\u7fa4\u652f\u6301\u70ed\u6269\u5c55</li> <li>\u6301\u4e45\u6027\u3001\u53ef\u9760\u6027\uff1a\u6d88\u606f\u88ab\u6301\u4e45\u5316\u5230\u672c\u5730\u78c1\u76d8\uff0c\u5e76\u4e14\u652f\u6301\u6570\u636e\u5907\u4efd\u9632\u6b62\u6570\u636e\u4e22\u5931</li> <li>\u5bb9\u9519\u6027\uff1a\u5141\u8bb8\u96c6\u7fa4\u4e2d\u8282\u70b9\u5931\u8d25\uff08\u82e5\u526f\u672c\u6570\u91cf\u4e3a n\uff0c\u5219\u5141\u8bb8 n-1 \u4e2a\u8282\u70b9\u5931\u8d25\uff09</li> <li>\u9ad8\u5e76\u53d1\uff1a\u652f\u6301\u6570\u5343\u4e2a\u5ba2\u6237\u7aef\u540c\u65f6\u8bfb\u5199</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#kafka_2","title":"Kafka \u67b6\u6784","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#kafka_3","title":"Kafka \u672f\u8bed\u89e3\u6790","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#broker","title":"Broker","text":"<p>Kafka \u96c6\u7fa4\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u5668\uff0c\u5176\u4e2d\u670d\u52a1\u5668\u8282\u70b9\u88ab\u79f0\u4f5c Broker\uff0c\u5c5e\u4e8e\u7269\u7406\u6982\u5ff5\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#producer","title":"Producer","text":"<p>Producer \u662f\u8d1f\u8d23\u5411 Kafka \u670d\u52a1\u7aef\u5199\u5165\u6570\u636e\u7684\u7a0b\u5e8f\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#topic","title":"Topic","text":"<p>Topic \u662f\u4e00\u4e2a\u903b\u8f91\u6982\u5ff5\uff0c\u53ef\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u6d88\u606f\u7c7b\u522b\u7684\u540d\u79f0\u3002\u540c\u7c7b\u6d88\u606f\u4f1a\u88ab\u53d1\u9001\u5230\u540c\u4e00\u4e2a Topic \u4e4b\u4e0b\uff0c\u4f8b\u5982\u8ba2\u5355\u6d88\u606f\uff0c\u53ea\u4f1a\u88ab\u53d1\u9001\u5230\u8ba2\u5355 Topic \u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4 Kafka \u662f\u9762\u5411 Topic \u7684\u3002\u4ece\u7269\u7406\u5c42\u9762\u6765\u8bb2\uff0c\u4e0d\u540c Topic \u5bf9\u5e94\u7684\u6d88\u606f\u662f\u5206\u5f00\u5b58\u50a8\u7684\u3002Topic \u5c31\u597d\u6bd4\u662f\u6570\u636e\u5e93\u7684\u8868\uff0c\u5c24\u5176\u662f\u5728\u5206\u5e93\u5206\u8868\u4e4b\u540e\u7684\u90a3\u79cd\u903b\u8f91\u8868\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#partition","title":"Partition","text":"<p>Partition \u5c5e\u4e8e\u7269\u7406\u6982\u5ff5\uff0c\u6bcf\u4e2a Topic \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a Partition\uff0c\u6240\u4ee5 Partition \u662f\u6700\u5c0f\u7684\u5b58\u50a8\u5355\u5143\uff0c\u5b58\u50a8\u7740\u4e00\u4e2a Topic \u7684\u90e8\u5206\u6570\u636e\u3002\u6bcf\u4e2a Partition \u90fd\u662f\u4e00\u4e2a\u5355\u72ec\u7684 log \u6587\u4ef6\uff0c\u6bcf\u6761\u8bb0\u5f55\u5747\u4ee5\u8ffd\u52a0\u7684\u5f62\u5f0f\u5199\u5165\u3002\u5f53\u751f\u4ea7\u8005\u4ea7\u751f\u6570\u636e\u65f6\uff0c\u4f1a\u4f9d\u636e\u5206\u914d\u7b56\u7565\u6765\u9009\u62e9\u5206\u533a\uff0c\u8fdb\u800c\u5c06\u6d88\u606f\u8ffd\u52a0\u5230\u6307\u5b9a\u5206\u533a\u7684\u672b\u5c3e\uff08\u7c7b\u4f3c\u961f\u5217\u64cd\u4f5c\uff09\uff0c\u800c\u6d88\u8d39\u8005\u5728\u6d88\u8d39\u7684\u65f6\u5019\u5219\u662f\u4ece\u5934\u5f00\u59cb\u8fdb\u884c\u6d88\u8d39\u7684\u3002</p> <p>\u4e3a\u4e86\u505a\u5230\u5747\u5300\u5206\u5e03\uff0c\u901a\u5e38 Partition \u7684\u6570\u91cf\u901a\u5e38\u662f Broker Server \u6570\u91cf\u7684\u6574\u6570\u500d\u3002</p> <p></p> <p>\u751f\u4ea7\u7ecf\u9a8c\u544a\u8bc9\u6211\u4eec\uff0c\u867d\u7136\u589e\u52a0\u5206\u533a\u6570\u53ef\u4ee5\u63d0\u9ad8 Kafka \u96c6\u7fa4\u7684\u541e\u5410\u91cf\uff0c\u4f46\u8fc7\u591a\u7684\u5206\u533a\u6216\u5355\u53f0\u670d\u52a1\u5668\u4e0a\u7684\u5206\u533a\u6570\u8fc7\u591a\uff0c\u4f1a\u589e\u52a0\u4e0d\u53ef\u7528\u6027\u548c\u5ef6\u8fdf\u7684\u98ce\u9669\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a</p> <ul> <li>\u66f4\u591a\u7684\u5206\u533a\uff1a\u610f\u5473\u7740\u9700\u8981\u6253\u5f00\u66f4\u591a\u7684\u6587\u4ef6\u53e5\u67c4\u3002</li> <li>\u589e\u52a0\u5ef6\u8fdf\uff1a\u70b9\u5230\u70b9\u7684\u5ef6\u8fdf\u4f1a\u968f\u4e4b\u589e\u52a0\u3002</li> <li>\u5185\u5b58\u6d88\u8017\uff1a\u5ba2\u6237\u7aef\u7684\u5185\u5b58\u6d88\u8017\u4e5f\u4f1a\u589e\u52a0\u3002</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#replica","title":"Replica","text":"<p>Replica \u662f partition \u7684\u526f\u672c\uff0c\u4fdd\u969c partition \u7684\u9ad8\u53ef\u7528\u6027\u3002Kafka \u6839\u636e\u4f7f\u7528\u573a\u666f\u4e0d\u540c\uff0c\u901a\u5e38\u4f1a\u6709\u4ee5\u4e0b\u4e00\u4e9b\u5173\u952e\u540d\u8bcd\uff1a</p> <ul> <li> <p>AR (Assigned Replicas)\uff1a\u5206\u914d\u7ed9\u8fd9\u4e2a\u5206\u533a\u7684\u526f\u672c\u96c6\u5408\uff0c\u5373\u4e00\u4e2a\u5206\u533a\u7684\u6240\u6709\u526f\u672c\uff0c\u5305\u62ec leader \u548c follower\u3002</p> </li> <li> <p>ISR (In-sync Replicas)\uff1a\u540c\u6b65\u526f\u672c\u96c6\uff0c\u6307\u4e0e leader \u4fdd\u6301\u540c\u6b65\u4e14\u540c\u6b65\u65f6\u95f4\u5dee\u4e0d\u5927\u4e8e\u53c2\u6570 <code>replica.lag.time.max.ms</code>\uff08\u9ed8\u8ba4\u503c\u4e3a 10 \u79d2\uff09\u7684\u526f\u672c\u3002\u5982\u679c follower \u957f\u65f6\u95f4\u672a\u5411 leader \u53d1\u9001\u901a\u4fe1\u8bf7\u6c42\u6216\u540c\u6b65\u6570\u636e\uff0c\u5219\u8be5 follower \u5c06\u88ab\u5254\u9664\u51fa ISR\u3002\u5982\u679c leader \u53d1\u751f\u6545\u969c\uff0c\u5c06\u4ece ISR \u4e2d\u9009\u4e3e\u65b0\u7684 leader\u3002</p> </li> <li> <p>OSR (Out of Sync Replicas)\uff1a\u4e0e leader \u526f\u672c\u540c\u6b65\u65f6\u5ef6\u8fdf\u8fc7\u591a\u7684\u526f\u672c\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff1a AR = ISR + OSR</p> <ul> <li> <p>CUR (Catch-up Replicas)\uff1a\u8ffd\u8d76\u590d\u5236\u96c6\uff0c\u6307\u6b63\u5728\u4e0e leader \u4fdd\u6301\u540c\u6b65\u8fc7\u7a0b\u4e2d\u7684\u526f\u672c\u3002</p> </li> <li> <p>RAR (Reassigned Replicas)\uff1a\u91cd\u65b0\u5206\u914d\u526f\u672c\u96c6\uff0c\u548c leader \u4fdd\u6301\u540c\u6b65\u3002</p> </li> </ul> <p>\u526f\u672c\u96c6\u4e2d\u4e3b\u8981\u6709\u4e24\u4e2a\u89d2\u8272\uff1a</p> <ol> <li>Leader\uff1areplica \u4e2d\u7684\u4e00\u4e2a\u89d2\u8272\uff0cproducer \u548c consumer \u53ea\u4e0e leader \u4ea4\u4e92\u3002</li> <li>Follower\uff1areplica \u4e2d\u7684\u4e00\u4e2a\u89d2\u8272\uff0c\u4ece leader \u4e2d\u590d\u5236\u6570\u636e\u3002</li> </ol> <p>\u603b\u7ed3\uff1a\u6bcf\u4e2a partition \u6709\u591a\u4e2a\u526f\u672c\uff0c\u5176\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4f5c\u4e3a leader\uff0cleader \u662f\u5f53\u524d\u8d1f\u8d23\u6570\u636e\u7684\u8bfb\u5199\u7684 partition\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#consumer-group","title":"Consumer Group","text":"<p>\u6bcf\u4e2a Consumer \u90fd\u5c5e\u4e8e\u4e00\u4e2a Consumer Group\uff0c\u8fd9\u662f\u4e00\u4e2a\u903b\u8f91\u6982\u5ff5\u3002\u6765\u81ea\u540c\u4e00\u4e2a topic \u7684\u6570\u636e\u53ef\u4ee5\u7531\u4e0d\u540c\u7684 consumer group \u4e2d\u7684 consumer \u8fdb\u884c\u6d88\u8d39\uff1b\u4f46\u540c\u4e00\u4e2a group \u4e2d\u7684\u4e0d\u540c consumer \u53ea\u80fd\u6d88\u8d39\u4e0d\u540c\u7684 partition\u3002</p> <p>Group \u5185\u7684 consumer \u53ef\u4ee5\u4f7f\u7528\u591a\u7ebf\u7a0b\u6216\u591a\u8fdb\u7a0b\u6765\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u5c06\u8fdb\u7a0b\u5206\u6563\u5728\u591a\u53f0\u673a\u5668\u4e0a\u3002\u901a\u5e38\uff0cconsumer \u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 partition \u7684\u6570\u91cf\uff0c\u4e14\u4e8c\u8005\u6700\u597d\u4fdd\u6301\u6574\u6570\u500d\u5173\u7cfb\u3002\u8fd9\u662f\u56e0\u4e3a Kafka \u5728\u8bbe\u8ba1\u65f6\u5047\u5b9a\u4e00\u4e2a partition \u53ea\u80fd\u88ab\u540c\u4e00\u4e2a group \u5185\u7684\u4e00\u4e2a consumer \u6d88\u8d39\u3002</p> <p>\u5982\u679c consumer group \u4e2d\u7684 consumer \u7ebf\u7a0b\u6570\u91cf\u5c11\u4e8e partition \u6570\u91cf\uff0c\u90a3\u4e48\u6709\u7684\u7ebf\u7a0b\u5c06\u4f1a\u6536\u5230\u591a\u4e2a\u6d88\u606f\u3002\u7531\u4e8e Kafka \u53ea\u80fd\u4fdd\u8bc1\u5728\u4e00\u4e2a partition \u4e0a\u6570\u636e\u662f\u6709\u5e8f\u7684\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u4e00\u4e2a consumer \u6d88\u8d39\u4e00\u4e2a topic \u7684\u591a\u4e2a\u5206\u533a\uff0c\u5c31\u53ef\u80fd\u51fa\u73b0\u6570\u636e\u4e71\u5e8f\u7684\u60c5\u51b5\u3002</p> <p>\u603b\u7ed3</p> <ol> <li>Consumer Group \u4e0b\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a consumer \u5b9e\u4f8b\uff0cconsumer \u5b9e\u4f8b\u53ef\u4ee5\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7ebf\u7a0b\u3002</li> <li>group.id \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a consumer group\u3002</li> <li>Consumer Group \u4e0b\u8ba2\u9605\u7684 topic \u4e2d\u7684\u6bcf\u4e2a\u5206\u533a\u53ea\u80fd\u5206\u914d\u7ed9\u67d0\u4e2a group \u4e0b\u7684\u4e00\u4e2a consumer\uff08\u5f53\u7136\uff0c\u8be5\u5206\u533a\u8fd8\u53ef\u4ee5\u88ab\u5206\u914d\u7ed9\u5176\u4ed6 group\uff09\u3002</li> </ol> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Kafka/1.Kafka/#offset","title":"Offset","text":"<p>\u6d88\u8d39\u8005\u5728\u6d88\u8d39\u8fc7\u7a0b\u4e2d\u9700\u8981\u8bb0\u5f55\u81ea\u5df1\u6d88\u8d39\u4e86\u591a\u5c11\u6570\u636e\uff0c\u5373\u6d88\u8d39\u4f4d\u7f6e\u4fe1\u606f\u3002\u5728 Kafka \u4e2d\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4fe1\u606f\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u672f\u8bed\uff1a\u4f4d\u79fb (offset)\u3002Offset \u8868\u660e\u4e86\u67d0\u4e2a Consumer Group \u5728\u4e0d\u540c Topic Partition \u4e0a\u7684\u6d88\u8d39\u504f\u79fb\u91cf\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6d88\u8d39\u8fdb\u5ea6\uff09\uff0c\u5b83\u8bb0\u5f55\u4e86 Consumer \u8981\u6d88\u8d39\u7684\u4e0b\u4e00\u6761\u6d88\u606f\u7684\u4f4d\u79fb\u3002</p> <p>Consumer \u9700\u8981\u5411 Kafka \u4e0a\u62a5\u81ea\u5df1\u7684\u4f4d\u79fb\u6570\u636e\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u4e0a\u62a5\u8fc7\u7a0b\u79f0\u4e3a \u63d0\u4ea4\u4f4d\u79fb (Committing Offsets)\u3002\u63d0\u4ea4\u4f4d\u79fb\u662f\u4e3a\u4e86\u4fdd\u8bc1 Consumer \u7684\u6d88\u8d39\u8fdb\u5ea6\u6b63\u5e38\u3002\u5f53 Consumer \u53d1\u751f\u6545\u969c\u91cd\u542f\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u4e4b\u524d\u63d0\u4ea4\u7684 Offset \u4f4d\u7f6e\u5f00\u59cb\u7ee7\u7eed\u6d88\u8d39\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u5f00\u59cb\uff08Kafka \u8ba4\u4e3a\u5c0f\u4e8e\u63d0\u4ea4\u7684 Offset \u7684\u6d88\u606f\u90fd\u5df2\u7ecf\u6210\u529f\u6d88\u8d39\u4e86\uff09\u3002Kafka \u8bbe\u8ba1\u4e86\u8fd9\u4e2a\u673a\u5236\u6765\u4fdd\u969c\u6d88\u8d39\u8fdb\u5ea6\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0cConsumer \u53ef\u4ee5\u540c\u65f6\u53bb\u6d88\u8d39\u591a\u4e2a\u5206\u533a\u7684\u6570\u636e\uff0c\u6240\u4ee5\u4f4d\u79fb\u63d0\u4ea4\u662f\u6309\u7167\u5206\u533a\u7684\u7c92\u5ea6\u8fdb\u884c\u4e0a\u62a5\u7684\u3002\u8fd9\u610f\u5473\u7740 Consumer \u9700\u8981\u4e3a\u5206\u914d\u7ed9\u5b83\u7684\u6bcf\u4e2a\u5206\u533a\u63d0\u4ea4\u5404\u81ea\u7684\u4f4d\u79fb\u6570\u636e\u3002</p> <p>\u5f88\u591a\u6d88\u606f\u5f15\u64ce\u90fd\u5c06\u8fd9\u90e8\u5206\u4fe1\u606f\u4fdd\u5b58\u5728\u670d\u52a1\u5668\u7aef\uff08broker \u7aef\uff09\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u5f53\u7136\u662f\u5b9e\u73b0\u7b80\u5355\uff0c\u4f46\u4f1a\u9762\u4e34\u4e09\u4e2a\u4e3b\u8981\u95ee\u9898\uff1a</p> <ol> <li>Broker \u4ece\u6b64\u53d8\u6210\u6709\u72b6\u6001\u7684\uff1a\u8fd9\u4f1a\u5f71\u54cd\u7cfb\u7edf\u7684\u4f38\u7f29\u6027\u3002</li> <li>\u9700\u8981\u5f15\u5165\u5e94\u7b54\u673a\u5236 (acknowledgement)\uff1a\u6765\u786e\u8ba4\u6d88\u8d39\u6210\u529f\u3002</li> <li>\u4fdd\u5b58\u5927\u91cf Consumer \u7684 Offset \u4fe1\u606f\uff1a\u5fc5\u7136\u5f15\u5165\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u9020\u6210\u8d44\u6e90\u6d6a\u8d39\u3002</li> </ol> <p>\u800c Kafka \u9009\u62e9\u4e86\u4e0d\u540c\u7684\u65b9\u5f0f\uff1a\u6bcf\u4e2a Consumer Group \u4fdd\u5b58\u81ea\u5df1\u7684\u4f4d\u79fb\u4fe1\u606f\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u7b80\u5355\u7684\u4e00\u4e2a\u6574\u6570\u8868\u793a\u4f4d\u7f6e\u5373\u53ef\u3002\u540c\u65f6\uff0cKafka \u53ef\u4ee5\u5f15\u5165\u68c0\u67e5\u70b9\u673a\u5236\u5b9a\u671f\u6301\u4e45\u5316\uff0c\u4ece\u800c\u7b80\u5316\u5e94\u7b54\u673a\u5236\u7684\u5b9e\u73b0\u3002Consumer Group \u4e2d\u7684\u6240\u6709 Consumer \u4f7f\u7528\u4e00\u5957 Offset\u3002</p> <p>Kafka \u9ed8\u8ba4\u662f\u5b9a\u671f\u81ea\u52a8\u63d0\u4ea4\u4f4d\u79fb\uff08<code>auto.commit.interval.ms=5000ms</code>\uff0c<code>enable.auto.commit = true</code>\uff09\u3002\u5f53\u7136\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u9009\u62e9\u624b\u52a8\u63d0\u4ea4\u4f4d\u79fb\u4ee5\u5b9e\u73b0\u66f4\u7ec6\u81f4\u7684\u63a7\u5236\u3002</p> <p>\u53e6\u5916\uff0cKafka \u4f1a\u5b9a\u671f\u5c06 Consumer Group \u7684\u6d88\u8d39\u60c5\u51b5\u4fdd\u5b58\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a Offset Map\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>Kafka \u8001\u7248\u672c\uff080.8.0\uff09\u7684\u4f4d\u79fb\u662f\u63d0\u4ea4\u5230 Zookeeper \u4e2d\u7684\uff0c\u5bf9\u5e94\u7684\u76ee\u5f55\u7ed3\u6784\u662f\uff1a <code>/consumers/&lt;group.id&gt;/offsets/&lt;topic&gt;/&lt;partitionId&gt;</code></p> <p>\u4f46\u662f\uff0cZookeeper \u5176\u5b9e\u5e76\u4e0d\u9002\u5408\u8fdb\u884c\u5927\u6279\u91cf\u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u5c24\u5176\u662f\u5199\u64cd\u4f5c\u3002\u56e0\u6b64\uff0cKafka \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff1a\u589e\u52a0\u4e86\u5185\u90e8\u7684 topic <code>__consumer_offsets</code>\uff0c\u5c06 offset \u4fe1\u606f\u5199\u5165\u8fd9\u4e2a topic\uff0c\u6446\u8131\u4e86\u5bf9 Zookeeper \u7684\u4f9d\u8d56\uff08\u6307\u4fdd\u5b58 offset \u8fd9\u4ef6\u4e8b\u60c5\uff09\u3002<code>__consumer_offsets</code> \u4e2d\u7684\u6d88\u606f\u4fdd\u5b58\u4e86\u6bcf\u4e2a consumer group \u5728\u67d0\u4e00\u65f6\u523b\u63d0\u4ea4\u7684 offset \u4fe1\u606f\u3002</p> <p>\u5728 Kafka \u4e2d\uff0c\u5173\u4e8e\u4f4d\u7f6e\u4fe1\u606f\u6709\u5f88\u591a \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5bf9\u751f\u4ea7\u8005\u800c\u8a00\uff1a</p> <ul> <li> <p>Log End Offset (LEO)\uff1a\u8bb0\u5f55\u5e95\u5c42\u65e5\u5fd7 (log) \u4e2d\u4e0b\u4e00\u6761\u6d88\u606f\u7684 offset\u3002\u5bf9 producer \u6765\u8bf4\uff0c\u8fd9\u5c31\u662f\u5373\u5c06\u63d2\u5165\u4e0b\u4e00\u6761\u6d88\u606f\u7684 offset\u3002</p> </li> <li> <p>High Watermark (HW)\uff1a\u5df2\u7ecf\u6210\u529f\u5907\u4efd\u5230\u5176\u4ed6 replicas \u4e2d\u7684\u6700\u65b0\u4e00\u6761\u6570\u636e\u7684 offset\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cLog End Offset \u4e0e High Watermark \u4e4b\u95f4\u7684\u6570\u636e\u5df2\u7ecf\u5199\u5165\u5230\u8be5 partition \u7684 leader \u4e2d\uff0c\u4f46\u8fd8\u672a\u5b8c\u5168\u5907\u4efd\u5230\u5176\u4ed6 replicas \u4e2d\uff0cconsumer \u662f\u65e0\u6cd5\u6d88\u8d39\u8fd9\u90e8\u5206\u6d88\u606f\uff08\u672a\u63d0\u4ea4\u6d88\u606f\uff09\u3002\u7531\u4e8e\u7f51\u7edc\u95ee\u9898\uff0c\u6709\u4e9b follower \u53ef\u80fd\u540c\u6b65\u5f97\u6bd4\u8f83\u6162\uff0c\u56e0\u6b64 HW \u5c31\u662f\u6240\u6709 follower \u4e2d\u540c\u6b65\u6700\u5c0f\u7684 LEO\u3002</p> </li> </ul> <p></p> <p>\u5bf9\u6d88\u8d39\u8005\u800c\u8a00\uff1a</p> <ul> <li> <p>Last Committed Offset (LCO)\uff1aconsumer group \u6700\u65b0\u4e00\u6b21 commit \u7684 offset\uff0c\u8868\u793a\u8fd9\u4e2a group \u5df2\u7ecf\u6210\u529f\u6d88\u8d39\u4e86 Last Committed Offset \u4e4b\u524d\u7684\u6570\u636e\u3002</p> </li> <li> <p>Current Position (CP)\uff1aconsumer group \u5f53\u524d\u6d88\u8d39\u6570\u636e\u7684 offset\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cLast Committed Offset \u5230 Current Position \u4e4b\u95f4\u7684\u6570\u636e\u5df2\u7ecf\u62c9\u53d6\u6210\u529f\uff0c\u53ef\u80fd\u6b63\u5728\u5904\u7406\uff0c\u4f46\u5c1a\u672a commit\u3002</p> </li> </ul> <p>\u5176\u4e2d\uff0cHW - CP = Lag\uff0c\u8ba1\u7b97\u51fa\u6765\u7684\u503c\u5373\u4e3a\u6d88\u8d39\u5ef6\u8fdf\u60c5\u51b5\u3002</p> <p>\u6bcf\u4e2a Kafka \u526f\u672c\u5bf9\u8c61\u90fd\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u5c5e\u6027\uff1aLEO \u548c HW\u3002\u6ce8\u610f\uff0c\u8fd9\u9002\u7528\u4e8e\u6240\u6709\u7684\u526f\u672c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f leader \u526f\u672c\u3002</p> <p>\u6b64\u5916\uff0c\u5173\u4e8e consumer\uff0c\u8fd9\u91cc\u6d89\u53ca\u5230\u4e24\u4e2a offset\uff1a</p> <ul> <li>Current Position\uff1a\u5f53\u524d\u6d88\u8d39\u6570\u636e\u7684 offset\u3002</li> <li>Last Committed Offset\uff1a\u5904\u7406\u5b8c\u6bd5\u540e\u5411\u670d\u52a1\u5668\u786e\u8ba4\u7684 offset\u3002</li> </ul> <p>\u663e\u7136\uff0c\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\uff0cLast Committed Offset \u662f\u843d\u540e\u4e8e Current Position \u7684\u3002\u5982\u679c consumer \u6302\u6389\u4e86\uff0c\u4e0b\u6b21\u6d88\u8d39\u6570\u636e\u65f6\u53ea\u4f1a\u4ece Last Committed Offset \u7684\u4f4d\u7f6e\u62c9\u53d6\u6570\u636e\uff0c\u8fd9\u5c06\u5bfc\u81f4\u6570\u636e\u88ab\u91cd\u590d\u6d88\u8d39\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 <code>auto.offset.reset</code> \u6307\u5b9a Offset \u6d88\u8d39\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u53d6\u503c\uff1a</p> <ul> <li> <p>earliest\uff1a\u5f53\u5404\u5206\u533a\u4e0b\u6709\u5df2\u63d0\u4ea4\u7684 offset \u65f6\uff0c\u4ece\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684 offset \u5f00\u59cb\u6d88\u8d39\uff1b\u65e0\u63d0\u4ea4\u7684 offset \u65f6\uff0c\u4ece\u5934\u5f00\u59cb\u6d88\u8d39\u3002</p> </li> <li> <p>latest\uff1a\u5f53\u5404\u5206\u533a\u4e0b\u6709\u5df2\u63d0\u4ea4\u7684 offset \u65f6\uff0c\u4ece\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684 offset \u5f00\u59cb\u6d88\u8d39\uff1b\u65e0\u63d0\u4ea4\u7684 offset \u65f6\uff0c\u6d88\u8d39\u65b0\u4ea7\u751f\u7684\u8be5\u5206\u533a\u4e0b\u7684\u6570\u636e\uff08\u9ed8\u8ba4\u503c\uff09\u3002</p> </li> <li> <p>none\uff1a\u5f53\u5404\u5206\u533a\u90fd\u5b58\u5728\u5df2\u63d0\u4ea4\u7684 offset \u65f6\uff0c\u4ece\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684 offset \u540e\u5f00\u59cb\u6d88\u8d39\uff1b\u53ea\u8981\u6709\u4e00\u4e2a\u5206\u533a\u4e0d\u5b58\u5728\u5df2\u63d0\u4ea4\u7684 offset\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002</p> </li> </ul> <pre><code>public enum OffsetResetStrategy {\n    LATEST , EARLIEST , NONE\n}\n</code></pre> <p>\u5de5\u4f5c\u573a\u666f\u4e00\uff1aKafka \u4e0a\u5b9e\u65f6\u88ab\u704c\u5165\u6570\u636e\uff0c\u4f46 Kafka \u4e0a\u5df2\u7ecf\u79ef\u7d2f\u4e86\u4e24\u5929\u7684\u6570\u636e\uff0c\u5982\u4f55\u4ece\u6700\u65b0\u7684 offset \u5f00\u59cb\u6d88\u8d39\uff1f\uff08\u6700\u65b0\u6307\u76f8\u5bf9\u4e8e\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u7684\u6700\u65b0\uff09</p> <p>\u56de\u7b54\uff1a\u5c06 <code>group.id</code> \u6362\u6210\u65b0\u7684\u540d\u5b57\uff08\u76f8\u5f53\u4e8e\u52a0\u5165\u65b0\u7684\u6d88\u8d39\u7ec4\uff09\u3002</p> <p>\u5907\u6ce8\uff1a\u7f51\u4e0a\u6587\u7ae0\u63d0\u5230\u8fd8\u9700\u8981\u8bbe\u7f6e <code>properties.setProperty(\"auto.offset.reset\", \"latest\")</code>\u3002\u5b9e\u9a8c\u53d1\u73b0\uff0c\u5373\u4f7f\u4e0d\u8bbe\u7f6e\u8fd9\u4e2a\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u503c\u5c31\u662f <code>latest</code>\uff0c\u53ea\u8981 <code>group.id</code> \u662f\u5168\u65b0\u7684\uff0c\u5c31\u4f1a\u4ece\u6700\u65b0\u7684 offset \u5f00\u59cb\u6d88\u8d39\u3002</p> <p>\u5de5\u4f5c\u573a\u666f\u4e8c\uff1aKafka \u5728\u5b9e\u65f6\u704c\u5165\u6570\u636e\uff0cKafka \u4e0a\u5df2\u7ecf\u79ef\u7d2f\u4e86\u4e24\u5929\u7684\u6570\u636e\uff0c\u5982\u4f55\u4ece\u4e24\u5929\u524d\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\u6d88\u8d39\uff1f</p> <ol> <li>\u5c06 <code>group.id</code> \u6362\u6210\u65b0\u7684\u540d\u5b57\u3002</li> <li>\u8bbe\u7f6e <code>properties.setProperty(\"auto.offset.reset\", \"earliest\")</code>\u3002</li> </ol> <p>\u5de5\u4f5c\u573a\u666f\u4e09\uff1a\u4e0d\u66f4\u6539 <code>group.id</code>\uff0c\u53ea\u662f\u6dfb\u52a0\u4e86 <code>properties.setProperty(\"auto.offset.reset\", \"earliest\")</code>\uff0cconsumer \u4f1a\u4ece\u4e24\u5929\u524d\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\u6d88\u8d39\u5417\uff1f</p> <p>\u56de\u7b54\uff1a\u4e0d\u4f1a\u3002\u53ea\u8981\u4e0d\u66f4\u6539\u6d88\u8d39\u7ec4\uff0c\u53ea\u4f1a\u4ece\u4e0a\u6b21\u6d88\u8d39\u7ed3\u675f\u7684\u5730\u65b9\u7ee7\u7eed\u6d88\u8d39\u3002</p> <p>\u5de5\u4f5c\u573a\u666f\u56db\uff1a\u4e0d\u66f4\u6539 <code>group.id</code>\uff0c\u53ea\u662f\u6dfb\u52a0\u4e86 <code>properties.setProperty(\"auto.offset.reset\", \"latest\")</code>\uff0cconsumer \u4f1a\u4ece\u8ddd\u79bb\u73b0\u5728\u6700\u8fd1\u7684\u4f4d\u7f6e\u6d88\u8d39\u5417\uff1f</p> <p>\u56de\u7b54\uff1a\u4e0d\u4f1a\uff0c\u53ea\u8981\u4e0d\u66f4\u6539\u6d88\u8d39\u7ec4\uff0cconsumer \u53ea\u4f1a\u4ece\u4e0a\u6b21\u6d88\u8d39\u7ed3\u675f\u7684\u5730\u65b9\u7ee7\u7eed\u6d88\u8d39\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/","title":"Scala","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala-intro","title":"Scala Intro","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala-vs-java","title":"Scala VS Java","text":"<p>Scala \u662f\u4e00\u95e8\u591a\u8303\u5f0f\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u8bbe\u8ba1\u521d\u8877\u662f\u8981\u96c6\u6210\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u5404\u79cd\u7279\u6027\u3002</p> <p>\u7279\u70b9\uff1a</p> <ul> <li>\u540c\u6837\u8fd0\u884c\u5728 JVM \u4e0a\uff0c\u53ef\u4ee5\u4e0e\u73b0\u5b58\u7a0b\u5e8f\u540c\u65f6\u8fd0\u884c\u3002</li> <li>\u53ef\u76f4\u63a5\u4f7f\u7528 Java \u7c7b\u5e93\u3002</li> <li>\u540c Java \u4e00\u6837\u9759\u6001\u7c7b\u578b\u3002</li> <li>\u8bed\u6cd5\u548c Java \u7c7b\u4f3c\uff0c\u6bd4 Java \u66f4\u52a0\u7b80\u6d01\uff08\u7b80\u6d01\u800c\u5e76\u4e0d\u662f\u7b80\u5355\uff09\uff0c\u8868\u8fbe\u6027\u66f4\u5f3a\u3002</li> <li>\u540c\u65f6\u652f\u6301\u9762\u5411\u5bf9\u8c61\u3001\u51fd\u6570\u5f0f\u7f16\u7a0b\u3002</li> <li>\u6bd4 Java \u66f4\u9762\u5411\u5bf9\u8c61\u3002</li> </ul> <p>\u5173\u6ce8\u70b9\uff1a</p> <ul> <li>\u7c7b\u578b\u63a8\u65ad\u3001\u4e0d\u53d8\u91cf\u3001\u51fd\u6570\u5f0f\u7f16\u7a0b\u3001\u9ad8\u7ea7\u7a0b\u5e8f\u6784\u9020\u3002</li> <li>\u5e76\u53d1\uff1aactor \u6a21\u578b\u3002</li> <li>\u548c\u73b0\u6709 Java \u4ee3\u7801\u4ea4\u4e92\u3001\u76f8\u6bd4 Java \u5f02\u540c\u548c\u4f18\u7f3a\u3002</li> </ul> <p>\u548c Java \u5173\u7cfb\uff1a</p> <pre><code>        javac               java\n.java --------&gt; .class ----------&gt; run on JVM\n.scala -------&gt; .class ----------&gt; run on JVM\n        scalac              scala\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#hello-world","title":"Hello World","text":"<pre><code>object Main {\n  def main(args: Array[String]): Unit = {\n    println(\"Hello world!\")\n  }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_1","title":"Scala \u53d8\u91cf\u3001\u7c7b\u578b","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_2","title":"Scala \u4e2d\u5e38\u89c1\u7684\u7c7b\u578b","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_3","title":"Scala \u6d41\u7a0b\u63a7\u5236","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#for","title":"For \u5faa\u73af","text":"<pre><code>val str = \"abcdefg\"\n// &lt;-\u7684\u672c\u8d28\uff1aforeach\nfor (s &lt;- str) {\n  println(s)\n}\n// \u672c\u8d28\uff1a1.to(10).foreach(i =&gt; println(i))\n// \u901a\u5e38\u7684\u5199\u6cd5\uff1a\u8c03\u7528\u8005.\u65b9\u6cd5(\u53c2\u6570)\n// Scala\u7684\u7279\u6b8a\u5199\u6cd5\uff1a\u8c03\u7528\u8005 \u65b9\u6cd5 \u53c2\u6570\nfor (i &lt;- 1 to 10) {\n  println(i)\n  // Console println i\n}\n// until: \u5de6\u95ed\u53f3\u5f00\u533a\u95f4\nfor (i &lt;- 1 until 10) {\n  println(i)\n}\n// \u672c\u8d28\uff1a1.to(10).by(2).foreach(i =&gt; println(i))\nfor (i &lt;- 1 to 10 by 2) {\n  println(i)\n}\n// \u9006\u5e8f\nfor (i &lt;- 10 to 1 by -1) {\n  println(i)\n}\nfor (i &lt;- 1 to 10 reverse) {\n  println(i)\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#for_1","title":"For \u5faa\u73af\u5f15\u5165\u53d8\u91cf","text":"<pre><code>for (i &lt;- 1 to 5; j = i * i) {\n  println(j)\n}\n// \u7b49\u4ef7\u4e8e\nfor {\n  i &lt;- 1 to 5\n  j = i * i\n} {\n  println(j)\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#for_2","title":"For \u5faa\u73af\u63a8\u5bfc\u5f0f","text":"<pre><code>val res = for (i &lt;- 1 to 5) yield i * i\n\nprintln(res) // Vector(1, 4, 9, 16, 25)\n\nval res = for (i &lt;- 1 to 5) yield {\n  if (i % 2 == 0) {\n    i\n  } else {\n    \"odd\"\n  }\n\n}\n\nprintln(res) // Vector(odd, 2, odd, 4, odd)\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#continue","title":"\u5faa\u73af\u5b88\u536b\u66ff\u4ee3 continue","text":"<pre><code>// \u5faa\u73af\u5b88\u536b\uff1afor + if\uff0c\u7528\u4e8e\u66ff\u4ee3 continue\nfor (i &lt;- 1 to 10 if i % 2 == 0) {\n  println(i)\n}\n// \u7528\u4e8e\u66ff\u4ee3:\nfor (i &lt;- 1 to 10) {\n  if (i % 2 == 0) {\n    println(i)\n  }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_1","title":"\u5d4c\u5957\u5faa\u73af","text":"<pre><code>// \u5d4c\u5957\u5faa\u73af\uff1a\u7528\u4e8e\u66ff\u4ee3\u591a\u91cdfor\u5faa\u73af\nfor (i &lt;- 1 to 3; j &lt;- 1 to 3) {\n  println(i, j)\n}\n// \u6253\u5370\u4e5d\u4e5d\u4e58\u6cd5\u8868\nfor (i &lt;- 1 to 9; j &lt;- 1 to i) {\n  print(s\"$j * $i = ${i * j}\\t\")\n  if (i == j) {\n    println()\n  }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#break","title":"\u629b\u5f02\u5e38\u5b9e\u73b0 break","text":"<pre><code>import scala.util.control.Breaks\n\n// \u901a\u8fc7\u629b\u5f02\u5e38\u6765\u5b9e\u73b0 break\ntry {\n  for (i &lt;- 1 to 10) {\n    println(i)\n    if (i == 3) {\n      throw new Exception(\"break\")\n    }\n  }\n} catch {\n  case e: Exception =&gt; println(e.getMessage)\n}\n\n// \u66f4\u4f18\u96c5\u5730\u5b9e\u73b0 break\uff0c\u5e95\u5c42\u4e5f\u662f\u901a\u8fc7\u629b\u5f02\u5e38\u6765\u5b9e\u73b0\u7684\nBreaks.breakable {\n  for (i &lt;- 1 to 10) {\n    println(i)\n    if (i == 3) {\n      Breaks.break()\n    }\n  }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_4","title":"Scala \u51fd\u6570\u548c\u65b9\u6cd5","text":"<pre><code>def func(arg1: TypeOfArg1, arg2: ...): RetType = {\n    ...\n}\n</code></pre> <p>Scala \u7684\u8bbf\u95ee\u4fee\u9970\u7b26\uff1apublic, protected, private\u3002\u9ed8\u8ba4\u4e3a public\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u7701\u7565\u4e0d\u5199\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u8bdd\uff0c\u5c31\u4e0d\u80fd\u5199 return\u3002\u5982\u679c\u8981\u5199 return\uff0c\u90a3\u4e48\u5219\u5fc5\u987b\u58f0\u660e\u8fd4\u56de\u503c\u7c7b\u578b\u3002</p> <pre><code>object Functions {\n  def main(args: Array[String]): Unit = {\n    println(add(1, 2))\n    println(abs(-1))\n    printAll(\"a\", \"b\", \"c\")\n    test(\"Tom\", 20)\n    test2(name = \"Tom\", age = 20)\n  }\n\n  def add(x: Int, y: Int): Int = {\n    x + y\n  }\n\n  def abs(x: Int): Int = {\n    if (x &lt; 0) -x\n    else x\n  }\n\n  // \u53ef\u53d8\u53c2\u6570\n  def printAll(s: String*): Unit = {\n    s.foreach(println)\n  }\n\n  // \u9ed8\u8ba4\u53c2\u6570\uff0c\u4e00\u822c\u5c06\u9ed8\u8ba4\u53c2\u6570\u653e\u5728\u6700\u540e\n  def test(name: String, age: Int = 18): Unit = {\n    println(s\"$name is $age years old\")\n  }\n\n  // \u5982\u679c\u9ed8\u8ba4\u53c2\u6570\u5728\u4e2d\u95f4\uff0c\u90a3\u4e48\u8c03\u7528\u65f6\u9700\u8981\u6307\u5b9a\u53c2\u6570\u540d\n  def test2(name: String = \"default\", age: Int): Unit = {\n    println(s\"$name is $age years old\")\n  }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_2","title":"\u51fd\u6570\u7701\u7565\u7279\u6027","text":"<ul> <li>return \u53ef\u4ee5\u7701\u7565\uff0cScala \u4f1a\u4f7f\u7528\u51fd\u6570\u4f53\u7684\u903b\u8f91\u4e0a\u7684\u6700\u540e\u4e00\u884c\u4ee3\u7801\u4f5c\u4e3a\u8fd4\u56de\u503c</li> </ul> <pre><code>def f1(s: String): String = {\n  s\n}\n</code></pre> <ul> <li>\u5982\u679c\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u7701\u7565\u82b1\u62ec\u53f7</li> </ul> <pre><code>def f2(s: String): String = s\n</code></pre> <ul> <li>\u8fd4\u56de\u503c\u7c7b\u578b\u5982\u679c\u80fd\u591f\u63a8\u65ad\u51fa\u6765\uff0c\u90a3\u4e48\u53ef\u4ee5\u7701\u7565</li> </ul> <pre><code>def f3(s: String) = s\n</code></pre> <ul> <li>\u5982\u679c\u6709 return\uff0c\u5219\u4e0d\u80fd\u7701\u7565\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u5fc5\u987b\u6307\u5b9a</li> </ul> <pre><code>def f4(): String = {\n  return \"hello\"\n}\n</code></pre> <ul> <li>Scala \u5982\u679c\u51fd\u6570\u662f\u6ca1\u6709\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u53ef\u4ee5\u7701\u7565\u7b49\u53f7\uff0c\u5c06\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570\u79f0\u4e4b\u4e3a\u8fc7\u7a0b</li> </ul> <pre><code>def f6() {\n  \"hi\"\n}\n</code></pre> <ul> <li>\u5982\u679c\u51fd\u6570\u65e0\u53c2\uff0c\u4f46\u662f\u58f0\u660e\u4e86\u53c2\u6570\u5217\u8868\uff0c\u90a3\u4e48\u8c03\u7528\u65f6\uff0c\u5c0f\u62ec\u53f7\u53ef\u52a0\u53ef\u4e0d\u52a0</li> </ul> <pre><code>def f7() = \"hi\"\nf7\n</code></pre> <ul> <li>\u5982\u679c\u51fd\u6570\u6ca1\u6709\u53c2\u6570\u5217\u8868\uff0c\u90a3\u4e48\u5c0f\u62ec\u53f7\u53ef\u4ee5\u7701\u7565\uff0c\u8c03\u7528\u65f6\u5c0f\u62ec\u53f7\u5fc5\u987b\u7701\u7565</li> </ul> <pre><code>def f8 = \"hi\"\nprintln(f8)\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_3","title":"\u533f\u540d\u51fd\u6570","text":"<pre><code>(param: Type) =&gt; {function body}\n</code></pre> <pre><code>val f = (name: String) =&gt; println(name)\nf(\"John\")\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_4","title":"\u51fd\u6570\u9ad8\u9636\u7528\u6cd5","text":"<p>Scala \u4e2d\u7684\u51fd\u6570\u7c7b\u4f3c\u4e8e Int\uff0c\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u4e0d\u8fc7 Int \u7c7b\u578b\u7684\u7956\u5148\u7c7b\u662f AnyValue\uff0c\u51fd\u6570\u7684\u7956\u5148\u7c7b\u662f AnyRef\u3002</p> <p>\u51fd\u6570\u7c7b\u578b\u53d8\u91cf\u58f0\u660e\uff1a</p> <pre><code>var func: (String) =&gt; Int\n</code></pre> <ul> <li>\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u503c\uff1a</li> </ul> <pre><code>// define function\ndef foo(n: Int): Int = {\n    println(\"call foo\")\n    n + 1\n}\n// function assign to value, also a object\nval func = foo _ // represent the function foo, not function call\nval func1: Int =&gt; Int = foo // specify the type of func1\nprintln(func) // Main$$$Lambda$674/0x000000080103c588@770beef5\nprintln(func == func1) // false, not a same object\n</code></pre> <ul> <li>\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\uff1a</li> </ul> <pre><code>// function as arguments\ndef dualEval(op: (Int, Int) =&gt; Int, a: Int, b: Int) = {\n    op(a, b)\n}\ndef add(a: Int, b: Int): Int = a + b\nprintln(dualEval(add, 10, 100))\nval mul:(Int, Int) =&gt; Int = _ * _\nprintln(dualEval(mul, 10, 100))\nprintln(dualEval((a, b) =&gt; a + b, 1000, 24))\n</code></pre> <ul> <li>\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c\uff1a</li> </ul> <pre><code>// function as return value\ndef outerFunc(): Int =&gt; Unit = {\n    def inner(a: Int): Unit = {\n        println(s\"call inner with argument ${a}\")\n    }\n    inner // return a function\n}\nprintln(outerFunc()(10)) // inner return ()\n</code></pre> <p> \u504f\u51fd\u6570\uff1aScala \u504f\u5e94\u7528\u51fd\u6570\u662f\u4e00\u79cd\u8868\u8fbe\u5f0f\uff0c\u4e0d\u5fc5\u63d0\u4f9b\u51fd\u6570\u9700\u8981\u7684\u6240\u6709\u53c2\u6570\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u90e8\u5206\uff0c\u6216\u4e0d\u63d0\u4f9b\u6240\u9700\u53c2\u6570</p> <pre><code>import java.util.Date\n\ndef log(date: Date, message: String) = {\n  println(date + \"----\" + message)\n}\n\nval date = new Date\n\n// logWithDateBound \u7684\u7c7b\u578b\u662f\uff1aString =&gt; Unit \u7684\u51fd\u6570\nval logWithDateBound = log(date, _: String) // _: Type\n\nlogWithDateBound(\"message1\")\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_5","title":"\u67ef\u91cc\u5316","text":"<p>\u67ef\u91cc\u5316\uff1a\u5c06\u4e00\u4e2a\u53c2\u6570\u5217\u8868\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u53d8\u6210\u591a\u4e2a\u53c2\u6570\u5217\u8868\u7684\u8fc7\u7a0b\u3002\u4e5f\u5c31\u662f\u5c06\u666e\u901a\u591a\u53c2\u6570\u51fd\u6570\u53d8\u6210\u9ad8\u9636\u51fd\u6570\u7684\u8fc7\u7a0b\u3002</p> <pre><code>def add(a: Int)(b: Int) = a + b\n// f \u662f\u4e00\u4e2a\u504f\u51fd\u6570\nvar f: Int =&gt; Int = add(1)\nf(2) // 3\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_6","title":"\u95ed\u5305","text":"<p>\u95ed\u5305\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u4f9d\u8d56\u4e8e\u58f0\u660e\u5728\u51fd\u6570\u5916\u90e8\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u53d8\u91cf\u3002\u95ed\u5305\u901a\u5e38\u6765\u8bb2\u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\u662f\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e2a\u51fd\u6570\u91cc\u9762\u5c40\u90e8\u53d8\u91cf\u7684\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u3002</p> <pre><code>def addByA(a: Int): Int =&gt; Int = a + _\n\nval addBy2 = addByA(2)\naddBy2(5) // 7\n\naddByA(2)(5) // 7\n</code></pre> <pre><code>def minusXY(x: Int) = (y: Int) =&gt; x - y\n\nval f: Int =&gt; Int = minusXY(20)\nf(1) // 19\nf(2) // 18\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>y: Int =&gt; x - y</code> \u662f\u4e00\u4e2a\u533f\u540d\u51fd\u6570\uff0c\u5f15\u7528\u4e86\u5916\u90e8\u53d8\u91cf x\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u548c x \u6574\u4f53\u5f62\u6210\u4e00\u4e2a\u95ed\u5305\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_7","title":"\u60f0\u6027\u52a0\u8f7d","text":"<p>\u5f53\u51fd\u6570\u8fd4\u56de\u503c\u88ab\u58f0\u660e\u4e3a <code>lazy</code> \u65f6\uff0c\u51fd\u6570\u7684\u6267\u884c\u5c06\u4f1a\u88ab\u63a8\u8fdf\uff0c\u77e5\u9053\u6211\u4eec\u9996\u6b21\u5bf9\u6b64\u53d6\u503c\uff0c\u8be5\u51fd\u6570\u624d\u4f1a\u88ab\u6267\u884c\u3002\u8fd9\u79cd\u51fd\u6570\u6210\u4e3a\u60f0\u6027\u51fd\u6570\u3002</p> <pre><code>object Main {\n  def main(args: Array[String]): Unit = {\n    // just like pass by name\n    lazy val result: Int = sum(13, 47)\n    println(\"before lazy load\")\n    println(s\"result = ${result}\") // first call sum(13, 47)\n  }\n\n  def sum(a: Int, b: Int): Int = {\n    println(\"call sum\")\n    a + b\n  }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_8","title":"\u4f20\u503c\u51fd\u6570 &amp; \u4f20\u540d\u51fd\u6570","text":"<p>\u5f53\u5728 Scala \u4e2d\u4f20\u9012\u53c2\u6570\u7ed9\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 call by value \u6216 call by name \u4e24\u79cd\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u3002</p> <p>\u5728 call by value \u4e2d\uff0c\u51fd\u6570\u53c2\u6570\u7684\u503c\u5728\u4f20\u9012\u4e4b\u524d\u5c31\u4f1a\u88ab\u8ba1\u7b97\u5e76\u4f20\u9012\u7ed9\u51fd\u6570\u3002\u8fd9\u610f\u5473\u7740\u65e0\u8bba\u51fd\u6570\u5185\u90e8\u662f\u5426\u4f7f\u7528\u8be5\u53c2\u6570\uff0c\u5b83\u90fd\u4f1a\u88ab\u8ba1\u7b97\u4e00\u6b21\u3002\u800c\u5728 call by name \u4e2d\uff0c\u51fd\u6570\u53c2\u6570\u7684\u8868\u8fbe\u5f0f\u4f1a\u88ab\u4f20\u9012\uff0c\u800c\u4e0d\u662f\u8ba1\u7b97\u540e\u7684\u503c\u3002\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u53c2\u6570\u65f6\uff0c\u624d\u4f1a\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u6c42\u503c\u3002</p> <p>call by value \u907f\u514d\u4e86\u53c2\u6570\u7684\u91cd\u590d\u6c42\u503c\uff0c\u6548\u7387\u76f8\u5bf9\u8f83\u9ad8\uff1b\u800c call by name \u907f\u514d\u4e86\u5728\u51fd\u6570\u8c03\u7528\u65f6\u523b\u7684\u53c2\u6570\u6c42\u503c\uff0c\u800c\u5c06\u6c42\u503c\u63a8\u5ef6\u81f3\u5b9e\u9645\u8c03\u7528\u70b9\uff0c\u4f46\u6709\u53ef\u80fd\u9020\u6210\u91cd\u590d\u7684\u8868\u8fbe\u5f0f\u6c42\u503c\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u6f14\u793a\u4e86 call by value \u548c call by name \u7684\u533a\u522b\uff1a</p> <pre><code>def callByValue(x: Int): Unit = {\n  println(\"x1 = \" + x)\n  println(\"x2 = \" + x)\n}\n\ndef callByName(x: =&gt; Int): Unit = {\n  println(\"x1 = \" + x)\n  println(\"x2 = \" + x)\n}\n\ndef calculateValue(): Int = {\n  println(\"Calculating value...\")\n  42\n}\n\n// \u4f7f\u7528 call by value\ncallByValue(calculateValue())\n\n// \u4f7f\u7528 call by name\ncallByName(calculateValue())\n</code></pre> <p>\u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c<code>callByValue</code> \u51fd\u6570\u4f7f\u7528\u4e86 call by value\uff0c\u800c <code>callByName</code> \u51fd\u6570\u4f7f\u7528\u4e86 call by name\u3002</p> <p>\u5f53\u8c03\u7528 <code>callByValue(calculateValue())</code> \u65f6\uff0c<code>calculateValue()</code> \u8868\u8fbe\u5f0f\u4f1a\u88ab\u8ba1\u7b97\uff0c\u5e76\u4e14\u7ed3\u679c 42 \u4f1a\u88ab\u4f20\u9012\u7ed9 <code>callByValue</code> \u51fd\u6570\u3002\u56e0\u6b64\uff0c\u8f93\u51fa\u4f1a\u662f\uff1a</p> <pre><code>Calculating value...\nx1 = 42\nx2 = 42\n</code></pre> <p>\u800c\u5f53\u8c03\u7528 <code>callByName(calculateValue())</code> \u65f6\uff0c<code>calculateValue()</code> \u8868\u8fbe\u5f0f\u5e76\u4e0d\u4f1a\u7acb\u5373\u88ab\u8ba1\u7b97\uff0c\u800c\u662f\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u4f20\u9012\u7ed9 <code>callByName</code> \u51fd\u6570\u3002\u53ea\u6709\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u53c2\u6570\u65f6\uff0c\u624d\u4f1a\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u6c42\u503c\u3002\u56e0\u6b64\uff0c\u8f93\u51fa\u4f1a\u662f\uff1a</p> <pre><code>Calculating value...\nx1 = 42\nCalculating value...\nx2 = 42\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5728 call by name \u7684\u60c5\u51b5\u4e0b\uff0c<code>calculateValue()</code> \u8868\u8fbe\u5f0f\u88ab\u6c42\u503c\u4e86\u4e24\u6b21\uff0c\u56e0\u4e3a\u5b83\u5728\u51fd\u6570\u5185\u90e8\u88ab\u4f7f\u7528\u4e86\u4e24\u6b21\u3002\u800c\u5728 call by value \u7684\u60c5\u51b5\u4e0b\uff0c<code>calculateValue()</code> \u8868\u8fbe\u5f0f\u53ea\u88ab\u6c42\u503c\u4e86\u4e00\u6b21\uff0c\u56e0\u4e3a\u5b83\u5728\u4f20\u9012\u7ed9\u51fd\u6570\u4e4b\u524d\u5c31\u5df2\u7ecf\u88ab\u8ba1\u7b97\u4e86\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#while","title":"\u5b9e\u73b0\u81ea\u5b9a\u4e49 while \u5faa\u73af","text":"<pre><code>var n = 5\n\nwhile (n &gt;= 0) {\n  println(n)\n  n -= 1\n}\n\ndef myWhile(condition: =&gt; Boolean)(body: =&gt; Unit): Unit = {\n  if (condition) {\n    body\n    myWhile(condition)(body)\n  }\n}\n\nn = 5\nmyWhile(n &gt;= 0)({\n  println(n)\n  n -= 1\n})\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_5","title":"Scala \u9762\u5411\u5bf9\u8c61","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_9","title":"\u7c7b","text":"<pre><code>import scala.beans.BeanProperty\n\nobject Main {\n  def main(args: Array[String]): Unit = {\n    val student = new Student()\n    student.age = 18\n    student.gender = \"female\"\n    println(student.age)\n    println(student.gender)\n  }\n}\n\nclass Student {\n  private var name: String = _ // _ \u8868\u793a\u9ed8\u8ba4\u7a7a\u503c\n  @BeanProperty\n  var age: Int = _\n  var gender: String = _\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_10","title":"\u6784\u9020\u5668","text":"<pre><code>object Constructor {\n    def main(args: Array[String]): Unit = {\n        val p: Person = new Person()\n        p.Person() // call main constructor\n\n        val p1 = new Person(\"alice\")\n        val p2 = new Person(\"bob\", 25)\n        p1.Person()\n    }\n}\nclass Person {\n    var name: String = _\n    var age: Int = _\n    println(\"call main construtor\")\n\n    def this(name: String) {\n        this()\n        println(\"call assist constructor 1\")\n        this.name = name\n        println(s\"Person: $name $age\")\n    }\n\n    def this(name: String, age: Int) {\n        this(name)\n        this.age = age\n        println(\"call assist constructor 2\")\n        println(s\"Person: $name $age\")\n    }\n\n    // just a common method, not constructor\n    def Person(): Unit = {\n        println(\"call Person.Person() method\")\n    }\n}\n</code></pre> <p>Scala \u63a8\u8350\u4f7f\u7528\u7ed9\u4e3b\u6784\u9020\u5668\u4f20\u53c2\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002</p> <pre><code>class Person(var name: String, var age: Int)\n</code></pre> <p>\u6ce8\u610f\uff1a\u8fd9\u4e0d\u7b49\u4e8e</p> <pre><code>class Person(name: String, age: Int) {\n\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_11","title":"\u5355\u4f8b\u5bf9\u8c61/\u4f34\u751f\u5bf9\u8c61","text":"<p>Scala \u8bed\u8a00\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u9759\u6001\u7684\u64cd\u4f5c\uff08\u5373\u5728 Scala \u4e2d\u6ca1\u6709\u9759\u6001\u7684\u6982\u5ff5\uff09\u3002\u4f46\u662f\u4e3a\u4e86\u80fd\u591f\u548c Java \u8bed\u8a00\u4ea4\u4e92\uff08\u56e0\u4e3a Java \u4e2d\u6709\u9759\u6001\u6982\u5ff5\uff09\uff0c\u5c31\u4ea7\u751f\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u5bf9\u8c61\u6765\u6a21\u62df\u7c7b\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e3a\u5355\u4f8b\u5bf9\u8c61\u3002\u82e5\u5355\u4f8b\u5bf9\u8c61\u540d\u4e0e\u7c7b\u540d\u4e00\u81f4\uff0c\u5219\u79f0\u8be5\u5355\u4f8b\u5bf9\u8c61\u8fd9\u4e2a\u7c7b\u7684\u4f34\u751f\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u7c7b\u7684\u6240\u6709\u201c\u9759\u6001\u201d\u5185\u5bb9\u90fd\u53ef\u4ee5\u653e\u7f6e\u5728\u5b83\u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u58f0\u660e\u3002</p> <ul> <li>\u5355\u4f8b\u5bf9\u8c61\u91c7\u7528 object \u5173\u952e\u5b57\u58f0\u660e</li> <li>\u5355\u4f8b\u5bf9\u8c61\u5bf9\u5e94\u7684\u7c7b\u79f0\u4e4b\u4e3a\u4f34\u751f\u7c7b\uff0c\u4f34\u751f\u5bf9\u8c61\u7684\u540d\u79f0\u5e94\u8be5\u548c\u4f34\u751f\u7c7b\u540d\u4e00\u81f4\u3002</li> <li>\u5355\u4f8b\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u90fd\u53ef\u4ee5\u901a\u8fc7\u4f34\u751f\u5bf9\u8c61\u540d\uff08\u7c7b\u540d\uff09\u76f4\u63a5\u8c03\u7528\u8bbf\u95ee\u3002</li> </ul> <pre><code>//\uff081\uff09\u4f34\u751f\u5bf9\u8c61\u91c7\u7528 object \u5173\u952e\u5b57\u58f0\u660e\nobject Person {\n  var country: String = \"China\"\n}\n\n//\uff082\uff09\u4f34\u751f\u5bf9\u8c61\u5bf9\u5e94\u7684\u7c7b\u79f0\u4e4b\u4e3a\u4f34\u751f\u7c7b\uff0c\u4f34\u751f\u5bf9\u8c61\u7684\u540d\u79f0\u5e94\u8be5\u548c\u4f34\u751f\u7c7b\u540d\u4e00\u81f4\u3002\nclass Person {\n  var name: String = \"bobo\"\n}\n\nobject Test {\n  def main(args: Array[String]): Unit = {\n    //\uff083\uff09\u4f34\u751f\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u90fd\u53ef\u4ee5\u901a\u8fc7\u4f34\u751f\u5bf9\u8c61\u540d\uff08\u7c7b\u540d\uff09\u76f4\u63a5\u8c03\u7528\u8bbf\u95ee\n    println(Person.country)\n  }\n}\n</code></pre> <ul> <li>\u901a\u8fc7\u4f34\u751f\u5bf9\u8c61\u7684 apply \u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e0d\u4f7f\u7528 new \u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61</li> <li>\u5982\u679c\u60f3\u8ba9\u4e3b\u6784\u9020\u5668\u53d8\u6210\u79c1\u6709\u7684\uff0c\u53ef\u4ee5\u5728()\u4e4b\u524d\u52a0\u4e0a private</li> <li>\u5f53\u4f7f\u7528 new \u5173\u952e\u5b57\u6784\u5efa\u5bf9\u8c61\u65f6\uff0c\u8c03\u7528\u7684\u5176\u5b9e\u662f\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5f53\u76f4\u63a5\u4f7f\u7528\u7c7b\u540d\u6784\u5efa\u5bf9\u8c61\u65f6\uff0c\u8c03\u7528\u7684\u5176\u5b9e\u65f6\u4f34\u751f\u5bf9\u8c61\u7684 apply \u65b9\u6cd5</li> </ul> <pre><code>object Test {\n  def main(args: Array[String]): Unit = {\n    //\uff081\uff09\u901a\u8fc7\u4f34\u751f\u5bf9\u8c61\u7684 apply \u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e0d\u4f7f\u7528 new \u5173\u952e\u5b57\u521b\u5efa\u5bf9\u8c61\u3002\n    val p1 = Person()\n    println(\"p1.name=\" + p1.name)\n    val p2 = Person(\"bobo\")\n    println(\"p2.name=\" + p2.name)\n  }\n}\n\n//\uff082\uff09\u5982\u679c\u60f3\u8ba9\u4e3b\u6784\u9020\u5668\u53d8\u6210\u79c1\u6709\u7684\uff0c\u53ef\u4ee5\u5728()\u4e4b\u524d\u52a0\u4e0a private\nclass Person private(cName: String) {\n  var name: String = cName\n}\n\nobject Person {\n  def apply(): Person = {\n    println(\"apply \u7a7a\u53c2\u88ab\u8c03\u7528\")\n    new Person(\"xx\")\n  }\n\n  def apply(name: String): Person = {\n    println(\"apply \u6709\u53c2\u88ab\u8c03\u7528\")\n    new Person(name)\n  }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#apply","title":"apply() \u65b9\u6cd5","text":"<p>\u5728 Scala \u4e2d\uff0c<code>apply()</code> \u65b9\u6cd5\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u5b83\u5141\u8bb8\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u88ab\u8c03\u7528\u3002\u5f53\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0cScala \u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u67e5\u627e\u548c\u8c03\u7528\u8be5\u5bf9\u8c61\u7684 <code>apply()</code> \u65b9\u6cd5\u3002</p> <p>\u8981\u4f7f\u7528 <code>apply()</code> \u65b9\u6cd5\uff0c\u60a8\u9700\u8981\u5728\u5bf9\u8c61\u7684\u7c7b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a <code>apply</code> \u7684\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u53ef\u4ee5\u5177\u6709\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fd4\u56de\u4efb\u4f55\u7c7b\u578b\u7684\u503c\u3002\u5f53\u60a8\u50cf\u8c03\u7528\u51fd\u6570\u4e00\u6837\u8c03\u7528\u5bf9\u8c61\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u901a\u8fc7\u8c03\u7528 <code>apply()</code> \u65b9\u6cd5\u6765\u6267\u884c\u76f8\u5173\u7684\u64cd\u4f5c\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\u5982\u4f55\u5728 Scala \u4e2d\u4f7f\u7528 <code>apply()</code> \u65b9\u6cd5\uff1a</p> <pre><code>class MyClass(val name: String) {\n  def apply(): String = {\n    s\"Hello, $name!\"\n  }\n}\n\n// \u521b\u5efa\u4e00\u4e2a MyClass \u5bf9\u8c61\nval myObj = new MyClass(\"Alice\")\n\n// \u8c03\u7528\u5bf9\u8c61\uff0c\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86\u5bf9\u8c61\u7684 apply() \u65b9\u6cd5\nval result = myObj()\n\nprintln(result) // \u8f93\u51fa: Hello, Alice!\n</code></pre> <p>\u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a <code>MyClass</code> \u7684\u7c7b\uff0c\u8be5\u7c7b\u5177\u6709\u4e00\u4e2a\u540d\u4e3a <code>apply</code> \u7684\u65b9\u6cd5\u3002<code>apply</code> \u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e86 <code>MyClass</code> \u7684\u4e00\u4e2a\u5b9e\u4f8b <code>myObj</code>\uff0c\u5e76\u50cf\u8c03\u7528\u51fd\u6570\u4e00\u6837\u8c03\u7528\u4e86\u8be5\u5b9e\u4f8b\u3002\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\u4e86 <code>myObj</code> \u7684 <code>apply()</code> \u65b9\u6cd5\uff0c\u5e76\u8fd4\u56de\u4e86 <code>Hello, Alice!</code>\u3002</p> <p><code>apply()</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5728\u5bf9\u8c61\u4e2d\u5b9a\u4e49\u4e0d\u540c\u7684 <code>apply()</code> \u65b9\u6cd5\uff0c\u4ee5\u4fbf\u63a5\u53d7\u4e0d\u540c\u6570\u91cf\u548c\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u8fd4\u56de\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002\u8fd9\u4f7f\u5f97\u5bf9\u8c61\u5728\u4f7f\u7528\u4e0a\u66f4\u50cf\u51fd\u6570\uff0c\u53ef\u4ee5\u63d0\u4f9b\u66f4\u597d\u7684\u8bed\u6cd5\u548c\u8bed\u4e49\u7684\u7075\u6d3b\u6027\u3002</p> <p>\u5f53\u60a8\u5728 Scala \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709 <code>apply()</code> \u65b9\u6cd5\u7684\u5bf9\u8c61\u65f6\uff0c\u5b83\u53ef\u4ee5\u4ee5\u4e00\u79cd\u66f4\u7b80\u6d01\u548c\u76f4\u89c2\u7684\u65b9\u5f0f\u4e0e\u5176\u4ed6\u4ee3\u7801\u8fdb\u884c\u4ea4\u4e92\u3002<code>apply()</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u573a\u666f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li>\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff1a\u901a\u8fc7\u5728\u4f34\u751f\u5bf9\u8c61\uff08companion object\uff09\u4e2d\u5b9a\u4e49 <code>apply()</code> \u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u7c7b\u540d\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u800c\u65e0\u9700\u4f7f\u7528 <code>new</code> \u5173\u952e\u5b57\u3002\u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u7b80\u6d01\u6613\u8bfb\u3002</li> </ul> <pre><code>class Person(val name: String, val age: Int)\n\nobject Person {\n  def apply(name: String, age: Int): Person = new Person(name, age)\n}\n\nval person = Person(\"Alice\", 30) // \u4f7f\u7528\u7c7b\u540d\u8c03\u7528 apply() \u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\n</code></pre> <ul> <li>\u6784\u5efa\u5de5\u5382\u6a21\u5f0f\uff1a\u901a\u8fc7\u5728\u4f34\u751f\u5bf9\u8c61\u4e2d\u5b9a\u4e49 <code>apply()</code> \u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6784\u5efa\u5bf9\u8c61\u7684\u5de5\u5382\u3002\u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u53c2\u6570\u5217\u8868\u521b\u5efa\u5bf9\u8c61\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728 <code>apply()</code> \u65b9\u6cd5\u4e2d\u6839\u636e\u4e0d\u540c\u7684\u53c2\u6570\u503c\u5b9e\u73b0\u4e0d\u540c\u7684\u903b\u8f91\u3002</li> </ul> <pre><code>trait Animal\nclass Dog(name: String) extends Animal\nclass Cat(name: String) extends Animal\n\nobject Animal {\n  def apply(animalType: String, name: String): Animal = {\n    animalType match {\n      case \"dog\" =&gt; new Dog(name)\n      case \"cat\" =&gt; new Cat(name)\n      case _ =&gt; throw new IllegalArgumentException(\"Invalid animal type\")\n    }\n  }\n}\n\nval dog = Animal(\"dog\", \"Buddy\") // \u4f7f\u7528 apply() \u65b9\u6cd5\u521b\u5efa Dog \u5bf9\u8c61\nval cat = Animal(\"cat\", \"Whiskers\") // \u4f7f\u7528 apply() \u65b9\u6cd5\u521b\u5efa Cat \u5bf9\u8c61\n</code></pre> <ul> <li>\u7b80\u5316\u96c6\u5408\u64cd\u4f5c\uff1aScala \u4e2d\u7684\u8bb8\u591a\u96c6\u5408\u7c7b\uff08\u5982 List\u3001Map \u7b49\uff09\u90fd\u5b9a\u4e49\u4e86 <code>apply()</code> \u65b9\u6cd5\uff0c\u4f7f\u5f97\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6216\u952e\u6765\u8bbf\u95ee\u5143\u7d20\u3002\u8fd9\u4f7f\u5f97\u96c6\u5408\u7684\u8bbf\u95ee\u548c\u64cd\u4f5c\u66f4\u52a0\u76f4\u89c2\u548c\u4fbf\u6377\u3002</li> </ul> <pre><code>val list = List(1, 2, 3, 4, 5)\nval element = list(2) // \u4f7f\u7528 apply() \u65b9\u6cd5\u83b7\u53d6\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u7ed3\u679c\u4e3a 3\n\nval map = Map(\"a\" -&gt; 1, \"b\" -&gt; 2, \"c\" -&gt; 3)\nval value = map(\"b\") // \u4f7f\u7528 apply() \u65b9\u6cd5\u83b7\u53d6\u6620\u5c04\u4e2d\u7684\u503c\uff0c\u7ed3\u679c\u4e3a 2\n</code></pre> <p>\u603b\u7ed3\u6765\u8bf4\uff0c<code>apply()</code> \u65b9\u6cd5\u5728 Scala \u4e2d\u7528\u4e8e\u63d0\u4f9b\u4e00\u79cd\u66f4\u76f4\u89c2\u3001\u7b80\u6d01\u548c\u7075\u6d3b\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bf9\u8c61\u3001\u5b9e\u73b0\u5de5\u5382\u6a21\u5f0f\u4ee5\u53ca\u7b80\u5316\u96c6\u5408\u64cd\u4f5c\u3002\u901a\u8fc7\u5b9a\u4e49\u548c\u4f7f\u7528 <code>apply()</code> \u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u4ee5\u4e00\u79cd\u66f4\u51fd\u6570\u5f0f\u7684\u98ce\u683c\u7f16\u5199\u4ee3\u7801\uff0c\u5e76\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#trait","title":"Trait","text":"<p>\u5728 Scala \u4e2d\uff0cTrait \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u522b\uff0c\u5b83\u53ef\u4ee5\u5b9a\u4e49\u65b9\u6cd5\u548c\u5b57\u6bb5\uff0c\u7c7b\u4f3c\u4e8e Java \u4e2d\u7684\u63a5\u53e3\u3002Trait \u53ef\u4ee5\u88ab\u7c7b\u548c\u5bf9\u8c61\u6df7\u5165\uff08mixin\uff09\uff0c\u4ece\u800c\u6269\u5c55\u5b83\u4eec\u7684\u529f\u80fd\u3002Trait \u53ef\u4ee5\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\u3001\u5177\u4f53\u65b9\u6cd5\u3001\u5b57\u6bb5\u548c\u7279\u5f81\uff08traits\uff09\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b Trait \u7684\u7279\u70b9\u548c\u4f7f\u7528\u65b9\u5f0f\uff1a</p> <ul> <li>\u5b9a\u4e49 Trait\uff1a</li> </ul> <pre><code>trait Printable {\n  def print(): Unit\n}\n</code></pre> <ul> <li>Trait \u7684\u6df7\u5165\uff08Mixin\uff09\uff1a</li> </ul> <pre><code>class MyClass extends Printable {\n  def print(): Unit = {\n    println(\"Printing...\")\n  }\n}\n\nval obj = new MyClass()\nobj.print() // \u8f93\u51fa: Printing...\n</code></pre> <ul> <li>Trait \u7684\u591a\u91cd\u6df7\u5165\uff1a</li> </ul> <pre><code>trait Drawable {\n  def draw(): Unit = {\n    println(\"Drawing...\")\n  }\n}\n\nclass MyDrawing extends Printable with Drawable {\n  def print(): Unit = {\n    println(\"Printing...\")\n  }\n}\n\nval drawing = new MyDrawing()\ndrawing.print() // \u8f93\u51fa: Printing...\ndrawing.draw() // \u8f93\u51fa: Drawing...\n</code></pre> <ul> <li>Trait \u7684\u62bd\u8c61\u65b9\u6cd5\uff1a</li> </ul> <pre><code>trait Drawable {\n  def draw(): Unit\n}\n\nclass Circle extends Drawable {\n  def draw(): Unit = {\n    println(\"Drawing a circle...\")\n  }\n}\n\nval circle = new Circle()\ncircle.draw() // \u8f93\u51fa: Drawing a circle...\n</code></pre> <p>Trait \u7684\u4f18\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\u548c\u591a\u91cd\u7ee7\u627f\uff0c\u800c\u4e0d\u4f1a\u5f15\u5165\u591a\u7ee7\u627f\u7684\u95ee\u9898\u3002</li> <li>Trait \u53ef\u4ee5\u5305\u542b\u5177\u4f53\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u4ece\u800c\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u51cf\u5c11\u4e86\u91cd\u590d\u4ee3\u7801\u3002</li> <li>Trait \u53ef\u4ee5\u88ab\u591a\u4e2a\u7c7b\u6216\u5bf9\u8c61\u6df7\u5165\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839\u636e\u9700\u8981\u7ec4\u5408\u548c\u6269\u5c55\u529f\u80fd\u3002</li> <li>Trait \u53ef\u4ee5\u4f5c\u4e3a\u63a5\u53e3\u7684\u66ff\u4ee3\u54c1\uff0c\u63d0\u4f9b\u4e86\u66f4\u5f3a\u5927\u548c\u7075\u6d3b\u7684\u7279\u6027\u3002</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTrait \u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff0c\u5b83\u53ea\u80fd\u88ab\u6df7\u5165\u5230\u7c7b\u6216\u5bf9\u8c61\u4e2d\u4f7f\u7528\u3002Trait \u53ef\u4ee5\u7ee7\u627f\u5176\u4ed6 Trait\uff0c\u5f62\u6210 Trait \u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u8fdb\u4e00\u6b65\u6269\u5c55\u548c\u7ec4\u5408\u529f\u80fd\u3002Trait \u4e5f\u53ef\u4ee5\u5305\u542b\u62bd\u8c61\u5b57\u6bb5\u548c\u5177\u4f53\u5b57\u6bb5\uff0c\u4ee5\u53ca\u9700\u8981\u5b9e\u73b0\u7684\u62bd\u8c61\u65b9\u6cd5\u3002</p> <p>\u603b\u7ed3\u6765\u8bf4\uff0cTrait \u662f Scala \u4e2d\u4e00\u79cd\u5f3a\u5927\u7684\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u73b0\u4ee3\u7801\u7684\u590d\u7528\u3001\u529f\u80fd\u7684\u7ec4\u5408\u548c\u6269\u5c55\u3002\u901a\u8fc7\u4f7f\u7528 Trait\uff0c\u60a8\u53ef\u4ee5\u4ee5\u4e00\u79cd\u7075\u6d3b\u548c\u53ef\u7ec4\u5408\u7684\u65b9\u5f0f\u7f16\u5199\u53ef\u91cd\u7528\u7684\u4ee3\u7801\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_12","title":"\u65b9\u6cd5\u548c\u51fd\u6570\u7684\u533a\u522b","text":"<p>\u5728 Scala \u4e2d\uff0c\u65b9\u6cd5\uff08Method\uff09\u548c\u51fd\u6570\uff08Function\uff09\u662f\u4e24\u4e2a\u76f8\u5173\u4f46\u6709\u7740\u4e0d\u540c\u7279\u70b9\u7684\u6982\u5ff5\u3002</p> <p>\u65b9\u6cd5 (Method) \u662f\u5c5e\u4e8e\u7c7b\u6216\u5bf9\u8c61\u7684\u6210\u5458\uff0c\u5b83\u662f\u4e00\u6bb5\u53ef\u91cd\u7528\u7684\u4ee3\u7801\u5757\uff0c\u7528\u4e8e\u6267\u884c\u7279\u5b9a\u7684\u64cd\u4f5c\u3002\u65b9\u6cd5\u53ef\u4ee5\u6709\u53c2\u6570\u3001\u8fd4\u56de\u503c\u4ee5\u53ca\u53ef\u9009\u7684\u8bbf\u95ee\u4fee\u9970\u7b26\u3002\u65b9\u6cd5\u5fc5\u987b\u88ab\u5b9a\u4e49\u5728\u7c7b\u6216\u5bf9\u8c61\u5185\u90e8\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u6216\u8005\u7c7b\u6765\u8c03\u7528\u3002\u65b9\u6cd5\u7684\u5b9a\u4e49\u548c\u8c03\u7528\u65b9\u5f0f\u901a\u5e38\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u601d\u60f3\u76f8\u7b26\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u65b9\u6cd5\u7684\u5b9a\u4e49\u548c\u8c03\u7528\uff1a</p> <pre><code>class MyClass {\n  def add(a: Int, b: Int): Int = {\n    a + b\n  }\n}\n\nval obj = new MyClass()\nval result = obj.add(2, 3) // \u8c03\u7528\u65b9\u6cd5\uff0c\u7ed3\u679c\u4e3a 5\n</code></pre> <p>\u51fd\u6570 (Function) \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u503c\uff0c\u5b83\u53ef\u4ee5\u88ab\u8d4b\u503c\u7ed9\u53d8\u91cf\u3001\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u548c\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u3002\u5728 Scala \u4e2d\uff0c\u51fd\u6570\u88ab\u89c6\u4e3a\u4e00\u7b49\u516c\u6c11\uff0c\u56e0\u6b64\u53ef\u4ee5\u50cf\u5176\u4ed6\u503c\u4e00\u6837\u8fdb\u884c\u64cd\u4f5c\u548c\u4f20\u9012\u3002\u51fd\u6570\u5b9a\u4e49\u53ef\u4ee5\u4f7f\u7528 <code>=&gt;</code> \u7b26\u53f7\u6765\u6307\u5b9a\u8f93\u5165\u53c2\u6570\u548c\u51fd\u6570\u4f53\uff0c\u51fd\u6570\u53ef\u4ee5\u6ca1\u6709\u53c2\u6570\u6216\u8005\u591a\u4e2a\u53c2\u6570\uff0c\u53ef\u4ee5\u6709\u8fd4\u56de\u503c\u6216\u8005\u65e0\u8fd4\u56de\u503c\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\uff1a</p> <pre><code>val add: (Int, Int) =&gt; Int = (a, b) =&gt; a + b\n\nval result = add(2, 3) // \u8c03\u7528\u51fd\u6570\uff0c\u7ed3\u679c\u4e3a 5\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u6536\u4e24\u4e2a\u6574\u6570\u53c2\u6570\u5e76\u8fd4\u56de\u5b83\u4eec\u4e4b\u548c\u7684\u51fd\u6570 <code>add</code>\u3002\u901a\u8fc7\u5c06\u51fd\u6570\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u8c03\u7528\u65b9\u6cd5\u4e00\u6837\u4f7f\u7528\u8be5\u51fd\u6570\u3002</p> <p>\u51fd\u6570\u548c\u65b9\u6cd5\u7684\u4e3b\u8981\u533a\u522b\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u8bed\u6cd5\u5b9a\u4e49\uff1a\u65b9\u6cd5\u5fc5\u987b\u5c5e\u4e8e\u7c7b\u6216\u5bf9\u8c61\uff0c\u5e76\u4f7f\u7528 <code>def</code> \u5173\u952e\u5b57\u8fdb\u884c\u5b9a\u4e49\u3002\u51fd\u6570\u5219\u53ef\u4ee5\u72ec\u7acb\u5b58\u5728\uff0c\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u5b57\u9762\u91cf\u7684\u8bed\u6cd5\u8fdb\u884c\u5b9a\u4e49\u3002</p> </li> <li> <p>\u8c03\u7528\u65b9\u5f0f\uff1a\u65b9\u6cd5\u901a\u8fc7\u5b9e\u4f8b\u6216\u8005\u7c7b\u6765\u8c03\u7528\uff0c\u4f7f\u7528\u70b9\u7b26\u53f7\uff08<code>.</code>\uff09\u6765\u8bbf\u95ee\u3002\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\u540d\u548c\u53c2\u6570\u5217\u8868\u8fdb\u884c\u8c03\u7528\u3002</p> </li> <li> <p>\u4f5c\u4e3a\u503c\uff1a\u65b9\u6cd5\u4e0d\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u7684\u503c\u8fdb\u884c\u64cd\u4f5c\u548c\u4f20\u9012\u3002\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\u3001\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u548c\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u3002</p> </li> <li> <p>\u4e00\u7b49\u516c\u6c11\uff1a\u51fd\u6570\u5728 Scala \u4e2d\u88ab\u89c6\u4e3a\u4e00\u7b49\u516c\u6c11\uff0c\u5177\u6709\u4e0e\u5176\u4ed6\u503c\u76f8\u540c\u7684\u5730\u4f4d\u548c\u64cd\u4f5c\u80fd\u529b\u3002\u65b9\u6cd5\u5219\u662f\u7c7b\u548c\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e0d\u5177\u5907\u51fd\u6570\u7684\u4e00\u7b49\u516c\u6c11\u7279\u6027\u3002</p> </li> </ol> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 Scala \u4e2d\uff0c\u65b9\u6cd5\u53ef\u4ee5\u88ab\u9690\u5f0f\u5730\u8f6c\u6362\u4e3a\u51fd\u6570\u3002\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u5c06\u65b9\u6cd5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u671f\u671b\u51fd\u6570\u7c7b\u578b\u7684\u65b9\u6cd5\u6216\u51fd\u6570\uff0cScala \u4f1a\u81ea\u52a8\u5c06\u5176\u8f6c\u6362\u4e3a\u51fd\u6570\u3002\u8fd9\u79cd\u8f6c\u6362\u662f\u7531\u7f16\u8bd1\u5668\u5728\u80cc\u540e\u5b8c\u6210\u7684\uff0c\u4f7f\u5f97\u65b9\u6cd5\u548c\u51fd\u6570\u5728\u4f7f\u7528\u4e0a\u53ef\u4ee5\u4e92\u76f8\u66ff\u4ee3\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u65b9\u6cd5\u548c\u51fd\u6570\u5728 Scala \u4e2d\u6709\u4e00\u4e9b\u533a\u522b\uff0c\u5305\u62ec\u8bed\u6cd5\u5b9a\u4e49\u3001\u8c03\u7528\u65b9\u5f0f\u3001\u4f5c\u4e3a\u503c\u7684\u80fd\u529b\u548c\u4e00\u7b49\u516c\u6c11\u7279\u6027\u3002\u8fd9\u4e9b\u6982\u5ff5\u7684\u7406\u89e3\u5bf9\u4e8e\u7f16\u5199\u548c\u7ec4\u7ec7 Scala \u4ee3\u7801\u975e\u5e38\u91cd\u8981\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_6","title":"Scala \u96c6\u5408","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_13","title":"\u4e0d\u53ef\u53d8\u6570\u7ec4","text":"<pre><code>// \u521b\u5efa\u4e0d\u53ef\u53d8\u6570\u7ec4\nval arr1 = new Array[Int](5)\n// \u53e6\u4e00\u79cd\u521b\u5efa\u4e0d\u53ef\u53d8\u6570\u7ec4\u7684\u65b9\u5f0f\uff0c\u6765\u81ea\u4e8eArray\u7684\u4f34\u751f\u5bf9\u8c61\u7684apply\u65b9\u6cd5\nval arr2 = Array(1, 2, 3, 4, 5)\n\nprintln(arr1(0))\narr1(1) = 1\n\n// for \u5faa\u73af\n// arr1.indices == 0 until arr1.length\nfor (i &lt;- arr2.indices) {\n  println(arr2(i))\n}\n\nfor (elem &lt;- arr2) {\n  println(elem)\n}\n\nval iter = arr2.iterator\nwhile (iter.hasNext) {\n  println(iter.next())\n}\n\narr2.foreach(println)\n\narr2.mkString(\",\")\n\n// \u6dfb\u52a0\u5143\u7d20\uff08\u4e0d\u53ef\u53d8\u6570\u7ec4\u6dfb\u52a0\u540e\u4f1a\u8fd4\u56de\u65b0\u6570\u7ec4\uff09\nval arr3 = arr2 :+ 6\nval arr4 = 0 +: arr2\n</code></pre> <pre><code>// \u591a\u7ef4\u6570\u7ec4\nval arr = Array.ofDim[Int](2, 3) // 2 rows, 3 columns\narr(0)(0) = 1\n\nfor (i &lt;- arr.indices; j &lt;- arr(i).indices) {\n  println(s\"($i)($j) = ${arr(i)(j)}\")\n}\n\narr.foreach(row =&gt; row.foreach(println))\narr.foreach(_.foreach(println))\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_14","title":"\u53ef\u53d8\u6570\u7ec4","text":"<pre><code>import scala.collection.mutable.ArrayBuffer\n\nval arr1 = new ArrayBuffer[Int]()\nval arr2 = ArrayBuffer[Int](1, 2, 3, 4, 5)\n\nprintln(arr1)\nprintln(arr2)\n\n// \u6dfb\u52a0\u5143\u7d20\narr1.append(2)\narr1.prepend(1)\narr1.insert(2, 3)\nprintln(arr1)\n\narr1.appendAll(arr2)\nprintln(arr1)\n\n// \u5220\u9664\u5143\u7d20\narr1.remove(0)  // \u5220\u9664\u4e0b\u6807\u4e3a 0 \u7684\u5143\u7d20\narr1 -= 2  // \u5220\u9664\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684 2\n\n// \u53ef\u53d8\u6570\u7ec4\u8f6c\u4e0d\u53ef\u53d8\u6570\u7ec4\nval arr3 = arr1.toArray\n// \u4e0d\u53ef\u53d8\u6570\u7ec4\u8f6c\u53ef\u53d8\u6570\u7ec4\nval arr4 = arr3.toBuffer\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#list","title":"\u4e0d\u53ef\u53d8 List","text":"<pre><code>val list1 = List(1, 2, 3, 4, 5)\n\nprintln(list1(1))\nlist1.foreach(println)\n\n// \u6dfb\u52a0\u5143\u7d20\nval list2 = list1 :+ 6\nval list3 = 0 +: list1\n\nprintln(list3)\n\n// \u5408\u5e76\u5217\u8868\nval list4 = list1 ++ list1\nprintln(list4)\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#list_1","title":"\u53ef\u53d8 List","text":"<pre><code>import scala.collection.mutable.ListBuffer\n\nval list1 = new ListBuffer[Int]()\nval list2 = ListBuffer(1, 2, 3)\n\n// \u6dfb\u52a0\u5143\u7d20\nlist1.append(2, 3)\nlist1.prepend(1)\nlist1 += 4 += 5\n0 +=: list1\nprintln(list1)\n\n// \u5408\u5e76\u5217\u8868\nval list3 = ListBuffer(4, 5)\nlist2.appendAll(list3)\nprintln(list2)\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#set","title":"\u4e0d\u53ef\u53d8 Set","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cScala \u4f7f\u7528\u7684\u662f\u4e0d\u53ef\u53d8\u7684 Set\uff0c\u5982\u679c\u60f3\u4f7f\u7528\u53ef\u53d8\u7684 Set\uff0c\u9700\u8981\u5f15\u5165 <code>scala.collection.mutable.Set</code> \u5305\u3002</p> <pre><code>val set1 = Set(1, 2, 3, 3)\nprintln(set1)\n\n// \u6dfb\u52a0\u5143\u7d20\nval set2 = set1 + 4\n\n// \u5408\u5e76 Set\nval set3 = set1 ++ Set(4, 5, 6)\n\n// \u5220\u9664\u5143\u7d20\nval set4 = set1 - 3\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#set_1","title":"\u53ef\u53d8 Set","text":"<pre><code>import scala.collection.mutable\n\nval set1 = mutable.Set(1, 2, 3)\nprintln(set1)\n\n// \u6dfb\u52a0\u5143\u7d20\nset1.add(4)\n\n// \u5220\u9664\u5143\u7d20\nset1.remove(1)\n\n// \u5408\u5e76\u4e24\u4e2a\u96c6\u5408\nval set2 = mutable.Set(3, 4, 5)\nset1 ++= set2\nprintln(set1)\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#map","title":"\u4e0d\u53ef\u53d8 Map","text":"<pre><code>val map1 = Map(\"a\" -&gt; 1, \"b\" -&gt; 2, \"c\" -&gt; 3)\nval map2 = Map[String, Int]()\nprintln(map1)\n\nmap1.foreach(println)\n\nfor (k &lt;- map1.keys) println(k)\nfor (v &lt;- map1.values) println(v)\nfor ((k, v) &lt;- map1) println(k + \"--\" + v)\n\nmap1.get(\"a\") // \u6ce8\u610f\u7ed3\u679c\u4e3a\uff1aOption[Int] = Some(1)\nmap1.get(\"a\").get\nmap1(\"a\")\n\nmap1.getOrElse(\"d\", 0)\nmap1(\"d\") // \u62a5\u9519\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#map_1","title":"\u53ef\u53d8 Map","text":"<pre><code>import scala.collection.mutable\n\nval map1 = mutable.Map(\"a\" -&gt; 1, \"b\" -&gt; 2, \"c\" -&gt; 3)\nprintln(map1)\n\nmap1.put(\"d\", 4)\n\nmap1.remove(\"d\")\n\nmap1(\"a\") = 10\nprintln(map1)\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_15","title":"\u5143\u7ec4","text":"<pre><code>val tuple = (1, 2, 3, 4)\ntuple._1\ntuple._2\ntuple._3\ntuple._4\n\nfor (x &lt;- tuple.productIterator) {\n  println(x)\n}\n\ntuple.productArity // \u5143\u7ec4\u7684\u957f\u5ea6\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_16","title":"\u5e38\u7528\u65b9\u6cd5","text":"<p>\u96c6\u5408\u901a\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\uff1a</p> <ul> <li>\u7ebf\u6027\u5e8f\u5217\u624d\u6709\u957f\u5ea6<code>length</code>\u3001\u6240\u6709\u96c6\u5408\u7c7b\u578b\u90fd\u6709\u5927\u5c0f<code>size</code>\u3002</li> <li>\u904d\u5386<code>for (elem &lt;- collection)</code>\u3001\u8fed\u4ee3\u5668<code>for (elem &lt;- collection.iterator)</code>\u3002</li> <li>\u751f\u6210\u5b57\u7b26\u4e32<code>toString</code> <code>mkString</code>\uff0c\u50cf<code>Array</code>\u8fd9\u79cd\u662f\u9690\u5f0f\u8f6c\u6362\u4e3a scala \u96c6\u5408\u7684\uff0c<code>toString</code>\u662f\u7ee7\u627f\u81ea<code>java.lang.Object</code>\u7684\uff0c\u9700\u8981\u81ea\u884c\u5904\u7406\u3002</li> <li>\u662f\u5426\u5305\u542b\u5143\u7d20<code>contains</code>\u3002</li> </ul> <p>\u884d\u751f\u96c6\u5408\u7684\u65b9\u5f0f\uff1a</p> <ul> <li>\u83b7\u53d6\u96c6\u5408\u7684\u5934\u5143\u7d20<code>head</code>\uff08\u5143\u7d20\uff09\u548c\u5269\u4e0b\u7684\u5c3e<code>tail</code>\uff08\u96c6\u5408\uff09\u3002</li> <li>\u96c6\u5408\u6700\u540e\u4e00\u4e2a\u5143\u7d20<code>last</code>\uff08\u5143\u7d20\uff09\u548c\u9664\u53bb\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u521d\u59cb\u6570\u636e<code>init</code>\uff08\u96c6\u5408\uff09\u3002</li> <li>\u53cd\u8f6c<code>reverse</code>\u3002</li> <li>\u53d6\u524d\u540e n \u4e2a\u5143\u7d20<code>take(n) takeRight(n)</code></li> <li>\u53bb\u6389\u524d\u540e n \u4e2a\u5143\u7d20<code>drop(n) dropRight(n)</code></li> <li>\u4ea4\u96c6<code>intersect</code></li> <li>\u5e76\u96c6<code>union</code>\uff0c\u7ebf\u6027\u5e8f\u5217\u7684\u8bdd\u5df2\u5e9f\u5f03\u7528<code>concat</code>\u8fde\u63a5\u3002</li> <li>\u5dee\u96c6<code>diff</code>\uff0c\u5f97\u5230\u5c5e\u4e8e\u81ea\u5df1\u3001\u4e0d\u5c5e\u4e8e\u4f20\u5165\u53c2\u6570\u7684\u90e8\u5206\u3002</li> <li>\u62c9\u94fe<code>zip</code>\uff0c\u5f97\u5230\u4e24\u4e2a\u96c6\u5408\u5bf9\u5e94\u4f4d\u7f6e\u5143\u7d20\u7ec4\u5408\u8d77\u6765\u6784\u6210\u4e8c\u5143\u7ec4\u7684\u96c6\u5408\uff0c\u5927\u5c0f\u4e0d\u5339\u914d\u4f1a\u4e22\u6389\u5176\u4e2d\u4e00\u4e2a\u96c6\u5408\u4e0d\u5339\u914d\u7684\u591a\u4f59\u90e8\u5206\u3002</li> <li>\u6ed1\u7a97<code>sliding(n, step = 1)</code>\uff0c\u6846\u4f4f\u7279\u5b9a\u4e2a\u6570\u5143\u7d20\uff0c\u65b9\u4fbf\u79fb\u52a8\u548c\u64cd\u4f5c\u3002\u5f97\u5230\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u904d\u5386\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u7684\u5143\u7d20\u90fd\u662f\u4e00\u4e2a n \u4e2a\u5143\u7d20\u96c6\u5408\u3002\u6b65\u957f\u5927\u4e8e 1 \u7684\u8bdd\u6700\u540e\u4e00\u4e2a\u7a97\u53e3\u5143\u7d20\u6570\u91cf\u53ef\u80fd\u4e2a\u6570\u4f1a\u5c11\u4e00\u4e9b\u3002</li> </ul> <p>\u96c6\u5408\u7684\u7b80\u5355\u8ba1\u7b97\u64cd\u4f5c\uff1a</p> <ul> <li>\u6c42\u548c<code>sum</code> \u6c42\u4e58\u79ef<code>product</code> \u6700\u5c0f\u503c<code>min</code> \u6700\u5927\u503c<code>max</code></li> <li><code>maxBy(func)</code>\u652f\u6301\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u83b7\u53d6\u5143\u7d20\u5e76\u8fd4\u56de\u6bd4\u8f83\u4f9d\u636e\u7684\u503c\uff0c\u6bd4\u5982\u5143\u7ec4\u9ed8\u8ba4\u5c31\u53ea\u4f1a\u5224\u65ad\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u8981\u6839\u636e\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5224\u65ad\u5c31\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5c31\u884c<code>xxx.maxBy(_._2)</code>\u3002</li> <li>\u6392\u5e8f<code>sorted</code>\uff0c\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u4ece\u5927\u5230\u5c0f\u6392\u5e8f<code>sorted(Ordering[Int].reverse)</code>\u3002</li> <li>\u6309\u5143\u7d20\u6392\u5e8f<code>sortBy(func)</code>\uff0c\u6307\u5b9a\u8981\u7528\u6765\u505a\u6392\u5e8f\u7684\u5b57\u6bb5\u3002\u4e5f\u53ef\u4ee5\u518d\u4f20\u4e00\u4e2a\u9690\u5f0f\u53c2\u6570\u9006\u5e8f<code>sortBy(func)(Ordering[Int].reverse)</code></li> <li>\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668<code>sortWith(cmp)</code>\uff0c\u6bd4\u5982\u6309\u5143\u7d20\u5347\u5e8f\u6392\u5217<code>sortWith((a, b) =&gt; a &lt; b)</code>\u6216\u8005<code>sortWith(_ &lt; _)</code>\uff0c\u6309\u5143\u7ec4\u5143\u7d20\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5347\u5e8f<code>sortWith(_._2 &gt; _._2)</code>\u3002</li> </ul> <pre><code>val list = List(3, 12, -1, 9, 6)\nlist.sorted\nlist.sorted.reverse\nlist.sorted(Ordering[Int].reverse)\nlist.sortWith(_ &lt; _) // ascending\nlist.sortWith(_ &gt; _) // descending\n\nval list2 = List((\"a\", 5), (\"b\", 1), (\"c\", 8), (\"d\", 2), (\"e\", -3), (\"f\", 4))\nlist2.sorted // sort by first element\nlist2.sorted.reverse\nlist2.sortBy(_._2) // sort by second element\nlist2.sortBy(_._2).reverse\nlist2.sortBy(_._2)(Ordering[Int].reverse)\nlist2.sortWith(_._2 &lt; _._2) // sort by second element (ascending)\nlist2.sortWith(_._2 &gt; _._2) // sort by second element (descending)\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#_17","title":"\u9ad8\u7ea7\u8ba1\u7b97\u51fd\u6570","text":"<ul> <li>\u5927\u6570\u636e\u7684\u5904\u7406\u6838\u5fc3\u5c31\u662f\u6620\u5c04\uff08map\uff09\u548c\u89c4\u7ea6\uff08reduce\uff09\u3002</li> <li>\u6620\u5c04\u64cd\u4f5c\uff08\u5e7f\u4e49\u4e0a\u7684 map\uff09\uff1a</li> <li>\u8fc7\u6ee4\uff1a\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u6761\u4ef6\uff0c<code>filter(Elem =&gt; Boolean)</code></li> <li>\u8f6c\u5316/\u6620\u5c04\uff08\u72ed\u4e49\u4e0a\u7684 map\uff09\uff1a\u81ea\u5b9a\u4e49\u6620\u5c04\u51fd\u6570\uff0c<code>map(Elem =&gt; NewElem)</code></li> <li>\u6241\u5e73\u5316\uff08flatten\uff09\uff1a\u5c06\u96c6\u5408\u4e2d\u96c6\u5408\u5143\u7d20\u62c6\u5f00\uff0c\u53bb\u6389\u91cc\u5c42\u96c6\u5408\uff0c\u653e\u5230\u5916\u5c42\u4e2d\u6765\u3002<code>flatten</code></li> <li>\u6241\u5e73\u5316+\u6620\u5c04\uff1a\u5148\u6620\u5c04\uff0c\u518d\u6241\u5e73\u5316\uff0c<code>flatMap(Elem =&gt; NewElem)</code></li> <li>\u5206\u7ec4\uff08group\uff09\uff1a\u6307\u5b9a\u5206\u7ec4\u89c4\u5219\uff0c<code>groupBy(Elem =&gt; Key)</code>\u5f97\u5230\u4e00\u4e2a Map\uff0ckey \u6839\u636e\u4f20\u5165\u7684\u51fd\u6570\u8fd0\u7528\u4e8e\u96c6\u5408\u5143\u7d20\u5f97\u5230\uff0cvalue \u662f\u5bf9\u5e94\u5143\u7d20\u7684\u5e8f\u5217\u3002</li> <li>\u89c4\u7ea6\u64cd\u4f5c\uff08\u5e7f\u4e49\u7684 reduce\uff09\uff1a</li> <li>\u7b80\u5316/\u89c4\u7ea6\uff08\u72ed\u4e49\u7684 reduce\uff09\uff1a\u5bf9\u6240\u6709\u6570\u636e\u505a\u4e00\u4e2a\u5904\u7406\uff0c\u89c4\u7ea6\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c\uff08\u6bd4\u5982\u8fde\u52a0\u8fde\u4e58\u64cd\u4f5c\uff09\u3002<code>reduce((CurRes, NextElem) =&gt; NextRes)</code>\uff0c\u4f20\u5165\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u7b2c\u4e00\u6b21\u8fd0\u7b97\uff09\u548c\u4e0a\u4e00\u8f6e\u7ed3\u679c\uff08\u540e\u9762\u7684\u8ba1\u7b97\uff09\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5f53\u524d\u5143\u7d20\uff0c\u5f97\u5230\u672c\u8f6e\u7ed3\u679c\uff0c\u6700\u540e\u4e00\u8f6e\u7684\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7ed3\u679c\u3002<code>reduce</code>\u8c03\u7528<code>reduceLeft</code>\u4ece\u5de6\u5f80\u53f3\uff0c\u4e5f\u53ef\u4ee5<code>reduceRight</code>\u4ece\u53f3\u5f80\u5de6\uff08\u5b9e\u9645\u4e0a\u662f\u9012\u5f52\u8c03\u7528\uff0c\u548c\u4e00\u822c\u610f\u4e49\u4e0a\u7684\u4ece\u53f3\u5f80\u5de6\u6709\u533a\u522b\uff0c\u770b\u4e0b\u9762\u4f8b\u5b50\uff09\u3002</li> <li>\u6298\u53e0\uff08fold\uff09\uff1a<code>fold(InitialVal)((CurRes, Elem) =&gt; NextRes)</code>\u76f8\u5bf9\u4e8e<code>reduce</code>\u6765\u8bf4\u5176\u5b9e\u5c31\u662f<code>fold</code>\u81ea\u5df1\u7ed9\u521d\u503c\uff0c\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u8ba1\u7b97\uff0c<code>reduce</code>\u7528\u7b2c\u4e00\u4e2a\u505a\u521d\u503c\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u7b97\u3002<code>fold</code>\u8c03\u7528<code>foldLeft</code>\uff0c\u4ece\u53f3\u5f80\u5de6\u5219\u7528<code>foldRight</code>\uff08\u7ffb\u8f6c\u4e4b\u540e\u518d<code>foldLeft</code>\uff09\u3002\u5177\u4f53\u903b\u8f91\u8fd8\u5f97\u8fd8\u6e90\u7801\u3002\u4ece\u53f3\u5f80\u5de6\u90fd\u6709\u70b9\u7ed5\u548c\u96be\u4ee5\u7406\u89e3\uff0c\u5982\u679c\u8981\u4f7f\u7528\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002</li> <li>\u4ee5\u4e0a\uff1a</li> </ul> <pre><code>val list = List(1, 10, 100, 3, 5, 111)\n\n// 1. map functions\n// filter\nval evenList = list.filter(_ % 2 == 0)\nprintln(evenList)\n\n// map\nprintln(list.map(_ * 2))\nprintln(list.map(x =&gt; x * x))\n\n// flatten\nval nestedList: List[List[Int]] = List(List(1, 2, 3), List(3, 4, 5), List(10, 100))\nval flatList = nestedList(0) ::: nestedList(1) ::: nestedList(2)\nprintln(flatList)\n\nval flatList2 = nestedList.flatten\nprintln(flatList2) // equals to flatList\n\n// map and flatten\n// example: change a string list into a word list\nval strings: List[String] = List(\"hello world\", \"hello scala\", \"yes no\")\nval splitList: List[Array[String]] = strings.map(_.split(\" \")) // divide string to words\nval flattenList = splitList.flatten\nprintln(flattenList)\n\n// merge two steps above into one\n// first map then flatten\nval flatMapList = strings.flatMap(_.split(\" \"))\nprintln(flatMapList)\n\n// divide elements into groups\nval groupMap = list.groupBy(_ % 2) // keys: 0 &amp; 1\nval groupMap2 = list.groupBy(data =&gt; if (data % 2 == 0) \"even\" else \"odd\") // keys : \"even\" &amp; \"odd\"\nprintln(groupMap)\nprintln(groupMap2)\n\nval worldList = List(\"China\", \"America\", \"Alice\", \"Curry\", \"Bob\", \"Japan\")\nprintln(worldList.groupBy(_.charAt(0)))\n\n// 2. reduce functions\n// narrowly reduce\nprintln(List(1, 2, 3, 4).reduce(_ + _)) // 1+2+3+4 = 10\nprintln(List(1, 2, 3, 4).reduceLeft(_ - _)) // 1-2-3-4 = -8\nprintln(List(1, 2, 3, 4).reduceRight(_ - _)) // 1-(2-(3-4)) = -2, a little confusing\n\n// fold\nprintln(List(1, 2, 3, 4).fold(0)(_ + _)) // 0+1+2+3+4 = 10\nprintln(List(1, 2, 3, 4).fold(10)(_ + _)) // 10+1+2+3+4 = 20\nprintln(List(1, 2, 3, 4).foldRight(10)(_ - _)) // 1-(2-(3-(4-10))) = 8, a little confusing\n</code></pre> <p>\u96c6\u5408\u5e94\u7528\u6848\u4f8b\uff1a</p> <ul> <li>Map \u7684\u9ed8\u8ba4\u5408\u5e76\u64cd\u4f5c\u662f\u7528\u540e\u9762\u7684\u540c key \u5143\u7d20\u8986\u76d6\u524d\u9762\u7684\uff0c\u5982\u679c\u8981\u5b9a\u5236\u4e3a\u7d2f\u52a0\u4ed6\u4eec\u7684\u503c\u53ef\u4ee5\u7528<code>fold</code>\u3002</li> </ul> <pre><code>// merging two Map will override the value of the same key\n// custom the merging process instead of just override\nval map1 = Map(\"a\" -&gt; 1, \"b\" -&gt; 3, \"c\" -&gt; 4)\nval map2 = mutable.Map(\"a\" -&gt; 6, \"b\" -&gt; 2, \"c\" -&gt; 5, \"d\" -&gt; 10)\nval map3 = map1.foldLeft(map2)(\n    (mergedMap, kv) =&gt; {\n        mergedMap(kv._1) = mergedMap.getOrElse(kv._1, 0) + kv._2\n        mergedMap\n    }\n)\nprintln(map3) // HashMap(a -&gt; 7, b -&gt; 5, c -&gt; 9, d -&gt; 10)\n</code></pre> <ul> <li>\u7ecf\u5178\u6848\u4f8b\uff1a\u5355\u8bcd\u8ba1\u6570\uff1a\u5206\u8bcd\uff0c\u8ba1\u6570\uff0c\u53d6\u6392\u540d\u524d\u4e09\u7ed3\u679c\u3002</li> </ul> <pre><code>// count words in string list, and get 3 highest frequency words\ndef wordCount(): Unit = {\n    val stringList: List[String] = List(\n        \"hello\",\n        \"hello world\",\n        \"hello scala\",\n        \"hello spark from scala\",\n        \"hello flink from scala\"\n    )\n\n    // 1. split\n    val wordList: List[String] = stringList.flatMap(_.split(\" \"))\n    println(wordList)\n\n    // 2. group same words\n    val groupMap: Map[String, List[String]] = wordList.groupBy(word =&gt; word)\n    println(groupMap)\n\n    // 3. get length of the every word, to (word, length)\n    val countMap: Map[String, Int] = groupMap.map(kv =&gt; (kv._1, kv._2.length))\n\n    // 4. convert map to list, sort and take first 3\n    val countList: List[(String, Int)] = countMap.toList\n        .sortWith(_._2 &gt; _._2)\n        .take(3)\n\n    println(countList) // result\n}\n</code></pre> <ul> <li>\u5355\u8bcd\u8ba1\u6570\u6848\u4f8b\u6269\u5c55\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u53ef\u80fd\u51fa\u73b0\u591a\u6b21\u5e76\u4e14\u5df2\u7ecf\u7edf\u8ba1\u597d\u51fa\u73b0\u6b21\u6570\uff0c\u89e3\u51b3\u65b9\u5f0f\uff0c\u5148\u6309\u6b21\u6570\u5408\u5e76\u4e4b\u540e\u518d\u6309\u7167\u4e0a\u8ff0\u4f8b\u5b50\u5904\u7406\u3002</li> </ul> <pre><code>// strings has their frequency\ndef wordCountAdvanced(): Unit = {\n    val tupleList: List[(String, Int)] = List(\n        (\"hello\", 1),\n        (\"hello world\", 2),\n        (\"hello scala\", 3),\n        (\"hello spark from scala\", 1),\n        (\"hello flink from scala\", 2)\n    )\n\n    val newStringList: List[String] = tupleList.map(\n        kv =&gt; (kv._1.trim + \" \") * kv._2\n    )\n\n    // just like wordCount\n    val wordCountList: List[(String, Int)] = newStringList\n        .flatMap(_.split(\" \"))\n        .groupBy(word =&gt; word)\n        .map(kv =&gt; (kv._1, kv._2.length))\n        .toList\n        .sortWith(_._2 &gt; _._2)\n        .take(3)\n\n    println(wordCountList) // result\n}\n</code></pre> <ul> <li>\u5f53\u7136\u8fd9\u5e76\u4e0d\u9ad8\u6548\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u5229\u7528\u4e0a\u5df2\u7ecf\u7edf\u8ba1\u7684\u9891\u7387\u4fe1\u606f\u3002</li> </ul> <pre><code>def wordCountAdvanced2(): Unit = {\n    val tupleList: List[(String, Int)] = List(\n        (\"hello\", 1),\n        (\"hello world\", 2),\n        (\"hello scala\", 3),\n        (\"hello spark from scala\", 1),\n        (\"hello flink from scala\", 2)\n    )\n\n    // first split based on the input frequency\n    val preCountList: List[(String, Int)] = tupleList.flatMap(\n        tuple =&gt; {\n            val strings: Array[String] = tuple._1.split(\" \")\n            strings.map(word =&gt; (word, tuple._2)) // Array[(String, Int)]\n        }\n    )\n\n    // group as words\n    val groupedMap: Map[String, List[(String, Int)]] = preCountList.groupBy(_._1)\n    println(groupedMap)\n\n    // count frequency of all words\n    val countMap: Map[String, Int] = groupedMap.map(\n        kv =&gt; (kv._1, kv._2.map(_._2).sum)\n    )\n    println(countMap)\n\n    // to list, sort and take first 3 words\n    val countList = countMap.toList.sortWith(_._2 &gt; _._2).take(3)\n    println(countList)\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_7","title":"Scala \u9690\u5f0f\u8f6c\u6362","text":"<p>\u5728 Scala \u4e2d\uff0c\u9690\u5f0f\u8f6c\u6362\u662f\u4e00\u79cd\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u7f16\u8bd1\u5668\u5728\u9700\u8981\u65f6\u81ea\u52a8\u5730\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u6216\u6dfb\u52a0\u65b9\u6cd5\u8c03\u7528\u3002\u901a\u8fc7\u9690\u5f0f\u8f6c\u6362\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u6269\u5c55\u73b0\u6709\u7c7b\u7684\u529f\u80fd\uff0c\u63d0\u4f9b\u66f4\u5bcc\u8868\u73b0\u529b\u548c\u7075\u6d3b\u6027\u7684\u4ee3\u7801\u3002</p> <p>\u4ee5\u4e0b\u662f\u5173\u4e8e Scala \u9690\u5f0f\u8f6c\u6362\u7684\u4e00\u4e9b\u91cd\u8981\u6982\u5ff5\u548c\u7528\u6cd5\uff1a</p> <ul> <li>\u9690\u5f0f\u8f6c\u6362\u51fd\u6570\uff08Implicit Conversion Functions\uff09\uff1a\u9690\u5f0f\u8f6c\u6362\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u5b83\u7528\u4e8e\u5c06\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u578b\u3002\u9690\u5f0f\u8f6c\u6362\u51fd\u6570\u4f7f\u7528 <code>implicit</code> \u5173\u952e\u5b57\u8fdb\u884c\u58f0\u660e\uff0c\u5e76\u4e14\u901a\u5e38\u5b9a\u4e49\u5728\u9690\u5f0f\u8f6c\u6362\u51fd\u6570\u7684\u4f5c\u7528\u57df\u5185\u3002\u5f53\u7f16\u8bd1\u5668\u53d1\u73b0\u7c7b\u578b\u4e0d\u5339\u914d\u7684\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u4f1a\u5728\u4f5c\u7528\u57df\u5185\u67e5\u627e\u9002\u7528\u7684\u9690\u5f0f\u8f6c\u6362\u51fd\u6570\uff0c\u5e76\u81ea\u52a8\u5e94\u7528\u8f6c\u6362\u3002\u4f8b\u5982\uff1a</li> </ul> <pre><code>implicit def intToString(i: Int): String = i.toString\n\nval str: String = 42  // \u7f16\u8bd1\u5668\u81ea\u52a8\u5e94\u7528\u9690\u5f0f\u8f6c\u6362\u5c06 Int \u8f6c\u6362\u4e3a String\nprintln(str)  // \u8f93\u51fa: \"42\"\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5c06 <code>Int</code> \u7c7b\u578b\u8f6c\u6362\u4e3a <code>String</code> \u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\u51fd\u6570 <code>intToString</code>\u3002\u5f53\u6211\u4eec\u5c06\u6574\u6570 <code>42</code> \u8d4b\u503c\u7ed9\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u53d8\u91cf\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5e94\u7528\u8be5\u9690\u5f0f\u8f6c\u6362\u51fd\u6570\u3002</p> <ul> <li>\u9690\u5f0f\u53c2\u6570\uff08Implicit Parameters\uff09\uff1a\u9690\u5f0f\u53c2\u6570\u5141\u8bb8\u6211\u4eec\u5b9a\u4e49\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\uff0c\u5728\u8c03\u7528\u65f6\u4f7f\u7528\u9690\u5f0f\u503c\u800c\u4e0d\u662f\u663e\u5f0f\u4f20\u9012\u3002\u9690\u5f0f\u53c2\u6570\u4f7f\u7528 <code>implicit</code> \u5173\u952e\u5b57\u8fdb\u884c\u58f0\u660e\uff0c\u5e76\u4e14\u901a\u5e38\u5b9a\u4e49\u5728\u4f5c\u7528\u57df\u5185\u3002\u5f53\u8c03\u7528\u5e26\u6709\u9690\u5f0f\u53c2\u6570\u7684\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u4f5c\u7528\u57df\u5185\u67e5\u627e\u9002\u7528\u7684\u9690\u5f0f\u503c\uff0c\u5e76\u81ea\u52a8\u4f20\u5165\u51fd\u6570\u3002\u4f8b\u5982\uff1a</li> </ul> <pre><code>def greet(name: String)(implicit greeting: String): Unit = {\n  println(s\"$greeting, $name!\")\n}\n\nimplicit val defaultGreeting: String = \"Hello\"\n\ngreet(\"Alice\")  // \u7f16\u8bd1\u5668\u81ea\u52a8\u4f20\u5165\u9690\u5f0f\u53c2\u6570 defaultGreeting\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e26\u6709\u9690\u5f0f\u53c2\u6570 <code>greeting</code> \u7684 <code>greet</code> \u51fd\u6570\u3002\u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9690\u5f0f\u503c <code>defaultGreeting</code>\uff0c\u5b83\u88ab\u81ea\u52a8\u4f20\u5165\u51fd\u6570\u4f5c\u4e3a\u9690\u5f0f\u53c2\u6570\u3002\u5f53\u6211\u4eec\u8c03\u7528 <code>greet(\"Alice\")</code> \u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5e94\u7528\u9690\u5f0f\u503c <code>\"Hello\"</code> \u4f5c\u4e3a <code>greeting</code> \u53c2\u6570\u7684\u503c\u3002</p> <ul> <li>\u9690\u5f0f\u7c7b\uff08Implicit Classes\uff09\uff1a\u9690\u5f0f\u7c7b\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\uff0c\u5b83\u7528\u4e8e\u5728\u73b0\u6709\u7c7b\u4e0a\u6dfb\u52a0\u9644\u52a0\u7684\u65b9\u6cd5\u3002\u9690\u5f0f\u7c7b\u4f7f\u7528 <code>implicit</code> \u5173\u952e\u5b57\u8fdb\u884c\u58f0\u660e\uff0c\u5e76\u4e14\u5fc5\u987b\u5b9a\u4e49\u5728\u9876\u5c42\u5bf9\u8c61\u3001\u7c7b\u6216\u7279\u8d28\u4e2d\u3002\u5f53\u9690\u5f0f\u7c7b\u7684\u5b9e\u4f8b\u8c03\u7528\u9644\u52a0\u7684\u65b9\u6cd5\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u5b9e\u4f8b\u8f6c\u6362\u4e3a\u9690\u5f0f\u7c7b\uff0c\u5e76\u5e94\u7528\u76f8\u5e94\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff1a</li> </ul> <pre><code>implicit class StringOps(s: String) {\n  def greet(): Unit = {\n    println(s\"Hello, $s!\")\n  }\n}\n\n\"Alice\".greet()  // \u7f16\u8bd1\u5668\u81ea\u52a8\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a StringOps\uff0c\u5e76\u5e94\u7528 greet \u65b9\u6cd5\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9690\u5f0f\u7c7b <code>StringOps</code>\uff0c\u5b83\u5728 <code>String</code> \u7c7b\u578b\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a <code>greet</code> \u65b9\u6cd5\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u5b57\u7b26\u4e32\u5b57\u9762\u91cf <code>\"Alice\"</code> \u8c03\u7528 <code>greet()</code> \u65b9\u6cd5\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a <code>StringOps</code> \u7684\u5b9e\u4f8b\uff0c\u5e76\u5e94\u7528 <code>greet</code> \u65b9\u6cd5\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_8","title":"Scala \u6a21\u5f0f\u5339\u914d","text":"<pre><code>value match {\n    case caseVal1 =&gt; returnVal1\n    case caseVal2 =&gt; returnVal2\n    ...\n    case _ =&gt; defaultVal\n}\n</code></pre> <ul> <li>\u6bcf\u4e00\u4e2a case \u6761\u4ef6\u6210\u7acb\u624d\u8fd4\u56de\uff0c\u5426\u5219\u7ee7\u7eed\u5f80\u4e0b\u8d70\u3002</li> <li><code>case</code>\u5339\u914d\u4e2d\u53ef\u4ee5\u6dfb\u52a0\u6a21\u5f0f\u5b88\u536b\uff0c\u7528\u6761\u4ef6\u5224\u65ad\u6765\u4ee3\u66ff\u7cbe\u786e\u5339\u914d\u3002</li> </ul> <pre><code>def abs(num: Int): Int= {\n    num match {\n        case i if i &gt;= 0 =&gt; i\n        case i if i &lt; 0 =&gt; -i\n    }\n}\n</code></pre> <ul> <li>\u6a21\u5f0f\u5339\u914d\u652f\u6301\u7c7b\u578b\uff1a\u6240\u6709\u7c7b\u578b\u5b57\u9762\u91cf\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\u3001\u5b57\u7b26\u3001\u6570\u5b57\u3001\u5e03\u5c14\u503c\u3001\u751a\u81f3\u6570\u7ec4\u5217\u8868\u7b49\u3002</li> <li>\u4f60\u751a\u81f3\u53ef\u4ee5\u4f20\u5165 <code>Any</code> \u7c7b\u578b\u53d8\u91cf\uff0c\u5339\u914d\u4e0d\u540c\u7c7b\u578b\u5e38\u91cf\u3002</li> <li>\u9700\u8981\u6ce8\u610f\u9ed8\u8ba4\u60c5\u51b5\u5904\u7406\uff0c<code>case _</code> \u4e5f\u9700\u8981\u8fd4\u56de\u503c\uff0c\u5982\u679c\u6ca1\u6709\u4f46\u662f\u53c8\u6ca1\u6709\u5339\u914d\u5230\uff0c\u5c31\u629b\u51fa\u8fd0\u884c\u65f6\u9519\u8bef\u3002\u9ed8\u8ba4\u60c5\u51b5 <code>case _</code> \u4e0d\u5f3a\u5236\u8981\u6c42\u901a\u914d\u7b26\uff08\u53ea\u662f\u5728\u4e0d\u9700\u8981\u53d8\u91cf\u7684\u503c\u5efa\u8bae\u8fd9\u4e48\u505a\uff09\uff0c\u4e5f\u53ef\u4ee5\u7528 <code>case abc</code> \u4e00\u4e2a\u53d8\u91cf\u6765\u63a5\u4f4f\uff0c\u53ef\u4ee5\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u503c\u3002</li> <li>\u901a\u8fc7\u6307\u5b9a\u5339\u914d\u53d8\u91cf\u7684\u7c7b\u578b\uff08\u7528\u7279\u5b9a\u7c7b\u578b\u53d8\u91cf\u63a5\u4f4f\uff09\uff0c\u53ef\u4ee5\u5339\u914d\u7c7b\u578b\u800c\u4e0d\u5339\u914d\u503c\uff0c\u4e5f\u53ef\u4ee5\u6df7\u7528\u3002</li> <li>\u9700\u8981\u6ce8\u610f\u7c7b\u578b\u5339\u914d\u65f6\u7531\u4e8e\u6cdb\u578b\u64e6\u9664\uff0c\u53ef\u80fd\u5e76\u4e0d\u80fd\u4e25\u683c\u5339\u914d\u6cdb\u578b\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u4e5f\u4f1a\u62a5\u8b66\u544a\u3002\u4f46<code>Array</code>\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5bf9\u5e94\u4e8e java \u7684\u539f\u751f\u6570\u7ec4\u7c7b\u578b\uff0c\u80fd\u591f\u5339\u914d\u6cdb\u578b\u7c7b\u578b\u53c2\u6570\u3002</li> </ul> <pre><code>// match type\ndef describeType(x: Any) = x match {\n    case i: Int =&gt; \"Int \" + i\n    case s: String =&gt; \"String \" + s\n    case list: List[String] =&gt; \"List \" + list\n    case array: Array[Int] =&gt; \"Array[Int] \" + array\n    case a =&gt; \"Something else \" + a\n}\nprintln(describeType(20)) // match\nprintln(describeType(\"hello\")) // match\nprintln(describeType(List(\"hi\", \"hello\"))) // match\nprintln(describeType(List(20, 30))) // match\nprintln(describeType(Array(10, 20))) // match\nprintln(describeType(Array(\"hello\", \"yes\"))) // not match\nprintln(describeType((10, 20))) // not match\n</code></pre> <ul> <li>\u5bf9\u4e8e\u6570\u7ec4\u53ef\u4ee5\u5b9a\u4e49\u591a\u79cd\u5339\u914d\u5f62\u5f0f\uff0c\u53ef\u4ee5\u5b9a\u4e49\u6a21\u7cca\u7684\u5143\u7d20\u7c7b\u578b\u5339\u914d\u3001\u5143\u7d20\u6570\u91cf\u5339\u914d\u6216\u8005\u7cbe\u786e\u7684\u67d0\u4e2a\u6570\u7ec4\u5143\u7d20\u503c\u5339\u914d\uff0c\u975e\u5e38\u5f3a\u5927\u3002</li> </ul> <pre><code>for (arr &lt;- List(\n    Array(0),\n    Array(1, 0),\n    Array(1, 1, 0),\n    Array(10, 2, 7, 5),\n    Array(\"hello\", 20, 50)\n)) {\n    val result = arr match {\n        case Array(0) =&gt; \"0\"\n        case Array(1, 0) =&gt; \"Array(1, 0)\"\n        case Array(x: Int, y: Int) =&gt; s\"Array($x, $y)\" // Array of two elements\n        case Array(0, _*) =&gt; s\"an array begin with 0\"\n        case Array(x, 1, z) =&gt; s\"an array with three elements, no.2 is 1\"\n        case Array(x:String, _*) =&gt; s\"array that first element is a string\"\n        case _ =&gt; \"somthing else\"\n    }\n    println(result)\n</code></pre> <ul> <li><code>List</code> \u5339\u914d\u548c <code>Array</code> \u5dee\u4e0d\u591a\uff0c\u4e5f\u5f88\u7075\u6d3b\u3002\u8fd8\u53ef\u7528\u7528\u96c6\u5408\u7c7b\u7075\u6d3b\u7684\u8fd0\u7b97\u7b26\u6765\u5339\u914d\u3002</li> <li>\u6bd4\u5982\u4f7f\u7528 <code>::</code> \u8fd0\u7b97\u7b26\u5339\u914d <code>first :: second :: rest</code>\uff0c\u5c06\u4e00\u4e2a\u5217\u8868\u62c6\u6210\u4e09\u4efd\uff0c\u7b2c\u4e00\u4e2a\u7b2c\u4e8c\u4e2a\u5143\u7d20\u548c\u5269\u4f59\u5143\u7d20\u6784\u6210\u7684\u5217\u8868\u3002</li> <li>\u6ce8\u610f\u6a21\u5f0f\u5339\u914d\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u503c\u5f53\u505a\u8868\u8fbe\u5f0f\u6765\u7528\uff0c\u4e5f\u53ef\u4ee5\u4ec5\u6267\u884c\u8bed\u53e5\u7c7b\u4f3c\u4e8e\u4f20\u7edf <code>switch-case</code> \u8bed\u53e5\u4e0d\u5173\u5fc3\u8fd4\u56de\u503c\uff0c\u4e5f\u53ef\u4ee5\u65e2\u6267\u884c\u8bed\u53e5\u540c\u65f6\u4e5f\u8fd4\u56de\u3002</li> <li>\u5143\u7ec4\u5339\u914d\uff1a</li> <li>\u53ef\u4ee5\u5339\u914d n \u5143\u7ec4\u3001\u5339\u914d\u5143\u7d20\u7c7b\u578b\u3001\u5339\u914d\u5143\u7d20\u503c\u3002\u5982\u679c\u53ea\u5173\u5fc3\u67d0\u4e2a\u5143\u7d20\uff0c\u5176\u4ed6\u5c31\u53ef\u4ee5\u7528\u901a\u914d\u7b26\u6216\u53d8\u91cf\u3002</li> <li>\u5143\u7ec4\u5927\u5c0f\u56fa\u5b9a\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528 <code>_*</code>\u3002</li> </ul> <p>\u53d8\u91cf\u58f0\u660e\u5339\u914d\uff1a</p> <ul> <li>\u53d8\u91cf\u58f0\u660e\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u7684\u8fc7\u7a0b\u3002</li> <li>\u5143\u7ec4\u5e38\u7528\u4e8e\u6279\u91cf\u8d4b\u503c\u3002</li> <li><code>val (x, y) = (10, \"hello\")</code></li> <li><code>val List(first, second, _*) = List(1, 3, 4, 5)</code></li> <li><code>val List(first :: second :: rest) = List(1, 2, 3, 4)</code></li> </ul> <p><code>for</code> \u63a8\u5bfc\u5f0f\u4e2d\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\uff1a</p> <ul> <li>\u5143\u7ec4\u4e2d\u53d6\u5143\u7d20\u65f6\uff0c\u5fc5\u987b\u7528 <code>_1 _2 ...</code>\uff0c\u53ef\u4ee5\u7528\u5143\u7ec4\u8d4b\u503c\u5c06\u5143\u7d20\u8d4b\u7ed9\u53d8\u91cf\uff0c\u66f4\u6e05\u6670\u4e00\u4e9b\u3002</li> <li><code>for ((first, second) &lt;- tupleList)</code></li> <li><code>for ((first, _) &lt;- tupleList)</code></li> <li>\u6307\u5b9a\u7279\u5b9a\u5143\u7d20\u7684\u503c\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u5faa\u73af\u5b88\u536b\u7684\u529f\u80fd\uff0c\u76f8\u5f53\u4e8e\u52a0\u4e00\u5c42\u7b5b\u9009\u3002\u6bd4\u5982 <code>for ((10, second) &lt;- tupleList)</code></li> <li>\u5176\u4ed6\u5339\u914d\u4e5f\u540c\u6837\u53ef\u4ee5\u7528\uff0c\u53ef\u4ee5\u5173\u6ce8\u6570\u91cf\u3001\u503c\u3001\u7c7b\u578b\u7b49\uff0c\u76f8\u5f53\u4e8e\u505a\u4e86\u7b5b\u9009\u3002</li> <li>\u5143\u7ec4\u5217\u8868\u5339\u914d\u3001\u8d4b\u503c\u5339\u914d\u3001<code>for</code> \u5faa\u73af\u4e2d\u5339\u914d\u975e\u5e38\u7075\u6d3b\uff0c\u7075\u6d3b\u8fd0\u7528\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\u3002</li> </ul> <p>\u5339\u914d\u5bf9\u8c61\uff1a</p> <ul> <li>\u5bf9\u8c61\u5185\u5bb9\u5339\u914d\u3002</li> <li>\u76f4\u63a5 <code>match-case</code> \u4e2d\u5339\u914d\u5bf9\u5e94\u5f15\u7528\u53d8\u91cf\u7684\u8bdd\u8bed\u6cd5\u662f\u6709\u95ee\u9898\u7684\u3002\u7f16\u8bd1\u62a5\u9519\u4fe1\u606f\u63d0\u793a\uff1a\u4e0d\u662f\u6837\u4f8b\u7c7b\u4e5f\u6ca1\u6709\u4e00\u4e2a\u5408\u6cd5\u7684 <code>unapply/unapplySeq</code> \u6210\u5458\u5b9e\u73b0\u3002</li> <li>\u8981\u5339\u914d\u5bf9\u8c61\uff0c\u9700\u8981\u5b9e\u73b0\u4f34\u751f\u5bf9\u8c61 <code>unapply</code> \u65b9\u6cd5\uff0c\u7528\u6765\u5bf9\u5bf9\u8c61\u5c5e\u6027\u8fdb\u884c\u62c6\u89e3\u4ee5\u505a\u5339\u914d\u3002</li> </ul> <p>\u6837\u4f8b\u7c7b\uff1a</p> <ul> <li>\u7b2c\u4e8c\u79cd\u5b9e\u73b0\u5bf9\u8c61\u5339\u914d\u7684\u65b9\u5f0f\u662f\u6837\u4f8b\u7c7b\u3002</li> <li><code>case class className</code> \u5b9a\u4e49\u6837\u4f8b\u7c7b\uff0c\u4f1a\u76f4\u63a5\u5c06\u6253\u5305 <code>apply</code> \u548c\u62c6\u5305 <code>unapply</code> \u7684\u65b9\u6cd5\u76f4\u63a5\u5b9a\u4e49\u597d\u3002</li> <li>\u6837\u4f8b\u7c7b\u5b9a\u4e49\u4e2d\u4e3b\u6784\u9020\u53c2\u6570\u5217\u8868\u4e2d\u7684 <code>val</code> \u751a\u81f3\u90fd\u53ef\u4ee5\u7701\u7565\uff0c\u5982\u679c\u662f <code>var</code> \u7684\u8bdd\u5219\u4e0d\u80fd\u7701\u7565\uff0c\u6700\u597d\u52a0\u4e0a\u7684\u611f\u89c9\uff0c\u5947\u5947\u602a\u602a\u7684\u5404\u79cd\u8fb9\u89d2\u7b80\u5316\u3002</li> </ul> <p>\u5bf9\u8c61\u5339\u914d\u548c\u6837\u4f8b\u7c7b\u4f8b\u5b50\uff1a</p> <pre><code>object MatchObject {\n    def main(args: Array[String]): Unit = {\n        val person = new Person(\"Alice\", 18)\n\n        val result: String = person match {\n            case Person(\"Alice\", 18) =&gt; \"Person: Alice, 18\"\n            case _ =&gt; \"something else\"\n        }\n        println(result)\n\n        val s = Student(\"Alice\", 18)\n        val result2: String = s match {\n            case Student(\"Alice\", 18) =&gt; \"Student: Alice, 18\"\n            case _ =&gt; \"something else\"\n        }\n        println(result2)\n    }\n}\n\n\nclass Person(val name: String, val age: Int)\nobject Person {\n    def apply(name: String, age: Int) = new Person(name, age)\n    def unapply(person: Person): Option[(String, Int)] = {\n        if (person == null) { // avoid null reference\n            None\n        } else {\n            Some((person.name, person.age))\n        }\n    }\n}\n\ncase class Student(name: String, age: Int) // name and age are vals\n</code></pre> <p>\u504f\u51fd\u6570\uff1a</p> <ul> <li>\u504f\u51fd\u6570\u662f\u51fd\u6570\u7684\u4e00\u79cd\uff0c\u901a\u8fc7\u504f\u51fd\u6570\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u5730\u5bf9\u53c2\u6570\u505a\u66f4\u7cbe\u786e\u7684\u68c0\u67e5\uff0c\u4f8b\u5982\u504f\u51fd\u6570\u8f93\u5165\u7c7b\u578b\u662f <code>List[Int]</code>\uff0c\u9700\u8981\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f 0 \u7684\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6a21\u5f0f\u5339\u914d\u5b9e\u73b0\u7684\u3002</li> <li>\u5b9a\u4e49\uff1a</li> </ul> <pre><code>val partialFuncName: PartialFunction[List[Int], Option[Int]] = {\n    case x :: y :: _ =&gt; Some(y)\n}\n</code></pre> <ul> <li>\u901a\u8fc7\u4e00\u4e2a\u53d8\u91cf\u5b9a\u4e49\u65b9\u5f0f\u5b9a\u4e49\uff0c<code>PartialFunction</code> \u7684\u6cdb\u578b\u7c7b\u578b\u4e2d\uff0c\u524d\u8005\u662f\u53c2\u6570\u7c7b\u578b\uff0c\u540e\u8005\u662f\u8fd4\u56de\u503c\u7c7b\u578b\u3002\u51fd\u6570\u4f53\u4e2d\u7528\u4e00\u4e2a <code>case</code> \u8bed\u53e5\u6765\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\u3002\u4e0a\u9762\u4f8b\u5b50\u8fd4\u56de\u8f93\u5165\u7684 <code>List</code> \u96c6\u5408\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u3002</li> <li>\u4e00\u822c\u4e00\u4e2a\u504f\u51fd\u6570\u53ea\u80fd\u5904\u7406\u8f93\u5165\u7684\u4e00\u90e8\u5206\u573a\u666f\uff0c\u5b9e\u9645\u4e2d\u5f80\u5f80\u9700\u8981\u5b9a\u4e49\u591a\u4e2a\u504f\u51fd\u6570\u7528\u4ee5\u7ec4\u5408\u4f7f\u7528\u3002</li> <li>\u4f8b\u5b50\uff1a</li> </ul> <pre><code>object PartialFunctionTest {\n    def main(args: Array[String]): Unit = {\n        val list: List[(String, Int)] = List((\"a\", 12), (\"b\", 10), (\"c\", 100), (\"a\", 5))\n\n        // keep first constant and double second value of the tuple\n        // 1. use map\n        val newList = list.map(tuple =&gt; (tuple._1, tuple._2 * 2))\n        println(newList)\n\n        // 2. pattern matching\n        val newList1 = list.map(\n            tuple =&gt; {\n                tuple match {\n                    case (x, y) =&gt; (x, y * 2)\n                }\n            }\n        )\n        println(newList1)\n\n        // simplify to partial function\n        val newList2 = list.map {\n            case (x, y) =&gt; (x, y * 2) // this is a partial function\n        }\n        println(newList2)\n\n        // application of partial function\n        // get absolute value, deal with: negative, 0, positive\n        val positiveAbs: PartialFunction[Int, Int] = {\n            case x if x &gt; 0 =&gt; x\n        }\n        val negativeAbs: PartialFunction[Int, Int] = {\n            case x if x &lt; 0 =&gt; -x\n        }\n        val zeroAbs: PartialFunction[Int, Int] = {\n            case 0 =&gt; 0\n        }\n\n        // combine a function with three partial functions\n        def abs(x: Int): Int = (positiveAbs orElse negativeAbs orElse zeroAbs) (x)\n        println(abs(-13))\n        println(abs(30))\n        println(abs(0))\n    }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_9","title":"Scala \u6837\u4f8b\u7c7b","text":"<p>\u5728 Scala \u4e2d\uff0c<code>case class</code> \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\uff0c\u7528\u4e8e\u5b9a\u4e49\u4e0d\u53ef\u53d8\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u4eec\u5177\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5b83\u4eec\u975e\u5e38\u9002\u5408\u7528\u4e8e\u6a21\u5f0f\u5339\u914d\u548c\u6570\u636e\u4f20\u9012\u3002</p> <p>\u4ee5\u4e0b\u662f <code>case class</code> \u7684\u4e00\u4e9b\u7279\u70b9\u548c\u7528\u6cd5\uff1a</p> <ol> <li> <p>\u4e0d\u53ef\u53d8\u6027\uff1a<code>case class</code> \u9ed8\u8ba4\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5373\u4e00\u65e6\u521b\u5efa\uff0c\u5b83\u4eec\u7684\u5c5e\u6027\u503c\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002\u8fd9\u6709\u52a9\u4e8e\u7f16\u5199\u66f4\u5b89\u5168\u548c\u53ef\u9760\u7684\u4ee3\u7801\u3002</p> </li> <li> <p>\u81ea\u52a8\u751f\u6210\u7684\u65b9\u6cd5\uff1a\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e9b\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u5982\u6784\u9020\u51fd\u6570\u3001getter \u548c setter \u65b9\u6cd5\u3001<code>equals</code> \u548c <code>hashCode</code> \u65b9\u6cd5\u7b49\u3002\u8fd9\u4f7f\u5f97\u4f7f\u7528 <code>case class</code> \u66f4\u52a0\u65b9\u4fbf\u3002</p> </li> <li> <p>\u6a21\u5f0f\u5339\u914d\uff1a<code>case class</code> \u662f Scala \u4e2d\u6a21\u5f0f\u5339\u914d\uff08pattern matching\uff09\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u6a21\u5f0f\u5339\u914d\u5141\u8bb8\u4f60\u6839\u636e\u6570\u636e\u7ed3\u6784\u7684\u5f62\u72b6\u548c\u5c5e\u6027\u503c\u6765\u8fdb\u884c\u6761\u4ef6\u5339\u914d\u548c\u63d0\u53d6\u3002</p> </li> <li> <p>\u503c\u6bd4\u8f83\uff1a<code>case class</code> \u7684 <code>equals</code> \u65b9\u6cd5\u4f1a\u6309\u7167\u5c5e\u6027\u503c\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49\uff0c\u800c\u4e0d\u662f\u6bd4\u8f83\u5f15\u7528\u3002\u8fd9\u4f7f\u5f97\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>==</code> \u8fd0\u7b97\u7b26\u8fdb\u884c\u503c\u6bd4\u8f83\u3002</p> </li> </ol> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684 <code>case class</code> \u7684\u793a\u4f8b\uff1a</p> <pre><code>case class Person(name: String, age: Int)\n\n// \u521b\u5efa\u4e00\u4e2a Person \u5bf9\u8c61\nval person = Person(\"Alice\", 30)\n\n// \u83b7\u53d6\u5c5e\u6027\u503c\nval name = person.name\nval age = person.age\n\n// \u8f93\u51fa\u5bf9\u8c61\nprintln(person) // \u8f93\u51fa\uff1aPerson(Alice,30)\n\n// \u6a21\u5f0f\u5339\u914d\nperson match {\n  case Person(\"Alice\", age) =&gt; println(s\"Hello, Alice! Your age is $age\")\n  case Person(name, _) =&gt; println(s\"Hello, $name!\")\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c<code>Person</code> \u662f\u4e00\u4e2a <code>case class</code>\uff0c\u5b83\u6709\u4e24\u4e2a\u5c5e\u6027 <code>name</code> \u548c <code>age</code>\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>Person</code> \u7684\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u5c5e\u6027\u540d\u8bbf\u95ee\u5c5e\u6027\u503c\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6a21\u5f0f\u5339\u914d\u6765\u6839\u636e\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\u8fdb\u884c\u6761\u4ef6\u5339\u914d\u548c\u63d0\u53d6\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\uff0c<code>case class</code> \u662f Scala \u4e2d\u7528\u4e8e\u5b9a\u4e49\u4e0d\u53ef\u53d8\u6570\u636e\u7ed3\u6784\u7684\u7279\u6b8a\u7c7b\uff0c\u5b83\u4eec\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684\u65b9\u6cd5\u548c\u6a21\u5f0f\u5339\u914d\u7684\u652f\u6301\u3002\u8fd9\u4f7f\u5f97\u5728 Scala \u4e2d\u5904\u7406\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u548c\u76f4\u89c2\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/Scala/Scala/#scala_10","title":"Scala \u6392\u5e8f","text":"<ul> <li>\u6392\u5e8f <code>sorted</code>\uff0c\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u4ece\u5927\u5230\u5c0f\u6392\u5e8f <code>sorted(Ordering[Int].reverse)</code>\u3002</li> <li>\u6309\u5143\u7d20\u6392\u5e8f <code>sortBy(func)</code>\uff0c\u6307\u5b9a\u8981\u7528\u6765\u505a\u6392\u5e8f\u7684\u5b57\u6bb5\u3002\u4e5f\u53ef\u4ee5\u518d\u4f20\u4e00\u4e2a\u9690\u5f0f\u53c2\u6570\u9006\u5e8f <code>sortBy(func)(Ordering[Int].reverse)</code>\u3002</li> <li>\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668 <code>sortWith(cmp)</code>\uff0c\u6bd4\u5982\u6309\u5143\u7d20\u5347\u5e8f\u6392\u5217 <code>sortWith((a, b) =&gt; a &lt; b)</code> \u6216\u8005 <code>sortWith(_ &lt; _)</code>\uff0c\u6309\u5143\u7ec4\u5143\u7d20\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5347\u5e8f <code>sortWith(_._2 &gt; _._2)</code>\u3002</li> </ul> <pre><code>val list = List(3, 12, -1, 9, 6)\nlist.sorted\nlist.sorted.reverse\nlist.sorted(Ordering[Int].reverse)\nlist.sortWith(_ &lt; _) // ascending\nlist.sortWith(_ &gt; _) // descending\n\nval list2 = List((\"a\", 5), (\"b\", 1), (\"c\", 8), (\"d\", 2), (\"e\", -3), (\"f\", 4))\nlist2.sorted // sort by first element\nlist2.sorted.reverse\nlist2.sortBy(_._2) // sort by second element\nlist2.sortBy(_._2).reverse\nlist2.sortBy(_._2)(Ordering[Int].reverse)\nlist2.sortBy(tuple =&gt; (tuple._1, -tuple._2)) // sort by first element ascending, second element descending\nlist2.sortWith(_._2 &lt; _._2) // sort by second element (ascending)\nlist2.sortWith(_._2 &gt; _._2) // sort by second element (descending)\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/","title":"ZooKeeper","text":""},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#_1","title":"\u96c6\u7fa4\u548c\u5206\u5e03\u5f0f\u7684\u6982\u5ff5","text":"<p>\u96c6\u7fa4\uff1a\u591a\u53f0\u673a\u5668\uff0c\u6bcf\u53f0\u673a\u5668\u4e0a\u90e8\u7f72\u76f8\u540c\u7ec4\u4ef6</p> <p>\u5206\u5e03\u5f0f\uff1a\u591a\u53f0\u673a\u5668\uff0c\u6bcf\u53f0\u673a\u5668\u4e0a\u90e8\u7f72\u4e0d\u540c\u7ec4\u4ef6</p> <p> \u96c6\u7fa4 </p> <p>\u5229\u7528\u591a\u53f0\u5ec9\u4ef7\u3001\u666e\u901a\u7684\u673a\u5668\u5b8c\u6210\u5355\u4e2a\u8ba1\u7b97\u673a\u65e0\u6cd5\u5b8c\u6210\u7684\u5b58\u50a8\u3001\u8ba1\u7b97\u4efb\u52a1\uff0c\u662f\u5bf9\u673a\u5668\u5b58\u50a8\u3001\u8ba1\u7b97\u80fd\u529b\u7684\u6c34\u5e73\u65b9\u5411\u7684\u6269\u5c55\u3002\uff08\u5782\u76f4\u65b9\u5411\u7684\u6269\u5c55\u6307\u7684\u662f\u63d0\u9ad8\u5355\u53f0\u673a\u5668\u7684\u5b58\u50a8\u3001\u8ba1\u7b97\u80fd\u529b\uff09</p> <p> \u5206\u5e03\u5f0f </p> <p>\u96c6\u7fa4\u5e38\u7528\u4e8e\u6784\u5efa\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u5c06\u4efb\u52a1\u5206\u89e3\u4e3a\u591a\u4e2a\u5b50\u4efb\u52a1\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5b50\u4efb\u52a1\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u8282\u70b9\u5e76\u884c\u6267\u884c\uff0c\u4ece\u800c\u63d0\u9ad8\u8ba1\u7b97\u7684\u6548\u7387\u548c\u53ef\u9760\u6027\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_1","title":"ZooKeeper \u662f\u4ec0\u4e48","text":"<p>ZooKeeper \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u534f\u8c03\u6846\u67b6\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4e00\u81f4\u6027\u95ee\u9898\u3002</p> <p>\u901a\u8fc7 ZooKeeper \u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\u6570\u636e\u8ba2\u9605/\u53d1\u5e03\u3001\u5206\u5e03\u5f0f\u9501\u3001Master \u9009\u4e3e\u3001\u8d1f\u8f7d\u5747\u8861\u7b49\u529f\u80fd\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_2","title":"ZooKeeper \u5982\u4f55\u5b9e\u73b0\u5206\u5e03\u5f0f\u534f\u8c03\u670d\u52a1","text":"<p>\u6587\u4ef6\u7cfb\u7edf + \u6ce8\u518c\u76d1\u542c\u673a\u5236</p> <ul> <li>ZooKeeper \u7ef4\u62a4\u4e00\u4e2a\u7c7b\u4f3c\u4e8e Unix \u6587\u4ef6\u7cfb\u7edf\u7684\u6811\u5f62\u5c42\u6b21\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u53eb\u4e00\u4e2a <code>znode</code>\uff0c\u5b83\u65e2\u53ef\u4ee5\u662f\u76ee\u5f55\uff0c\u4e5f\u53ef\u4ee5\u5b58\u653e\u5c11\u91cf\u6570\u636e</li> <li>ZooKeeper \u63d0\u4f9b\u4e86\u6ce8\u518c\u76d1\u542c\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u73b0\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u4e8b\u4ef6\u901a\u77e5\u548c\u534f\u8c03\u529f\u80fd</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_3","title":"ZooKeeper \u6709\u54ea\u4e9b\u7279\u70b9","text":"<ul> <li>\u987a\u5e8f\u4e00\u81f4\u6027\uff1a\u4ece\u540c\u4e00\u4e2a\u5ba2\u6237\u7aef\u53d1\u8d77\u7684\u4e8b\u52a1\u8bf7\u6c42\uff0c\u6700\u7ec8\u4f1a\u4e25\u683c\u5730\u6309\u7167\u53d1\u8d77\u987a\u5e8f\u88ab\u5e94\u7528\u5230 ZooKeeper \u4e2d\u53bb\uff0c\u901a\u8fc7 ZXID \u4fdd\u8bc1</li> <li>\u539f\u5b50\u6027\uff1a\u6240\u6709\u4e8b\u52a1\u8bf7\u6c42\u7684\u5904\u7406\u7ed3\u679c\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u6240\u6709\u673a\u5668\u4e0a\u7684\u5e94\u7528\u60c5\u51b5\u662f\u4e00\u81f4\u7684\uff08\u53ea\u80fd\u6210\u529f/\u5931\u8d25\uff0c\u6ca1\u6709\u4e2d\u95f4\u72b6\u6001\uff09</li> <li>\u5355\u4e00\u89c6\u56fe\uff1a\u65e0\u8bba\u5ba2\u6237\u7aef\u8fde\u63a5\u7684\u662f\u54ea\u4e2a ZooKeeper \u670d\u52a1\u5668\uff0c\u770b\u5230\u7684\u670d\u52a1\u5668\u6570\u636e\u6a21\u578b\u90fd\u662f\u4e00\u81f4\u7684</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper-session","title":"ZooKeeper \u4f1a\u8bdd Session","text":"<p>\u5ba2\u6237\u7aef\u8981\u5bf9 ZooKeeper \u96c6\u7fa4\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u5f97\u5148\u4e0e\u67d0\u4e00 ZooKeeper \u670d\u52a1\u5668\u5efa\u7acb TCP \u957f\u8fde\u63a5\uff0c\u901a\u8fc7\u8fd9\u4e2a\u8fde\u63a5\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u5fc3\u8df3\u68c0\u6d4b\u7684\u673a\u5236\u4e0e ZooKeeper \u670d\u52a1\u5668\u4fdd\u6301\u4f1a\u8bdd\uff0c\u4e5f\u80fd\u591f\u5411 ZooKeeper \u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u5e76\u63a5\u53d7\u54cd\u5e94\uff0c\u540c\u65f6\u8fd8\u80fd\u591f\u901a\u8fc7\u8be5 TCP \u8fde\u63a5\u63a5\u6536\u6765\u81ea\u670d\u52a1\u5668\u7684 Watcher \u4e8b\u4ef6\u901a\u77e5\u3002</p> <p>\u6b64 TCP \u957f\u8fde\u63a5\u79f0\u4e3a\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd Session\u3002</p> <p>\u6bcf\u4e2a\u4f1a\u8bdd\u6709\u8d85\u65f6\u65f6\u95f4\uff1aSessionTimeout\uff0c</p> <p>\u5f53\u5ba2\u6237\u7aef\u4e0e\u96c6\u7fa4\u5efa\u7acb\u4f1a\u8bdd\u540e\uff0c\u5982\u679c\u8d85\u8fc7 SessionTimeout \u65f6\u95f4\uff0c\u4e24\u8005\u95f4\u6ca1\u6709\u901a\u4fe1\uff0c\u4f1a\u8bdd\u8d85\u65f6\u3002</p> <p>\u7279\u70b9:</p> <ul> <li>\u5ba2\u6237\u7aef\u6253\u5f00\u4e00\u4e2a Session \u4e2d\u7684\u8bf7\u6c42\u4ee5 FIFO\uff08\u5148\u8fdb\u5148\u51fa\uff09\u7684\u987a\u5e8f\u6267\u884c\uff1b</li> <li>\u5982\u5ba2\u6237\u7aef client01 \u4e0e\u96c6\u7fa4\u5efa\u7acb\u4f1a\u8bdd\u540e\uff0c\u5148\u53d1\u51fa\u4e00\u4e2a create \u8bf7\u6c42\uff0c\u518d\u53d1\u51fa\u4e00\u4e2a get \u8bf7\u6c42\uff1b</li> <li>\u90a3\u4e48\u5728\u6267\u884c\u65f6\uff0c\u4f1a\u5148\u6267\u884c create\uff0c\u518d\u6267\u884c get</li> <li>\u82e5\u6253\u5f00\u4e24\u4e2a Session\uff0c\u65e0\u6cd5\u4fdd\u8bc1 Session \u95f4\uff0c\u8bf7\u6c42 FIFO \u6267\u884c\uff1b\u53ea\u80fd\u4fdd\u8bc1\u4e00\u4e2a session \u4e2d\u8bf7\u6c42\u7684 FIFO</li> </ul> <p>\u4f1a\u8bdd\u7684\u751f\u547d\u5468\u671f\u6709\uff1a</p> <ul> <li>\u672a\u5efa\u7acb\u8fde\u63a5</li> <li>\u6b63\u5728\u8fde\u63a5</li> <li>\u5df2\u8fde\u63a5</li> <li>\u5173\u95ed\u8fde\u63a5</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_4","title":"ZooKeeper \u7684\u4e8b\u52a1","text":"<p>Zookeeper \u7684\u4e8b\u52a1\u662f\u5ba2\u6237\u7aef\u7684\u5199\u8bf7\u6c42\uff0c\u4f1a\u5bf9 ZooKeeper \u4e2d\u7684\u6570\u636e\u505a\u51fa\u66f4\u6539\uff0c\u5982\u589e\u5220\u6539\u7684\u64cd\u4f5c\u3002</p> <p>\u6bcf\u6b21\u5199\u8bf7\u6c42\uff0c\u4f1a\u751f\u6210\u4e00\u6b21\u4e8b\u52a1\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4e8b\u52a1\u6709\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u4e8b\u52a1 ID\uff0c\u7528 ZXID \u8868\u793a\uff0c\u5168\u5c40\u81ea\u589e\u3002</p> <p>ZXID \u7ed3\u6784\uff1a</p> <ul> <li>\u901a\u5e38\u662f\u4e00\u4e2a 64 \u4f4d\u7684\u6570\u5b57\u3002\u7531 epoch + counter \u7ec4\u6210</li> <li>epoch\u3001counter \u5404 32 \u4f4d</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_5","title":"ZooKeeper \u7684\u6570\u636e\u6a21\u578b/\u7b80\u7248\u6587\u4ef6\u7cfb\u7edf","text":"<p>ZooKeeper \u7ef4\u62a4\u4e00\u4e2a\u7c7b\u4f3c\u4e8e Unix \u6587\u4ef6\u7cfb\u7edf\u7684\u6811\u5f62\u5c42\u6b21\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u53eb\u4e00\u4e2a <code>znode</code>\uff0c\u5b83\u65e2\u53ef\u4ee5\u662f\u76ee\u5f55\uff0c\u4e5f\u53ef\u4ee5\u5b58\u653e\u5c11\u91cf\u6570\u636e\u3002</p> <p>ZooKeeper \u4e2d\u7684 <code>znode</code> \u6709 4 \u79cd\uff1a</p> <ul> <li><code>PERSISTENT</code></li> <li><code>PERSISTENT_SEQUENTIAL</code></li> <li><code>EPHEMERAL</code></li> <li><code>EPHEMERAL_SEQUENTIAL</code></li> </ul> <p></p> <p>\u6301\u4e45\u8282\u70b9\u548c\u4e34\u65f6\u8282\u70b9\u7684\u533a\u522b\u662f\uff1a\u6301\u4e45\u8282\u70b9\u521b\u5efa\u540e\u5728\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u540e\u4e0d\u4f1a\u88ab\u5220\u9664\uff0c\u800c\u4e34\u65f6\u8282\u70b9\u521b\u5efa\u540e\u5728\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u540e\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\u3002</p> <p>\u987a\u5e8f\u8282\u70b9\u6307\u7684\u662f ZooKeeper \u4f1a\u81ea\u52a8\u4e3a\u521b\u5efa\u7684\u8282\u70b9\u540d\u79f0\u540e\u52a0\u4e0a\u6570\u5b57\u7f16\u53f7\uff0c\u7ef4\u6301\u5176\u521b\u5efa\u65f6\u7684\u987a\u5e8f\u3002</p> <p>\u90a3\u8fd9\u4e9b\u8282\u70b9\u7c7b\u578b\u6709\u4ec0\u4e48\u7528\u5462\uff1f</p> <p>\u9996\u5148\u6765\u770b\u6301\u4e45\u8282\u70b9\u3002\u8fd9\u4e2a\u6211\u89c9\u5f97\u5982\u679c\u662f\u505a\u5143\u6570\u636e\u5b58\u50a8\uff0c\u90a3\u6301\u4e45\u8282\u70b9\u5c31\u662f\u9996\u9009\u3002\u6bd4\u5982 Kafka \u521b\u5efa\u4e86\u4e00\u4e2a topic\uff0c\u7528 ZooKeeper \u6765\u7ba1\u7406\u5143\u6570\u636e\uff0ctopic \u4e5f\u662f\u5176\u4e2d\u4e4b\u4e00\uff0c\u90a3\u5982\u679c\u4e0d\u7528\u6301\u4e45\u8282\u70b9\uff0c\u7528\u4e34\u65f6\u8282\u70b9\u7684\u8bdd\uff0c\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u540e topic \u5c31\u6d88\u5931\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u662f\u505a\u5143\u6570\u636e\u5b58\u50a8\u90a3\u4e00\u5b9a\u662f\u6301\u4e45\u8282\u70b9\u3002</p> <p>\u5176\u6b21\u6765\u770b\u4e34\u65f6\u8282\u70b9\u3002\u5982\u679c\u662f\u505a\u5206\u5e03\u5f0f\u534f\u8c03\u548c\u901a\u77e5\uff0c\u90a3\u7528\u4e34\u65f6\u8282\u70b9\u7684\u6bd4\u8f83\u591a\u3002\u6bd4\u5982\uff1a\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u8282\u70b9\uff0c\u7136\u540e\u5ba2\u6237\u7aef\u6765\u76d1\u542c\u8fd9\u4e2a\u4e34\u65f6\u8282\u70b9\u7684\u53d8\u5316\uff0c\u5982\u679c\u6211\u65ad\u5f00\u8fde\u63a5\u4e86\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u4e34\u65f6\u8282\u70b9\u4f1a\u6d88\u5931\uff0c\u6b64\u65f6\u76d1\u542c\u8fd9\u4e2a\u4e34\u65f6\u8282\u70b9\u7684\u5ba2\u6237\u7aef\u4f1a\u901a\u8fc7 Watcher \u673a\u5236\u611f\u77e5\u5230\u53d8\u5316\u3002</p> <p>\u6700\u540e\u770b\u4e0b\u4e34\u65f6\u987a\u5e8f\u8282\u70b9\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u5728\u5206\u5e03\u5f0f\u9501\u7684\u9886\u57df\uff0c \u5728\u52a0\u9501\u7684\u65f6\u5019\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u987a\u5e8f\u8282\u70b9\uff0c\u6bd4\u5982\uff1alock0000000000\uff0c\u8fd9\u65f6\u5019\u5176\u4ed6\u5ba2\u6237\u7aef\u5728\u5c1d\u8bd5\u52a0\u9501\u7684\u65f6\u5019\u4f1a\u7ee7\u7eed\u81ea\u589e\u7f16\u53f7\uff0c\u6bd4\u5982 lock0000000001\uff0c\u4e14\u4f1a\u6ce8\u518c Watcher \u76d1\u542c\u4e0a\u4e00\u4e2a\u4e34\u65f6\u987a\u5e8f\u8282\u70b9\uff0c\u7136\u540e\u5982\u679c\u4f60\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u4e86\uff0c\u7531\u4e8e\u662f\u4e34\u65f6\u8282\u70b9\uff0c\u6240\u4ee5\u4f1a\u81ea\u52a8\u9500\u6bc1\u4f60\u52a0\u7684\u8fd9\u628a\u9501\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u7f16\u53f7\u4e3a lock0000000001 \u7684\u5ba2\u6237\u7aef\u4f1a\u6536\u5230\u901a\u77e5\uff0c\u7136\u540e\u53bb\u5c1d\u8bd5\u6301\u6709\u9501\u3002</p> <p>ZooKeeper \u4e3a\u4ec0\u4e48\u8bbe\u7f6e\u4e34\u65f6\u8282\u70b9\u548c\u4e34\u65f6\u6709\u5e8f\u8282\u70b9\uff1f</p> <ul> <li> <p>\u4e34\u65f6\u8282\u70b9\u7684\u751f\u547d\u5468\u671f\u4e0e\u521b\u5efa\u5b83\u7684\u5ba2\u6237\u7aef\u4f1a\u8bdd\u76f8\u5173\u8054\uff0c\u5f53\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u65f6\uff0c\u4e34\u65f6\u8282\u70b9\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\u3002\u800c\u987a\u5e8f\u8282\u70b9\u53ef\u4ee5\u901a\u8fc7\u7f16\u53f7\u6765\u786e\u5b9a\u5176\u8282\u70b9\u7684\u521b\u5efa\u987a\u5e8f\u3002\u8fd9\u4e24\u4e2a\u7279\u70b9\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u4e00\u4e9b\u5206\u5e03\u5f0f\u7684\u7279\u6027\u3002</p> </li> <li> <p>\u8bbe\u8ba1\u4e34\u65f6\u8282\u70b9\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u4e2d\u72ec\u5360\u9501\u7684\u673a\u5236\u3002\u540c\u65f6\u6709\u6765\u81ea\u591a\u4e2a\u5ba2\u6237\u7aef\u7684\u4e8b\u52a1\u8bf7\u6c42\uff0cZooKeeper \u8981\u6c42\u591a\u4e2a\u5ba2\u6237\u7aef\u540c\u65f6\u521b\u5efa\u76f8\u540c\u7684\u8282\u70b9\uff0c\u800c ZK \u4e0d\u5141\u8bb8\u8282\u70b9\u91cd\u540d\uff0c\u5bfc\u81f4\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u5373\u6700\u7ec8\u521b\u5efa\u597d\u8282\u70b9\u7684\u90a3\u4e2a\u5ba2\u6237\u7aef\u5c31\u76f8\u5f53\u4e8e\u83b7\u53d6\u5230\u4e86\u8fd9\u628a\u9501\u3002\u540c\u65f6\u4e34\u65f6\u8282\u70b9\u80fd\u4fdd\u8bc1\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u65f6\u8282\u70b9\u4f1a\u81ea\u52a8\u88ab\u5220\u9664\uff0c\u5c31\u76f8\u5f53\u4e8e\u91ca\u653e\u4e86\u9501\u3002</p> </li> <li> <p>\u8bbe\u8ba1\u4e34\u65f6\u6709\u5e8f\u8282\u70b9\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e8b\u52a1\u7684\u6709\u5e8f\u6027\u3002\u591a\u4e2a\u5ba2\u6237\u7aef\u901a\u8fc7\u5728\u67d0\u4e2a\u8282\u70b9\u4e0b\u521b\u5efa\u4e34\u65f6\u6709\u5e8f\u8282\u70b9\uff0cZooKeeper \u6bcf\u6b21\u8ba9\u5e8f\u53f7\u6700\u5c0f\u7684\u8282\u70b9\u83b7\u53d6\u9501\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u4e8b\u52a1\u7684\u5168\u5c40\u65f6\u5e8f\u3002</p> </li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_6","title":"ZooKeeper \u96c6\u7fa4\u7684\u67b6\u6784/\u89d2\u8272","text":"<p>ZooKeeper \u662f\u7ecf\u5178\u7684\u4e3b\u4ece\u67b6\u6784\uff1a</p> <p>Leader\uff1a</p> <ul> <li>\u5904\u7406\u4e8b\u52a1\u8bf7\u6c42\uff08\u5199\u64cd\u4f5c\uff09\uff1aLeader \u8d1f\u8d23\u5904\u7406\u6240\u6709\u7684\u5199\u64cd\u4f5c\u8bf7\u6c42\uff0c\u5305\u62ec\u521b\u5efa\u3001\u66f4\u65b0\u548c\u5220\u9664\u8282\u70b9\u7b49\u3002\u5f53\u5ba2\u6237\u7aef\u53d1\u9001\u5199\u8bf7\u6c42\u65f6\uff0cLeader \u63a5\u53d7\u8bf7\u6c42\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u4e8b\u52a1\uff0c\u7136\u540e\u5c06\u4e8b\u52a1\u5e7f\u64ad\u7ed9 Followers\u3002</li> <li>\u4fdd\u6301\u96c6\u7fa4\u72b6\u6001\u4e00\u81f4\uff1aLeader \u8d1f\u8d23\u4fdd\u6301\u96c6\u7fa4\u7684\u72b6\u6001\u4e00\u81f4\u6027\u3002\u5b83\u901a\u8fc7\u5185\u90e8\u7684\u4e00\u81f4\u6027\u534f\u8bae\uff08\u5982 ZAB \u534f\u8bae\uff09\u6765\u786e\u4fdd\u5199\u64cd\u4f5c\u7684\u987a\u5e8f\u4e00\u81f4\u6027\u548c\u7ebf\u6027\u5316\u3002</li> </ul> <p>Follower\uff1a</p> <ul> <li>\u63d0\u4f9b\u8bfb\u64cd\u4f5c\u670d\u52a1\uff1aFollower \u4e3b\u8981\u63d0\u4f9b\u8bfb\u64cd\u4f5c\u670d\u52a1\u3002\u5f53\u5ba2\u6237\u7aef\u53d1\u9001\u8bfb\u53d6\u8bf7\u6c42\u65f6\uff0cFollower \u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6570\u636e\uff0c\u800c\u4e0d\u9700\u8981\u8fdb\u884c\u590d\u6742\u7684\u4e00\u81f4\u6027\u534f\u8bae\u3002</li> <li>\u8f6c\u53d1\u5199\u8bf7\u6c42\u7ed9 Leader\u3002</li> <li>\u53c2\u4e0e\u9009\u4e3e\u8fc7\u7a0b\uff1a\u5982\u679c\u5f53\u524d\u7684 Leader \u5931\u8d25\uff0cFollower \u53ef\u4ee5\u53c2\u4e0e\u65b0\u7684 Leader \u9009\u4e3e\u8fc7\u7a0b\u3002</li> </ul> <p>Observer\uff1a</p> <ul> <li>\u804c\u8d23\u4e0e Follower \u76f8\u540c\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u63d0\u9ad8\u96c6\u7fa4\u7684\u5e76\u53d1\u8bfb\u80fd\u529b\uff0c\u4f46\u4e0d\u53c2\u4e0e\u9009\u4e3e\u8fc7\u7a0b\u3002</li> </ul> <p></p> <p>\u5ba2\u6237\u7aef\u4f7f\u7528 Zookeeper \u65f6\u4f1a\u8fde\u63a5\u5230\u96c6\u7fa4\u4e2d\u7684\u4efb\u610f\u8282\u70b9\uff0c\u6240\u6709\u7684\u8282\u70b9\u90fd\u80fd\u591f\u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u8bfb\u64cd\u4f5c\uff0c\u4f46\u662f\u5199\u64cd\u4f5c\u90fd\u4f1a\u88ab\u4ece\u8282\u70b9\u8def\u7531\u5230\u4e3b\u8282\u70b9\uff0c\u7531\u4e3b\u8282\u70b9\u8fdb\u884c\u5904\u7406\u3002</p> <p>Zookeeper \u5728\u8bbe\u8ba1\u4e0a\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u7684\u4e24\u4e2a\u57fa\u672c\u7684\u987a\u5e8f\u4fdd\u8bc1\uff0c\u7ebf\u6027\u5199\u548c\u5148\u8fdb\u5148\u51fa\u7684\u5ba2\u6237\u7aef\u987a\u5e8f\uff1a</p> <p></p> <ul> <li>\u7ebf\u6027\u5199\u662f\u6307\u6240\u6709\u66f4\u65b0 Zookeeper \u72b6\u6001\u7684\u8bf7\u6c42\u90fd\u5e94\u8be5\u6309\u7167\u65e2\u5b9a\u7684\u987a\u5e8f\u4e32\u884c\u6267\u884c\uff08\u987a\u5e8f\u4e00\u81f4\u6027\uff09</li> <li>\u5148\u8fdb\u5148\u51fa\u7684\u5ba2\u6237\u7aef\u987a\u5e8f\u662f\u6307\uff0c\u6240\u6709\u5ba2\u6237\u7aef\u53d1\u51fa\u7684\u8bf7\u6c42\u4f1a\u6309\u7167\u53d1\u51fa\u7684\u987a\u5e8f\u6267\u884c</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper-watcher","title":"ZooKeeper \u7684 Watcher \u76d1\u542c\u673a\u5236","text":"<p>\u5ba2\u6237\u7aef\u6ce8\u518c\u76d1\u542c\u5b83\u5173\u5fc3\u7684 <code>znode</code> \u8282\u70b9\uff0c\u5f53\u8282\u70b9\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff08<code>NodeCreated</code>, <code>NodeDeleted</code>, <code>NodeDataChanged</code>, <code>NodeChildChanged</code>\uff09\u65f6\uff08\u8282\u70b9\u7684\u589e\u5220\u6539\u3001\u5b50\u8282\u70b9\u53d8\u5316\uff09\uff0cZooKeeper \u4f1a\u4e3b\u52a8\u901a\u77e5\u5ba2\u6237\u7aef\u3002</p> <p>Watcher \u76d1\u542c\u7684\u6d41\u7a0b</p> <ul> <li>\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u6ce8\u518c Watcher \u76d1\u542c</li> <li>\u5ba2\u6237\u7aef\u4fdd\u5b58 Watcher \u5bf9\u8c61\u5230\u672c\u5730\u7684 WatchManager \u4e2d</li> <li>\u670d\u52a1\u7aef Watcher \u4e8b\u4ef6\u89e6\u53d1\u540e\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u901a\u77e5\uff0c\u4ece WatchManager \u4e2d\u53d6\u51fa\u5bf9\u5e94 Watcher \u5bf9\u8c61\u6267\u884c\u56de\u8c03\u903b\u8f91</li> </ul> <p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 Watcher \u673a\u5236\uff1f</p> <p>\u4fdd\u8bc1\u5b9e\u65f6\u6027\uff0c\u907f\u514d\u8f6e\u8be2\u5f00\u9500\u3002</p> <p>\u5e38\u89c1\u7684 2 \u79cd\u901a\u77e5\u673a\u5236\u6a21\u5f0f\uff1a</p> <ul> <li>Pull \u6a21\u5f0f\uff1a\u5ba2\u6237\u7aef\u4e3b\u52a8\u4ece\u670d\u52a1\u7aef\u62c9\u53d6\u6700\u65b0\u7684\u72b6\u6001\uff0c\u8fd9\u79cd\u65b9\u5f0f\u9700\u8981\u5ba2\u6237\u7aef\u4e0d\u65ad\u5730\u901a\u8fc7\u8f6e\u8be2\u7684\u65b9\u5f0f\u83b7\u53d6\u670d\u52a1\u7aef\u6700\u65b0\u7684\u72b6\u6001</li> <li>Push \u6a21\u5f0f\uff1a\u670d\u52a1\u7aef\u4e3b\u52a8\u5411\u5ba2\u6237\u7aef\u63a8\u9001\u6700\u65b0\u7684\u72b6\u6001\uff0c\u76f8\u6bd4\u4e8e pull \u6a21\u5f0f\uff0cpush \u6a21\u5f0f\u80fd\u591f\u4fdd\u8bc1\u5ba2\u6237\u7aef\u6570\u636e\u7684\u5b9e\u65f6\u6027\uff0c\u540c\u65f6\u907f\u514d\u8f6e\u8be2\u7684\u5f00\u9500</li> </ul> <p>Watcher \u5177\u4f53\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f</p> <p>ZooKeeper \u7684\u6ce8\u518c\u76d1\u542c\u673a\u5236\u662f\u901a\u8fc7\u5411 ZooKeeper \u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u65f6\u9644\u52a0\u4e00\u4e2a Watcher \u5bf9\u8c61\u6765\u5b9e\u73b0\u7684\uff08\u547d\u4ee4\u884c\u662f\u52a0 -w\uff09\u3002\u5f53\u8282\u70b9\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0cZooKeeper \u4f1a\u901a\u77e5\u4e0e\u8be5\u8282\u70b9\u5173\u8054\u7684 Watcher\uff0c\u4ece\u800c\u89e6\u53d1\u76f8\u5e94\u7684\u56de\u8c03\u903b\u8f91\u3002</p> <p>\u4ee5\u4e0b\u662f\u5728 ZooKeeper \u4e2d\u6ce8\u518c Watcher \u7684\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u521b\u5efa ZooKeeper \u8fde\u63a5\uff1a\u9996\u5148\uff0c\u521b\u5efa\u4e0e ZooKeeper \u670d\u52a1\u5668\u7684\u8fde\u63a5\u3002</p> </li> <li> <p>\u6ce8\u518c Watcher\uff1a\u4e00\u65e6\u4e0e ZooKeeper \u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>exists()</code>, <code>getData()</code>, <code>getChildren()</code> \u7b49\u65b9\u6cd5\u6765\u521b\u5efa\u8282\u70b9\u6216\u83b7\u53d6\u8282\u70b9\u6570\u636e\uff0c\u5e76\u5728\u8fd9\u4e9b\u65b9\u6cd5\u7684\u53c2\u6570\u4e2d\u4f20\u9012\u4e00\u4e2a Watcher \u5bf9\u8c61\u3002\u8fd9\u6837\uff0c\u5f53\u8282\u70b9\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0cZooKeeper \u670d\u52a1\u5668\u4f1a\u53d1\u9001\u901a\u77e5\u7ed9\u8be5\u8282\u70b9\u4e0a\u6ce8\u518c\u7684 Watcher\u3002</p> </li> <li> <p>\u5904\u7406 Watcher \u4e8b\u4ef6\uff1a\u5728 Watcher \u5bf9\u8c61\u4e2d\uff0c\u5b9e\u73b0 <code>process()</code> \u65b9\u6cd5\u6765\u5904\u7406 Watcher \u4e8b\u4ef6\u3002\u5f53\u8282\u70b9\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0cZooKeeper \u670d\u52a1\u5668\u4f1a\u8c03\u7528\u6ce8\u518c\u7684 Watcher \u7684 <code>process()</code> \u65b9\u6cd5\uff0c\u5e76\u4f20\u9012\u76f8\u5e94\u7684\u4e8b\u4ef6\u7c7b\u578b\uff08\u4f8b\u5982\u8282\u70b9\u521b\u5efa\u3001\u6570\u636e\u66f4\u65b0\u3001\u8282\u70b9\u5220\u9664\u7b49\uff09\u3002</p> </li> <li> <p>\u91cd\u65b0\u6ce8\u518c Watcher\uff1a\u4e00\u65e6 Watcher \u4e8b\u4ef6\u88ab\u89e6\u53d1\u5e76\u5904\u7406\u5b8c\u6bd5\uff0c\u53ef\u4ee5\u9009\u62e9\u91cd\u65b0\u6ce8\u518c Watcher \u6765\u7ee7\u7eed\u76d1\u542c\u8282\u70b9\u7684\u53d8\u5316\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5728 <code>process()</code> \u65b9\u6cd5\u4e2d\u518d\u6b21\u8c03\u7528\u76f8\u5e94\u7684\u8282\u70b9\u64cd\u4f5c\u65b9\u6cd5\u5e76\u4f20\u9012\u76f8\u540c\u7684 Watcher \u5bf9\u8c61\u6765\u5b9e\u73b0\u3002</p> </li> </ol> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cZooKeeper \u4e2d\u7684 Watcher \u662f\u4e00\u6b21\u6027\u7684\uff0c\u5373\u5728\u8282\u70b9\u72b6\u6001\u53d8\u5316\u540e\uff0cWatcher \u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21\uff0c\u5e76\u4e14\u5fc5\u987b\u5728\u6bcf\u6b21\u4e8b\u4ef6\u89e6\u53d1\u540e\u91cd\u65b0\u6ce8\u518c\u624d\u80fd\u7ee7\u7eed\u76d1\u542c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u8981\u6301\u7eed\u76d1\u542c\u8282\u70b9\u72b6\u6001\u7684\u53d8\u5316\uff0c\u9700\u8981\u5728\u6bcf\u6b21\u5904\u7406 Watcher \u4e8b\u4ef6\u540e\u91cd\u65b0\u6ce8\u518c Watcher\u3002</p> <p>\u4e0d\u7ba1\u662f\u6ce8\u518c\u76d1\u542c\u5668\u8fd8\u662f\u56de\u8c03\u901a\u77e5\uff0c\u90fd\u9700\u8981\u4e00\u4e2a\u7ba1\u7406\u7ec4\u4ef6\uff0c\u4e5f\u5c31\u662f\u4e13\u95e8\u7ba1\u7406 Watcher \u7684\u7c7b\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a WatchManager\u3002</p> <p>\u8fd9\u4e2a WatchManager \u9700\u8981\u505a\u7684\u4e8b\u60c5\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u4e24\u4ef6\u4e8b\uff1a\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784\u6765\u5b58\u50a8\u8282\u70b9\u548c\u6bcf\u4e00\u4e2a Watcher \u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4ee5\u53ca\u89e6\u53d1 Watcher\u3002</p> <p>\u770b\u5230\u8fd9\u79cd\u7ed3\u6784\uff0c\u8111\u5b50\u91cc\u5e94\u8be5\u7acb\u9a6c\u6761\u4ef6\u53cd\u5c04\u51fa Map \uff0c\u5f88\u5178\u578b\u7684 key-value \u5b58\u50a8\u7ed3\u6784\uff0c\u7531\u4e8e\u6211\u4eec\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u591a\u4e2a Watcher \uff0c\u56e0\u6b64\u6211\u4eec\u7684\u7ed3\u6784\u5e94\u8be5\u662f <code>Map&lt;String, List&lt;Watcher&gt;&gt;</code>\uff0c\u770b\u8d77\u6765\u6070\u4f3c\u5b8c\u7f8e\uff0c\u4f46\u6709\u7455\u75b5\uff0c\u56e0\u4e3a List \u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u91cd\u590d\uff0c\u4f46\u662f\u6bcf\u4e2a Watcher \u5e94\u8be5\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u6362\u6210 Set\uff0c\u6700\u7ec8\u7684\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>public class WatchManager {\n    /*\n     * key\uff1a\u6570\u636e\u8282\u70b9\u8def\u5f84\uff0cvalue\uff1a\u5ba2\u6237\u7aef\u8fde\u63a5\u7684\u96c6\u5408\n     * \u6709\u4e86\u8fd9\u4e2a\u7ed3\u6784\uff0c\u5f53\u8282\u70b9\u6709\u53d8\u52a8\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ecemap\u91ccget\u51fa\u6240\u6709\u76d1\u542c\u6b64\u8282\u70b9\u7684Watcher\u96c6\u5408\uff0c\u7136\u540efor\u5faa\u73af\u904d\u5386\u9010\u4e2a\u901a\u77e5\n     */\n    private final HashMap&lt;String, HashSet&lt;Watcher&gt;&gt; watchTable = new HashMap&lt;String, HashSet&lt;Watcher&gt;&gt;();\n\n    /*\n     * \u6dfb\u52a0Watcher\n     */\n    public synchronized boolean addWatch(String path, Watcher watcher) {\n        Set set = new HashSet&lt;&gt;(4);\n        // path\u662f\u8282\u70b9\uff0cset\u7684\u662fwatcher\n        watchTable.put(path, list);\n    }\n\n    /*\n     * \u79fb\u9664Watcher\n     */\n    public synchronized boolean removeWatcher(String path, Watcher watcher) {\n        Set&lt;Watcher&gt; list = watchTable.get(path);\n        if (list != null) {\n            list.remove(watcher)\n        }\n    }\n\n    /*\n     * \u89e6\u53d1Watcher\n     */\n    public WatcherOrBitSet triggerWatch(String path, EventType type) {\n        for (Watcher watcher : watchTable.get(path)) {\n            watcher.process(type);\n        }\n    }\n}\n</code></pre>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_7","title":"ZooKeeper \u7684\u8bfb\u5199\u6d41\u7a0b","text":"<p>\u8bfb\u6d41\u7a0b\uff1a</p> <ul> <li>\u5ba2\u6237\u7aef\u5148\u4e0e\u67d0\u4e2a ZooKeeper \u670d\u52a1\u5668\u5efa\u7acb Session</li> <li>\u76f4\u63a5\u4ece\u8be5\u670d\u52a1\u5668\u8bfb\u53d6\u6570\u636e\uff0c\u8fd4\u56de\u5ba2\u6237\u7aef\u5373\u53ef\uff08ZooKeeper \u7684\u5355\u4e00\u89c6\u56fe\u7279\u70b9\uff09</li> <li>\u5173\u95ed Session</li> </ul> <p>\u5199\u6d41\u7a0b\uff1a</p> <p>ZooKeeper \u5199\u6570\u636e\u7684\u6d41\u7a0b\u7c7b\u4f3c\u4e8e 2PC\u3002</p> <p>\u9996\u5148\uff0c\u5982\u679c\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u8282\u70b9\u4e0d\u662f Leader\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u4f1a\u5c06\u5199\u8bf7\u6c42\u8f6c\u53d1\u5230 Leader\u3002</p> <ul> <li>Leader \u5c06\u5199\u8bf7\u6c42\u8f6c\u6362\u4e3a\u4e00\u4e2a proposal\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u4e14\u9012\u589e\u4e8b\u52a1 ID\uff08ZXID\uff09</li> <li>Leader \u628a proposal \u653e\u5165\u4e00\u4e2a FIFO \u961f\u5217\uff0c\u53d1\u9001\u7ed9 Follower</li> <li>\u6536\u5230 proposal \u7684 Follower \u5c06 proposal \u5199\u5165\u672c\u5730\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a ack \u7ed9 Leader</li> <li>\u5f53 Leader \u53d1\u73b0\u6536\u5230\u7684 ack \u8fc7\u534a\u540e\uff0c\u4f1a commit \u672c\u5730\u7684 proposal\uff0c\u540c\u65f6\u5f00\u59cb\u5e7f\u64ad commit \u8bf7\u6c42\u7ed9\u6240\u6709\u7684 Follower\uff0cFollower \u6536\u5230 commit \u8bf7\u6c42\u540e\uff0c\u4f1a\u5b8c\u6210\u5404\u81ea\u7684\u4e8b\u52a1\u63d0\u4ea4</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper-leader","title":"ZooKeeper \u7684 Leader \u9009\u4e3e","text":"<p>ZooKeeper \u5728\u4ec0\u4e48\u65f6\u5019\u4f1a\u8fdb\u884c Leader \u9009\u4e3e\uff1f</p> <ul> <li>\u96c6\u7fa4\u542f\u52a8\u65f6</li> <li>\u8fd0\u884c\u4e2d Leader \u5d29\u6e83\u65f6</li> </ul> <p>\u4ece 3.4.0 \u7248\u672c\u5f00\u59cb\uff0c\u53ea\u4fdd\u7559\u4e86 \u00a0TCP \u7248\u672c\u7684 FastLeaderElection\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#leader","title":"\u96c6\u7fa4\u542f\u52a8\u65f6\u7684 Leader \u9009\u4e3e","text":"<p>\u6b65\u9aa4\u4e00\uff1a\u6bcf\u4e2a Server \u4f1a\u53d1\u51fa\u4e00\u4e2a\u6295\u7968</p> <p>\u521d\u59cb\u60c5\u51b5\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u5c06\u81ea\u5df1\u4f5c\u4e3a Leader \u6765\u8fdb\u884c\u6295\u7968\u3002\u6bcf\u6b21\u6295\u7968\u5305\u542b\u7684\u6700\u57fa\u672c\u7684\u5143\u7d20\u5305\u62ec\uff1a\u6240\u63a8\u4e3e\u7684\u670d\u52a1\u5668\u7684 <code>myid</code> \u548c <code>ZXID</code> \uff0c\u4ee5 <code>(myid, ZXID)</code> \u7684\u5f62\u5f0f\u8868\u793a\u3002</p> <p>\u6b65\u9aa4\u4e8c\uff1a\u63a5\u6536\u6765\u81ea\u5404\u4e2a\u670d\u52a1\u5668\u7684\u6295\u7968</p> <p>\u6bcf\u4e2a\u670d\u52a1\u5668\u90fd\u4f1a\u5e7f\u64ad\u81ea\u5df1\u7684\u6295\u7968\u5e76\u63a5\u6536\u6765\u81ea\u5176\u4ed6\u670d\u52a1\u5668\u7684\u6295\u7968\uff0c\u5bf9\u4e8e\u63a5\u6536\u5230\u7684\u6295\u7968\uff0c\u5224\u65ad\u8be5\u6295\u7968\u7684\u6709\u6548\u6027\uff0c\u5305\u62ec\u662f\u5426\u662f\u672c\u8f6e\u6295\u7968\uff0c\u662f\u5426\u6765\u81ea LOOKING \u72b6\u6001\u7684\u670d\u52a1\u5668\u3002</p> <p>\u6b65\u9aa4\u4e09\uff1a\u5904\u7406\u6295\u7968</p> <p>\u63a5\u6536\u5230\u6295\u7968\u540e\uff0c\u9700\u8981\u5c06\u522b\u4eba\u7684\u6295\u7968\u548c\u81ea\u5df1\u7684\u6295\u7968\u8fdb\u884c\u6bd4\u8f83\u3002</p> <ul> <li>\u4f18\u5148\u68c0\u67e5 <code>ZXID</code> \uff0c<code>ZXID</code> \u8f83\u5927\u7684\u670d\u52a1\u5668\u4f18\u5148\u4f5c\u4e3a Leader\uff08\u56e0\u4e3a ZXID \u8d8a\u5927\uff0c\u6570\u636e\u8d8a\u65b0\uff0c\u8d8a\u80fd\u591f\u4fdd\u8bc1\u6570\u636e\u7684\u6062\u590d\uff09</li> <li>\u5982\u679c <code>ZXID</code> \u76f8\u540c\uff0c\u90a3\u4e48 <code>myid</code> \u8f83\u5927\u7684\u670d\u52a1\u5668\u4f5c\u4e3a Leader</li> <li>\u91cd\u65b0\u5c06\u66f4\u65b0\u540e\u7684\u6295\u7968\u53d1\u51fa\u53bb</li> </ul> <p>\u6ce8\uff1aZXID = Epoch + Counter</p> <p>\u6b65\u9aa4\u56db\uff1a\u7edf\u8ba1\u6295\u7968</p> <p>\u6bcf\u6b21\u6295\u7968\u540e\uff0c\u670d\u52a1\u5668\u90fd\u4f1a\u7edf\u8ba1\u6240\u6709\u6295\u7968\uff0c\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u6709\u8fc7\u534a\u7684\u673a\u5668\u63a5\u6536\u5230\u76f8\u540c\u7684\u6295\u7968\u4fe1\u606f\u3002</p> <p>\u6b65\u9aa4\u4e94\uff1a\u6539\u53d8\u670d\u52a1\u5668\u72b6\u6001</p> <p>\u4e00\u65e6\u786e\u5b9a\u4e86 Leader\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u66f4\u65b0\u81ea\u5df1\u7684\u72b6\u6001\uff1a\u5982\u679c\u662f Follower \u5c31\u53d8\u66f4\u4e3a FOLLOWING\uff0c\u5982\u679c\u662f Leader \u5c31\u53d8\u66f4\u4e3a LEADING\u3002</p> <p>3 \u4e2a\u8282\u70b9\u540c\u65f6\u542f\u52a8</p> <p></p> \u670d\u52a1 \u7968\u7bb1 Zookeeper1 (1,1)\u3001(2,2)\u3001(3,3)\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4eba\u90fd\u53ea\u6709 1 \u7968\uff0c\u6301\u5e73 Zookeeper2 (1,1)\u3001(2,2)\u3001(3,3)\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4eba\u90fd\u53ea\u6709 1 \u7968\uff0c\u6301\u5e73 Zookeeper3 (1,1)\u3001(2,2)\u3001(3,3)\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4eba\u90fd\u53ea\u6709 1 \u7968\uff0c\u6301\u5e73 <p></p> \u670d\u52a1 \u7968\u7bb1 Zookeeper1 (1,3)\u3001(2,3)\u3001(3,3)\uff0c\u4e09\u4e2a\u8282\u70b9\u90fd\u6295\u9012\u7ed9\u4e86 Zookeeper3 Zookeeper2 (1,3)\u3001(2,3)\u3001(3,3)\uff0c\u4e09\u4e2a\u8282\u70b9\u90fd\u6295\u9012\u7ed9\u4e86 Zookeeper3 Zookeeper3 (1,3)\u3001(2,3)\u3001(3,3)\uff0c\u4e09\u4e2a\u8282\u70b9\u90fd\u6295\u9012\u7ed9\u4e86 Zookeeper3 <p></p> <p>\u5982\u679c 3 \u4e2a\u8282\u70b9\u6309\u987a\u5e8f\u542f\u52a8</p> <p>\u6309\u987a\u5e8f\u542f\u52a8\uff0c\u4e5f\u5c31\u662f\u5148\u542f\u52a8 Zookeeper1\uff0c\u7136\u540e Zookeeper1 \u5f00\u59cb\u5bfb\u4e3b\uff0c\u53d1\u73b0\u53ea\u6709\u81ea\u5df1\uff0c\u4e0d\u80fd\u6784\u6210\u96c6\u7fa4\uff0c\u6240\u4ee5\u4e0d\u80fd\u5347\u7ea7\u4e3a Leader\uff1b\u8fd9\u65f6\u5019 Zookeeper2 \u542f\u52a8\u4e86\uff0c\u4e5f\u5f00\u59cb\u5bfb\u4e3b\u3001\u6295\u7968\u3002\u5f00\u59cb\u90fd\u4f1a\u6295\u7ed9\u81ea\u5df1\uff0c\u4f46\u662f\u7b2c\u4e8c\u8f6e\u7684\u65f6\u5019 Zookeeper1 \u53d1\u73b0 Zookeeper2 \u7684 myid \u6700\u5927\uff0c\u4f1a\u628a\u7968\u6295\u7ed9 Zookeeper2\uff0c\u90a3\u8fd9\u65f6\u5019\u7684\u7ed3\u679c\u5c31\u662f Zookeeper1 \u96f6\u7968\u3001Zookeeper2 \u4e24\u7968\u3002\u6309\u7167\u8fc7\u534a\u539f\u5219\uff0c\u5df2\u7ecf\u7b26\u5408\u5347\u7ea7\u4e3a Leader \u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019 Zookeeper2 \u5c31\u5df2\u7ecf\u88ab\u9009\u4e3a Leader \u4e86\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#leader_1","title":"\u8fd0\u884c\u4e2d Leader \u5d29\u6e83\u65f6\u7684\u9009\u4e3e","text":"<ul> <li> <p>\u72b6\u6001\u53d8\u66f4\u3002Leader \u6545\u969c\u540e\uff0c\u4f59\u4e0b\u7684\u975e Observer\u00a0 \u670d\u52a1\u5668\u90fd\u4f1a\u5c06\u81ea\u5df1\u7684\u670d\u52a1\u5668\u72b6\u6001\u53d8\u66f4\u4e3a LOOKING\uff0c\u7136\u540e\u5f00\u59cb\u8fdb\u5165 Leader \u9009\u4e3e\u8fc7\u7a0b\u3002</p> </li> <li> <p>\u6bcf\u4e2a Server \u4f1a\u53d1\u51fa\u6295\u7968\u3002</p> </li> <li> <p>\u63a5\u6536\u6765\u81ea\u5404\u4e2a\u670d\u52a1\u5668\u7684\u6295\u7968\uff0c\u5982\u679c\u5176\u4ed6\u670d\u52a1\u5668\u7684\u6570\u636e\u6bd4\u81ea\u5df1\u7684\u65b0\u4f1a\u6539\u6295\u7968\u3002</p> </li> <li> <p>\u5904\u7406\u548c\u7edf\u8ba1\u6295\u7968\uff0c\u6bcf\u4e00\u8f6e\u6295\u7968\u7ed3\u675f\u540e\u90fd\u4f1a\u7edf\u8ba1\u6295\u7968\uff0c\u8d85\u8fc7\u534a\u6570\u5373\u53ef\u5f53\u9009\u3002</p> </li> <li> <p>\u6539\u53d8\u670d\u52a1\u5668\u7684\u72b6\u6001\uff0c\u5ba3\u5e03\u5f53\u9009\u3002</p> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_8","title":"ZooKeeper \u4e3b\u4ece\u72b6\u6001\u540c\u6b65","text":"<p>ZooKeeper \u662f\u901a\u8fc7 ZAB \u534f\u8bae\u5b9e\u73b0\u4e3b\u4ece\u72b6\u6001\u540c\u6b65\u7684\uff1a</p> <ul> <li>Leader \u6b63\u5e38\u5de5\u4f5c\u65f6\uff0c\u4e3b\u4ece\u540c\u6b65\u4f7f\u7528\u6d88\u606f\u5e7f\u64ad\u6a21\u5f0f</li> <li>Leader \u5d29\u6e83\u65f6\uff0c\u4e3b\u4ece\u540c\u6b65\u4f7f\u7528\u5d29\u6e83\u6062\u590d\u6a21\u5f0f\uff1a\u5148\u9009\u65b0 Leader\uff0c\u518d\u8fdb\u884c\u540c\u6b65</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#_2","title":"\u6d88\u606f\u5e7f\u64ad\u6a21\u5f0f\u4e0b\u7684\u72b6\u6001\u540c\u6b65","text":"<p>\u7c7b\u4f3c\u4e8e 2PC\u3002</p> <p>\u9996\u5148\uff0c\u5982\u679c\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u8282\u70b9\u4e0d\u662f Leader\uff0c\u90a3\u4e48\u8be5\u8282\u70b9\u4f1a\u5c06\u5199\u8bf7\u6c42\u8f6c\u53d1\u5230 Leader\u3002</p> <ul> <li>Leader \u5c06\u5199\u8bf7\u6c42\u8f6c\u6362\u4e3a\u4e00\u4e2a proposal\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u4e14\u9012\u589e\u4e8b\u52a1 ID\uff08ZXID\uff09</li> <li>Leader \u628a proposal \u653e\u5165\u4e00\u4e2a FIFO \u961f\u5217\uff0c\u53d1\u9001\u7ed9 Follower</li> <li>\u6536\u5230 proposal \u7684 Follower \u5c06 proposal \u5199\u5165\u672c\u5730\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a ack \u7ed9 Leader</li> <li>\u5f53 Leader \u53d1\u73b0\u6536\u5230\u7684 ack \u8fc7\u534a\u540e\uff0c\u4f1a commit \u672c\u5730\u7684 proposal\uff0c\u540c\u65f6\u5f00\u59cb\u5e7f\u64ad commit \u8bf7\u6c42\u7ed9\u6240\u6709\u7684 Follower\uff0cFollower \u6536\u5230 commit \u8bf7\u6c42\u540e\uff0c\u4f1a\u5b8c\u6210\u5404\u81ea\u7684\u4e8b\u52a1\u63d0\u4ea4</li> </ul> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#_3","title":"\u5d29\u6e83\u6062\u590d\u6a21\u5f0f\u4e0b\u7684\u72b6\u6001\u540c\u6b65","text":"<p>\u8be6\u89c1\u4e0b\u9762\u7684 \u5d29\u6e83\u6062\u590d\u6a21\u5f0f\u4e0b\u7684\u72b6\u6001\u540c\u6b65</p> <ul> <li>\u5dee\u5f02\u5316\u540c\u6b65 DIFF</li> <li>\u4ec5\u56de\u6eda\u540c\u6b65 TRUNC</li> <li>\u5148\u56de\u6eda\u518d\u5dee\u5f02\u5316\u540c\u6b65 TRUNC + DIFF</li> <li>\u5168\u91cf\u540c\u6b65 SNAP</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zab","title":"ZAB \u534f\u8bae","text":"<p>ZAB \u534f\u8bae\uff0c\u5373 Zookeeper \u539f\u5b50\u5e7f\u64ad\u534f\u8bae\uff0c\u4e00\u8a00\u4ee5\u853d\u4e4b\u5c31\u662f\u4e3a ZooKeeper \u4e13\u95e8\u8bbe\u8ba1\u7684\u4e00\u79cd\u652f\u6301\u5d29\u6e83\u6062\u590d\u548c\u6d88\u606f\u5e7f\u64ad\u7684\u534f\u8bae\u3002\u57fa\u4e8e\u8be5\u534f\u8bae\uff0cZooKeeper \u5b9e\u73b0\u4e86\u4e3b\u4ece\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\u3002</p> <p>ZAB \u534f\u8bae\u5305\u542b\u4e24\u79cd\u57fa\u672c\u6a21\u5f0f\uff0c\u5206\u522b\u662f\u5d29\u6e83\u6062\u590d\u548c\u6d88\u606f\u5e7f\u64ad\u3002</p> <p>\u5f53\u6574\u4e2a\u96c6\u7fa4\u5728\u542f\u52a8\u65f6\uff0c\u6216\u8005\u5f53 leader \u8282\u70b9\u51fa\u73b0\u7f51\u7edc\u4e2d\u65ad\u3001 \u5d29\u6e83\u7b49\u60c5\u51b5\u65f6\uff0cZAB \u534f\u8bae\u5c31\u4f1a\u8fdb\u5165\u6062\u590d\u6a21\u5f0f\u5e76\u9009\u4e3e\u4ea7\u751f\u65b0\u7684 leader\uff0c\u5f53 leader \u670d\u52a1\u5668\u9009\u4e3e\u51fa\u6765\u540e\uff0c\u5e76\u4e14\u96c6\u7fa4\u4e2d\u6709\u8fc7\u534a\u7684\u673a\u5668\u548c\u8be5 leader \u8282\u70b9\u5b8c\u6210\u6570\u636e\u540c\u6b65\u540e(\u540c\u6b65\u6307\u7684\u662f\u6570\u636e\u540c\u6b65\uff0c\u7528\u6765\u4fdd\u8bc1\u96c6\u7fa4\u4e2d\u8fc7\u534a\u7684\u673a\u5668\u80fd\u591f\u548c leader \u670d\u52a1\u5668\u7684\u6570\u636e\u72b6\u6001\u4fdd\u6301\u4e00\u81f4)\uff0cZAB \u534f\u8bae\u5c31\u4f1a\u9000\u51fa\u6062\u590d\u6a21\u5f0f\u3002</p> <p>\u5f53\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u6709\u8fc7\u534a\u7684 follower \u8282\u70b9\u5b8c\u6210\u4e86\u548c leader \u72b6\u6001\u540c\u6b65\u4ee5\u540e\uff0c\u90a3\u4e48\u6574\u4e2a\u96c6\u7fa4\u5c31\u8fdb\u5165\u4e86\u6d88\u606f\u5e7f\u64ad\u6a21\u5f0f\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u5728 leader \u8282\u70b9\u6b63\u5e38\u5de5\u4f5c\u65f6\uff0c\u542f\u52a8\u4e00\u53f0\u65b0\u7684\u670d\u52a1\u5668\u52a0\u5165\u5230\u96c6\u7fa4\uff0c\u90a3\u8fd9\u4e2a\u670d\u52a1\u5668\u4f1a\u76f4\u63a5\u8fdb\u5165\u6570\u636e\u6062\u590d\u6a21\u5f0f\uff0c\u548c leader \u8282\u70b9\u8fdb\u884c\u6570\u636e\u540c\u6b65\u3002\u540c\u6b65\u5b8c\u6210\u540e\u5373\u53ef\u6b63\u5e38\u5bf9\u5916\u63d0\u4f9b\u975e\u4e8b\u52a1\u8bf7\u6c42\u7684\u5904\u7406\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#_4","title":"\u6d88\u606f\u5e7f\u64ad","text":"<p>\u6d88\u606f\u5e7f\u64ad\u662f\u4e00\u4e2a\u7c7b\u4f3c 2PC \u4e24\u9636\u6bb5\u63d0\u4ea4\u7684\u8fc7\u7a0b\u3002\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>Leader \u5c06\u5199\u8bf7\u6c42\u8f6c\u6362\u4e3a\u4e00\u4e2a proposal\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u4e14\u9012\u589e\u4e8b\u52a1 ID\uff08ZXID\uff09</li> <li>Leader \u628a proposal \u653e\u5165\u4e00\u4e2a FIFO \u961f\u5217\uff0c\u53d1\u9001\u7ed9 Follower</li> <li>\u6536\u5230 proposal \u7684 Follower \u5c06 proposal \u5199\u5165\u672c\u5730\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a ack \u7ed9 Leader</li> <li>\u5f53 Leader \u53d1\u73b0\u6536\u5230\u7684 ack \u8fc7\u534a\u540e\uff0c\u4f1a commit \u672c\u5730\u7684 proposal\uff0c\u540c\u65f6\u5f00\u59cb\u5e7f\u64ad commit \u8bf7\u6c42\u7ed9\u6240\u6709\u7684 Follower\uff0cFollower \u6536\u5230 commit \u8bf7\u6c42\u540e\uff0c\u4f1a\u5b8c\u6210\u5404\u81ea\u7684\u4e8b\u52a1\u63d0\u4ea4</li> </ul> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#_5","title":"\u5d29\u6e83\u6062\u590d","text":"<p>\u7531\u4e8e ZAB \u534f\u8bae\u7684\u6d88\u606f\u5e7f\u64ad\u673a\u5236\u53ea\u9700\u8981\u96c6\u7fa4\u4e2d\u8fc7\u534a\u7684\u8282\u70b9\u54cd\u5e94\u5373\u53ef\uff0c\u56e0\u6b64\u65e0\u6cd5\u4fdd\u8bc1 Leader \u5d29\u6e83\u4e4b\u540e\u96c6\u7fa4\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u5d29\u6e83\u6062\u590d\u673a\u5236\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>\u5728\u5d29\u6e83\u6062\u590d\u72b6\u6001\u4e0b ZAB \u534f\u8bae\u9700\u8981\u505a\u4e24\u4ef6\u4e8b\uff0c\u9009\u4e3e\u65b0 Leader \u548c\u6570\u636e\u540c\u6b65\u3002</p> <ul> <li> <p>Leader \u9009\u4e3e\uff1a\u524d\u9762\u5df2\u7ecf\u63d0\u5230\u8fc7\u4e86\u3002</p> </li> <li> <p>\u6570\u636e\u540c\u6b65\uff1a\u770b\u4e0b\u9762\u7684 ZooKeeper \u5d29\u6e83\u6062\u590d\u6a21\u5f0f\u4e0b\u7684\u72b6\u6001\u540c\u6b65</p> </li> </ul> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#zookeeper_9","title":"ZooKeeper \u5d29\u6e83\u6062\u590d\u6a21\u5f0f\u4e0b\u7684\u72b6\u6001\u540c\u6b65","text":"<ul> <li>Zookeeper \u593a\u547d\u8fde\u73af 9 \u95ee - \u827e\u5c0f\u4ed9\u7684\u6587\u7ae0 - \u77e5\u4e4e</li> </ul> <p>Zookeeper \u5728\u9009\u4e3e\u4e4b\u540e\uff0cFollower \u548c Observer\uff08\u7edf\u79f0\u4e3a Learner\uff09\u5c31\u4f1a\u53bb\u5411 Leader \u6ce8\u518c\uff0c\u7136\u540e\u5c31\u4f1a\u5f00\u59cb\u6570\u636e\u540c\u6b65\u7684\u8fc7\u7a0b\u3002\u6570\u636e\u540c\u6b65\u5305\u542b 3 \u4e2a\u4e3b\u8981\u503c\u548c 4 \u79cd\u5f62\u5f0f\u3002</p> <ul> <li><code>PeerLastZxid</code>\uff1aLearner \u670d\u52a1\u5668\u6700\u540e\u5904\u7406\u7684 ZXID</li> <li><code>minCommittedLog</code>\uff1aLeader proposal \u7f13\u5b58\u961f\u5217\u4e2d\u6700\u5c0f\u7684 ZXID</li> <li><code>maxCommittedLog</code>\uff1aLeader proposal \u7f13\u5b58\u961f\u5217\u4e2d\u6700\u5927\u7684 ZXID</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#diff","title":"\u5dee\u5f02\u5316\u540c\u6b65 DIFF","text":"<p>\u5dee\u5f02\u5316\u540c\u6b65\u9002\u7528\u4e8e\u975e Leader \u8282\u70b9\u6570\u636e\u4e0d\u5168\uff0c\u9700\u8981\u4ece Leader \u5904\u83b7\u53d6\u6570\u636e\u8865\u5168\u7684\u60c5\u51b5\u3002</p> <p>\u5982\u679c <code>PeerLastZxid</code> \u5728 <code>minCommittedLog</code> \u548c <code>maxCommittedLog</code> \u4e4b\u95f4\uff0c\u90a3\u4e48\u5219\u8bf4\u660e Learner \u670d\u52a1\u5668\u8fd8\u6ca1\u6709\u5b8c\u5168\u540c\u6b65\u6700\u65b0\u7684\u6570\u636e\u3002</p> <ul> <li>\u9996\u5148 Leader \u5411 Learner \u53d1\u9001 DIFF \u6307\u4ee4\uff0c\u4ee3\u8868\u5f00\u59cb\u5dee\u5f02\u5316\u540c\u6b65\uff0c\u7136\u540e\u628a\u5dee\u5f02\u6570\u636e\uff08\u4ece PeerLastZxid \u5230 maxCommittedLog \u4e4b\u95f4\u7684\u6570\u636e\uff09\u63d0\u8bae proposal \u53d1\u9001\u7ed9 Learner</li> <li>\u53d1\u9001\u5b8c\u6210\u4e4b\u540e\u53d1\u9001\u4e00\u4e2a NEWLEADER \u547d\u4ee4\u7ed9 Learner\uff0c\u540c\u65f6 Learner \u8fd4\u56de ACK \u8868\u793a\u5df2\u7ecf\u5b8c\u6210\u4e86\u540c\u6b65</li> <li>\u63a5\u7740\u7b49\u5f85\u96c6\u7fa4\u4e2d\u8fc7\u534a\u7684 Learner \u54cd\u5e94\u4e86 ACK \u4e4b\u540e\uff0c\u5c31\u53d1\u9001\u4e00\u4e2a UPTODATE \u547d\u4ee4\uff0cLearner \u8fd4\u56de ACK\uff0c\u540c\u6b65\u6d41\u7a0b\u7ed3\u675f</li> </ul> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#trunc","title":"\u4ec5\u56de\u6eda\u540c\u6b65 TRUNC","text":"<p>\u9488\u5bf9 <code>PeerLastZxid</code> \u5927\u4e8e <code>maxCommittedLog</code> \u7684\u573a\u666f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e8b\u52a1\u5c06\u4f1a\u88ab\u56de\u6eda\u5230 <code>maxCommittedLog</code> \u7684\u8bb0\u5f55\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#trunc-diff","title":"\u5148\u56de\u6eda\u518d\u5dee\u5f02\u5316\u540c\u6b65 TRUNC + DIFF","text":"<p>\u8fd9\u4e2a\u8bbe\u7f6e\u9488\u5bf9\u7684\u662f\u4e00\u4e2a\u5f02\u5e38\u7684\u573a\u666f\u3002</p> <p>\u5982\u679c Leader \u521a\u751f\u6210\u4e00\u4e2a proposal\uff0c\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u53d1\u9001\u51fa\u53bb\uff0c\u6b64\u65f6 Leader \u5b95\u673a\uff0c\u91cd\u65b0\u9009\u4e3e\u4e4b\u540e\u4f5c\u4e3a Follower\uff0c\u4f46\u662f\u65b0\u7684 Leader \u6ca1\u6709\u8fd9\u4e2a proposal \u6570\u636e\u3002</p> <p>\u4e3e\u4e2a\u6817\u5b50\uff1a</p> <ul> <li>\u5047\u8bbe\u73b0\u5728\u7684 Leader \u662f A\uff0c<code>minCommittedLog</code> = 1\uff0c<code>maxCommittedLog</code> = 3\uff0c\u521a\u597d\u751f\u6210\u7684\u4e00\u4e2a proposal \u7684 ZXID = 4\uff0c\u7136\u540e\u6302\u4e86\u3002</li> <li>\u91cd\u65b0\u9009\u4e3e\u51fa\u6765\u7684 Leader \u662f B\uff0cB \u4e4b\u540e\u53c8\u5904\u7406\u4e86 2 \u4e2a proposal\uff0c\u7136\u540e <code>minCommittedLog</code> = 1\uff0c<code>maxCommittedLog</code> = 5\u3002</li> <li>\u5047\u8bbe\u6b64\u65f6 A \u6062\u590d\u4e86\uff0c\u9700\u8981\u4e0e B \u8fdb\u884c\u540c\u6b65\uff0c\u4f46\u6b64\u65f6 A \u7684 <code>PeerLastZxid</code> = 4\uff0c\u5728(1,5)\u4e4b\u95f4\u3002</li> <li>\u90a3\u4e48\u8fd9\u4e00\u6761\u53ea\u5b58\u5728\u4e8e A \u7684\u63d0\u8bae\u600e\u4e48\u5904\u7406\uff1f</li> <li>A \u8981\u8fdb\u884c\u4e8b\u52a1\u56de\u6eda\uff0c\u76f8\u5f53\u4e8e\u629b\u5f03\u8fd9\u6761\u6570\u636e\uff0c\u5e76\u4e14\u56de\u6eda\u5230\u6700\u63a5\u8fd1\u4e8e <code>PeerLastZxid</code> \u7684\u4e8b\u52a1\uff0c\u5bf9\u4e8e A \u6765\u8bf4\uff0c\u4e5f\u5c31\u662f <code>PeerLastZxid</code> = 3\u3002\u7136\u540e\u518d\u6267\u884c\u5dee\u5f02\u5316 DIFF \u540c\u6b65\u3002</li> <li>\u6d41\u7a0b\u548c DIFF \u4e00\u81f4\uff0c\u53ea\u662f\u4f1a\u5148\u53d1\u9001\u4e00\u4e2a TRUNC \u547d\u4ee4\uff0c\u7136\u540e\u518d\u6267\u884c\u5dee\u5f02\u5316 DIFF \u540c\u6b65\u3002</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#snap","title":"\u5168\u91cf\u540c\u6b65 SNAP","text":"<p>\u9002\u7528\u4e8e\u4e24\u4e2a\u573a\u666f\uff1a</p> <ul> <li><code>PeerLastZxid</code> \u5c0f\u4e8e <code>minCommittedLog</code></li> <li>\u65b0\u52a0\u5165\u7684\u8282\u70b9</li> </ul> <p>\u8fd9\u4e24\u79cd\u573a\u666f\u4e0b\uff0cLeader \u5c06\u4f1a\u53d1\u9001 SNAP \u547d\u4ee4\uff0c\u628a\u5168\u91cf\u7684\u6570\u636e\u90fd\u53d1\u9001\u7ed9 Learner \u8fdb\u884c\u540c\u6b65\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#_6","title":"\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5","text":"<p>ZooKeeper \u7684\u540c\u6b65\u673a\u5236\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u5417\uff1f</p> <p>\u8fd8\u662f\u4f1a\u5b58\u5728\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6210 3 \u4e2a\u573a\u666f\u6765\u63cf\u8ff0\u8fd9\u4e2a\u95ee\u9898\u3002</p> <ul> <li>\u67e5\u8be2\u4e0d\u4e00\u81f4</li> </ul> <p>\u56e0\u4e3a Zookeeper \u662f\u8fc7\u534a\u6210\u529f\u5373\u4ee3\u8868\u6210\u529f\uff0c\u5047\u8bbe\u6211\u4eec\u6709 5 \u4e2a\u8282\u70b9\uff0c\u5982\u679c 123 \u8282\u70b9\u5199\u5165\u6210\u529f\uff0c\u5982\u679c\u8fd9\u65f6\u5019\u8bf7\u6c42\u8bbf\u95ee\u5230 4 \u6216\u8005 5 \u8282\u70b9\uff0c\u90a3\u4e48\u6709\u53ef\u80fd\u8bfb\u53d6\u4e0d\u5230\u6570\u636e\uff0c\u56e0\u4e3a\u53ef\u80fd\u6570\u636e\u8fd8\u6ca1\u6709\u540c\u6b65\u5230 4\u30015 \u8282\u70b9\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u7b97\u662f\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u5728\u8bfb\u53d6\u524d\u4f7f\u7528 sync \u547d\u4ee4\u3002</p> <ul> <li>Leader \u672a\u53d1\u9001 proposal \u5b95\u673a</li> </ul> <p>Leader \u521a\u751f\u6210\u4e00\u4e2a proposal\uff0c\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u53d1\u9001\u51fa\u53bb\uff0c\u6b64\u65f6 leader \u5b95\u673a\uff0c\u91cd\u65b0\u9009\u4e3e\u4e4b\u540e\u4f5c\u4e3a follower\uff0c\u4f46\u662f\u65b0\u7684 leader \u6ca1\u6709\u8fd9\u4e2a proposal\u3002\u8fd9\u79cd\u573a\u666f\u4e0b\u7684\u65e5\u5fd7\u5c06\u4f1a\u88ab\u4e22\u5f03\u3002</p> <ul> <li>leader \u53d1\u9001 proposal \u6210\u529f\uff0c\u53d1\u9001 commit \u524d\u5b95\u673a</li> </ul> <p>\u5982\u679c\u53d1\u9001 proposal \u6210\u529f\u4e86\uff0c\u4f46\u662f\u5728\u5c06\u8981\u53d1\u9001 commit \u547d\u4ee4\u524d\u5b95\u673a\u4e86\uff0c\u5982\u679c\u91cd\u65b0\u8fdb\u884c\u9009\u4e3e\uff0c\u8fd8\u662f\u4f1a\u9009\u62e9 zxid \u6700\u5927\u7684\u8282\u70b9\u4f5c\u4e3a leader\uff0c\u56e0\u6b64\uff0c\u8fd9\u4e2a\u65e5\u5fd7\u5e76\u4e0d\u4f1a\u88ab\u4e22\u5f03\uff0c\u4f1a\u5728\u9009\u4e3e\u51fa leader \u4e4b\u540e\u91cd\u65b0\u540c\u6b65\u5230\u5176\u4ed6\u8282\u70b9\u5f53\u4e2d\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#paxos","title":"Paxos \u7b97\u6cd5","text":"<p>\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5-Paxos\u3001Raft\u3001ZAB\u3001Gossip - \u65e0\u77e5\u5f71\u7684\u6587\u7ae0 - \u77e5\u4e4e</p> <p>Paxos - \u77e5\u4e4e</p> <p>Paxos \u7b97\u6cd5\uff1a\u4e00\u79cd\u57fa\u4e8e\u6d88\u606f\u4f20\u9012\u4e14\u5177\u6709\u9ad8\u5ea6\u5bb9\u9519\u7279\u6027\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u3002</p> <p>Paxos \u7b97\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\uff1a\u5982\u4f55\u5feb\u901f\u6b63\u786e\u5730\u5728\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5bf9\u67d0\u4e2a\u6570\u636e\u8fbe\u6210\u4e00\u81f4\uff0c\u5e76\u4e14\u4fdd\u8bc1\u4e0d\u8bba\u53d1\u751f\u4efb\u4f55\u5f02\u5e38\uff08\u5982\u673a\u5668\u5b95\u673a\u3001\u7f51\u7edc\u5f02\u5e38\uff09\uff0c\u90fd\u4e0d\u4f1a\u7834\u574f\u6574\u4e2a\u7cfb\u7edf\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u5728 Paxos \u4e2d\uff0c\u5b58\u5728\u4e09\u79cd\u89d2\u8272\uff0c\u5206\u522b\u4e3a\uff1a</p> <ul> <li>Proposer(\u63d0\u8bae\u8005\uff0c\u7528\u6765\u53d1\u51fa\u63d0\u6848 proposal),</li> <li>Acceptor(\u63a5\u53d7\u8005\uff0c\u53ef\u4ee5\u63a5\u53d7\u6216\u62d2\u7edd\u63d0\u6848),</li> <li>Learner(\u5b66\u4e60\u8005\uff0c\u5b66\u4e60\u88ab\u9009\u5b9a\u7684\u63d0\u6848\uff0c\u5f53\u63d0\u6848\u88ab\u8d85\u8fc7\u534a\u6570\u7684 Acceptor \u63a5\u53d7\u540e\u4e3a\u88ab\u6279\u51c6)\u3002</li> </ul> <p>\u5bf9\u5e94 ZooKeeper \u96c6\u7fa4\uff1a</p> <ul> <li>leader: \u53d1\u8d77\u63d0\u6848</li> <li>follower: \u53c2\u4e0e\u6295\u7968</li> <li>observer: \u88ab\u52a8\u63a5\u53d7</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#paxos-vs-zab","title":"Paxos VS ZAB","text":"<p>ZAB \u534f\u8bae\u662f\u5bf9 Paxos \u7b97\u6cd5\u7684\u4e00\u79cd\u5b9e\u73b0\uff0c\u4f46\u662f\u4e8c\u8005\u5b58\u5728\u4e00\u4e9b\u533a\u522b\uff1a</p> <ul> <li>ZAB \u534f\u8bae\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a proposer\uff0c\u5373 leader\uff0c\u800c Paxos \u53ef\u4ee5\u6709\u591a\u4e2a</li> <li>ZAB \u534f\u8bae\u7684\u8bbe\u8ba1\u76ee\u7684\u4e3b\u8981\u662f\u4e3a\u4e86\u5b9e\u73b0\u4e00\u4e2a\u9ad8\u53ef\u7528\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u5373\u6bcf\u5f53 leader fail \u7684\u65f6\u5019\uff0c\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u9009\u4e3e\u51fa\u4e00\u4e2a\u65b0\u7684 leader\uff0c\u4fdd\u8bc1\u670d\u52a1\u7684\u9ad8\u53ef\u7528</li> <li>Paxos \u5219\u662f\u66f4\u8ffd\u6c42\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4e00\u81f4\u6027</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#acl","title":"ACL \u6743\u9650\u63a7\u5236","text":"<p>Zookeeper \u4f7f\u7528 ACL \u6765\u8fdb\u884c\u6743\u9650\u7684\u63a7\u5236\uff0c\u5305\u542b\u4ee5\u4e0b 5 \u79cd\uff1a</p> <ul> <li>CREATE\uff0c\u521b\u5efa\u5b50\u8282\u70b9\u6743\u9650</li> <li>DELETE\uff0c\u5220\u9664\u5b50\u8282\u70b9\u6743\u9650</li> <li>READ\uff0c\u83b7\u53d6\u8282\u70b9\u6570\u636e\u548c\u5b50\u8282\u70b9\u5217\u8868\u6743\u9650</li> <li>WRITE\uff0c\u66f4\u65b0\u8282\u70b9\u6743\u9650</li> <li>ADMIN\uff0c\u8bbe\u7f6e\u8282\u70b9 ACL \u6743\u9650</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#_7","title":"\u89c2\u5bdf\u8005\u8bbe\u8ba1\u6a21\u5f0f","text":"<p>\u89c2\u5bdf\u8005\u6a21\u5f0f\u7c7b\u4f3c\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\uff0c\u8ba2\u9605\u8005\u9996\u5148\u8ba2\u9605\u4e00\u4e2a\u4e3b\u9898\uff0c\u5176\u6b21\u4e3b\u9898\u6709\u53d8\u66f4\u540e\u4f1a\u4e3b\u52a8\u901a\u77e5\u8ba2\u9605\u8005\u3002</p> <p></p> <p>\u6e29\u5ea6\u3001\u6e7f\u5ea6\u7535\u5b50\u4eea\u5668\u4f1a\u8fd1\u5b9e\u65f6\u6839\u636e\u7a7a\u6c14\u7684\u6e29\u5ea6\u3001\u6e7f\u5ea6\u6765\u52a8\u6001\u663e\u793a\u5230\u7535\u5b50\u5c4f\u4e0a\uff0c\u8fd9\u5176\u5b9e\u5c31\u53ef\u4ee5\u7406\u89e3\u6210\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a</p> <p>\u8fd9\u4e2a\u4eea\u5668\u6709\u51e0\u90e8\u5206\u7ec4\u6210\uff0c\u5185\u7f6e\u4e86\u4e00\u4e2a\u63a5\u53e3\u5b9e\u65f6\u83b7\u53d6\u7a7a\u6c14\u4e2d\u7684\u6e29\u5ea6\u3001\u6e7f\u5ea6\uff0c\u7136\u540e\u8c01\u9700\u8981\u8fd9\u4efd\u6570\u636e\u5c31\u5411\u6211\u6ce8\u518c\u4e00\u4e0b\uff0c\u6bd4\u5982\u7535\u5b50\u5c4f\u5e55\u8fd9\u4e2a\u89d2\u8272\u5c31\u5411\u63a5\u53e3\u6ce8\u518c\u4e86\u8bf4\uff1a\u6211\u9700\u8981\u8fd9\u4efd\u6570\u636e\uff0c\u63a5\u7740\u63a5\u53e3\u53d1\u73b0\u83b7\u53d6\u5230\u65b0\u6570\u636e\u4e86\uff0c\u90a3\u4e48\u5c31\u7acb\u5373\u56de\u8c03\u76d1\u542c\u8005\uff08\u6ce8\u518c\u8005\uff09\uff0c\u544a\u8bc9\u5b83\u4eec\u6211\u83b7\u53d6\u5230\u4e86\u65b0\u6570\u636e\uff0c\u6211\u73b0\u5728\u53d1\u7ed9\u4f60\u3002</p> <p>\u9996\u5148\u6211\u4eec\u8981\u6709\u4e00\u4e2a\u63a5\u53e3 Observer\uff0c\u4ee3\u8868\u89c2\u5bdf\u8005\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u6848\u4f8b\u4e2d\u7684\u7535\u5b50\u5c4f\uff0c\u5f53\u6211\u4eec\u6e29\u5ea6\u3001\u6e7f\u5ea6\u6709\u53d8\u5316\u540e\u9700\u8981\u901a\u77e5\u5230\u5404\u4e2a\u89c2\u5bdf\u8005\uff08\u7535\u5b50\u5c4f\uff09\u3002</p> <pre><code>public interface Observer {\n    void show(String msg);\n}\n</code></pre> <p>Observer \u53ea\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u6211\u4eec\u9700\u8981\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u5728\u4e0a\u8ff0\u6848\u4f8b\u4e2d\u6211\u4eec\u7684\u5177\u4f53\u5b9e\u73b0\u53ea\u6709\u4e00\u4e2a\uff0c\u5c31\u662f\u663e\u793a\u5c4f\uff1a</p> <pre><code>public class DisplayScreen implements Observer {\n    @Override\n    public void show(String msg) {\n        System.out.println(\"DisplayScreen: \" + msg);\n    }\n}\n</code></pre> <p>\u73b0\u5728\u89c2\u5bdf\u8005\u89d2\u8272\u5df2\u7ecf\u6709\u4e86\uff0c\u90a3\u6211\u4eec\u89c2\u5bdf\u8005\u76d1\u542c\u54ea\u4e2a\u4e3b\u9898\u5462\uff1f\u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u8ff0\u6848\u4f8b\u4e2d\u7684\u6e29\u5ea6\u3001\u6e7f\u5ea6\u53d8\u5316\u4e8b\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u6709\u4e2a\u4e3b\u9898/\u4e8b\u4ef6\u89d2\u8272\uff1a</p> <pre><code>public interface Topic {\n    // \u589e\u52a0\u89c2\u5bdf\u8005\n    void register(Observer observer);\n\n    // \u83b7\u53d6\u6570\u636e\uff0c\u901a\u77e5\u89c2\u5bdf\u8005\n    void getAndNotify(String msg);\n}\n</code></pre> <p>\u6211\u4eec\u7684\u6e29\u5ea6\u3001\u6e7f\u5ea6\u8fd9\u4e24\u4e2a\u89d2\u8272\u5c31\u662f Topic \u63a5\u53e3\u7684\u4e24\u4e2a\u5177\u4f53\u5b9e\u73b0\uff0c\u5982\u4e0b\uff1a</p> <pre><code>public class Temperature implements Topic {\n    //\u7528\u4e8e\u4fdd\u5b58\u8ba2\u9605\u4e86\u6e29\u5ea6\u7684\u89c2\u5bdf\u8005\n    private List&lt;Observer&gt; observerList = new ArrayList&lt;&gt;();\n\n    @Override\n    public void register(Observer observer) {\n        observerList.add(observer);\n    }\n\n    @Override\n    public void getAndNotify(String msg) {\n        // \u83b7\u53d6\u6570\u636e\u540e\uff0c\u9010\u4e2a\u901a\u77e5\u89c2\u5bdf\u8005\n        for (Observer observer : observerList) {\n            observer.show(msg);\n        }\n    }\n}\n\npublic class Humidity implements Topic {\n    private List&lt;Observer&gt; observerList = new ArrayList&lt;&gt;();\n\n    @Override\n    public void register(Observer observer) {\n        observerList.add(observer);\n    }\n\n    @Override\n    public void getAndNotify(String msg) {\n        // \u83b7\u53d6\u6570\u636e\u540e\uff0c\u9010\u4e2a\u901a\u77e5\u89c2\u5bdf\u8005\n        for (Observer observer : observerList) {\n            observer.show(msg);\n        }\n    }\n}\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>public class ObserverTest {\n    public static void main(String[] args) {\n        // \u521b\u5efa\u4e3b\u9898\n        Topic topic = new Temperature();\n        // \u521b\u5efa\u89c2\u5bdf\u8005\n        Observer observer1 = new DisplayScreen();\n        Observer observer2 = new DisplayScreen();\n        // \u6ce8\u518c\u89c2\u5bdf\u8005\n        topic.register(observer1);\n        topic.register(observer2);\n        // \u83b7\u53d6\u6570\u636e\uff0c\u901a\u77e5\u89c2\u5bdf\u8005\n        topic.getAndNotify(\"\u6e29\u5ea6\uff1a30\");\n    }\n}\n</code></pre> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/1.%20ZooKeeper/#_8","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u6df1\u5ea6\u5256\u6790 ZooKeeper \u6838\u5fc3\u539f\u7406 - \u6398\u91d1\u5c0f\u518c (juejin.cn)</li> <li>Zookeeper \u593a\u547d\u8fde\u73af 9 \u95ee - \u827e\u5c0f\u4ed9\u7684\u6587\u7ae0 - \u77e5\u4e4e</li> <li>\u9762\u8bd5\u963f\u91cc\uff0c\u817e\u8baf 90%\u4f1a\u88ab\u95ee\u5230\u7684 zookeeper\uff0c\u628a\u8fd9\u7bc7\u6587\u7ae0\u770b\u5b8c\u5c31\u591f\u4e86\u3002</li> </ul>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","title":"ZooKeeper \u5982\u4f55\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501","text":"<p>\u5206\u5e03\u5f0f\u9501\u662f\u63a7\u5236\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e4b\u95f4\u540c\u6b65\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5982\u679c\u4e0d\u540c\u7684\u7cfb\u7edf\u6216\u662f\u540c\u4e00\u4e2a\u7cfb\u7edf\u7684\u4e0d\u540c\u4e3b\u673a\u4e4b\u95f4\u5171\u4eab\u4e86\u4e00\u4e2a\u6216\u4e00\u7ec4\u8d44\u6e90\uff0c\u90a3\u4e48\u8bbf\u95ee\u8fd9\u4e9b\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5f80\u5f80\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u4e92\u65a5\u624b\u6bb5\u6765\u9632\u6b62\u5f7c\u6b64\u4e4b\u95f4\u7684\u5e72\u6270\uff0c\u4ee5\u4fdd\u8bc1\u4e00\u81f4\u6027\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_1","title":"\u6392\u4ed6\u9501","text":"<p>\u6392\u4ed6\u9501\uff08Exclusive Lock\uff0c\u7b80\u79f0 X \u9501\uff09\uff0c\u53c8\u79f0\u4e3a\u5199\u9501\u6216\u72ec\u5360\u9501\u3002\u5982\u679c\u4e8b\u52a1 \\(T_1\\) \u5bf9\u6570\u636e\u5bf9\u8c61 \\(O_1\\) \u52a0\u4e0a\u4e86\u6392\u4ed6\u9501\uff0c\u90a3\u4e48\u5728\u6574\u4e2a\u52a0\u9501\u671f\u95f4\uff0c\u53ea\u5141\u8bb8\u4e8b\u52a1 \\(T_1\\) \u5bf9 \\(O_1\\) \u8fdb\u884c\u8bfb\u53d6\u548c\u66f4\u65b0\u64cd\u4f5c\uff0c\u5176\u4ed6\u4efb\u4f55\u4e8b\u52a1\u90fd\u4e0d\u80fd\u518d\u5bf9 \\(O_1\\) \u8fdb\u884c\u4efb\u4f55\u7c7b\u578b\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u9501\u88ab\u91ca\u653e\u3002</p> <p>\u6392\u4ed6\u9501\u7684\u6838\u5fc3\u662f\u5982\u4f55\u4fdd\u8bc1\u5f53\u524d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4e8b\u52a1\u83b7\u5f97\u9501\uff0c\u5e76\u4e14\u9501\u88ab\u91ca\u653e\u540e\uff0c\u6240\u6709\u6b63\u5728\u7b49\u5f85\u83b7\u53d6\u9501\u7684\u4e8b\u52a1\u90fd\u80fd\u591f\u5f97\u5230\u901a\u77e5\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_2","title":"\u5b9a\u4e49\u9501","text":"<p>ZooKeeper \u4e0a\u7684\u4e00\u4e2a\u6570\u636e\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u9501\uff0c\u4f8b\u5982\uff1a<code>/exclusive_lock/lock</code> \u8282\u70b9\u5c31\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u9501\u3002</p> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_3","title":"\u83b7\u53d6\u9501","text":"<p>\u5728\u9700\u8981\u83b7\u53d6\u6392\u4ed6\u9501\u65f6\uff0c\u6240\u6709\u7684\u5ba2\u6237\u7aef\u90fd\u4f1a\u8bd5\u56fe\u901a\u8fc7\u8c03\u7528 <code>create()</code> \u63a5\u53e3\uff0c\u5728 <code>/exclusive_lock</code> \u8282\u70b9\u4e0b\u521b\u5efa\u4e34\u65f6\u5b50\u8282\u70b9 <code>/exclusive_lock/lock</code> \u3002\u7531\u4e8e ZooKeeper \u7684\u5f3a\u4e00\u81f4\u6027\uff0c\u5728\u6240\u6709\u7684\u5ba2\u6237\u7aef\u4e2d\uff0c\u6700\u7ec8\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u80fd\u591f\u521b\u5efa\u6210\u529f\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u8be5\u5ba2\u6237\u7aef\u83b7\u53d6\u4e86\u9501\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_4","title":"\u91ca\u653e\u9501","text":"<p>\u7531\u4e8e <code>/exclusive_lock/lock</code> \u662f\u4e00\u4e2a\u4e34\u65f6\u8282\u70b9\uff0c\u56e0\u6b64\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff0c\u90fd\u6709\u53ef\u80fd\u91ca\u653e\u9501\uff1a</p> <ul> <li>\u5f53\u524d\u83b7\u53d6\u9501\u7684\u5ba2\u6237\u7aef\u5b95\u673a\uff0c\u90a3\u4e48 ZooKeeper \u4e0a\u7684\u8fd9\u4e2a\u4e34\u65f6\u8282\u70b9\u88ab\u79fb\u9664</li> <li>\u6b63\u5e38\u6267\u884c\u5b8c\u4e1a\u52a1\u903b\u8f91\uff0c\u5ba2\u6237\u7aef\u5c31\u4f1a\u4e3b\u52a8\u5c06\u81ea\u5df1\u521b\u5efa\u7684\u4e34\u65f6\u8282\u70b9\u5220\u9664</li> </ul> <p>\u65e0\u8bba\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u79fb\u9664\u4e86 lock \u8282\u70b9\uff0cZooKeeper \u90fd\u4f1a\u901a\u77e5\u6240\u6709\u5728 <code>/exclusive_lock</code> \u8282\u70b9\u4e0a\u6ce8\u518c\u4e86\u5b50\u8282\u70b9\u53d8\u66f4 Watcher \u76d1\u542c\u7684\u5ba2\u6237\u7aef\u3002\u8fd9\u4e9b\u5ba2\u6237\u7aef\u5728\u63a5\u6536\u5230\u901a\u77e5\u540e\uff0c\u518d\u6b21\u91cd\u65b0\u53d1\u8d77\u5206\u5e03\u5f0f\u9501\u83b7\u53d6\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_5","title":"\u5171\u4eab\u9501","text":"<p>\u5171\u4eab\u9501\uff08Shared Lock\uff0c\u7b80\u79f0 S \u9501\uff09\uff0c\u53c8\u79f0\u4e3a\u8bfb\u9501\u3002\u5982\u679c\u4e8b\u52a1 \\(T_1\\) \u5bf9\u6570\u636e\u5bf9\u8c61 \\(O_1\\) \u52a0\u4e0a\u4e86\u5171\u4eab\u9501\uff0c\u90a3\u4e48\u5f53\u524d\u4e8b\u52a1\u53ea\u80fd\u5bf9 \\(O_1\\) \u8fdb\u884c\u8bfb\u53d6\u64cd\u4f5c\uff0c\u5176\u4ed6\u4e8b\u52a1\u4e5f\u53ea\u80fd\u5bf9\u8fd9\u4e2a\u6570\u636e\u5bf9\u8c61\u52a0\u5171\u4eab\u9501\u3002</p> <p>\u5171\u4eab\u9501\u548c\u6392\u4ed6\u9501\u6700\u6839\u672c\u7684\u533a\u522b\u5728\u4e8e\uff0c\u52a0\u4e0a\u6392\u4ed6\u9501\u540e\uff0c\u6570\u636e\u5bf9\u8c61\u53ea\u5bf9\u4e00\u4e2a\u4e8b\u52a1\u53ef\u89c1\uff0c\u800c\u52a0\u5171\u4eab\u9501\u540e\uff0c\u6570\u636e\u5bf9\u6240\u6709\u4e8b\u52a1\u53ef\u89c1\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_6","title":"\u5b9a\u4e49\u9501","text":"<p>\u548c\u6392\u4ed6\u9501\u4e00\u6837\uff0c\u540c\u6837\u662f\u901a\u8fc7 ZooKeeper \u4e0a\u7684\u6570\u636e\u8282\u70b9\u6765\u8868\u793a\u4e00\u4e2a\u9501\uff0c\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e <code>/shared_lock/[Hostname]-\u8bf7\u6c42\u7c7b\u578b-\u5e8f\u53f7</code> \u7684\u4e34\u65f6\u987a\u5e8f\u8282\u70b9\u3002</p> <p></p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_7","title":"\u83b7\u53d6\u9501","text":"<p>\u5728\u9700\u8981\u83b7\u53d6\u5171\u4eab\u9501\u65f6\uff0c\u6240\u6709\u5ba2\u6237\u7aef\u90fd\u4f1a\u5230 <code>/shared_lock</code> \u8fd9\u4e2a\u8282\u70b9\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u987a\u5e8f\u8282\u70b9\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_8","title":"\u5224\u65ad\u8bfb\u5199\u987a\u5e8f","text":"<p>\u6839\u636e\u5171\u4eab\u9501\u7684\u5b9a\u4e49\uff0c\u4e0d\u540c\u7684\u4e8b\u52a1\u90fd\u53ef\u4ee5\u540c\u65f6\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\u8fdb\u884c\u8bfb\u53d6\u64cd\u4f5c\uff0c\u800c\u5199\u64cd\u4f5c\u5fc5\u987b\u5728\u5f53\u524d\u6ca1\u6709\u4efb\u4f55\u4e8b\u7269\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u3002</p> <p>\u5982\u4f55\u786e\u5b9a\u5206\u5e03\u5f0f\u8bfb\u5199\u987a\u5e8f\uff1a</p> <p>\u7b2c\u4e00\u6b65\uff1a\u521b\u5efa\u5b8c\u8282\u70b9\u540e\uff0c\u83b7\u53d6 <code>/shared_lock</code> \u8282\u70b9\u4e0b\u7684\u6240\u6709\u5b50\u8282\u70b9\uff0c\u5e76\u5bf9\u8be5\u8282\u70b9\u6ce8\u518c\u5b50\u8282\u70b9\u53d8\u66f4\u7684 Watcher \u76d1\u542c</p> <p>\u7b2c\u4e8c\u6b65\uff1a\u786e\u5b9a\u81ea\u5df1\u7684\u8282\u70b9\u5e8f\u53f7\u5728\u6240\u6709\u5b50\u8282\u70b9\u4e2d\u7684\u987a\u5e8f</p> <p>\u7b2c\u4e09\u6b65\uff1a</p> <p>\u5bf9\u4e8e\u8bfb\u8bf7\u6c42\uff1a</p> <ul> <li>\u5982\u679c\u6ca1\u6709\u6bd4\u81ea\u5df1\u5e8f\u53f7\u5c0f\u7684\u5b50\u8282\u70b9\uff0c\u6216\u662f\u6240\u6709\u6bd4\u81ea\u5df1\u5e8f\u53f7\u5c0f\u7684\u5b50\u8282\u70b9\u90fd\u662f\u8bfb\u8bf7\u6c42\uff0c\u90a3\u4e48\u8868\u660e\u81ea\u5df1\u5df2\u7ecf\u6210\u529f\u83b7\u53d6\u5230\u4e86\u5171\u4eab\u9501\uff0c\u540c\u65f6\u5f00\u59cb\u6267\u884c\u8bfb\u53d6\u903b\u8f91\u3002</li> <li>\u5982\u679c\u6bd4\u81ea\u5df1\u5e8f\u53f7\u5c0f\u7684\u5b50\u8282\u70b9\u4e2d\u6709\u5199\u8bf7\u6c42\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8fdb\u5165\u7b49\u5f85\u3002</li> </ul> <p>\u5bf9\u4e8e\u5199\u8bf7\u6c42\uff1a</p> <ul> <li>\u5982\u679c\u81ea\u5df1\u4e0d\u662f\u5e8f\u53f7\u6700\u5c0f\u7684\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8fdb\u5165\u7b49\u5f85\u3002</li> </ul> <p>\u7b2c\u56db\u6b65\uff1a\u6536\u5230 Watcher \u901a\u77e5\u540e\uff0c\u91cd\u590d\u7b2c\u4e00\u6b65\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_9","title":"\u91ca\u653e\u9501","text":"<p>\u548c\u6392\u4ed6\u9501\u91ca\u653e\u9501\u7684\u903b\u8f91\u4e00\u81f4\u3002</p>"},{"location":"%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%A0%88/ZooKeeper/2.%20ZooKeeper%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/#_10","title":"\u7f8a\u7fa4\u6548\u5e94","text":"<p>\u4ee5\u4e0a\u7684\u5171\u4eab\u9501\u5b9e\u73b0\uff0c\u80fd\u6ee1\u8db3\u4e00\u822c\u7684\u5206\u5e03\u5f0f\u96c6\u7fa4\u7ade\u4e89\u9501\u7684\u9700\u6c42\uff0c\u5e76\u4e14\u6027\u80fd\u8fd8\u4e0d\u9519\u3002\u4f46\u662f\u5982\u679c\u673a\u5668\u89c4\u6a21\u6269\u5927\u4e4b\u540e\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\u3002</p> <p>\u5f53\u4e00\u4e2a\u5ba2\u6237\u7aef\u79fb\u9664\u4e86\u81ea\u5df1\u7684\u5171\u4eab\u9501\u540e\uff0cZooKeeper \u4f1a\u628a\u5b50\u8282\u70b9\u53d8\u66f4 Watcher \u901a\u77e5\u53d1\u9001\u7ed9\u6240\u6709\u76d1\u542c\u7684\u673a\u5668\uff0c\u7136\u800c\u8fd9\u4e2a\u901a\u77e5\u4e8b\u5b9e\u4e0a\u53ea\u5bf9\u4e0b\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u5ba2\u6237\u7aef\u4ea7\u751f\u4e86\u5b9e\u9645\u7684\u5f71\u54cd\uff0c\u5bf9\u4f59\u4e0b\u7684\u6240\u6709\u673a\u5668\u90fd\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u3002\u5ba2\u6237\u7aef\u65e0\u7aef\u5730\u63a5\u6536\u5230\u8fc7\u591a\u548c\u81ea\u5df1\u5e76\u4e0d\u76f8\u5173\u7684\u4e8b\u4ef6\u901a\u77e5\u3002</p> <p>\u6539\u8fdb\u65b9\u6848\uff1a\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u5ba2\u6237\u7aef\u53ea\u9700\u8981\u5173\u6ce8\u6bd4\u81ea\u5df1\u5e8f\u53f7\u5c0f\u7684\u90a3\u4e2a\u76f8\u5173\u8282\u70b9\u7684\u53d8\u66f4\u60c5\u51b5\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5173\u6ce8\u5168\u5c40\u7684\u5b50\u5217\u8868\u53d8\u66f4\u60c5\u51b5\u3002</p> <p>\u8fd9\u91cc\u7684\u300c\u6bd4\u81ea\u5df1\u5e8f\u53f7\u5c0f\u7684\u76f8\u5173\u8282\u70b9\u300d\u5bf9\u4e8e\u8bfb\u8bf7\u6c42\u548c\u5199\u8bf7\u6c42\u4e0d\u4e00\u6837\uff1a</p> <ul> <li>\u8bfb\u8bf7\u6c42\uff1a\u5411\u6bd4\u81ea\u5df1\u5e8f\u53f7\u5c0f\u7684\u6700\u540e\u4e00\u4e2a\u5199\u8bf7\u6c42\u8282\u70b9\u6ce8\u518c Watcher \u76d1\u542c</li> <li>\u5199\u8bf7\u6c42\uff1a\u5411\u6bd4\u81ea\u5df1\u5e8f\u53f7\u5c0f\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u6ce8\u518c Watcher \u76d1\u542c</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/","title":"\u6570\u636e\u4ed3\u5e93\u7406\u8bba","text":""},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_2","title":"\u6570\u636e\u4ed3\u5e93\u7684\u5b9a\u4e49","text":"<p>\u6570\u636e\u4ed3\u5e93\u662f\u4e00\u4e2a\u9762\u5411\u4e3b\u9898\u7684\u3001\u96c6\u6210\u7684\u3001\u76f8\u5bf9\u7a33\u5b9a\u7684\u3001\u53cd\u6620\u5386\u53f2\u53d8\u5316\u7684\u6570\u636e\u96c6\u5408\uff0c\u7528\u4e8e\u63d0\u4f9b\u6570\u636e\u652f\u6301\u548c\u8f85\u52a9\u51b3\u7b56\u3002</p> \u5b9a\u4e49 \u89e3\u91ca \u9762\u5411\u4e3b\u9898 \u6309\u4e3b\u9898\u7ec4\u7ec7\u6570\u636e\uff0c\u6bcf\u4e2a\u4e3b\u9898\u53cd\u6620\u4e1a\u52a1\u9700\u6c42/\u5206\u6790\u5bf9\u8c61 \u96c6\u6210 \u591a\u4e2a\u6570\u636e\u6e90\u6c47\u96c6 \u76f8\u5bf9\u7a33\u5b9a \u5927\u91cf\u67e5\u8be2\u4e3a\u4e3b\uff0c\u4fee\u6539\u3001\u5220\u9664\u8f83\u5c11 \u53cd\u6620\u5386\u53f2\u53d8\u5316 \u4fdd\u5b58\u5927\u91cf\u5386\u53f2\u6570\u636e"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_3","title":"\u4e3a\u4ec0\u4e48\u8981\u5efa\u8bbe\u6570\u4ed3","text":"<p>Note</p> <p>\u6570\u636e\u4ed3\u5e93\u8bd5\u56fe\u63d0\u4f9b\u4e00\u79cd\u4ece\u64cd\u4f5c\u7cfb\u7edf\u5230\u51b3\u7b56\u652f\u6301\u73af\u5883\u7684\u6570\u636e\u6d41\u6a21\u578b\u3002\u6570\u636e\u4ed3\u5e93\u6982\u5ff5\u7684\u63d0\u51fa\u662f\u4e3a\u4e86\u89e3\u51b3\u548c\u6570\u636e\u6d41\u76f8\u5173\u7684\u5404\u79cd\u95ee\u9898\uff0c\u7279\u522b\u662f\u591a\u91cd\u6570\u636e\u590d\u5236\u5e26\u6765\u7684\u9ad8\u6210\u672c\u95ee\u9898\u3002\u5728\u6ca1\u6709\u6570\u636e\u4ed3\u5e93\u7684\u65f6\u4ee3\uff0c\u6570\u636e\u5206\u6790\u4eba\u5458\u9700\u8981\u6536\u96c6\u3001\u6e05\u6d17\u3001\u6574\u5408\u591a\u4e2a\u6570\u636e\u6e90\u7684\u6570\u636e\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u51b3\u7b56\u652f\u6301\u73af\u5883\u505a\u90e8\u5206\u6570\u636e\u590d\u5236\uff0c\u8017\u65f6\u957f\u4e14\u51c6\u786e\u7387\u4f4e\u3002</p> <ul> <li>\u7ef4\u62a4\u5386\u53f2\u6570\u636e\uff0c\u51cf\u8f7b\u4e1a\u52a1\u7cfb\u7edf\u5b58\u50a8\u3001\u8ba1\u7b97\u538b\u529b\uff0c\u63d0\u4f9b\u957f\u671f\u6570\u636e\u89c6\u56fe</li> <li>\u96c6\u6210\u591a\u4e2a\u6570\u636e\u6e90\uff0c\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u6570\u636e\u89c6\u56fe</li> <li>\u901a\u8fc7\u5197\u4f59\u51cf\u5c11\u8868\u5173\u8054\uff0c\u590d\u7528\u8ba1\u7b97\u7ed3\u679c</li> <li>\u901a\u8fc7\u5efa\u8bbe\u5bbd\u8868/\u96c6\u5e02\uff0c\u63d0\u5347\u6570\u636e\u7684\u6613\u7528\u6027\u548c\u53ef\u7406\u89e3\u6027</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#vs","title":"\u6570\u636e\u5e93 VS \u6570\u636e\u4ed3\u5e93","text":"<p>\u6570\u636e\u5e93\uff1aOLTP\uff0c\u9762\u5411\u4e1a\u52a1\u5904\u7406\u548c\u4e8b\u52a1\u8bbe\u8ba1\uff0c\u4e00\u822c\u4f1a\u91c7\u7528\u8303\u5f0f\u5efa\u6a21\uff0c\u4e3b\u8981\u8ffd\u6c42\u4f4e\u5197\u4f59\u3001\u6570\u636e\u4e00\u81f4\u6027\u548c\u5199\u5165\u6027\u80fd\u3002</p> <p>\u6570\u636e\u4ed3\u5e93\uff1aOLAP\uff0c\u9762\u5411\u4e3b\u9898\u5206\u6790\u8bbe\u8ba1\u7684\uff0c\u4e00\u822c\u4f1a\u91c7\u7528\u7ef4\u5ea6\u5efa\u6a21\uff0c\u4e3b\u8981\u8ffd\u6c42\u6570\u636e\u7684\u53ef\u7406\u89e3\u6027\u3001\u67e5\u8be2\u6027\u80fd\uff0c\u672c\u8d28\u662f\u4e00\u79cd\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u67b6\u6784\u3002</p> \u6570\u636e\u5e93 \u6570\u636e\u4ed3\u5e93 \u9762\u5411 \u4e8b\u52a1 \u5206\u6790 \u6570\u636e\u7c7b\u578b \u7ec6\u8282\u3001\u4e1a\u52a1 \u7efc\u5408\u3001\u6e05\u6d17\u8fc7\u7684\u6570\u636e \u6570\u636e\u7279\u70b9 \u5f53\u524d\u7684\u3001\u6700\u65b0\u7684 \u5386\u53f2\u7684\u3001\u8de8\u65f6\u95f4\u7ef4\u62a4 \u76ee\u7684 \u4e1a\u52a1\u5904\u7406\u3001\u4e8b\u52a1 \u957f\u671f\u4fe1\u606f\u9700\u6c42\u3001\u51b3\u7b56\u652f\u6301 \u8bbe\u8ba1\u6a21\u578b \u57fa\u4e8e ER \u6a21\u578b\uff0c\u9762\u5411\u5e94\u7528 \u661f\u578b\u3001\u96ea\u82b1\u6a21\u578b\uff0c\u9762\u5411\u4e3b\u9898 \u64cd\u4f5c \u8bfb\u3001\u5199 \u5927\u591a\u4e3a\u8bfb \u6570\u636e\u89c4\u6a21 \u5c0f\u3001\u4e2d \u5927"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#mpp-vs","title":"MPP VS \u5206\u5e03\u5f0f\u67b6\u6784","text":""},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#mpp","title":"MPP","text":"<p>\u4f20\u7edf\u7684\u6570\u636e\u4ed3\u5e93\u901a\u8fc7 MPP \u6765\u5b9e\u73b0\u3002MPP \u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u8ba1\u7b97\u67b6\u6784\uff0c\u5b83\u5c06\u5355\u4e2a\u67e5\u8be2\u5206\u89e3\u4e3a\u591a\u4e2a\u5e76\u884c\u7684\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\u6267\u884c\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u5408\u5e76\u8fd4\u56de\u7ed9\u7528\u6237\u3002MPP \u7531\u591a\u4e2a\u5355\u8282\u70b9\u7684\u5355\u673a\u6570\u636e\u5e93\u7ec4\u6210\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u81ea\u5df1\u7684 CPU\u3001\u5185\u5b58\u3001\u5b58\u50a8\u548c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8282\u70b9\u4e4b\u95f4\u901a\u8fc7\u7f51\u7edc\u8fde\u63a5\u3002\u5206\u5e93\u5206\u8868\u3001\u6c47\u603b\u67e5\u8be2\u7ed3\u679c\u7b49\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u3002</p> <ul> <li>\u8282\u70b9\u95f4\u4e3a\u975e\u5171\u4eab\u67b6\u6784\uff08Share Nothing\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u81ea\u5df1\u7684\u78c1\u76d8\u5b58\u50a8\u7cfb\u7edf\u548c\u5185\u5b58\u7cfb\u7edf</li> <li>\u8282\u70b9\u95f4\u901a\u8fc7\u4e13\u7528\u9ad8\u901f\u7f51\u7edc\u8fde\u63a5</li> <li>\u8bbe\u8ba1\u4e0a\u4f18\u5148\u8003\u8651 C\uff08\u4e00\u81f4\u6027\uff09\uff0c\u5176\u6b21\u8003\u8651 A\uff08\u53ef\u7528\u6027\uff09\uff0c\u5c3d\u91cf\u505a\u597d P\uff08\u5206\u533a\u5bb9\u9519\u6027\uff09</li> </ul> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u8fd0\u7b97\u65b9\u5f0f\u7cbe\u7ec6\uff0c\u5ef6\u8fdf\u4f4e\u3001\u541e\u5410\u4f4e</li> <li>\u9002\u5408\u4e2d\u7b49\u89c4\u6a21\u7684\u7ed3\u6784\u5316\u6570\u636e\u5904\u7406</li> </ul> <p>\u95ee\u9898\uff1a</p> <ul> <li>\u5355\u4e2a\u8282\u70b9\u5bb9\u6613\u6210\u4e3a\u6027\u80fd\u74f6\u9888\uff0c\u6269\u5c55\u6027\u6709\u9650</li> <li>\u6570\u636e\u70ed\u70b9\u95ee\u9898</li> <li>\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5b9e\u73b0\u4f1a\u5bfc\u81f4\u6269\u5c55\u6027\u964d\u4f4e</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_4","title":"\u5206\u5e03\u5f0f\u67b6\u6784","text":"<ul> <li>\u5229\u7528\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u7684\u6269\u5c55\u6027\uff0c\u5b8c\u6210\u6d77\u91cf\u6570\u636e\u7684\u5b58\u50a8</li> <li>\u5c06 SQL \u8f6c\u6362\u4e3a\u5927\u6570\u636e\u8ba1\u7b97\u5f15\u64ce\u4efb\u52a1\uff0c\u5b8c\u6210\u6570\u636e\u5206\u6790</li> <li>\u8bbe\u8ba1\u4e0a\u4f18\u5148\u8003\u8651 P\uff08\u5206\u533a\u5bb9\u9519\u6027\uff09\uff0c\u7136\u540e\u662f A\uff08\u53ef\u7528\u6027\uff09\uff0c\u6700\u540e\u8003\u8651 C\uff08\u4e00\u81f4\u6027\uff09</li> <li>\u4e0e MPP \u6700\u5927\u7684\u4e0d\u540c\u662f\uff0c\u5206\u5e03\u5f0f\u67b6\u6784\u662f\u5171\u4eab\u6570\u636e\u7684\uff0c\u800c MPP \u662f\u975e\u5171\u4eab\u6570\u636e\u7684</li> </ul> <pre><code>flowchart TD\n    A[\"\u5206\u5e03\u5f0f SQL \u5f15\u64ce\"] --&gt; B[\"\u5927\u6570\u636e\u8ba1\u7b97\u5f15\u64ce\"] --&gt; C[\"\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\"]</code></pre> <p>\u95ee\u9898\uff1a</p> <ul> <li>SQL \u652f\u6301\u7387</li> <li>\u4e8b\u52a1\u652f\u6301\uff08\u5206\u5e03\u5f0f\u4e8b\u52a1\uff09</li> </ul> <p>MPP + \u5206\u5e03\u5f0f\u67b6\u6784\uff1a</p> <ul> <li>\u6570\u636e\u5b58\u50a8\u91c7\u7528\u5206\u5e03\u5f0f\u67b6\u6784\u4e2d\u7684\u516c\u5171\u5b58\u50a8\uff0c\u63d0\u9ad8\u5206\u533a\u5bb9\u9519\u6027</li> <li>\u4e0a\u5c42\u67b6\u6784\u91c7\u7528 MPP\uff0c\u51cf\u5c11\u8fd0\u7b97\u5ef6\u8fdf\uff08\u5e38\u7528\u4e8e\u5b9e\u65f6\u6d41\u5904\u7406\uff09</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#lambda-vs-kappa","title":"Lambda VS Kappa \u67b6\u6784","text":"Lambda \u67b6\u6784 Kappa \u67b6\u6784 \u5b9e\u65f6\u6027 \u79d2\u7ea7\u5b9e\u65f6 \u79d2\u7ea7\u5b9e\u65f6 \u8ba1\u7b97\u8d44\u6e90 \u6d41\u6279\u5206\u5f00\u6267\u884c\uff0c\u8d44\u6e90\u6d88\u8017\u5927 \u53ea\u6709\u6d41\u8ba1\u7b97\uff0c\u6b63\u5e38\u8fd0\u884c\u8d44\u6e90\u6d88\u8017\u5c11\uff0c\u53ea\u6709\u91cd\u7b97\u8d44\u6e90\u6d88\u8017\u8f83\u5927 \u91cd\u7b97\u80fd\u529b \u6279\u5f0f\u5168\u91cf\u5904\u7406\uff0c\u541e\u5410\u91cf\u9ad8 \u6d41\u5f0f\u5168\u91cf\u5904\u7406\uff0c\u541e\u5410\u8f83\u6279\u5904\u7406\u4f4e \u5f00\u53d1\u6d4b\u8bd5 \u6bcf\u4e2a\u9700\u6c42\u90fd\u8981\u5f00\u53d1\u4e24\u5957\u4ee3\u7801\uff0c\u5f00\u53d1\u6d4b\u8bd5\u6210\u672c\u9ad8 \u4ec5\u9700\u4e00\u5957\u4ee3\u7801\uff0c\u5f00\u53d1\u6d4b\u8bd5\u6210\u672c\u4f4e \u8fd0\u7ef4\u6210\u672c \u7ef4\u62a4\u4e24\u5957\u67b6\u6784\uff0c\u8fd0\u7ef4\u6210\u672c\u9ad8 \u53ea\u7ef4\u62a4\u4e00\u5957\u7cfb\u7edf\uff0c\u8fd0\u7ef4\u6210\u672c\u4f4e"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_5","title":"\u6570\u636e\u5e93\u4e09\u8303\u5f0f","text":"<p>1NF</p> <p>\u786e\u4fdd\u8868\u4e2d\u7684\u6bcf\u5217\u662f\u539f\u5b50\u3001\u4e0d\u53ef\u518d\u5206\u7684\u3002</p> <p>\u5047\u8bbe\u6709\u4ee5\u4e0b\u8868\uff1a</p> employee_id name job_code job state_code home_state E001 Alice J01 Chef 26 Michigan E001 Alice J02 Waiter 26 Michigan E002 Bob J02 Waiter 56 Wyoming E002 Bob J03 Bartender 56 Wyoming E003 Alice J01 Chef 56 Wyoming <p>\u6240\u6709\u6761\u76ee\u90fd\u662f\u539f\u5b50\u7684\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u590d\u5408\u4e3b\u952e <code>(employee_id, job_code)</code>\uff0c\u56e0\u6b64\u8868\u7b26\u5408\u7b2c\u4e00\u8303\u5f0f\uff081NF\uff09\u3002</p> <p>2NF</p> <p>\u5728\u6ee1\u8db3 1NF \u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u5b58\u5728\u90e8\u5206\u4f9d\u8d56\u3002\u5373\u975e\u4e3b\u952e\u5b57\u6bb5\u5fc5\u987b\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff0c\u800c\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u4e3b\u952e\u7684\u4e00\u90e8\u5206\u3002</p> <p>\u4f46\u662f\u5373\u4f7f\u4f60\u53ea\u77e5\u9053\u67d0\u4eba\u7684 <code>employee_id</code>\uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u786e\u5b9a\u4ed6\u4eec\u7684 <code>name</code>\u3001<code>home_state</code> \u548c <code>state_code</code>\u3002<code>name</code>\u3001\u5373 <code>name</code>\u3001<code>home_state</code> \u548c <code>state_code</code> \u4f9d\u8d56\u4e8e <code>employee_id</code>\uff08\u590d\u5408\u4e3b\u952e\u7684\u4e00\u90e8\u5206\uff09\u3002\u56e0\u6b64\u8be5\u8868\u4e0d\u7b26\u5408\u7b2c\u4e8c\u8303\u5f0f\uff082NF\uff09\u3002</p> <p>\u5c06\u4e0a\u9762\u7684\u8868\u8fdb\u884c\u62c6\u5206\uff1a</p> <code>employee_roles</code><code>employees</code><code>jobs</code> employee_id job_code E001 J01 E001 J02 E002 J02 E002 J03 E003 J01 employee_id name state_code home_state E001 Alice 26 Michigan E002 Bob 56 Wyoming E003 Alice 56 Wyoming job_code job J01 Chef J02 Waiter J03 Bartender <p>3NF</p> <p>\u5728\u6ee1\u8db3 2NF \u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u5b58\u5728\u4f20\u9012\u4f9d\u8d56\u3002 3NF \u662f\u5bf9\u5b57\u6bb5\u5197\u4f59\u6027\u7684\u7ea6\u675f\uff0c\u8981\u6c42\u4efb\u4f55\u5b57\u6bb5\u4e0d\u80fd\u7531\u5176\u4ed6\u5b57\u6bb5\u6d3e\u751f\u51fa\u6765\uff0c\u5b83\u8981\u6c42\u5b57\u6bb5\u6ca1\u6709\u5197\u4f59\uff0c\u5373\u4e0d\u5b58\u5728\u4f20\u9012\u4f9d\u8d56\u3002</p> <p>\u5728\u4e0a\u9762\u7684 <code>employees</code> \u8868\u4e2d\uff0c<code>home_state</code> \u4f9d\u8d56\u4e8e <code>state_code</code>\u3002\u6240\u4ee5\uff0c\u5982\u679c\u77e5\u9053 <code>state_code</code>\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u627e\u5230\u5bf9\u5e94\u7684 <code>home_state</code> \u503c\u3002\u4e3a\u4e86\u6ee1\u8db3\u7b2c\u4e09\u8303\u5f0f\uff0c\u7ee7\u7eed\u62c6\u5206 <code>employees</code> \u8868\u3002</p> <code>employee_roles</code><code>employees</code><code>jobs</code><code>states</code> employee_id job_code E001 J01 E001 J02 E002 J02 E002 J03 E003 J01 employee_id name state_code E001 Alice 26 E002 Bob 56 E003 Alice 56 job_code job J01 Chef J02 Waiter J03 Bartender state_code home_state 26 Michigan 56 Wyoming"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_6","title":"\u6570\u4ed3\u5206\u5c42\u7684\u610f\u4e49","text":"<p>\u4e00\u4e9b\u4e2a\u4eba\u601d\u8003</p> <p>\u6570\u636e\u4ed3\u5e93\u5206\u5c42\u4e3b\u8981\u662f\u57fa\u4e8e\u4f7f\u7528\u7ecf\u9a8c\u8fdb\u884c\u7684\u4f18\u5316\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u5206\u5c42\u610f\u4e49\u7684\u63a2\u8ba8\uff0c\u53ea\u8981\u5408\u7406\u5c31\u884c\u3002Kimball \u5728\u300a\u6570\u636e\u4ed3\u5e93\u5de5\u5177\u7bb1\u300b\u9610\u8ff0\u7ef4\u5ea6\u5efa\u6a21\u65f6\uff0c\u63d0\u5230\u4e86 \u300c\u53ef\u7406\u89e3\u6027\u300d \u4e0e \u300c\u6027\u80fd\u300d \u8fd9\u4e24\u70b9\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4e24\u70b9\u7cbe\u786e\u4e14\u7b80\u6d01\u5730\u6982\u62ec\u4e86\u6570\u636e\u4ed3\u5e93\u5efa\u8bbe\u548c\u7ef4\u5ea6\u5efa\u6a21\u7684\u7406\u5ff5\uff0c\u6240\u4ee5\u56f4\u7ed5\u300c\u53ef\u7406\u89e3\u6027\u300d \u4e0e \u300c\u6027\u80fd\u300d \u6765\u8bba\u8ff0\u57fa\u672c\u4e0d\u4f1a\u6709\u504f\u5dee\u3002</p> <ol> <li>\u6e05\u6670\u6570\u636e\u7ed3\u6784\uff1a\u6bcf\u4e00\u5c42\u90fd\u6709\u5b83\u7684\u4f5c\u7528\u57df\u548c\u804c\u8d23\uff0c\u5728\u8bbe\u8ba1\u8868\u65f6\u6709\u4e00\u5957\u6807\u51c6\uff0c\u5728\u4f7f\u7528\u8868\u7684\u65f6\u5019\u80fd\u66f4\u65b9\u4fbf\u5730\u5b9a\u4f4d\u548c\u7406\u89e3\u3002\u200b</li> <li>\u65b9\u4fbf\u8ffd\u8e2a\u6570\u636e\u6765\u6e90\uff1a\u7531\u4e8e\u6700\u7ec8\u7684\u5206\u6790\u6570\u636e\u901a\u5e38\u662f\u7ecf\u8fc7\u590d\u6742\u67b6\u6784\u6c47\u603b\u7684\u7ed3\u679c\uff0c\u6709\u4e86\u6807\u51c6\u7684\u5206\u5c42\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u5feb\u901f\u5730\u5b9a\u4f4d\u6570\u636e\u6765\u6e90\u3002</li> <li>\u51cf\u5c11\u91cd\u590d\u5f00\u53d1\uff1a\u89c4\u8303\u6570\u636e\u5206\u5c42\uff0c\u5f00\u53d1\u4e00\u4e9b\u901a\u7528\u7684\u4e2d\u95f4\u7ec4\u4ef6\uff0c\u80fd\u51cf\u5c11\u6781\u5927\u7684\u91cd\u590d\u8ba1\u7b97\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u590d\u7528\u6027\u3002\u200b</li> <li>\u7edf\u4e00\u6570\u636e\u53e3\u5f84\uff1a\u901a\u8fc7\u6570\u636e\u5206\u5c42\u63d0\u4f9b\u7edf\u4e00\u7684\u6570\u636e\u51fa\u53e3\uff0c\u7edf\u4e00\u5bf9\u5916\u8f93\u51fa\u7684\u6570\u636e\u53e3\u5f84\u3002\u200b</li> <li>\u590d\u6742\u95ee\u9898\u7b80\u5355\u5316\uff1a\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u4efb\u52a1\u5206\u89e3\u6210\u591a\u4e2a\u6b65\u9aa4\u6765\u5b8c\u6210\uff0c\u6bcf\u4e00\u5c42\u89e3\u51b3\u7279\u5b9a\u7684\u95ee\u9898\u3002</li> </ol>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_7","title":"\u6570\u4ed3\u5206\u5c42\u5efa\u8bbe\u601d\u8def","text":""},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#vs_1","title":"\u8303\u5f0f\u5efa\u6a21 VS \u7ef4\u5ea6\u5efa\u6a21","text":"<p>\u8303\u5f0f\u5efa\u6a21\uff08Normalized Modeling\uff09\u548c\u7ef4\u5ea6\u5efa\u6a21\uff08Dimensional Modeling\uff09\u662f\u6570\u636e\u4ed3\u5e93\u8bbe\u8ba1\u4e2d\u4e24\u79cd\u5e38\u7528\u7684\u6570\u636e\u5efa\u6a21\u65b9\u6cd5\uff0c\u5b83\u4eec\u6709\u4ee5\u4e0b\u533a\u522b\uff1a</p> <p>\u4e00\u3001\u6570\u636e\u7ed3\u6784</p> \u8303\u5f0f\u5efa\u6a21 \u57fa\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u9075\u5faa\u4e25\u683c\u7684\u89c4\u8303\u5316\u89c4\u5219\u3002\u901a\u5e38\u5c06\u6570\u636e\u5206\u89e3\u5230\u591a\u4e2a\u5b9e\u4f53\u4e2d\uff0c\u4ee5\u51cf\u5c11\u6570\u636e\u5197\u4f59\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u8ba2\u5355\u7cfb\u7edf\u4e2d\uff0c\u5ba2\u6237\u4fe1\u606f\u3001\u4ea7\u54c1\u4fe1\u606f\u548c\u8ba2\u5355\u4fe1\u606f\u4f1a\u5206\u522b\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u8868\u4e2d\u3002 \u4e00\u822c\u91c7\u7528\u7b2c\u4e09\u8303\u5f0f\uff083NF\uff09\uff0c\u5373\u4e00\u4e2a\u8868\u4e2d\u7684\u975e\u4e3b\u5c5e\u6027\u90fd\u4f9d\u8d56\u4e8e\u4e3b\u5c5e\u6027\uff0c\u5e76\u4e14\u4e0d\u5b58\u5728\u4f20\u9012\u4f9d\u8d56\u3002\u8fd9\u79cd\u7ed3\u6784\u5728\u5904\u7406\u590d\u6742\u7684\u6570\u636e\u5173\u7cfb\u65f6\u975e\u5e38\u6709\u6548\u3002 \u7ef4\u5ea6\u5efa\u6a21 \u4ee5\u5206\u6790\u9700\u6c42\u4e3a\u5bfc\u5411\uff0c\u5c06\u6570\u636e\u6309\u7167\u4e8b\u5b9e\u8868\uff08Fact Table\uff09\u548c\u7ef4\u5ea6\u8868\uff08Dimension Table\uff09\u8fdb\u884c\u7ec4\u7ec7\u3002\u4e8b\u5b9e\u8868\u5305\u542b\u4e1a\u52a1\u5ea6\u91cf\u503c\uff08\u5982\u9500\u552e\u989d\u3001\u6570\u91cf\u7b49\uff09\uff0c\u800c\u7ef4\u5ea6\u8868\u5305\u542b\u63cf\u8ff0\u8fd9\u4e9b\u5ea6\u91cf\u503c\u7684\u5c5e\u6027\uff08\u5982\u65f6\u95f4\u3001\u5730\u70b9\u3001\u4ea7\u54c1\u7b49\uff09\u3002 \u5e38\u89c1\u7684\u6a21\u5f0f\u6709\u661f\u578b\u6a21\u5f0f\u548c\u96ea\u82b1\u6a21\u5f0f\u3002\u661f\u578b\u6a21\u5f0f\u4e2d\uff0c\u4e8b\u5b9e\u8868\u4f4d\u4e8e\u4e2d\u5fc3\uff0c\u5468\u56f4\u8fde\u63a5\u591a\u4e2a\u7ef4\u5ea6\u8868\uff1b\u96ea\u82b1\u6a21\u5f0f\u5219\u662f\u5728\u661f\u578b\u6a21\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u5bf9\u67d0\u4e9b\u7ef4\u5ea6\u8868\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u89c4\u8303\u5316\uff0c\u5f62\u6210\u7c7b\u4f3c\u96ea\u82b1\u7684\u7ed3\u6784\u3002 <p>\u4e8c\u3001\u6570\u636e\u5904\u7406</p> \u8303\u5f0f\u5efa\u6a21 \u5728\u6570\u636e\u63d2\u5165\u548c\u66f4\u65b0\u65f6\uff0c\u7531\u4e8e\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a\u8868\u4e2d\uff0c\u9075\u5faa\u89c4\u8303\u5316\u89c4\u5219\uff0c\u6570\u636e\u4e00\u81f4\u6027\u5bb9\u6613\u7ef4\u62a4\u3002\u4f8b\u5982\uff0c\u5f53\u5ba2\u6237\u4fe1\u606f\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u53ea\u9700\u8981\u5728\u5ba2\u6237\u8868\u4e2d\u66f4\u65b0\u76f8\u5e94\u8bb0\u5f55\u3002 \u4f46\u5728\u67e5\u8be2\u65f6\uff0c\u7531\u4e8e\u6570\u636e\u5206\u6563\uff0c\u5f80\u5f80\u9700\u8981\u8fdb\u884c\u591a\u8868\u8fde\u63a5\u64cd\u4f5c\uff0c\u8fd9\u5728\u5904\u7406\u590d\u6742\u67e5\u8be2\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002\u4f8b\u5982\uff0c\u67e5\u8be2\u67d0\u4e2a\u5ba2\u6237\u7684\u6240\u6709\u8ba2\u5355\u4fe1\u606f\uff0c\u53ef\u80fd\u9700\u8981\u8fde\u63a5\u5ba2\u6237\u8868\u3001\u8ba2\u5355\u8868\u548c\u8ba2\u5355\u8be6\u60c5\u8868\u3002 \u7ef4\u5ea6\u5efa\u6a21 \u5728\u6570\u636e\u52a0\u8f7d\u65f6\uff0c\u7531\u4e8e\u6570\u636e\u662f\u6309\u7167\u5206\u6790\u9700\u6c42\u8fdb\u884c\u7ec4\u7ec7\u7684\uff0c\u53ef\u80fd\u4f1a\u5b58\u5728\u4e00\u5b9a\u7684\u6570\u636e\u5197\u4f59\u3002\u4f8b\u5982\uff0c\u5728\u7ef4\u5ea6\u8868\u4e2d\u53ef\u80fd\u4f1a\u91cd\u590d\u5b58\u50a8\u4e00\u4e9b\u5c5e\u6027\u503c\u3002 \u4f46\u5728\u67e5\u8be2\u65f6\uff0c\u7531\u4e8e\u6570\u636e\u7ed3\u6784\u7b80\u5355\uff0c\u901a\u5e38\u53ea\u9700\u8981\u5bf9\u4e8b\u5b9e\u8868\u548c\u5c11\u6570\u7ef4\u5ea6\u8868\u8fdb\u884c\u8fde\u63a5\u64cd\u4f5c\uff0c\u67e5\u8be2\u6027\u80fd\u8f83\u9ad8\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6790\u9500\u552e\u6570\u636e\u65f6\uff0c\u53ea\u9700\u8981\u5c06\u9500\u552e\u4e8b\u5b9e\u8868\u4e0e\u76f8\u5173\u7684\u65f6\u95f4\u3001\u5730\u70b9\u548c\u4ea7\u54c1\u7ef4\u5ea6\u8868\u8fde\u63a5\u5373\u53ef\u3002 <p>\u4e09\u3001\u5e94\u7528\u573a\u666f</p> \u8303\u5f0f\u5efa\u6a21 \u9002\u7528\u4e8e\u5bf9\u6570\u636e\u4e00\u81f4\u6027\u8981\u6c42\u8f83\u9ad8\u3001\u4e1a\u52a1\u903b\u8f91\u590d\u6742\u7684\u64cd\u4f5c\u578b\u6570\u636e\u5e93\u7cfb\u7edf\u3002\u4f8b\u5982\uff0c\u4f01\u4e1a\u7684\u6838\u5fc3\u4e1a\u52a1\u7cfb\u7edf\uff0c\u5982 ERP\uff08\u4f01\u4e1a\u8d44\u6e90\u8ba1\u5212\uff09\u7cfb\u7edf\uff0c\u9700\u8981\u4e25\u683c\u4fdd\u8bc1\u6570\u636e\u7684\u51c6\u786e\u6027\u548c\u4e00\u81f4\u6027\u3002 \u7ef4\u5ea6\u5efa\u6a21 \u4e3b\u8981\u5e94\u7528\u4e8e\u6570\u636e\u4ed3\u5e93\u548c\u5546\u4e1a\u667a\u80fd\uff08BI\uff09\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u4ee5\u6570\u636e\u5206\u6790\u548c\u51b3\u7b56\u652f\u6301\u4e3a\u4e3b\u8981\u76ee\u7684\u3002\u4f8b\u5982\uff0c\u4f01\u4e1a\u7684\u6570\u636e\u5206\u6790\u90e8\u95e8\u5229\u7528\u7ef4\u5ea6\u5efa\u6a21\u6784\u5efa\u6570\u636e\u4ed3\u5e93\uff0c\u4ee5\u4fbf\u5feb\u901f\u751f\u6210\u5404\u7c7b\u62a5\u8868\u548c\u8fdb\u884c\u6570\u636e\u5206\u6790\u3002 <p>\u56db\u3001\u7ef4\u62a4\u96be\u5ea6</p> \u8303\u5f0f\u5efa\u6a21 \u5728\u6570\u636e\u7ed3\u6784\u53d8\u5316\u65f6\uff0c\u7531\u4e8e\u6570\u636e\u5206\u6563\u4e14\u9075\u5faa\u89c4\u8303\u5316\u89c4\u5219\uff0c\u5bf9\u8868\u7ed3\u6784\u7684\u4fee\u6539\u76f8\u5bf9\u5bb9\u6613\u3002\u4f8b\u5982\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5ba2\u6237\u5c5e\u6027\uff0c\u53ea\u9700\u8981\u5728\u5ba2\u6237\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u5217\u3002 \u4f46\u5728\u5904\u7406\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91\u548c\u6570\u636e\u5173\u7cfb\u65f6\uff0c\u7ef4\u62a4\u6210\u672c\u53ef\u80fd\u8f83\u9ad8\uff0c\u5c24\u5176\u662f\u5728\u6d89\u53ca\u591a\u8868\u8fde\u63a5\u7684\u67e5\u8be2\u64cd\u4f5c\u65f6\u3002 \u7ef4\u5ea6\u5efa\u6a21 \u5728\u6570\u636e\u7ed3\u6784\u53d8\u5316\u65f6\uff0c\u7531\u4e8e\u6570\u636e\u5b58\u5728\u4e00\u5b9a\u7684\u5197\u4f59\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u591a\u4e2a\u8868\u8fdb\u884c\u4fee\u6539\u3002\u4f8b\u5982\uff0c\u5f53\u4ea7\u54c1\u7ef4\u5ea6\u589e\u52a0\u4e00\u4e2a\u65b0\u5c5e\u6027\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u5728\u591a\u4e2a\u76f8\u5173\u7684\u4e8b\u5b9e\u8868\u548c\u7ef4\u5ea6\u8868\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u3002 \u7136\u800c\uff0c\u5728\u6570\u636e\u5206\u6790\u9700\u6c42\u76f8\u5bf9\u7a33\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u7ef4\u5ea6\u5efa\u6a21\u7684\u6570\u636e\u4ed3\u5e93\u7ef4\u62a4\u6210\u672c\u76f8\u5bf9\u8f83\u4f4e\uff0c\u56e0\u4e3a\u67e5\u8be2\u64cd\u4f5c\u76f8\u5bf9\u7b80\u5355\u3002"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_8","title":"\u9700\u6c42\u5f00\u53d1\u6d41\u7a0b","text":"I.\u9700\u6c42\u6c9f\u901a <p>\u6c9f\u901a\u9700\u6c42\u7684\u80cc\u666f\u3001\u6392\u671f\u4f18\u5148\u7ea7\u4ee5\u53ca\u6700\u540e\u4ea4\u4ed8\u7269</p> II.\u8bc4\u4f30\u53ef\u884c\u6027\u548c\u6f5c\u5728\u5f71\u54cd <p>\u9700\u8981\u7528\u5230\u54ea\u4e9b\u6570\u636e\uff0c\u76ee\u524d\u6709\u6ca1\u6709\u5bf9\u5e94\u7684\u6a21\u578b\uff1f\u6ca1\u6709\u7684\u8bdd\u662f\u5426\u9700\u8981\u63a5\u5165\u65b0\u7684\u6570\u636e\uff1f\u63a5\u5165\u7684\u8bdd\u662f\u5426\u4f1a\u5bf9\u4e0b\u6e38 SLA \u4ea7\u751f\u5f71\u54cd\uff1f</p> III.\u6570\u636e\u5f00\u53d1 <p>1.\u6570\u636e\u63a2\u67e5\uff1a\u7b80\u5355\u8d70\u4e00\u904d\u6570\u636e\u94fe\u8def\uff0c\u770b\u9700\u8981\u7684\u5b57\u6bb5\u662f\u5426\u90fd\u80fd\u53d6\u5230</p> <p>2.\u9009\u6a21\u578b\uff08\u5df2\u6709\uff09\uff1a\u4e00\u822c\u8d8a\u4e0a\u5c42\u7684\u8868\uff0c\u5b57\u6bb5\u8d8a\u4e30\u5bcc/\u9884\u8ba1\u7b97\u8fc7\uff0c\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u5f00\u53d1/\u8ba1\u7b97\uff0c\u4f46\u662f\u540c\u65f6\u8d8a\u4e0a\u5c42\u8026\u5408\u7a0b\u5ea6\u8d8a\u9ad8\uff0c\u4ea7\u51fa\u65f6\u95f4\u4e5f\u8d8a\u665a</p> <p>3.\u6a21\u578b\u5f00\u53d1\uff08\u65b0\u5efa\uff09\uff1a\u68b3\u7406\u4e00\u4e0b\u9700\u8981\u65b0\u5efa\u54ea\u4e9b\u8868\uff0c\u653e\u54ea\u4e00\u5c42\uff0c\u4f9d\u8d56\u5173\u7cfb\u662f\u600e\u6837\u3002\u7ef4\u5ea6\u5efa\u6a21\u6d41\u7a0b\uff1a\u4e1a\u52a1\u8fc7\u7a0b \u2192 \u7c92\u5ea6 \u2192 \u7ef4\u5ea6 \u2192 \u4e8b\u5b9e</p> IV.\u6d4b\u8bd5&amp;\u4e0a\u7ebf <p>\u5173\u6ce8\uff1a</p> <ol> <li>\u6570\u636e\u7684\u51c6\u786e\u6027\u3001\u6570\u636e\u8d28\u91cf</li> <li>\u4ee3\u7801\u89c4\u8303\u3001\u547d\u540d\u89c4\u8303</li> <li>\u6027\u80fd</li> </ol> V.DQC&amp;SLA <p>\u6309\u9700\u914d\u7f6e DQC \u548c SLA</p>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_9","title":"\u6a21\u578b\u8bbe\u8ba1\u57fa\u672c\u539f\u5219","text":"\u539f\u5219 \u9610\u8ff0 \u76ee\u7684\u53ca\u610f\u4e49 \u9ad8\u5185\u805a\u548c\u4f4e\u8026\u5408 \u5c06\u4e1a\u52a1\u76f8\u5173\u3001\u7c92\u5ea6\u76f8\u540c\u7684\u6570\u636e\u8bbe\u8ba1\u4e3a\u540c\u4e00\u4e2a\u7269\u7406\u6a21\u578b\uff0c\u5c06\u9ad8\u9891\u7387\u540c\u65f6\u8bbf\u95ee\u7684\u6570\u636e\u653e\u4e00\u8d77\uff0c\u5c06\u4f4e\u9891\u7387\u540c\u65f6\u8bbf\u95ee\u7684\u6570\u636e\u5206\u5f00\u5b58\u50a8 \u63d0\u9ad8\u6570\u636e\u7ec4\u7ec7\u5408\u7406\u6027\uff0c\u4fbf\u4e8e\u5feb\u901f\u83b7\u53d6\u9ad8\u9891\u8bbf\u95ee\u6570\u636e\uff0c\u63d0\u5347\u4f7f\u7528\u6548\u7387\uff0c\u964d\u4f4e\u5173\u8054\u5e72\u6270\uff0c\u4f7f\u6570\u636e\u7ed3\u6784\u6e05\u6670\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u7ba1\u7406 \u6838\u5fc3\u6a21\u578b\u4e0e\u6269\u5c55\u6a21\u578b\u5206\u79bb \u6838\u5fc3\u6a21\u578b\u5305\u62ec\u7684\u5b57\u6bb5\u652f\u6301\u5e38\u7528\u7684\u6838\u5fc3\u4e1a\u52a1\uff0c\u6269\u5c55\u6a21\u578b\u5305\u62ec\u7684\u5b57\u6bb5\u652f\u6301\u4e2a\u6027\u5316\u6216\u5c11\u91cf\u5e94\u7528\u7684\u9700\u8981 \u805a\u7126\u6838\u5fc3\u4e1a\u52a1\u9700\u6c42\uff0c\u4fdd\u969c\u6838\u5fc3\u4e1a\u52a1\u6570\u636e\u5904\u7406\u9ad8\u6548\u3001\u7a33\u5b9a\uff0c\u6ee1\u8db3\u591a\u6837\u5316\u4e1a\u52a1\u8bc9\u6c42\uff0c\u4fdd\u6301\u6570\u636e\u6a21\u578b\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027 \u516c\u5171\u5904\u7406\u903b\u8f91\u4e0b\u6c89 \u8d8a\u662f\u516c\u7528\u7684\u5904\u7406\u903b\u8f91\uff0c\u8d8a\u5e94\u8be5\u5728\u6570\u636e\u8c03\u5ea6\u4f9d\u8d56\u7684\u5e95\u5c42\u8fdb\u884c\u5c01\u88c5\u4e0e\u5b9e\u73b0\uff0c\u4e0d\u8981\u8ba9\u516c\u5171\u903b\u8f91\u591a\u5904\u540c\u65f6\u5b58\u5728 \u51cf\u5c11\u4ee3\u7801\u91cd\u590d\u7f16\u5199\uff0c\u964d\u4f4e\u4e0d\u4e00\u81f4\u6027\u98ce\u9669\uff0c\u4fbf\u4e8e\u7edf\u4e00\u4fee\u6539\u4f18\u5316\uff0c\u63d0\u9ad8\u7ef4\u62a4\u6548\u7387\uff0c\u4fdd\u8bc1\u6570\u636e\u5904\u7406\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027 \u6210\u672c\u4e0e\u6027\u80fd\u5e73\u8861 \u9002\u5f53\u7684\u6570\u636e\u5197\u4f59\u53ef\u4ee5\u6362\u53d6\u67e5\u8be2\u548c\u5237\u65b0\u6027\u80fd\uff0c\u4f46\u4e0d\u8981\u8fc7\u5ea6\u5197\u4f59 \u63d0\u5347\u67e5\u8be2\u3001\u5237\u65b0\u7b49\u64cd\u4f5c\u6027\u80fd\uff0c\u52a0\u5feb\u6570\u636e\u8bfb\u53d6\u548c\u5c55\u793a\u901f\u5ea6\uff0c\u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u80fd\u529b\uff0c\u907f\u514d\u8fc7\u5ea6\u5197\u4f59\u5360\u7528\u5927\u91cf\u7a7a\u95f4\u53ca\u589e\u52a0\u64cd\u4f5c\u590d\u6742\u5ea6\uff0c\u6743\u8861\u6210\u672c\u4e0e\u6027\u80fd\u5173\u7cfb \u6570\u636e\u53ef\u56de\u6eda \u5904\u7406\u903b\u8f91\u4e0d\u53d8\uff0c\u5728\u4e0d\u540c\u65f6\u95f4\u591a\u6b21\u8fd0\u884c\uff0c\u6570\u636e\u7ed3\u679c\u786e\u5b9a\u4e0d\u53d8 \u4fdd\u8bc1\u6570\u636e\u7a33\u5b9a\u6027\u548c\u53ef\u8ffd\u6eaf\u6027\uff0c\u4fbf\u4e8e\u8fd8\u539f\u5386\u53f2\u6570\u636e\u72b6\u6001\uff0c\u52a9\u529b\u6570\u636e\u8d28\u91cf\u628a\u63a7\u548c\u95ee\u9898\u6392\u67e5 \u4e00\u81f4\u6027 \u5177\u6709\u76f8\u540c\u542b\u4e49\u7684\u5b57\u6bb5\u5728\u4e0d\u540c\u7684\u8868\u4e2d\u547d\u540d\u5fc5\u987b\u76f8\u540c \u4fdd\u8bc1\u6570\u636e\u5728\u4e0d\u540c\u8868\u95f4\u7edf\u4e00\u6027\u3001\u89c4\u8303\u6027\uff0c\u4fbf\u4e8e\u7406\u89e3\u6570\u636e\u542b\u4e49\uff0c\u907f\u514d\u8bef\u89e3\uff0c\u65b9\u4fbf\u6570\u636e\u6574\u5408\u3001\u5173\u8054\u53ca\u5206\u6790\uff0c\u63d0\u5347\u53ef\u7528\u6027 \u547d\u540d\u6e05\u6670\u53ef\u7406\u89e3 \u8868\u540d\u9700\u6613\u4e8e\u6d88\u8d39\u8005\u7406\u89e3\u548c\u4f7f\u7528 \u8ba9\u4f7f\u7528\u8005\u5feb\u901f\u77e5\u6653\u8868\u4e2d\u6570\u636e\u8303\u56f4\u548c\u7528\u9014\uff0c\u63d0\u9ad8\u67e5\u627e\u3001\u4f7f\u7528\u6548\u7387\uff0c\u6709\u52a9\u4e8e\u6570\u636e\u6a21\u578b\u63a8\u5e7f\u548c\u5e94\u7528"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_10","title":"\u7ef4\u5ea6\u5efa\u6a21\u6709\u54ea\u4e9b\u6a21\u578b","text":"\u6a21\u578b\u540d\u79f0 \u5b9a\u4e49 \u7279\u70b9\u53ca\u5e94\u7528\u573a\u666f \u661f\u578b\u6a21\u578b \u4ee5\u4e8b\u5b9e\u8868\u4f5c\u4e3a\u4e2d\u5fc3\uff0c\u6240\u6709\u7684\u7ef4\u5ea6\u8868\u90fd\u76f4\u63a5\u4e0e\u4e8b\u5b9e\u8868\u76f8\u8fde\u63a5\uff0c\u6574\u4f53\u7ed3\u6784\u5448\u73b0\u51fa\u7c7b\u4f3c\u661f\u661f\u7684\u5f62\u72b6\uff0c\u6545\u800c\u5f97\u540d\u661f\u578b\u6a21\u578b\u3002\u662f\u7ef4\u5ea6\u5efa\u6a21\u4e2d\u6700\u4e3a\u5e38\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\u3002 \u7ed3\u6784\u7b80\u5355\u6e05\u6670\uff0c\u6570\u636e\u5173\u7cfb\u76f4\u89c2\uff0c\u6570\u636e\u5206\u6790\u548c\u67e5\u8be2\u65f6\u64cd\u4f5c\u76f8\u5bf9\u4fbf\u6377\uff0c\u80fd\u9ad8\u6548\u83b7\u53d6\u6570\u636e\u3002\u5e38\u7528\u4e8e\u4e1a\u52a1\u903b\u8f91\u76f8\u5bf9\u6e05\u6670\u3001\u7ef4\u5ea6\u76f8\u5bf9\u56fa\u5b9a\u7684\u6570\u636e\u5206\u6790\u573a\u666f\u3002 \u96ea\u82b1\u6a21\u578b \u7531\u661f\u578b\u6a21\u578b\u884d\u751f\u800c\u6765\uff0c\u7ef4\u5ea6\u8868\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8fde\u63a5\u5176\u4ed6\u7ef4\u5ea6\u8868\uff0c\u7ed3\u6784\u7279\u70b9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7c7b\u4f3c\u4e8e\u9075\u5faa\u7b2c\u4e09\u8303\u5f0f\uff083NF\uff09\u7684\u5173\u7cfb\u6a21\u578b\uff0c\u901a\u8fc7\u5bf9\u7ef4\u5ea6\u8868\u7684\u8fdb\u4e00\u6b65\u7ec6\u5316\u548c\u89c4\u8303\u5316\u6765\u7ec4\u7ec7\u6570\u636e\u3002 \u51cf\u5c11\u4e86\u6570\u636e\u5197\u4f59\uff0c\u6570\u636e\u7ed3\u6784\u66f4\u89c4\u8303\u5316\uff0c\u4f46\u67e5\u8be2\u65f6\u76f8\u8f83\u4e8e\u661f\u578b\u6a21\u578b\u53ef\u80fd\u9700\u66f4\u591a\u8fde\u63a5\u64cd\u4f5c\uff0c\u590d\u6742\u5ea6\u589e\u52a0\u3002\u9002\u7528\u4e8e\u5bf9\u6570\u636e\u89c4\u8303\u6027\u8981\u6c42\u8f83\u9ad8\u3001\u6570\u636e\u91cf\u8f83\u5927\u4e14\u9700\u4e25\u683c\u63a7\u5236\u5197\u4f59\u7684\u573a\u666f\u3002 \u661f\u5ea7\u6a21\u578b \u662f\u661f\u578b\u6a21\u578b\u7684\u884d\u751f\u5f62\u5f0f\uff0c\u57fa\u4e8e\u591a\u5f20\u4e8b\u5b9e\u8868\u6784\u5efa\uff0c\u4e14\u4e8b\u5b9e\u8868\u4e4b\u95f4\u4f1a\u5171\u4eab\u7ef4\u5ea6\u4fe1\u606f\uff0c\u5373\u7ef4\u5ea6\u8868\u4e4b\u95f4\u6709\u53ef\u80fd\u76f8\u4e92\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5728\u5b9e\u9645\u4f01\u4e1a\u73af\u5883\u4e2d\u591a\u88ab\u7528\u4e8e\u7ef4\u5ea6\u5efa\u6a21\u3002 \u80fd\u9002\u5e94\u4f01\u4e1a\u590d\u6742\u4e1a\u52a1\u573a\u666f\uff0c\u5c06\u591a\u4e2a\u76f8\u5173\u4e1a\u52a1\u7684\u4e8b\u5b9e\u8868\u901a\u8fc7\u5171\u4eab\u7ef4\u5ea6\u8fdb\u884c\u6574\u5408\uff0c\u4fbf\u4e8e\u4ece\u591a\u4e2a\u89d2\u5ea6\u5bf9\u4e0d\u540c\u4e1a\u52a1\u6570\u636e\u8fdb\u884c\u7efc\u5408\u5206\u6790\u3002"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_11","title":"\u4e8b\u5b9e\u8868\u8bbe\u8ba1","text":""},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_12","title":"\u4e8b\u5b9e\u7c7b\u578b","text":"<p>\u4f5c\u4e3a\u5ea6\u91cf\u4e1a\u52a1\u8fc7\u7a0b\u7684\u4e8b\u5b9e\uff0c\u6709\u53ef\u52a0\u6027\u3001\u534a\u53ef\u52a0\u6027\u548c\u4e0d\u53ef\u52a0\u6027\u4e09\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>\u53ef\u52a0\u6027\u4e8b\u5b9e\u6307\u53ef\u4ee5\u6309\u7167\u4e0e\u4e8b\u5b9e\u8868\u5173\u8054\u7684\u4efb\u610f\u7ef4\u5ea6\u8fdb\u884c\u6c47\u603b\u3002</li> <li>\u534a\u53ef\u52a0\u4e8b\u5b9e\u53ea\u80fd\u6309\u7167\u7279\u5b9a\u7ef4\u5ea6\u6c47\u603b\uff0c\u4e0d\u80fd\u5bf9\u6240\u6709\u7ef4\u5ea6\u6c47\u603b\u3002</li> <li>\u4e0d\u53ef\u52a0\u6027\u4e8b\u5b9e\u5b8c\u5168\u4e0d\u5177\u5907\u53ef\u52a0\u6027\uff0c\u6bd4\u5982\u6bd4\u4f8b\u4e8b\u5b9e\u3002\u5bf9\u4e8e\u4e0d\u53ef\u52a0\u6027\u4e8b\u5b9e\u53ef\u8003\u8651\u5206\u89e3\u4e3a\u53ef\u52a0\u7684\u7ec4\u4ef6\u6765\u5b9e\u73b0\u805a\u5408\u3002</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_13","title":"\u4e8b\u5b9e\u8868\u7c7b\u578b","text":"<ul> <li>\u4e8b\u52a1\u4e8b\u5b9e\u8868\uff1a\u8bb0\u5f55\u4e8b\u52a1\u5c42\u9762\u7684\u4e8b\u5b9e\uff0c\u8bb0\u5f55\u6700\u539f\u5b50\u7684\u6570\u636e\uff0c\u7c92\u5ea6\u901a\u5e38\u4e3a\u6bcf\u4e2a\u4e8b\u52a1\u8bb0\u5f55\u4e00\u6761\u6570\u636e</li> <li>\u5468\u671f\u5feb\u7167\u4e8b\u5b9e\u8868\uff1a\u4ee5\u5468\u671f\u6027\u7684\u65f6\u95f4\u95f4\u9694\u6765\u8bb0\u5f55\u4e8b\u5b9e\uff0c\u5982\u5e93\u5b58\u65e5\u5feb\u7167\u8868\uff0c\u7c92\u5ea6\u662f\u4e00\u4e2a\u5468\u671f\u6027\u7684\u65f6\u95f4\u95f4\u9694\u5185\u7684\u4e8b\u52a1\u8bb0\u5f55\u4e00\u6761\u6570\u636e</li> <li>\u7d2f\u8ba1\u5feb\u7167\u4e8b\u5b9e\u8868\uff1a\u8bb0\u5f55\u4e0d\u786e\u5b9a\u5468\u671f\u7684\u6570\u636e\uff0c\u901a\u5e38\u8986\u76d6\u4e00\u4e2a\u4e8b\u52a1\u7684\u751f\u547d\u5468\u671f\uff0c\u8bb0\u5f55\u4e00\u4e9b\u5173\u952e\u65f6\u95f4\u70b9\uff0c\u5982\u8ba2\u5355\u7d2f\u8ba1\u5feb\u7167\u4e8b\u5b9e\u8868\u4f1a\u8bb0\u5f55\u4ed8\u6b3e\u65e5\u671f\u3001\u53d1\u8d27\u65e5\u671f\u3001\u6536\u8d27\u65e5\u671f\u7b49\u3002</li> </ul> \u4e8b\u52a1\u4e8b\u5b9e\u8868 \u5468\u671f\u5feb\u7167\u4e8b\u5b9e\u8868 \u7d2f\u8ba1\u5feb\u7167\u4e8b\u5b9e\u8868 \u65f6\u95f4 \u79bb\u6563\u4e8b\u52a1\u65f6\u95f4\u70b9 \u4ee5\u6709\u89c4\u5f8b\u7684\u3001\u53ef\u9884\u6d4b\u7684\u95f4\u9694\u4ea7\u751f\u5feb\u7167 \u7528\u4e8e\u65f6\u95f4\u8de8\u5ea6\u4e0d\u786e\u5b9a\u7684\u4e0d\u65ad\u53d8\u5316\u7684\u5de5\u4f5c\u6d41 \u65e5\u671f\u7ef4\u5ea6 \u4e8b\u52a1\u65e5\u671f \u5feb\u7167\u65e5\u671f \u76f8\u5173\u4e1a\u52a1\u8fc7\u7a0b\u6d89\u53ca\u7684\u591a\u4e2a\u65e5\u671f \u7c92\u5ea6 \u6bcf\u884c\u4ee3\u8868\u5b9e\u4f53\u7684\u4e00\u4e2a\u4e8b\u52a1 \u6bcf\u884c\u4ee3\u8868\u67d0\u65f6\u95f4\u5468\u671f\u7684\u4e00\u4e2a\u5b9e\u4f53 \u6bcf\u884c\u4ee3\u8868\u4e00\u4e2a\u5b9e\u4f53\u7684\u751f\u547d\u5468\u671f \u4e8b\u5b9e \u4e8b\u52a1\u4e8b\u5b9e \u7d2f\u79ef\u4e8b\u5b9e \u76f8\u5173\u4e1a\u52a1\u8fc7\u7a0b\u4e8b\u5b9e\u548c\u65f6\u95f4\u95f4\u9694\u4e8b\u5b9e \u4e8b\u5b9e\u8868\u52a0\u8f7d \u63d2\u5165 \u63d2\u5165 \u63d2\u5165\u4e0e\u66f4\u65b0 \u4e8b\u5b9e\u8868\u66f4\u65b0 \u4e0d\u66f4\u65b0 \u4e0d\u66f4\u65b0 \u4e1a\u52a1\u8fc7\u7a0b\u53d8\u66f4\u65f6\u66f4\u65b0"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_14","title":"\u4e8b\u5b9e\u8868\u8bbe\u8ba1\u8fc7\u7a0b","text":"<p>\u7b2c\u4e00\u6b65\uff1a\u9009\u62e9\u4e1a\u52a1\u8fc7\u7a0b\u53ca\u786e\u5b9a\u4e8b\u5b9e\u8868\u7c7b\u578b</p> <ul> <li>\u9009\u4e1a\u52a1\u8fc7\u7a0b\uff1a\u4e1a\u52a1\u8fc7\u7a0b\u7528\u884c\u4e3a\u52a8\u8bcd\u4f53\u73b0\u6d3b\u52a8\uff0c\u5982\u6dd8\u5b9d\u8ba2\u5355\u6d41\u8f6c\u542b\u201c\u521b\u5efa\u8ba2\u5355\u201d\u201c\u4e70\u5bb6\u4ed8\u6b3e\u201d\u7b49\u56db\u4e2a\u8fc7\u7a0b\uff0c\u9700\u4f9d\u4e1a\u52a1\u9700\u6c42\u9009\u4e0e\u7ef4\u5ea6\u5efa\u6a21\u76f8\u5173\u7684\u8fc7\u7a0b\u3002</li> <li>\u5b9a\u4e8b\u5b9e\u8868\u7c7b\u578b\uff1a\u9009\u597d\u4e1a\u52a1\u8fc7\u7a0b\u540e\u786e\u5b9a\u4e8b\u5b9e\u8868\u7c7b\u578b\u3002\u5982\u679c\u9009\u201c\u4e70\u5bb6\u4ed8\u6b3e\u201d\u8fd9\u4e00\u4e1a\u52a1\u8fc7\u7a0b\u5219\u5bf9\u5e94\u5355\u4e8b\u52a1\u4e8b\u5b9e\u8868\uff1b\u5982\u679c\u9009\u56db\u4e2a\u8fc7\u7a0b\u4e14\u8981\u5206\u6790\u65f6\u95f4\u95f4\u9694\uff0c\u5219\u5bf9\u5e94\u7d2f\u8ba1\u5feb\u7167\u4e8b\u5b9e\u8868\u3002</li> </ul> <p>\u7b2c\u4e8c\u6b65\uff1a\u58f0\u660e\u7c92\u5ea6</p> <ul> <li>\u91cd\u8981\u6027\uff1a\u660e\u786e\u7c92\u5ea6\u53ef\u907f\u514d\u5bf9\u4e8b\u5b9e\u8868\u884c\u542b\u4e49\u7406\u89e3\u6df7\u6dc6\uff0c\u4fdd\u8bc1\u6309\u7edf\u4e00\u7ec6\u8282\u5c42\u6b21\u8bb0\u5f55\u4e8b\u5b9e\u3002</li> <li>\u539f\u5219\uff1a\u5c3d\u91cf\u9009\u6700\u7ec6\u7684\u539f\u5b50\u7c92\u5ea6\uff0c\u4fdd\u969c\u4e8b\u5b9e\u8868\u5e94\u7528\u7075\u6d3b\u6027\u3002</li> </ul> <p>\u7b2c\u4e09\u6b65\uff1a\u786e\u5b9a\u7ef4\u5ea6</p> <p>\u5b8c\u6210\u7c92\u5ea6\u58f0\u660e\u5373\u786e\u5b9a\u4e3b\u952e\uff0c\u636e\u6b64\u786e\u5b9a\u7ef4\u5ea6\u7ec4\u5408\u4e0e\u76f8\u5173\u5b57\u6bb5\uff0c\u8981\u9009\u80fd\u63cf\u8ff0\u4e1a\u52a1\u73af\u5883\u7684\u7ef4\u5ea6\u4fe1\u606f\uff0c\u5982\u6dd8\u5b9d\u8ba2\u5355\u4ed8\u6b3e\u4e8b\u5b9e\u8868\uff08\u7c92\u5ea6\u4e3a\u5b50\u8ba2\u5355\uff09\u7684\u4e70\u5bb6\u3001\u5356\u5bb6\u7b49\u7ef4\u5ea6\u3002</p> <p>\u7b2c\u56db\u6b65\uff1a\u786e\u5b9a\u4e8b\u5b9e</p> <p>\u901a\u8fc7\u56de\u7b54\u201c\u8fc7\u7a0b\u7684\u5ea6\u91cf\u662f\u4ec0\u4e48\u201d\u786e\u5b9a\u4e8b\u5b9e\uff0c\u5982\u6dd8\u5b9d\u8ba2\u5355\u4ed8\u6b3e\u4e8b\u5b9e\u8868\u4e2d\u540c\u7c92\u5ea6\u4e8b\u5b9e\u6709\u5b50\u8ba2\u5355\u5206\u644a\u652f\u4ed8\u91d1\u989d\u3001\u90ae\u8d39\u3001\u4f18\u60e0\u91d1\u989d\u7b49\u3002</p> <p>\u7b2c\u4e94\u6b65\uff1a\u5197\u4f59\u7ef4\u5ea6</p> <p>\u4f20\u7edf\u7ef4\u5ea6\u5efa\u6a21\u661f\u578b\u6a21\u578b\u5c06\u7ef4\u5ea6\u653e\u7ef4\u8868\uff0c\u7528\u5916\u952e\u83b7\u53d6\u4ee5\u51cf\u5c11\u5197\u4f59\u3001\u5b58\u50a8\u6d88\u8017\uff1b\u5927\u6570\u636e\u4e8b\u5b9e\u8868\u6a21\u578b\u4e3a\u63d0\u9ad8\u4e0b\u6e38\u7528\u6237\u4f7f\u7528\u6548\u7387\uff0c\u5e38\u5197\u4f59\u5e38\u7528\u7ef4\u5ea6\uff0c\u5982\u6dd8\u5b9d\u8ba2\u5355\u4ed8\u6b3e\u4e8b\u5b9e\u8868\u4e2d\u5197\u4f59\u5546\u54c1\u7c7b\u76ee\u3001\u5356\u5bb6\u5e97\u94fa\u7b49\u5b57\u6bb5\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_15","title":"\u591a\u4e8b\u52a1\u4e8b\u5b9e\u8868\u4e2d\u4e8b\u5b9e\u7684\u5904\u7406\u65b9\u6cd5","text":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528\u4e0d\u540c\u4e8b\u5b9e\u5b57\u6bb5\u5b58\u653e\u4e0d\u540c\u4e1a\u52a1\u8fc7\u7a0b\u7684\u4e8b\u5b9e \u4e0d\u540c\u4e1a\u52a1\u8fc7\u7a0b\u7684\u4e8b\u5b9e\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u7684\u4e8b\u5b9e\u5b57\u6bb5\u6765\u8fdb\u884c\u5b58\u653e\u3002 \u4f8b\u5982\uff0c\u5728\u6dd8\u5b9d\u4ea4\u6613\u4e8b\u52a1\u4e8b\u5b9e\u8868\u4e2d\uff0c\u4f1a\u8bbe\u7f6e\u201c\u4e0b\u5355\u5ea6\u91cf\u201d\u5b57\u6bb5\u7528\u4e8e\u5b58\u653e\u4e0b\u5355\u4e1a\u52a1\u8fc7\u7a0b\u76f8\u5173\u4e8b\u5b9e\uff0c\u201c\u652f\u4ed8\u5ea6\u91cf\u201d\u5b57\u6bb5\u7528\u4e8e\u5b58\u653e\u652f\u4ed8\u4e1a\u52a1\u8fc7\u7a0b\u76f8\u5173\u4e8b\u5b9e\uff0c\u201c\u5b8c\u7ed3\u5ea6\u91cf\u201d\u5b57\u6bb5\u7528\u4e8e\u5b58\u653e\u5b8c\u7ed3\u4e1a\u52a1\u8fc7\u7a0b\u76f8\u5173\u4e8b\u5b9e\u3002 \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u540c\u4e00\u4e2a\u4e8b\u5b9e\u5b57\u6bb5\u5b58\u653e\u4e0d\u540c\u4e1a\u52a1\u8fc7\u7a0b\u7684\u4e8b\u5b9e\u5e76\u589e\u52a0\u4e1a\u52a1\u8fc7\u7a0b\u6807\u7b7e \u5c06\u4e0d\u540c\u4e1a\u52a1\u8fc7\u7a0b\u7684\u4e8b\u5b9e\u653e\u5728\u540c\u4e00\u4e2a\u4e8b\u5b9e\u5b57\u6bb5\u4e2d\u5b58\u50a8\uff0c\u540c\u65f6\u589e\u52a0\u4e00\u4e2a\u4e1a\u52a1\u8fc7\u7a0b\u6807\u7b7e\u6765\u533a\u5206\u3002 \u6bd4\u5982\u5728\u6536\u85cf\u4e8b\u52a1\u4e8b\u5b9e\u8868\u4e2d\uff0c\u4f1a\u8bbe\u7f6e\u201c\u6536\u85cf\u5220\u9664\u7c7b\u578b\u201d\u5b57\u6bb5\u4ee5\u8868\u660e\u4e1a\u52a1\u8fc7\u7a0b\u7c7b\u578b\uff08\u662f\u6536\u85cf\u8fd8\u662f\u5220\u9664\u7b49\uff09\uff0c\u4ee5\u53ca\u201c\u6536\u85cf\u5220\u9664\u5ea6\u91cf\u201d\u5b57\u6bb5\u6765\u5b58\u653e\u5bf9\u5e94\u7684\u5ea6\u91cf\u6570\u636e\u3002 <p>\u4e24\u79cd\u65b9\u6cd5\u7684\u9009\u62e9\u4f9d\u636e</p> <ul> <li>\u5f53\u4e0d\u540c\u4e1a\u52a1\u8fc7\u7a0b\u7684\u5ea6\u91cf\u6bd4\u8f83\u76f8\u4f3c\u65f6\uff0c\u9002\u5b9c\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u3002</li> <li>\u5f53\u4e0d\u540c\u4e1a\u52a1\u8fc7\u7a0b\u7684\u5ea6\u91cf\u5dee\u5f02\u6bd4\u8f83\u5927\u65f6\uff0c\u5219\u91c7\u7528\u7b2c\u4e00\u79cd\u65b9\u5f0f\u3002</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_16","title":"\u4e8b\u5b9e\u8868\u8bbe\u8ba1\u7684\u516b\u5927\u539f\u5219","text":"<ol> <li>\u5c3d\u53ef\u80fd\u5305\u542b\u6240\u6709\u4e0e\u4e1a\u52a1\u8fc7\u7a0b\u76f8\u5173\u7684\u4e8b\u5b9e</li> <li>\u53ea\u9009\u62e9\u4e0e\u4e1a\u52a1\u8fc7\u7a0b\u76f8\u5173\u7684\u4e8b\u5b9e</li> <li>\u5206\u89e3\u4e0d\u53ef\u52a0\u4e8b\u5b9e\u4e3a\u53ef\u52a0\u4e8b\u5b9e</li> <li>\u5728\u9009\u62e9\u7ef4\u5ea6\u548c\u4e8b\u5b9e\u4e4b\u524d\u5fc5\u987b\u5148\u58f0\u660e\u7c92\u5ea6</li> <li>\u5728\u540c\u4e00\u4e2a\u4e8b\u5b9e\u8868\u4e2d\u4e0d\u80fd\u6709\u4e0d\u540c\u7c92\u5ea6\u7684\u4e8b\u5b9e</li> <li>\u4e8b\u5b9e\u7684\u5355\u4f4d\u8981\u4fdd\u6301\u4e00\u81f4</li> <li>\u5bf9\u4e8b\u5b9e\u7684 null \u503c\u8981\u5904\u7406</li> <li>\u4f7f\u7528\u9000\u5316\u7ef4\u5ea6\u63d0\u9ad8\u4e8b\u5b9e\u8868\u7684\u6613\u7528\u6027</li> </ol>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_17","title":"\u7ef4\u5ea6\u8868\u8bbe\u8ba1","text":""},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_18","title":"\u7ef4\u5ea6\u8868\u8bbe\u8ba1\u8fc7\u7a0b","text":"<p>\u4ee5\u6dd8\u5b9d\u7684\u5546\u54c1\u7ef4\u5ea6\u4e3a\u4f8b\u9610\u8ff0\u7ef4\u5ea6\u8bbe\u8ba1\u65b9\u6cd5</p> \u7b2c\u4e00\u6b65\uff1a\u9009\u62e9\u7ef4\u5ea6 \u7ef4\u5ea6\u5efa\u6a21\u4e2d\uff0c\u7ef4\u5ea6\u7684\u9009\u62e9\u81f3\u5173\u91cd\u8981\uff0c\u5176\u4f5c\u4e3a\u6838\u5fc3\u90e8\u5206\uff0c\u5728\u4f01\u4e1a\u7ea7\u6570\u4ed3\u91cc\u52a1\u5fc5\u786e\u4fdd\u7ef4\u5ea6\u7684\u552f\u4e00\u6027\u3002\u5728\u6b64\u6848\u4f8b\u4e2d\uff0c\u786e\u5b9a\u9009\u62e9\u7684\u7ef4\u5ea6\u4e3a\u5546\u54c1\u7ef4\u5ea6\uff0c\u5b83\u5c06\u6210\u4e3a\u540e\u7eed\u56f4\u7ed5\u5546\u54c1\u76f8\u5173\u6570\u636e\u8fdb\u884c\u5206\u6790\u7684\u5173\u952e\u89d2\u5ea6\u3002 \u7b2c\u4e8c\u6b65\uff1a\u786e\u5b9a\u4e3b\u7ef4\u8868 \u901a\u5e38\u800c\u8a00\uff0c\u4e3b\u7ef4\u8868\u4e00\u822c\u9009\u53d6 ODS\uff08\u64cd\u4f5c\u6570\u636e\u5b58\u50a8\uff09\u8868\uff0c\u8fd9\u7c7b\u8868\u80fd\u591f\u76f4\u63a5\u4e0e\u4e1a\u52a1\u7cfb\u7edf\u8fdb\u884c\u540c\u6b65\uff0c\u4fdd\u969c\u6570\u636e\u7684\u53ca\u65f6\u6027\u4e0e\u539f\u59cb\u6027\u3002\u4ee5\u6dd8\u5b9d\u5546\u54c1\u7ef4\u5ea6\u4e3a\u4f8b\uff0c\u201cs_auction_auctions\u201d\u8868\u662f\u4e0e\u524d\u53f0\u5546\u54c1\u4e2d\u5fc3\u7cfb\u7edf\u5b9e\u73b0\u540c\u6b65\u7684\u5546\u54c1\u8868\uff0c\u6240\u4ee5\u8be5\u8868\u5373\u88ab\u786e\u5b9a\u4e3a\u4e3b\u7ef4\u8868\uff0c\u5b83\u627f\u8f7d\u7740\u5546\u54c1\u7ef4\u5ea6\u7684\u6838\u5fc3\u6570\u636e\u4fe1\u606f\uff0c\u662f\u540e\u7eed\u6784\u5efa\u7ef4\u5ea6\u7684\u91cd\u8981\u57fa\u7840\u3002 \u7b2c\u4e09\u6b65\uff1a\u786e\u5b9a\u76f8\u5173\u7ef4\u8868 \u6570\u636e\u4ed3\u5e93\u672c\u8eab\u662f\u5bf9\u4e1a\u52a1\u6e90\u7cfb\u7edf\u6570\u636e\u7684\u6574\u5408\u6c47\u805a\uff0c\u5728\u5b9e\u9645\u4e1a\u52a1\u4e2d\uff0c\u4e0d\u540c\u4e1a\u52a1\u7cfb\u7edf\u6216\u8005\u540c\u4e00\u4e1a\u52a1\u7cfb\u7edf\u5185\u7684\u4e0d\u540c\u8868\u4e4b\u95f4\u5f80\u5f80\u5b58\u5728\u7740\u5173\u8054\u6027\u3002\u57fa\u4e8e\u5bf9\u4e1a\u52a1\u6d41\u7a0b\u7684\u68b3\u7406\uff0c\u8981\u7cbe\u51c6\u786e\u5b9a\u54ea\u4e9b\u8868\u4e0e\u4e3b\u7ef4\u8868\u5b58\u5728\u5173\u8054\u5173\u7cfb\u3002\u5c31\u6dd8\u5b9d\u5546\u54c1\u7ef4\u5ea6\u800c\u8a00\uff0c\u7ecf\u8fc7\u68b3\u7406\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u4e0e\u7c7b\u76ee\u3001SPU\uff08\u6807\u51c6\u5316\u4ea7\u54c1\u5355\u5143\uff09\u3001\u5356\u5bb6\u3001\u5e97\u94fa\u7b49\u7ef4\u5ea6\u5b58\u5728\u5173\u8054\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4e0e\u8fd9\u4e9b\u7ef4\u5ea6\u5bf9\u5e94\u7684\u76f8\u5173\u8868\u4f1a\u548c\u4e3b\u7ef4\u8868\u5728\u6784\u5efa\u5546\u54c1\u7ef4\u5ea6\u65f6\u6709\u6570\u636e\u4e0a\u7684\u5173\u8054\u4e92\u52a8\u3002 <p>\u7b2c\u56db\u6b65\uff1a\u786e\u5b9a\u7ef4\u5ea6\u5c5e\u6027</p> <p>\u8fd9\u4e00\u6b65\u9aa4\u5305\u542b\u4e24\u4e2a\u5b50\u6b65\u9aa4\uff1a</p> <ol> <li>\u4ece\u4e3b\u7ef4\u8868\u4e2d\u9009\u62e9\u6216\u751f\u6210\u7ef4\u5ea6\u5c5e\u6027\uff1a\u9996\u5148\u805a\u7126\u4e3b\u7ef4\u8868\uff0c\u4e5f\u5c31\u662f\u201cs_auction_auctions\u201d\u8868\uff0c\u4ece\u4e2d\u6311\u9009\u90a3\u4e9b\u80fd\u591f\u6e05\u6670\u63cf\u8ff0\u5546\u54c1\u7ef4\u5ea6\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u5546\u54c1\u540d\u79f0\u3001\u5546\u54c1\u7f16\u53f7\u3001\u5546\u54c1\u4ef7\u683c\u7b49\u57fa\u7840\u5c5e\u6027\uff0c\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u4ee5\u53ca\u5df2\u6709\u7684\u6570\u636e\uff0c\u901a\u8fc7\u4e00\u5b9a\u7684\u8ba1\u7b97\u3001\u8f6c\u6362\u7b49\u65b9\u5f0f\u751f\u6210\u65b0\u7684\u7ef4\u5ea6\u5c5e\u6027\uff0c\u7528\u4ee5\u66f4\u5168\u9762\u3001\u7ec6\u81f4\u5730\u523b\u753b\u5546\u54c1\u7279\u5f81\u3002</li> <li>\u4ece\u76f8\u5173\u7ef4\u8868\u4e2d\u9009\u62e9\u6216\u751f\u6210\u7ef4\u5ea6\u5c5e\u6027\uff1a\u63a5\u7740\uff0c\u9488\u5bf9\u90a3\u4e9b\u4e0e\u4e3b\u7ef4\u8868\u76f8\u5173\u8054\u7684\u8868\uff0c\u5982\u7c7b\u76ee\u8868\u3001SPU \u8868\u3001\u5356\u5bb6\u8868\u3001\u5e97\u94fa\u8868\u7b49\uff0c\u540c\u6837\u4ece\u8fd9\u4e9b\u8868\u4e2d\u9009\u53d6\u5bf9\u5546\u54c1\u7ef4\u5ea6\u6709\u4ef7\u503c\u7684\u5c5e\u6027\uff0c\u50cf\u5546\u54c1\u6240\u5c5e\u7c7b\u76ee\u540d\u79f0\u3001SPU \u89c4\u683c\u3001\u5356\u5bb6\u4fe1\u8a89\u7b49\u7ea7\u3001\u5e97\u94fa\u5730\u5740\u7b49\uff0c\u8fd8\u53ef\u4ee5\u4f9d\u636e\u4e1a\u52a1\u903b\u8f91\u4e0e\u6570\u636e\u5206\u6790\u8981\u6c42\uff0c\u4ece\u4e2d\u751f\u6210\u4e00\u4e9b\u65b0\u7684\u7ef4\u5ea6\u5c5e\u6027\uff0c\u8fdb\u4e00\u6b65\u4e30\u5bcc\u5546\u54c1\u7ef4\u5ea6\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u4f7f\u5176\u66f4\u5229\u4e8e\u540e\u7eed\u4ece\u591a\u7ef4\u5ea6\u89d2\u5ea6\u5bf9\u5546\u54c1\u76f8\u5173\u6570\u636e\u8fdb\u884c\u5206\u6790\u4e0e\u6d1e\u5bdf\u3002</li> </ol>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_19","title":"\u5904\u7406\u7f13\u6162\u53d8\u5316\u7ef4","text":"<p>1. \u91cd\u5199\u7ef4\u5ea6\u503c</p> <ul> <li>\u7279\u70b9\uff1a\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u65f6\uff0c\u4e00\u65e6\u7ef4\u5ea6\u503c\u53d1\u751f\u53d8\u5316\uff0c\u5c31\u76f4\u63a5\u8fdb\u884c\u91cd\u5199\u8986\u76d6\uff0c\u5176\u5f0a\u7aef\u5728\u4e8e\u65e0\u6cd5\u4fdd\u7559\u5386\u53f2\u6570\u636e\uff0c\u5bfc\u81f4\u8fc7\u5f80\u7684\u7ef4\u5ea6\u72b6\u6001\u4fe1\u606f\u4e22\u5931\uff0c\u4e0d\u5229\u4e8e\u8ffd\u6eaf\u5386\u53f2\u60c5\u51b5\u3002</li> </ul> <p>2. \u5feb\u7167\u7ef4\u8868</p> <ul> <li>\u65b9\u5f0f\u63cf\u8ff0\uff1a\u6bcf\u5929\u4fdd\u5b58\u4e00\u4efd\u5168\u91cf\u5feb\u7167\u6570\u636e\u3002</li> <li>\u4f18\u70b9\uff1a\u7b80\u5355\u6709\u6548\uff0c\u5176\u5f00\u53d1\u548c\u7ef4\u62a4\u6210\u672c\u76f8\u5bf9\u8f83\u4f4e\uff0c\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\u8f83\u4e3a\u5bb9\u6613\u5b9e\u65bd\u3002\u4f7f\u7528\u65b9\u4fbf\u4e14\u7406\u89e3\u6027\u597d\uff0c\u5bf9\u4e8e\u6570\u636e\u4f7f\u7528\u65b9\u800c\u8a00\uff0c\u53ea\u9700\u8981\u9650\u5b9a\u65e5\u671f\uff0c\u5c31\u80fd\u83b7\u53d6\u5230\u5f53\u5929\u7684\u5feb\u7167\u6570\u636e\u3002\u800c\u4e14\uff0c\u4efb\u610f\u4e00\u5929\u7684\u4e8b\u5b9e\u5feb\u7167\u548c\u7ef4\u5ea6\u5feb\u7167\u901a\u8fc7\u7ef4\u5ea6\u7684\u81ea\u7136\u952e\u8fdb\u884c\u5173\u8054\u5373\u53ef\uff0c\u64cd\u4f5c\u6d41\u7a0b\u6e05\u6670\u660e\u4e86\u3002</li> <li>\u7f3a\u70b9\uff1a\u5b58\u5728\u5b58\u50a8\u8d44\u6e90\u6d6a\u8d39\u7684\u95ee\u9898\u3002\u6bd4\u5982\u9488\u5bf9\u67d0\u4e00\u7ef4\u5ea6\uff0c\u5982\u679c\u6bcf\u5929\u7684\u53d8\u5316\u91cf\u5360\u603b\u4f53\u6570\u636e\u91cf\u7684\u6bd4\u4f8b\u5f88\u4f4e\uff0c\u751a\u81f3\u6ca1\u6709\u53d8\u5316\uff0c\u90a3\u4e48\u5168\u91cf\u4fdd\u5b58\u5feb\u7167\u6570\u636e\u5c31\u4f1a\u6781\u5927\u5730\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\uff0c\u589e\u52a0\u4e0d\u5fc5\u8981\u7684\u6570\u636e\u5b58\u50a8\u6210\u672c\u3002</li> </ul> <p>3. \u63d2\u5165\u65b0\u7684\u7ef4\u5ea6\u884c</p> <ul> <li>\u7279\u70b9\uff1a\u5f53\u7ef4\u5ea6\u53d1\u751f\u53d8\u5316\u540e\uff0c\u901a\u8fc7\u63d2\u5165\u65b0\u7684\u7ef4\u5ea6\u884c\u6765\u8bb0\u5f55\u65b0\u7684\u7ef4\u5ea6\u503c\uff0c\u4ee5\u6b64\u80fd\u591f\u4fdd\u7559\u5386\u53f2\u6570\u636e\u3002</li> <li>\u5c40\u9650\u6027\uff1a\u7136\u800c\uff0c\u8be5\u65b9\u5f0f\u5b58\u5728\u4e00\u5b9a\u5c40\u9650\uff0c\u5b83\u4e0d\u80fd\u5c06\u53d8\u5316\u524d\u540e\u8bb0\u5f55\u7684\u4e8b\u5b9e\u5f52\u4e00\u5316\u4e3a\u53d8\u5316\u524d\u7684\u7ef4\u5ea6\u6216\u8005\u53d8\u5316\u540e\u7684\u7ef4\u5ea6\u3002\u4f8b\u5982\uff0c\u6839\u636e\u5177\u4f53\u4e1a\u52a1\u9700\u6c42\uff0c\u82e5\u9700\u8981\u5c06 11 \u6708\u4efd\u7684\u4ea4\u6613\u989d\u5168\u90e8\u7edf\u8ba1\u5230\u7c7b\u76ee 2 \u4e0a\uff0c\u5229\u7528\u8fd9\u79cd\u65b9\u5f0f\u662f\u65e0\u6cd5\u5b9e\u73b0\u76f8\u5e94\u64cd\u4f5c\u7684\uff0c\u4f1a\u7ed9\u6309\u7167\u7279\u5b9a\u7ef4\u5ea6\u7edf\u4e00\u7edf\u8ba1\u4e8b\u5b9e\u6570\u636e\u5e26\u6765\u4e0d\u4fbf\u3002</li> </ul> <p>4. \u6dfb\u52a0\u7ef4\u5ea6\u5217</p> <ul> <li>\u7279\u70b9\uff1a\u6b64\u65b9\u5f0f\u5728\u7ef4\u5ea6\u8868\u4e2d\u6dfb\u52a0\u65b0\u7684\u7ef4\u5ea6\u5217\u6765\u8bb0\u5f55\u7ef4\u5ea6\u53d8\u5316\u60c5\u51b5\uff0c\u4f18\u52bf\u5728\u4e8e\u53ef\u4ee5\u4fdd\u7559\u5386\u53f2\u6570\u636e\uff0c\u65b9\u4fbf\u540e\u7eed\u67e5\u770b\u7ef4\u5ea6\u5728\u4e0d\u540c\u9636\u6bb5\u7684\u5177\u4f53\u72b6\u6001\uff0c\u6709\u52a9\u4e8e\u8fdb\u884c\u5386\u53f2\u6570\u636e\u7684\u5206\u6790\u4e0e\u6bd4\u5bf9\u3002</li> </ul> <p>5. \u62c9\u94fe\u8868</p> <ul> <li>\u65b9\u5f0f\u63cf\u8ff0\uff1a\u901a\u8fc7\u65b0\u589e\u4e24\u4e2a\u65f6\u95f4\u6233\u5b57\u6bb5\uff08start_dt \u548c end_dt\uff09\uff0c\u5c06\u6240\u6709\u4ee5\u5929\u4e3a\u7c92\u5ea6\u7684\u53d8\u66f4\u6570\u636e\u8bb0\u5f55\u4e0b\u6765\u3002</li> <li>\u80cc\u666f\u793a\u4f8b\uff1a\u4f8b\u5982\u5728 2016 \u5e74 1 \u6708 1 \u65e5\uff0c\u5356\u5bb6 A \u5728\u6dd8\u5b9d\u7f51\u53d1\u5e03\u4e86 B\u3001C \u4e24\u4e2a\u5546\u54c1\uff0c\u5230\u4e86 1 \u6708 2 \u65e5\uff0c\u5356\u5bb6 A \u5728\u6dd8\u5b9d\u7f51\u4e0b\u67b6\u4e86\u5546\u54c1 B\uff0c\u540c\u65f6\u53c8\u53d1\u5e03\u4e86\u5546\u54c1 D\uff0c\u50cf\u8fd9\u6837\u7684\u6570\u636e\u53d8\u5316\u60c5\u51b5\u53ef\u4ee5\u901a\u8fc7\u62c9\u94fe\u8868\u8fdb\u884c\u8bb0\u5f55\u3002</li> <li>\u4e0e\u5feb\u7167\u7ef4\u8868\u5bf9\u6bd4\uff1a\u5728\u5feb\u7167\u7ef4\u8868\u4e2d\uff0cdt \u662f\u5206\u533a\u5b57\u6bb5\uff0c\u800c\u62c9\u94fe\u8868\u5bf9\u4e8e\u4e0d\u53d8\u7684\u6570\u636e\uff0c\u4e0d\u518d\u91cd\u590d\u5b58\u50a8\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8282\u7701\u4e86\u5b58\u50a8\u7a7a\u95f4\u3002</li> <li>\u4f7f\u7528\u793a\u4f8b\uff1a\u4f8b\u5982\uff0c\u5f53\u7528\u6237\u60f3\u8981\u8bbf\u95ee 1 \u6708 2 \u65e5\u7684\u6570\u636e\u65f6\uff0c\u53ea\u9700\u8981\u9650\u5236 start_dt &lt;= 20160102 \u548c end_dt &gt; 20160102 \u5373\u53ef\u83b7\u53d6\u5230\u76f8\u5e94\u6570\u636e\u3002</li> <li>\u7f3a\u70b9\uff1a\u4e00\u65b9\u9762\uff0c\u5176\u7406\u89e3\u6027\u8f83\u5dee\uff0c\u76f8\u8f83\u4e8e\u5176\u4ed6\u65b9\u5f0f\uff0c\u4f7f\u7528\u8005\u9700\u8981\u82b1\u8d39\u66f4\u591a\u7cbe\u529b\u53bb\u7406\u89e3\u5176\u5b58\u50a8\u903b\u8f91\u548c\u6570\u636e\u5173\u8054\u65b9\u5f0f\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5176\u5b58\u50a8\u65b9\u5f0f\u91c7\u7528 start_dt \u548c end_dt \u505a\u5206\u533a\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5206\u533a\u6570\u91cf\u4f1a\u6781\u5ea6\u81a8\u80c0\uff0c\u800c\u73b0\u884c\u7684\u6570\u636e\u5e93\u7cfb\u7edf\u5bf9\u5206\u533a\u6570\u91cf\u901a\u5e38\u90fd\u6709\u6240\u9650\u5236\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5728\u957f\u671f\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u5e26\u6765\u4e00\u4e9b\u4e0d\u4fbf\u548c\u95ee\u9898\u3002</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_20","title":"\u6570\u636e\u8d28\u91cf","text":"<ol> <li>\u5b8c\u6574\u6027\uff1a\u6570\u636e\u7684\u5b57\u6bb5\u548c\u6761\u6570\u662f\u5426\u5b8c\u6574\uff0c\u662f\u5426\u5b58\u5728\u7f3a\u5931\u7684\u60c5\u51b5</li> <li>\u51c6\u786e\u6027\uff1a\u662f\u6307\u6570\u636e\u4e2d\u8bb0\u5f55\u7684\u4fe1\u606f\u548c\u6570\u636e\u662f\u5426\u51c6\u786e\uff0c\u662f\u5426\u5b58\u5728\u5f02\u5e38\u6216\u8005\u9519\u8bef\u7684\u4fe1\u606f\uff0c\u5982\u8d1f\u6570\u91d1\u989d</li> <li>\u4e00\u81f4\u6027\uff1a\u5bf9\u4e8e\u540c\u4e00\u4efd\u6570\u636e\uff0c\u5fc5\u987b\u4fdd\u8bc1\u4e00\u81f4\u6027\uff08\u547d\u540d\u4e00\u81f4\u6027\u3001\u53e3\u5f84\u4e00\u81f4\u6027\uff09</li> <li>\u65f6\u6548\u6027\uff1a\u4fdd\u969c\u6570\u636e\u80fd\u591f\u53ca\u65f6\u4ea7\u51fa</li> </ol> \u76ee\u6807 \u8fbe\u6210\u65b9\u5f0f \u5177\u4f53\u8bf4\u660e \u5b8c\u6574\u6027\u548c\u51c6\u786e\u6027 \u914d\u7f6e DQC \u76d1\u63a7 \u901a\u8fc7\u914d\u7f6e\u6570\u636e\u8d28\u91cf\u76d1\u63a7\uff08DQC\uff09\uff0c\u5bf9\u76f8\u5173\u6570\u636e\u8fdb\u884c\u76d1\u6d4b\uff0c\u4ee5\u6b64\u786e\u4fdd\u6570\u636e\u5177\u5907\u5b8c\u6574\u6027\u4e0e\u51c6\u786e\u6027\uff0c\u53ca\u65f6\u53d1\u73b0\u53ef\u80fd\u5b58\u5728\u7684\u6570\u636e\u95ee\u9898\u5e76\u52a0\u4ee5\u89e3\u51b3\u3002 \u65f6\u6548\u6027 \u914d\u7f6e SLA \u57fa\u7ebf \u501f\u52a9\u914d\u7f6e\u670d\u52a1\u6c34\u5e73\u534f\u8bae\uff08SLA\uff09\u57fa\u7ebf\u7684\u65b9\u5f0f\uff0c\u6765\u4fdd\u969c\u6570\u636e\u7684\u65f6\u6548\u6027\uff0c\u4f7f\u5f97\u6570\u636e\u80fd\u591f\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u6ee1\u8db3\u76f8\u5e94\u7684\u4e1a\u52a1\u9700\u6c42\uff0c\u7b26\u5408\u9884\u671f\u7684\u65f6\u95f4\u8981\u6c42\u3002 \u4e00\u81f4\u6027 \u6743\u9650\u7ba1\u63a7 \u91c7\u53d6\u6743\u9650\u7ba1\u63a7\u7684\u601d\u8def\uff0c\u4e0d\u5bf9\u5916\u5f00\u653e\u64cd\u4f5c\u6570\u636e\u5b58\u50a8\uff08ODS\uff09\u5230\u660e\u7ec6\u6570\u636e\u5c42\uff08DWD\uff09\u7684\u6743\u9650\uff0c\u800c\u662f\u5c06\u6307\u6807\u653e\u7f6e\u5728\u4e3b\u9898\u5bbd\u8868\u4e2d\uff0c\u5e76\u4fdd\u8bc1\u76f8\u540c\u7c92\u5ea6\u7684\u8868\u53ea\u6709\u4e00\u5f20\uff0c\u4ee5\u6b64\u6765\u6ee1\u8db3\u4e00\u81f4\u6027\u8fd9\u4e00\u89c4\u8303\u6027\u8981\u6c42\uff0c\u786e\u4fdd\u6570\u636e\u5728\u76f8\u5e94\u73af\u8282\u7684\u4e00\u81f4\u6027\u8868\u73b0\u3002 \u4e00\u81f4\u6027 \u6307\u6807\u7ba1\u7406\u7cfb\u7edf \u8fd0\u7528\u6307\u6807\u7ba1\u7406\u7cfb\u7edf\u6765\u4fdd\u969c\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u4ece\u7cfb\u7edf\u5c42\u9762\u89c4\u8303\u548c\u7ba1\u7406\u76f8\u5173\u6307\u6807\uff0c\u4f7f\u5176\u7b26\u5408\u4e00\u81f4\u6027\u7684\u8981\u6c42\uff0c\u5b9e\u73b0\u6570\u636e\u5728\u5404\u65b9\u9762\u7684\u89c4\u8303\u7edf\u4e00\u3002 <ol> <li>\u4e8b\u524d\u9884\u9632\uff1a\u6240\u6709\u53ef\u80fd\u5bf9\u6570\u636e\u94fe\u8def\u4ea7\u751f\u5f71\u54cd\u7684\u6539\u52a8\u90fd\u9700\u8981\u8fdb\u884c\u8bc4\u4f30\u3002\u4e0a\u7ebf\u524d\u7684\u63a2\u67e5\u3001\u6d4b\u8bd5\u3001\u4ee3\u7801\u8bc4\u5ba1\u7b49\u3002</li> <li>\u4e8b\u4e2d\u76d1\u63a7\uff1aDQC \u5f3a\u89c4\u5219 \u2192 \u7194\u65ad\uff1b\u5f31\u89c4\u5219 \u2192 \u77ed\u4fe1/\u7535\u8bdd/APP \u544a\u8b66</li> <li>\u4e8b\u540e\u8865\u6551\uff1a\u6392\u67e5\u6545\u969c\uff0c\u8865\u6570\uff0c\u89e3\u51b3\u4ee3\u7801\u95ee\u9898</li> </ol>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_21","title":"\u5982\u4f55\u7406\u89e3\u5927\u6570\u636e &amp; \u6570\u4ed3","text":"<p>\u66f4\u597d\u3001\u66f4\u6709\u6548\u5730\u7ec4\u7ec7\u6570\u636e\uff0c\u63d0\u5347\u6570\u636e\u4ef7\u503c\u3002</p> \u6d41\u7a0b \u610f\u4e49\u3001\u4ef7\u503c \u6570\u636e\u7684\u91c7\u96c6 \u91c7\u96c6\u662f\u57fa\u7840\uff0c\u83b7\u53d6\u5168\u9762\u51c6\u786e\u7684\u539f\u59cb\u6570\u636e\u3002 \u6570\u636e\u5efa\u6a21 / \u6570\u4ed3\u5efa\u8bbe \u7ed3\u6784\u5316\u7ec4\u7ec7\u6570\u636e\uff0c\u8bbe\u8ba1\u5408\u7406\u6a21\u578b\uff0c\u63d0\u5347\u6570\u636e\u8d28\u91cf\u4e0e\u67e5\u8be2\u6548\u7387\u3002\u7eb5\u5411\u5206\u5c42\u3001\u6a2a\u5411\u5206\u4e3b\u9898\u3002 \u6570\u636e\u94fe\u8def\u7684\u5efa\u8bbe \u6784\u5efa\u5b8c\u6574\u6d41\u7a0b\uff0c\u786e\u4fdd\u6570\u636e\u987a\u7545\u6d41\u52a8\u3002\u63d0\u9ad8\u65f6\u6548\u6027\u4e0e\u53ef\u9760\u6027\u3002 \u6570\u636e\u5e94\u7528\u7684\u5f00\u53d1 \u5229\u7528\u6570\u636e\u5f00\u53d1\u5e94\u7528\uff08\u63a5\u53e3/\u62a5\u8868/BI\uff09\uff0c\u8f6c\u5316\u4e3a\u4fe1\u606f\u6d1e\u5bdf\uff0c\u5b9e\u73b0\u5546\u4e1a\u4ef7\u503c\u3002 \u6570\u4ed3\u7ef4\u62a4\u3001\u6570\u636e\u6cbb\u7406 \u7ef4\u62a4\u6570\u4ed3\u4fdd\u8bc1\u7a33\u5b9a\u8fd0\u884c\u4e0e\u6570\u636e\u8d28\u91cf\uff0c\u5305\u62ec DQC\u3001SLA \u7b49\uff0c\u964d\u4f4e\u98ce\u9669\u63d0\u5347\u4ef7\u503c\u3002"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_22","title":"\u6570\u4ed3\u5de5\u4f5c\u7406\u89e3 &amp; \u6570\u4ed3\u4ef7\u503c","text":"<p>\u4e2a\u4eba\u8ba4\u4e3a\u6570\u4ed3\u66f4\u591a\u7684\u662f\u4f01\u4e1a\u6570\u636e\u65b9\u9762\u7684\u57fa\u5efa\uff0c\u4e0d\u540c\u53d1\u5c55\u9636\u6bb5\u7684\u4f5c\u7528/\u4ef7\u503c\u4e0d\u540c\u3002</p> \u524d\u671f\uff1a <p>\u5b58\u50a8\u5386\u53f2\u6570\u636e\uff0c\u5efa\u8bbe\u7b80\u5355\u7684\u6570\u636e\u94fe\u8def\uff0c\u6765\u652f\u6301\u7b80\u5355\u7684\u9700\u6c42\u3002</p> \u4e2d\u671f\uff1a <p>\u6570\u4ed3\u5efa\u8bbe\u65b9\u9762\u901a\u8fc7\u5408\u7406\u7684\u5206\u5c42\u3001\u5206\u4e3b\u9898\u4ee5\u53ca\u5408\u7406\u7684\u6570\u636e\u5efa\u6a21\uff0c\u6765\u8ffd\u6c42\u6570\u636e\u7684\u53ef\u7406\u89e3\u6027\u548c\u6027\u80fd\u3002\u6570\u636e\u6cbb\u7406\u65b9\u9762\u8ffd\u6c42\u6570\u636e\u8d28\u91cf\u548c\u65f6\u6548\u6027\u3002\u8fd9\u4e24\u65b9\u9762\u5171\u540c\u51b3\u5b9a\u4e86\u4e0b\u6e38/\u5176\u4ed6\u90e8\u95e8\u53d6\u6570\u3001\u7528\u6570\u7684\u96be\u6613\u7a0b\u5ea6\uff0c\u4ee5\u53ca\u662f\u5426\u4fe1\u4efb\u6570\u4ed3\u4ea7\u51fa\u7684\u6570\u636e\u3002</p> \u540e\u671f\uff1a <p>\u4ece\u4e1a\u52a1\u6c89\u6dc0\u6570\u636e \u2192 \u6570\u636e\u53cd\u54fa\u4e1a\u52a1\u3002\u4e3b\u52a8\u601d\u8003\u6570\u636e\u80fd\u4ea7\u51fa\u7684\u4ef7\u503c\uff0c\u5bfb\u6c42\u4e00\u4e9b\u8de8\u90e8\u95e8\u5408\u4f5c\u7684\u673a\u4f1a\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_23","title":"\u4ec0\u4e48\u662f\u4e00\u4e2a\u597d\u6570\u4ed3","text":"<p>I. \u5408\u7406\u7684\u5206\u5c42\u3001\u5206\u4e3b\u9898\uff08MECE\uff09</p> <p>II. \u89c4\u8303\u7684\u6a21\u578b\u8bbe\u8ba1</p> <ul> <li>\u9ad8\u5185\u805a\u4f4e\u8026\u5408\uff08\u4e3b\u9898\uff09</li> <li>\u6838\u5fc3/\u6269\u5c55\u5206\u79bb\uff08\u7a33\u5b9a\u6027\uff09</li> <li>\u516c\u5171\u5904\u7406\u4e0b\u6c89\uff08\u590d\u7528\u6027\uff09</li> <li>\u547d\u540d\u89c4\u8303\uff08\u89c4\u8303\uff09</li> </ul> <p>III. \u826f\u597d\u7684\u4e2d\u95f4\u5c42\u8bbe\u8ba1</p> <ul> <li>\u907f\u514d\u91cd\u590d\u5f00\u53d1</li> <li>\u63d0\u5347\u6307\u6807\u4e00\u81f4\u6027</li> <li>\u5bbd\u8868\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u89c6\u56fe</li> </ul> <p>IV. \u826f\u597d\u7684\u6570\u636e\u8d28\u91cf</p> <ul> <li>\u5b8c\u6574\u6027</li> <li>\u51c6\u786e\u6027</li> <li>\u65f6\u6548\u6027</li> <li>\u4e00\u81f4\u6027</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_24","title":"\u5982\u4f55\u8861\u91cf\u6570\u4ed3\u6a21\u578b\u4e3a\u4e1a\u52a1\u5e26\u6765\u7684\u4ef7\u503c","text":"I. \u5177\u4f53\u4e1a\u52a1\u573a\u666f\u7684\u76f4\u63a5\u4ef7\u503c <p>e.g.\u98ce\u9669\u5546\u54c1\u8bc6\u522b+\u4e0b\u67b6\u4e86\u591a\u5c11\uff0c\u6709\u5177\u4f53\u91cf\u5316\u7684\u6570\u5b57</p> II. \u95f4\u63a5\u5bf9\u6838\u5fc3\u6307\u6807\u7684\u8d21\u732e <p>\u4e0d\u597d\u76f4\u63a5\u8861\u91cf\uff0c\u4f46\u4f1a\u95f4\u63a5\u4f5c\u7528\u4e8e\u6838\u5fc3\u6307\u6807\u4e0a\u3002e.g.\u770b\u677f\u7c7b\u9700\u6c42\u7528\u4e8e\u652f\u6301\u51b3\u7b56\uff0c\u51b3\u7b56\u7684\u5f71\u54cd\u6700\u7ec8\u4f1a\u4f53\u73b0\u5728\u6307\u6807\u4e0a\uff0c\u6b64\u65f6\u9700\u8981\u5bf9\u6307\u6807\u8fdb\u884c\u5f52\u56e0\u5206\u6790</p> III. \u6570\u636e\u4f5c\u4e3a\u57fa\u5efa\u7684\u4ef7\u503c <p>\u6570\u636e\u8d28\u91cf\u3001\u65f6\u6548\u6027\u3001\u6027\u80fd\u3001\u5f00\u53d1\u6548\u7387\u7b49</p>"},{"location":"%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%90%86%E8%AE%BA/#_25","title":"\u5982\u4f55\u8bc4\u4ef7\u4e00\u4e2a\u6570\u4ed3\u6a21\u578b\u7684\u597d\u574f","text":"I. \u6570\u636e\u8d28\u91cf <p>\u51c6\u786e\u6027\u3001\u5b8c\u6574\u6027\u3001\u4e00\u81f4\u6027\u3001\u65f6\u6548\u6027</p> <p>II. \u6570\u636e\u5efa\u6a21</p> <ul> <li>\u9ad8\u5185\u805a\u4f4e\u8026\u5408\uff08\u4e3b\u9898\uff09</li> <li>\u6838\u5fc3/\u6269\u5c55\u5206\u79bb\uff08\u7a33\u5b9a\u6027\uff09</li> <li>\u516c\u5171\u5904\u7406\u4e0b\u6c89\uff08\u590d\u7528\u6027\uff09</li> <li>\u547d\u540d\u89c4\u8303\uff08\u89c4\u8303\uff09</li> </ul> III. \u53ef\u7406\u89e3\u6027/\u6613\u7528\u6027 <p>\u6027\u80fd\u548c\u53ef\u7406\u89e3\u6027\u7684\u6743\u8861\u53d6\u820d</p> IV. \u6210\u672c VS \u6536\u76ca <p>\u8ba1\u7b97/\u5b58\u50a8\u7684\u6210\u672c VS \u5b9e\u9645\u7684\u6536\u76ca</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/","title":"\u6570\u636e\u7ed3\u6784\u590d\u4e60","text":"<p>\u672c\u6587\u5927\u91cf\u5185\u5bb9\u548c\u56fe\u7247\u6765\u81ea\u4e8e Hello \u7b97\u6cd5\uff0c\u611f\u8c22 Krahets \u5927\u4f6c\u7684\u5f00\u6e90\u7cbe\u795e\u548c\u65e0\u79c1\u5206\u4eab\u3002</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_2","title":"\u6570\u7ec4","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_3","title":"\u94fe\u8868","text":"<p>\u300c\u94fe\u8868 linked list\u300d\u662f\u4e00\u79cd\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\u5bf9\u8c61\uff0c\u5404\u4e2a\u8282\u70b9\u901a\u8fc7\u201c\u5f15\u7528\u201d\u76f8\u8fde\u63a5\u3002\u5f15\u7528\u8bb0\u5f55\u4e86\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5185\u5b58\u5730\u5740\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u4ece\u5f53\u524d\u8282\u70b9\u8bbf\u95ee\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</p> <p>\u94fe\u8868\u7684\u8bbe\u8ba1\u4f7f\u5f97\u5404\u4e2a\u8282\u70b9\u53ef\u4ee5\u5206\u6563\u5b58\u50a8\u5728\u5185\u5b58\u5404\u5904\uff0c\u5b83\u4eec\u7684\u5185\u5b58\u5730\u5740\u65e0\u987b\u8fde\u7eed\u3002</p> <p>\u624b\u5199\u94fe\u8868\uff1a</p> JavaPython <pre><code>public class ListNode {\n    int val;\n    ListNode next;\n\n    public ListNode() {\n    }\n\n    public ListNode(int val) {\n        this.val = val;\n    }\n\n    public ListNode(int val, ListNode next) {\n        this.val = val;\n        this.next = next;\n    }\n\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        ListNode cur = this;\n        while (cur != null) {\n            sb.append(cur.val).append(\" -&gt; \");\n            cur = cur.next;\n        }\n        sb.append(\"null\");\n        return sb.toString();\n    }\n}\n</code></pre> <pre><code>class ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n</code></pre> <p>\u8bed\u8a00\u4e2d\u7684\u96c6\u5408\uff1a</p> <pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedList&lt;Integer&gt; list = new LinkedList&lt;&gt;();\n        list.add(1);\n        list.add(2);\n        list.add(3);\n        System.out.println(list);\n        list.offerFirst(0);\n        list.offerLast(4);\n        System.out.println(list);\n        list.pollFirst();\n        list.pollLast();\n        System.out.println(list);\n    }\n}\n</code></pre> \u6570\u7ec4 \u94fe\u8868 \u5b58\u50a8\u65b9\u5f0f \u8fde\u7eed\u5185\u5b58\u7a7a\u95f4 \u5206\u6563\u5185\u5b58\u7a7a\u95f4 \u5bb9\u91cf\u6269\u5c55 \u957f\u5ea6\u4e0d\u53ef\u53d8 \u53ef\u7075\u6d3b\u6269\u5c55 \u5185\u5b58\u6548\u7387 \u5143\u7d20\u5360\u7528\u5185\u5b58\u5c11\u3001\u4f46\u53ef\u80fd\u6d6a\u8d39\u7a7a\u95f4 \u5143\u7d20\u5360\u7528\u5185\u5b58\u591a \u8bbf\u95ee\u5143\u7d20 \\(O(1)\\) \\(O(n)\\) \u6dfb\u52a0\u5143\u7d20 \\(O(n)\\) \\(O(1)\\) \u5220\u9664\u5143\u7d20 \\(O(n)\\) \\(O(1)\\)"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_4","title":"\u6808","text":"<pre><code>/* \u521d\u59cb\u5316\u6808 */\n// Stack&lt;Integer&gt; stack = new Stack&lt;&gt;();\nDeque&lt;Integer&gt; stack = new ArrayDeque&lt;&gt;();\n\n/* \u5143\u7d20\u5165\u6808 */\nstack.push(1);\nstack.push(3);\n\n/* \u8bbf\u95ee\u6808\u9876\u5143\u7d20 */\nint peek = stack.peek();\n\n/* \u5143\u7d20\u51fa\u6808 */\nint pop = stack.pop();\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_5","title":"\u961f\u5217","text":"<pre><code>/* \u521d\u59cb\u5316\u961f\u5217 */\nQueue&lt;Integer&gt; queue = new ArrayDeque&lt;&gt;();\n\n/* \u5143\u7d20\u5165\u961f */\nqueue.offer(1);\n\n/* \u8bbf\u95ee\u961f\u9996\u5143\u7d20 */\nint peek = queue.peek();\n\n/* \u5143\u7d20\u51fa\u961f */\nint pop = queue.poll();\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_6","title":"\u53cc\u7aef\u961f\u5217","text":"<pre><code>/* \u521d\u59cb\u5316\u53cc\u5411\u961f\u5217 */\nDeque&lt;Integer&gt; deque = new ArrayDeque&lt;&gt;();\n\n/* \u5143\u7d20\u5165\u961f */\ndeque.offerFirst(1);  // \u6dfb\u52a0\u81f3\u961f\u9996\ndeque.offerLast(2);   // \u6dfb\u52a0\u81f3\u961f\u5c3e\n\n/* \u8bbf\u95ee\u5143\u7d20 */\nint peekFirst = deque.peekFirst();  // \u961f\u9996\u5143\u7d20\nint peekLast = deque.peekLast();    // \u961f\u5c3e\u5143\u7d20\n\n/* \u5143\u7d20\u51fa\u961f */\nint popFirst = deque.pollFirst();  // \u961f\u9996\u5143\u7d20\u51fa\u961f\nint popLast = deque.pollLast();    // \u961f\u5c3e\u5143\u7d20\u51fa\u961f\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_7","title":"\u54c8\u5e0c\u8868","text":"\u6570\u7ec4 \u94fe\u8868 \u54c8\u5e0c\u8868 \u67e5\u627e\u5143\u7d20 \\(O(n)\\) \\(O(n)\\) \\(O(1)\\) \u6dfb\u52a0\u5143\u7d20 \\(O(1)\\) \\(O(1)\\) \\(O(1)\\) \u5220\u9664\u5143\u7d20 \\(O(n)\\) \\(O(n)\\) \\(O(1)\\) <pre><code>/* \u521d\u59cb\u5316\u54c8\u5e0c\u8868 */\nMap&lt;Integer, String&gt; map = new HashMap&lt;&gt;();\n\n/* \u6dfb\u52a0\u64cd\u4f5c */\n// \u5728\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9 (key, value)\nmap.put(12836, \"\u5c0f\u54c8\");\nmap.put(15937, \"\u5c0f\u5570\");\nmap.put(16750, \"\u5c0f\u7b97\");\nmap.put(13276, \"\u5c0f\u6cd5\");\nmap.put(10583, \"\u5c0f\u9e2d\");\n\n/* \u67e5\u8be2\u64cd\u4f5c */\n// \u5411\u54c8\u5e0c\u8868\u8f93\u5165\u952e key \uff0c\u5f97\u5230\u503c value\nString name = map.get(15937);\n// String name = map.getOrDefault(15937, \"Default Value\");\n\n/* \u5220\u9664\u64cd\u4f5c */\n// \u5728\u54c8\u5e0c\u8868\u4e2d\u5220\u9664\u952e\u503c\u5bf9 (key, value)\nmap.remove(10583);\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_8","title":"\u904d\u5386\u54c8\u5e0c\u8868","text":"<pre><code>// \u904d\u5386\u952e\u503c\u5bf9 key-&gt;value\nfor (Map.Entry &lt;Integer, String&gt; kv: map.entrySet()) {\n    System.out.println(kv.getKey() + \" -&gt; \" + kv.getValue());\n}\n// \u5355\u72ec\u904d\u5386\u952e key\nfor (int key: map.keySet()) {\n    System.out.println(key);\n}\n// \u5355\u72ec\u904d\u5386\u503c value\nfor (String val: map.values()) {\n    System.out.println(val);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_9","title":"\u54c8\u5e0c\u51b2\u7a81","text":"<p>https://www.hello-algo.com/chapter_hashing/hash_collision/</p> <p>\u94fe\u5f0f\u5730\u5740\u6cd5\uff1a</p> <p></p> <p>\u5f00\u653e\u5bfb\u5740\u6cd5\uff1a</p> <ul> <li>\u7ebf\u6027\u63a2\u6d4b</li> <li>\u5e73\u65b9\u63a2\u6d4b</li> <li>\u591a\u6b21\u54c8\u5e0c</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_10","title":"\u5e38\u7528\u6280\u5de7","text":"<p>Java \u4e2d\u5b9e\u73b0 <code>defaultdict(list)</code>\uff1a</p> <pre><code>Map&lt;Integer, List&lt;Integer&gt;&gt; map = new HashMap&lt;&gt;();\nmap.computeIfAbsent(key, x -&gt; new ArrayList&lt;&gt;()).add(value);\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_11","title":"\u4e8c\u53c9\u6811","text":"<pre><code>/* \u4e8c\u53c9\u6811\u8282\u70b9\u7c7b */\nclass TreeNode {\n    int val;         // \u8282\u70b9\u503c\n    TreeNode left;   // \u5de6\u5b50\u8282\u70b9\u5f15\u7528\n    TreeNode right;  // \u53f3\u5b50\u8282\u70b9\u5f15\u7528\n    TreeNode(int x) { val = x; }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_12","title":"\u5c42\u5e8f\u904d\u5386","text":"<p>102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386</p> <p></p> <pre><code>/* \u5c42\u5e8f\u904d\u5386 */\nList&lt;Integer&gt; levelOrder(TreeNode root) {\n    // \u521d\u59cb\u5316\u961f\u5217\uff0c\u52a0\u5165\u6839\u8282\u70b9\n    Queue&lt;TreeNode&gt; queue = new ArrayDeque&lt;&gt;();\n    queue.offer(root);\n    // \u521d\u59cb\u5316\u4e00\u4e2a\u5217\u8868\uff0c\u7528\u4e8e\u4fdd\u5b58\u904d\u5386\u5e8f\u5217\n    List&lt;Integer&gt; list = new ArrayList&lt;&gt;();\n    while (!queue.isEmpty()) {\n        TreeNode node = queue.poll(); // \u961f\u5217\u51fa\u961f\n        list.add(node.val);           // \u4fdd\u5b58\u8282\u70b9\u503c\n        if (node.left != null)\n            queue.offer(node.left);   // \u5de6\u5b50\u8282\u70b9\u5165\u961f\n        if (node.right != null)\n            queue.offer(node.right);  // \u53f3\u5b50\u8282\u70b9\u5165\u961f\n    }\n    return list;\n}\n</code></pre> <pre><code>class Solution {\n    public List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) {\n        List&lt;List&lt;Integer&gt;&gt; ans = new ArrayList&lt;&gt;();\n        if (root == null) return ans;\n        Queue&lt;TreeNode&gt; q = new ArrayDeque&lt;&gt;();\n        q.offer(root);\n        while (!q.isEmpty()) {\n            int size = q.size();\n            List&lt;Integer&gt; level = new ArrayList&lt;&gt;();\n            while (size-- &gt; 0) {\n                TreeNode cur = q.poll();\n                level.add(cur.val);\n                if (cur.left != null) q.offer(cur.left);\n                if (cur.right != null) q.offer(cur.right);\n            }\n            ans.add(level);\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_13","title":"\u524d\u4e2d\u540e\u5e8f\u904d\u5386","text":"<p>144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386</p> <p>94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386</p> <p>145. \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386</p> <p></p> <pre><code>/* \u524d\u5e8f\u904d\u5386 */\nvoid preOrder(TreeNode root) {\n    if (root == null)\n        return;\n    // \u8bbf\u95ee\u4f18\u5148\u7ea7\uff1a\u6839\u8282\u70b9 -&gt; \u5de6\u5b50\u6811 -&gt; \u53f3\u5b50\u6811\n    list.add(root.val);\n    preOrder(root.left);\n    preOrder(root.right);\n}\n\n/* \u4e2d\u5e8f\u904d\u5386 */\nvoid inOrder(TreeNode root) {\n    if (root == null)\n        return;\n    // \u8bbf\u95ee\u4f18\u5148\u7ea7\uff1a\u5de6\u5b50\u6811 -&gt; \u6839\u8282\u70b9 -&gt; \u53f3\u5b50\u6811\n    inOrder(root.left);\n    list.add(root.val);\n    inOrder(root.right);\n}\n\n/* \u540e\u5e8f\u904d\u5386 */\nvoid postOrder(TreeNode root) {\n    if (root == null)\n        return;\n    // \u8bbf\u95ee\u4f18\u5148\u7ea7\uff1a\u5de6\u5b50\u6811 -&gt; \u53f3\u5b50\u6811 -&gt; \u6839\u8282\u70b9\n    postOrder(root.left);\n    postOrder(root.right);\n    list.add(root.val);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_14","title":"\u8fed\u4ee3\u904d\u5386\u89e3\u6cd5","text":"<p>\u524d\u5e8f\u904d\u5386\uff1a</p> <p>\u7528\u6808\u6765\u7ef4\u62a4\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u7528\u6839\u8282\u70b9\u6765\u521d\u59cb\u5316\u6808\uff0c\u6bcf\u6b21\u4ece\u6808\u9876\u5f39\u51fa\u8282\u70b9\u65f6\uff0c\u5982\u679c\u8282\u70b9\u6709\u5de6\u53f3\u5b69\u5b50\uff0c\u5148\u5c06\u8282\u70b9\u7684\u53f3\u5b69\u5b50\u5165\u6808\uff0c\u518d\u5c06\u5de6\u5b69\u5b50\u5165\u6808\u3002\u4f9d\u6b21\u4ece\u6808\u9876\u5f39\u51fa\u8282\u70b9\uff0c\u76f4\u81f3\u6808\u7a7a\u4e3a\u6b62\u3002</p> <pre><code>class Solution:\n    def preorderTraversal(self, root: Optional[TreeNode]) -&gt; List[int]:\n        ans = []\n        if not root:\n            return ans\n        stack = [root]\n        while stack:\n            node = stack.pop()\n            ans.append(node.val)\n            if node.right:\n                stack.append(node.right)\n            if node.left:\n                stack.append(node.left)\n        return ans\n</code></pre> <p>\u540e\u5e8f\u904d\u5386\uff1a</p> <p>\u540e\u5e8f\u904d\u5386\u7684\u987a\u5e8f\u4e3a\u5de6-\u53f3-\u6839\uff0c\u5bf9\u4e8e\u4e00\u68f5\u4e8c\u53c9\u6811\u6765\u8bf4\uff0c\u5b83\u7684\u540e\u5e8f\u904d\u5386\u7ed3\u679c\uff08\u5de6-\u53f3-\u6839\uff09\u5176\u5b9e\u5c31\u662f <code>reverse(\u6839-\u53f3-\u5de6\u7684\u904d\u5386\u7ed3\u679c)</code> \u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4e8c\u53c9\u6811\u6839-\u53f3-\u5de6\u7684\u8fed\u4ee3\u904d\u5386\u7ed3\u679c\uff0c\u6700\u540e\u628a\u7ed3\u679c\u53cd\u8f6c\u5373\u53ef\u3002\u6839-\u53f3-\u5de6\u7684\u8fed\u4ee3\u904d\u5386\u548c\u4e8c\u53c9\u6811\u524d\u5e8f\u8fed\u4ee3\u904d\u5386\uff08\u6839-\u5de6-\u53f3\uff09\u4ee3\u7801\u975e\u5e38\u50cf\u3002</p> <pre><code>class Solution:\n    def postorderTraversal(self, root: Optional[TreeNode]) -&gt; List[int]:\n        ans = []\n        if not root:\n            return ans\n        stack = [root]\n        while stack:\n            node = stack.pop()\n            ans.append(node.val)\n            if node.left:\n                stack.append(node.left)\n            if node.right:\n                stack.append(node.right)\n        return ans[::-1]\n</code></pre> <p>\u4e2d\u5e8f\u904d\u5386\uff1a</p> <p>\u7531\u4e8e\u4e2d\u5e8f\u904d\u5386\u7684\u987a\u5e8f\u4e3a\u5de6-\u6839-\u53f3\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5148\u5c06\u6307\u9488\u4e00\u8def\u5f80\u5de6\u4e0b\u79fb\u52a8\uff0c\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u7528\u6808\u6765\u8bb0\u5f55\u6cbf\u9014\u9047\u5230\u7684\u8282\u70b9\u3002\u5728\u7b2c\u4e8c\u4e2a while \u5faa\u73af\u7ed3\u675f\u540e\uff0c\u6b64\u65f6\u6808\u9876\u5143\u7d20\u5c31\u662f\u6700\u5de6\u4e0b\u7684\u8282\u70b9\uff0c\u5c06\u5176\u51fa\u6808\uff0c\u8bb0\u5f55\u8282\u70b9\u503c\u3002\u6309\u7167\u4e2d\u5e8f\u904d\u5386\u7684\u987a\u5e8f\uff0c\u5728\u904d\u5386\u4e00\u4e2a\u8282\u70b9\u4e4b\u540e\u518d\u904d\u5386\u5b83\u7684\u53f3\u5b50\u6811\uff0c\u53f3\u5b50\u6811\u904d\u5386\u5b8c\u4e4b\u540e\uff0c\u518d\u628a\u6307\u9488\u79fb\u5230\u6808\u9876\u7684\u8282\u70b9\u5904\u5f00\u59cb\u65b0\u4e00\u8f6e\u904d\u5386\u3002</p> <pre><code>class Solution:\n    def inorderTraversal(self, root: Optional[TreeNode]) -&gt; List[int]:\n        ans = []\n        if not root:\n            return ans\n        stack = []\n        while root or stack:\n            while root:\n                stack.append(root)\n                root = root.left\n            root = stack.pop()\n            ans.append(root.val)\n            root = root.right\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_15","title":"\u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>BST</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#treeset-treemap","title":"TreeSet &amp; TreeMap","text":"<p>TreeSet \u548c TreeMap \u662f\u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u3002\u7531\u4e8e\u5176\u4e8c\u5206\u7684\u7279\u6027\uff0c\u67e5\u627e\u3001\u63d2\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a \\(O(\\log n)\\) \u3002</p> <p><code>TreeSet&lt;E&gt; set = new TreeSet&lt;&gt;()</code></p> <ul> <li><code>set.ceiling(E e)</code>: Returns the least element in this set &gt;= to the given element, or null if there is no such element.</li> <li><code>set.floor(E e)</code>: Returns the greatest element in this set &lt;= to the given element, or null if there is no such element.</li> <li><code>set.higher(E e)</code>: Returns the least element in this set strictly &gt; the given element, or null if there is no such element.</li> <li><code>set.lower(E e)</code>: Returns the greatest element in this set strictly &lt; the given element, or null if there is no such element.</li> <li><code>set.first()</code>: Returns the first (lowest) element currently in this set.</li> <li><code>set.last()</code>: Returns the last (highest) element currently in this set.</li> </ul> <p><code>TreeMap&lt;K, V&gt; map = new TreeMap&lt;&gt;()</code></p> <ul> <li><code>map.ceilingKey(K key)</code>: Returns the least key &gt;= to the given key, or null if there is no such key.</li> <li><code>map.floorKey(K key)</code>: Returns the greatest key &lt;= to the given key, or null if there is no such key.</li> <li><code>map.higherKey(K key)</code>: Returns the least key strictly &gt; the given key, or null if there is no such key.</li> <li><code>map.lowerKey(K key)</code>: Returns the greatest key strictly &lt; the given key, or null if there is no such key.</li> <li><code>map.firstKey()</code>: Returns the first (lowest) key currently in this map.</li> <li><code>map.lastKey()</code>: Returns the last (highest) key currently in this map.</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_16","title":"\u5b57\u5178\u6811","text":"<p>Trie \u6811\uff0c\u4e5f\u53eb\u201c\u5b57\u5178\u6811\u201d\u3002\u662f\u4e00\u79cd\u7531\u300c\u8282\u70b9\u300d\u548c\u300c\u5e26\u6709\u5b57\u7b26\u7684\u8fb9\u300d\u6784\u6210\u7684\u6811\u5f62\u7ed3\u6784\u3002Trie \u6811\u7684\u672c\u8d28\uff0c\u5c31\u662f\u5229\u7528\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u516c\u5171\u524d\u7f00\uff0c\u5c06\u91cd\u590d\u7684\u524d\u7f00\u5408\u5e76\u5728\u4e00\u8d77\u3002</p> <p>\u5178\u578b\u5e94\u7528\u662f\u7528\u4e8e\u7edf\u8ba1\u548c\u6392\u5e8f\u5927\u91cf\u7684\u5b57\u7b26\u4e32\uff08\u4f46\u4e0d\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\uff09\uff0c\u6240\u4ee5\u7ecf\u5e38\u88ab\u641c\u7d22\u5f15\u64ce\u7cfb\u7edf\u7528\u4e8e\u6587\u672c\u8bcd\u9891\u7edf\u8ba1\u3002\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\uff0c\u67e5\u8be2\u6548\u7387\u6bd4\u54c8\u5e0c\u8868\u9ad8\u3002</p> <p>\u5728 Trie \u6811\u4e2d\uff0c\u67e5\u627e\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff1f</p> <p>\u6784\u5efa Trie \u6811\u7684\u8fc7\u7a0b\uff0c\u9700\u8981\u626b\u63cf\u6240\u6709\u7684\u5b57\u7b26\u4e32\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n)\\)\uff08n \u8868\u793a\u6240\u6709\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c\uff09\u3002\u4f46\u662f\u4e00\u65e6\u6784\u5efa\u6210\u529f\u4e4b\u540e\uff0c\u540e\u7eed\u7684\u67e5\u8be2\u64cd\u4f5c\u4f1a\u975e\u5e38\u9ad8\u6548\u3002</p> <p>\u6bcf\u6b21\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u8981\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u662f k\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u6bd4\u5bf9\u5927\u7ea6 k \u4e2a\u8282\u70b9\uff0c\u5c31\u80fd\u5b8c\u6210\u67e5\u8be2\u64cd\u4f5c\u3002\u8ddf\u539f\u672c\u90a3\u7ec4\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c\u4e2a\u6570\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\u6240\u4ee5\u8bf4\uff0c\u6784\u5efa\u597d Trie \u6811\u540e\uff0c\u5728\u5176\u4e2d\u67e5\u627e\u5b57\u7b26\u4e32\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(k)\\)\uff0ck \u8868\u793a\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</p> <p></p> <p>208. \u5b9e\u73b0 Trie (\u524d\u7f00\u6811)</p> \u54c8\u5e0c\u8868\u6570\u7ec4 <pre><code>class Trie {\n\n    class Node {\n        int count = 0; //\u8bcd\u9891\n        HashMap&lt;Character, Node&gt; children = new HashMap&lt;&gt;(); //\u5b57\u7b26\u6620\u5c04\n    }\n\n    Node root;\n\n    public Trie() {\n        root = new Node();\n    }\n\n    public void insert(String word) {\n        Node cur = root;\n        for (char ch : word.toCharArray()) {\n            if (!cur.children.containsKey(ch)) {\n                cur.children.put(ch, new Node());\n            }\n            cur = cur.children.get(ch);\n        }\n        cur.count++;\n    }\n\n    public boolean search(String word) {\n        Node cur = root;\n        for (char ch : word.toCharArray()) {\n            if (!cur.children.containsKey(ch)) {\n                return false;\n            }\n            cur = cur.children.get(ch);\n        }\n        // \u9632\u6b62insert\u4e86\"abc\"\u4f46\u662f\u8981\u67e5\u627e\"a\"\u7684\u60c5\u51b5\n        return cur.count &gt; 0;\n    }\n\n    public boolean startsWith(String prefix) {\n        Node cur = root;\n        for (char ch : prefix.toCharArray()) {\n            if (!cur.children.containsKey(ch)) {\n                return false;\n            }\n            cur = cur.children.get(ch);\n        }\n        return true;\n    }\n}\n</code></pre> <pre><code>class Trie {\n\n    Trie[] children;\n    boolean isEnd;\n\n    public Trie() {\n        children = new Trie[26];\n        isEnd = false;\n    }\n\n    public void insert(String word) {\n        Trie cur = this;\n        for (char c : word.toCharArray()) {\n            int idx = c - 'a';\n            if (cur.children[idx] == null) {\n                cur.children[idx] = new Trie();\n            }\n            cur = cur.children[idx];\n        }\n        cur.isEnd = true;\n    }\n\n    public boolean search(String word) {\n        Trie cur = this;\n        for (char c : word.toCharArray()) {\n            int idx = c - 'a';\n            if (cur.children[idx] == null) {\n                return false;\n            }\n            cur = cur.children[idx];\n        }\n        return cur.isEnd;\n    }\n\n    public boolean startsWith(String prefix) {\n        Trie cur = this;\n        for (char c : prefix.toCharArray()) {\n            int idx = c - 'a';\n            if (cur.children[idx] == null) {\n                return false;\n            }\n            cur = cur.children[idx];\n        }\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_17","title":"\u5806","text":"<p>\u300c\u5806 heap\u300d\u662f\u4e00\u79cd\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u4e3b\u8981\u53ef\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>\u300c\u5927\u9876\u5806 max heap\u300d\uff1a\u4efb\u610f\u8282\u70b9\u7684\u503c &gt;= \u5176\u5b50\u8282\u70b9\u7684\u503c\u3002</li> <li>\u300c\u5c0f\u9876\u5806 min heap\u300d\uff1a\u4efb\u610f\u8282\u70b9\u7684\u503c &lt;= \u5176\u5b50\u8282\u70b9\u7684\u503c\u3002</li> </ul> \u65b9\u6cd5\u540d \u63cf\u8ff0 \u65f6\u95f4\u590d\u6742\u5ea6 push() \u5143\u7d20\u5165\u5806 \\(O(\\log n)\\) pop() \u5806\u9876\u5143\u7d20\u51fa\u5806 \\(O(\\log n)\\) peek() \u8bbf\u95ee\u5806\u9876\u5143\u7d20\uff08\u5927 / \u5c0f\u9876\u5806\u5206\u522b\u4e3a\u6700\u5927 / \u5c0f\u503c\uff09 \\(O(1)\\) size() \u83b7\u53d6\u5806\u7684\u5143\u7d20\u6570\u91cf \\(O(1)\\) isEmpty() \u5224\u65ad\u5806\u662f\u5426\u4e3a\u7a7a \\(O(1)\\) <p>\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u63d0\u4f9b\u7684\u662f\u300c\u4f18\u5148\u961f\u5217 priority queue\u300d\uff0c\u8fd9\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7ed3\u6784\uff0c\u5b9a\u4e49\u4e3a\u5177\u6709\u4f18\u5148\u7ea7\u6392\u5e8f\u7684\u961f\u5217\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u5806\u901a\u5e38\u7528\u4e8e\u5b9e\u73b0\u4f18\u5148\u961f\u5217\uff0c\u5927\u9876\u5806\u76f8\u5f53\u4e8e\u5143\u7d20\u6309\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u51fa\u961f\u7684\u4f18\u5148\u961f\u5217\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_18","title":"\u5806\u7684\u5b9e\u73b0","text":"<p>\u7531\u4e8e\u5806\u6b63\u662f\u4e00\u79cd\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u91c7\u7528\u6570\u7ec4\u6765\u5b58\u50a8\u5806\u3002</p> <p>\u5f53\u4f7f\u7528\u6570\u7ec4\u8868\u793a\u4e8c\u53c9\u6811\u65f6\uff0c\u5143\u7d20\u4ee3\u8868\u8282\u70b9\u503c\uff0c\u7d22\u5f15\u4ee3\u8868\u8282\u70b9\u5728\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u3002\u8282\u70b9\u6307\u9488\u901a\u8fc7\u7d22\u5f15\u6620\u5c04\u516c\u5f0f\u6765\u5b9e\u73b0\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7ed9\u5b9a\u7d22\u5f15 \\(i\\) \uff0c\u5176\u5de6\u5b50\u8282\u70b9\u7d22\u5f15\u4e3a \\(2i + 1\\) \uff0c\u53f3\u5b50\u8282\u70b9\u7d22\u5f15\u4e3a \\(2i + 2\\) \uff0c\u7236\u8282\u70b9\u7d22\u5f15\u4e3a \\((i - 1) / 2\\)\uff08\u5411\u4e0b\u6574\u9664\uff09\u3002\u5f53\u7d22\u5f15\u8d8a\u754c\u65f6\uff0c\u8868\u793a\u7a7a\u8282\u70b9\u6216\u8282\u70b9\u4e0d\u5b58\u5728\u3002</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_19","title":"\u5143\u7d20\u5165\u5806","text":"<p>\u7ed9\u5b9a\u5143\u7d20 <code>val</code> \uff0c\u6211\u4eec\u9996\u5148\u5c06\u5176\u6dfb\u52a0\u5230\u5806\u5e95\u3002\u6dfb\u52a0\u4e4b\u540e\uff0c\u7531\u4e8e val \u53ef\u80fd\u5927\u4e8e\u5806\u4e2d\u5176\u4ed6\u5143\u7d20\uff0c\u5806\u7684\u6210\u7acb\u6761\u4ef6\u53ef\u80fd\u5df2\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u9700\u8981\u4fee\u590d\u4ece\u63d2\u5165\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u5404\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u88ab\u79f0\u4e3a\u300c\u5806\u5316 heapify\u300d\u3002</p> <p>\u8003\u8651\u4ece\u5165\u5806\u8282\u70b9\u5f00\u59cb\uff0c\u4ece\u5e95\u81f3\u9876\u6267\u884c\u5806\u5316\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u6bd4\u8f83\u63d2\u5165\u8282\u70b9\u4e0e\u5176\u7236\u8282\u70b9\u7684\u503c\uff0c\u5982\u679c\u63d2\u5165\u8282\u70b9\u66f4\u5927\uff0c\u5219\u5c06\u5b83\u4eec\u4ea4\u6362\u3002\u7136\u540e\u7ee7\u7eed\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4ece\u5e95\u81f3\u9876\u4fee\u590d\u5806\u4e2d\u7684\u5404\u4e2a\u8282\u70b9\uff0c\u76f4\u81f3\u8d8a\u8fc7\u6839\u8282\u70b9\u6216\u9047\u5230\u65e0\u987b\u4ea4\u6362\u7684\u8282\u70b9\u65f6\u7ed3\u675f\u3002</p> <pre><code>/* \u5143\u7d20\u5165\u5806 */\nvoid push(int val) {\n    // \u6dfb\u52a0\u8282\u70b9\n    maxHeap.add(val);\n    // \u4ece\u5e95\u81f3\u9876\u5806\u5316\n    siftUp(size() - 1);\n}\n\n/* \u4ece\u8282\u70b9 i \u5f00\u59cb\uff0c\u4ece\u5e95\u81f3\u9876\u5806\u5316 */\nvoid siftUp(int i) {\n    // \u5f53\u201c\u8d8a\u8fc7\u6839\u8282\u70b9\u201d\u6216\u201c\u8282\u70b9\u65e0\u987b\u4fee\u590d\u201d\u65f6\uff0c\u7ed3\u675f\u5806\u5316\n    while (i &gt; 0 &amp;&amp; heap.get(i) &gt; heap.get(parent(i))) {\n        swap(i, parent(i));\n        i = parent(i);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_20","title":"\u5806\u9876\u5143\u7d20\u51fa\u5806","text":"<ol> <li>\u4ea4\u6362\u5806\u9876\u5143\u7d20\u4e0e\u5806\u5e95\u5143\u7d20\uff08\u4ea4\u6362\u6839\u8282\u70b9\u4e0e\u6700\u53f3\u53f6\u8282\u70b9\uff09\u3002</li> <li>\u4ea4\u6362\u5b8c\u6210\u540e\uff0c\u5c06\u5806\u5e95\u4ece\u5217\u8868\u4e2d\u5220\u9664\u3002</li> <li>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4ece\u9876\u81f3\u5e95\u6267\u884c\u5806\u5316\u3002</li> </ol> <pre><code>/* \u4ece\u8282\u70b9 i \u5f00\u59cb\uff0c\u4ece\u9876\u81f3\u5e95\u5806\u5316 */\nvoid siftDown(int i) {\n    // \u627e\u5230\u81ea\u5df1\u3001\u5de6\u5b69\u5b50\u3001\u53f3\u5b69\u5b50\u4e09\u8005\u7684\u6700\u5927\u503c\uff0c\u5373\u8981\u4ea4\u6362\u5230\u7684\u76ee\u6807\u4e0b\u6807\n    int t = i, l = left(i), r = right(i);\n    if (l &lt; size &amp;&amp; heap.get(l) &gt; heap.get(t))\n        t = l;\n    if (r &lt; size &amp;&amp; heap.get(r) &gt; heap.get(t))\n        t = r;\n    if (t != i) {\n        swap(i, t);\n        siftDown(t);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_21","title":"\u5efa\u5806\u64cd\u4f5c","text":"<p>\u6709\u4e00\u79cd\u9ad8\u6548\u7684 \\(O(n)\\) \u7684\u5efa\u5806\u65b9\u6cd5\uff1a\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u4f9d\u6b21\u8fdb\u884c\u201c\u4ece\u9876\u81f3\u5e95\u5806\u5316\u201d\uff0c\u76f4\u81f3\u6839\u8282\u70b9\uff0c\u8fd9\u6837\u5c31\u80fd\u5c06 \\(O(nlogn)\\) \u4f18\u5316\u4e3a \\(O(n)\\)\u3002</p> <ol> <li>\u5c06\u5217\u8868\u6240\u6709\u5143\u7d20\u539f\u5c01\u4e0d\u52a8\u6dfb\u52a0\u5230\u5806\u4e2d\uff0c\u6b64\u65f6\u5806\u7684\u6027\u8d28\u5c1a\u672a\u5f97\u5230\u6ee1\u8db3\u3002</li> <li>\u5012\u5e8f\u904d\u5386\u5806\uff08\u5373\u5c42\u5e8f\u904d\u5386\u7684\u5012\u5e8f\uff09\uff0c\u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u975e\u53f6\u8282\u70b9\u6267\u884c\u201c\u4ece\u9876\u81f3\u5e95\u5806\u5316\u201d\u3002</li> </ol> <p>\u6bcf\u5f53\u5806\u5316\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5c31\u5f62\u6210\u4e00\u4e2a\u5408\u6cd5\u7684\u5b50\u5806\u3002\u800c\u7531\u4e8e\u662f\u5012\u5e8f\u904d\u5386\uff0c\u56e0\u6b64\u5806\u662f\u201c\u81ea\u4e0b\u800c\u4e0a\u201d\u6784\u5efa\u7684\u3002</p> <p>\u4e4b\u6240\u4ee5\u9009\u62e9\u5012\u5e8f\u904d\u5386\uff0c\u662f\u56e0\u4e3a\u8fd9\u6837\u80fd\u591f\u4fdd\u8bc1\u5f53\u524d\u8282\u70b9\u4e4b\u4e0b\u7684\u5b50\u6811\u5df2\u7ecf\u662f\u5408\u6cd5\u7684\u5b50\u5806\uff0c\u8fd9\u6837\u5806\u5316\u5f53\u524d\u8282\u70b9\u624d\u662f\u6709\u6548\u7684\u3002</p> <p>\u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0c\u53f6\u8282\u70b9\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u5929\u7136\u5c31\u662f\u5408\u6cd5\u7684\u5b50\u5806\uff0c\u56e0\u6b64\u65e0\u987b\u5806\u5316\u3002\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a\uff0c\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u662f\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u6211\u4eec\u4ece\u5b83\u5f00\u59cb\u5012\u5e8f\u904d\u5386\u5e76\u6267\u884c\u5806\u5316\u3002</p> <pre><code>/* \u6784\u9020\u65b9\u6cd5\uff0c\u6839\u636e\u8f93\u5165\u5217\u8868\u5efa\u5806 */\nMaxHeap(List&lt;Integer&gt; nums) {\n    // \u5c06\u5217\u8868\u5143\u7d20\u539f\u5c01\u4e0d\u52a8\u6dfb\u52a0\u8fdb\u5806\n    maxHeap = new ArrayList&lt;&gt;(nums);\n    // \u5806\u5316\u9664\u53f6\u8282\u70b9\u4ee5\u5916\u7684\u5176\u4ed6\u6240\u6709\u8282\u70b9\n    for (int i = parent(size() - 1); i &gt;= 0; i--) {\n        siftDown(i);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_22","title":"\u5e76\u67e5\u96c6","text":"<ul> <li>\u5904\u7406\u4e0d\u76f8\u4ea4\u96c6\u5408\uff08disjoint sets\uff09\u7684\u5408\u5e76\u53ca\u67e5\u8be2\u95ee\u9898</li> <li>\u5904\u7406\u5206\u7ec4\u95ee\u9898</li> <li>\u7ef4\u62a4\u65e0\u5e8f\u4e8c\u5143\u5173\u7cfb</li> </ul> <p>\u6bcf\u4e2a\u96c6\u5408\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ea\u9700\u8981\u4fdd\u5b58\u4e00\u4e2a\u503c\uff1a\u5b83\u7684\u7236\u8282\u70b9\u3002\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u662f\u4f7f\u7528\u4e00\u4e2a int \u6570\u7ec4 fa\uff0c<code>fa[x]</code> \u8868\u793a x \u7684\u7236\u8282\u70b9\u3002</p> <p></p> <p>\u4f8b\u9898\uff1a</p> <ul> <li>323. \u65e0\u5411\u56fe\u4e2d\u8fde\u901a\u5206\u91cf\u7684\u6570\u76ee</li> <li>547. \u7701\u4efd\u6570\u91cf</li> <li>836. \u5408\u5e76\u96c6\u5408</li> <li>837. \u8fde\u901a\u5757\u4e2d\u70b9\u7684\u6570\u91cf</li> </ul> <pre><code>class UnionFindSet {\n    int[] fa;\n\n    public UnionFindSet(int n) {\n        fa = new int[n];\n        for (int i = 0; i &lt; n; i++) {\n            fa[i] = i;\n        }\n    }\n\n    public int find(int x) {\n        if (x != fa[x]) {\n            fa[x] = find(fa[x]);\n        }\n        return fa[x];\n    }\n\n    public void union(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x != y) {\n            fa[x] = y;\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_23","title":"\u56fe","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_24","title":"\u56fe\u7684\u5b58\u50a8","text":"<p>\u90bb\u63a5\u77e9\u9635\uff1a</p> <p></p> <p>\u8bbe\u56fe\u7684\u9876\u70b9\u6570\u91cf\u4e3a \\(n\\) \uff0c\u300c\u90bb\u63a5\u77e9\u9635 adjacency matrix\u300d\u4f7f\u7528\u4e00\u4e2a \\(n \\times n\\) \u5927\u5c0f\u7684\u77e9\u9635\u6765\u8868\u793a\u56fe\uff0c\u6bcf\u4e00\u884c\uff08\u5217\uff09\u4ee3\u8868\u4e00\u4e2a\u9876\u70b9\uff0c\u77e9\u9635\u5143\u7d20\u4ee3\u8868\u8fb9\uff0c\u7528 \\(1\\) \u6216 \\(0\\) \u8868\u793a\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8bbe\u90bb\u63a5\u77e9\u9635\u4e3a \\(M\\)\u3001\u9876\u70b9\u5217\u8868\u4e3a \\(V\\) \uff0c\u90a3\u4e48\u77e9\u9635\u5143\u7d20 \\(M[i, j] = 1\\) \u8868\u793a\u9876\u70b9 \\(V[i]\\) \u5230\u9876\u70b9 \\(V[j]\\) \u4e4b\u95f4\u5b58\u5728\u8fb9\uff0c\u53cd\u4e4b \\(M[i, j] = 0\\) \u8868\u793a\u4e24\u9876\u70b9\u4e4b\u95f4\u65e0\u8fb9\u3002</p> <p>\u90bb\u63a5\u77e9\u9635\u5177\u6709\u4ee5\u4e0b\u7279\u6027\u3002</p> <ul> <li>\u9876\u70b9\u4e0d\u80fd\u4e0e\u81ea\u8eab\u76f8\u8fde\uff0c\u56e0\u6b64\u90bb\u63a5\u77e9\u9635\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u6ca1\u6709\u610f\u4e49\u3002</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0c\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9\u7b49\u4ef7\uff0c\u6b64\u65f6\u90bb\u63a5\u77e9\u9635\u5173\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u5bf9\u79f0\u3002</li> <li>\u5c06\u90bb\u63a5\u77e9\u9635\u7684\u5143\u7d20\u4ece \\(1\\) \u548c \\(0\\) \u66ff\u6362\u4e3a\u6743\u91cd\uff0c\u5219\u53ef\u8868\u793a\u6709\u6743\u56fe\u3002</li> </ul> <p>\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u8868\u793a\u56fe\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u77e9\u9635\u5143\u7d20\u4ee5\u83b7\u53d6\u8fb9\uff0c\u56e0\u6b64\u589e\u5220\u67e5\u6539\u64cd\u4f5c\u7684\u6548\u7387\u5f88\u9ad8\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a \\(O(1)\\) \u3002\u7136\u800c\uff0c\u77e9\u9635\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \uff0c\u5185\u5b58\u5360\u7528\u8f83\u591a\u3002</p> <p>\u90bb\u63a5\u8868\uff1a</p> <p>\u300c\u90bb\u63a5\u8868 adjacency list\u300d\u4f7f\u7528 \\(n\\) \u4e2a\u94fe\u8868\u6765\u8868\u793a\u56fe\uff0c\u94fe\u8868\u8282\u70b9\u8868\u793a\u9876\u70b9\u3002\u7b2c \\(i\\) \u4e2a\u94fe\u8868\u5bf9\u5e94\u9876\u70b9 \\(i\\) \uff0c\u5176\u4e2d\u5b58\u50a8\u4e86\u8be5\u9876\u70b9\u7684\u6240\u6709\u90bb\u63a5\u9876\u70b9\uff08\u4e0e\u8be5\u9876\u70b9\u76f8\u8fde\u7684\u9876\u70b9\uff09\u3002</p> <p></p> <p>\u90bb\u63a5\u8868\u4ec5\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u7684\u8fb9\uff0c\u800c\u8fb9\u7684\u603b\u6570\u901a\u5e38\u8fdc\u5c0f\u4e8e \\(n^2\\) \uff0c\u56e0\u6b64\u5b83\u66f4\u52a0\u8282\u7701\u7a7a\u95f4\u3002\u7136\u800c\uff0c\u5728\u90bb\u63a5\u8868\u4e2d\u9700\u8981\u901a\u8fc7\u904d\u5386\u94fe\u8868\u6765\u67e5\u627e\u8fb9\uff0c\u56e0\u6b64\u5176\u65f6\u95f4\u6548\u7387\u4e0d\u5982\u90bb\u63a5\u77e9\u9635\u3002</p> <p>\u89c2\u5bdf\u4e0a\u56fe\uff0c\u90bb\u63a5\u8868\u7ed3\u6784\u4e0e\u54c8\u5e0c\u8868\u4e2d\u7684\u201c\u94fe\u5f0f\u5730\u5740\u201d\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u6548\u7387\u3002\u6bd4\u5982\u5f53\u94fe\u8868\u8f83\u957f\u65f6\uff0c\u53ef\u4ee5\u5c06\u94fe\u8868\u8f6c\u5316\u4e3a AVL \u6811\u6216\u7ea2\u9ed1\u6811\uff0c\u4ece\u800c\u5c06\u65f6\u95f4\u6548\u7387\u4ece \\(O(n)\\) \u4f18\u5316\u81f3 \\(O(\\log n)\\) \uff1b\u8fd8\u53ef\u4ee5\u628a\u94fe\u8868\u8f6c\u6362\u4e3a\u54c8\u5e0c\u8868\uff0c\u4ece\u800c\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3 \\(O(1)\\) \u3002</p> <pre><code>public void buildGraph(int n, int[][] edges) {\n    // \u90bb\u63a5\u8868\u5efa\u56fe\n    List&lt;Integer&gt;[] g = new List[n];\n    Arrays.setAll(g, i -&gt; new ArrayList&lt;&gt;());\n    for (int[] edge : edges) {\n        int to = edge[0];\n        int from = edge[1];\n        g[from].add(to);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#_25","title":"\u56fe\u7684\u904d\u5386","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#bfs","title":"BFS","text":"<p>\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u662f\u4e00\u79cd\u7531\u8fd1\u53ca\u8fdc\u7684\u904d\u5386\u65b9\u5f0f\uff0c\u4ece\u67d0\u4e2a\u8282\u70b9\u51fa\u53d1\uff0c\u59cb\u7ec8\u4f18\u5148\u8bbf\u95ee\u8ddd\u79bb\u6700\u8fd1\u7684\u9876\u70b9\uff0c\u5e76\u4e00\u5c42\u5c42\u5411\u5916\u6269\u5f20\u3002</p> <p></p> <p>BFS \u901a\u5e38\u501f\u52a9\u961f\u5217\u6765\u5b9e\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\u961f\u5217\u5177\u6709\u201c\u5148\u5165\u5148\u51fa\u201d\u7684\u6027\u8d28\uff0c\u8fd9\u4e0e BFS \u7684\u201c\u7531\u8fd1\u53ca\u8fdc\u201d\u7684\u601d\u60f3\u5f02\u66f2\u540c\u5de5\u3002</p> <ol> <li>\u5c06\u904d\u5386\u8d77\u59cb\u9876\u70b9 <code>startVet</code> \u52a0\u5165\u961f\u5217\uff0c\u5e76\u5f00\u542f\u5faa\u73af\u3002</li> <li>\u5728\u5faa\u73af\u7684\u6bcf\u8f6e\u8fed\u4ee3\u4e2d\uff0c\u5f39\u51fa\u961f\u9996\u9876\u70b9\u5e76\u8bb0\u5f55\u8bbf\u95ee\uff0c\u7136\u540e\u5c06\u8be5\u9876\u70b9\u7684\u6240\u6709\u90bb\u63a5\u9876\u70b9\u52a0\u5165\u5230\u961f\u5217\u5c3e\u90e8\u3002</li> <li>\u5faa\u73af\u6b65\u9aa4 <code>2.</code> \uff0c\u76f4\u5230\u6240\u6709\u9876\u70b9\u88ab\u8bbf\u95ee\u5b8c\u6bd5\u540e\u7ed3\u675f\u3002</li> </ol> <p>\u4e3a\u4e86\u9632\u6b62\u91cd\u590d\u904d\u5386\u9876\u70b9\uff0c\u6211\u4eec\u9700\u8981\u501f\u52a9\u4e00\u4e2a\u54c8\u5e0c\u8868 <code>visited</code> \u6765\u8bb0\u5f55\u54ea\u4e9b\u8282\u70b9\u5df2\u88ab\u8bbf\u95ee\u3002</p> <pre><code>/* \u5e7f\u5ea6\u4f18\u5148\u904d\u5386 BFS */\n// \u4f7f\u7528\u90bb\u63a5\u8868\u6765\u8868\u793a\u56fe\uff0c\u4ee5\u4fbf\u83b7\u53d6\u6307\u5b9a\u9876\u70b9\u7684\u6240\u6709\u90bb\u63a5\u9876\u70b9\nList&lt;Vertex&gt; graphBFS(GraphAdjList graph, Vertex startVet) {\n    // \u9876\u70b9\u904d\u5386\u5e8f\u5217\n    List&lt;Vertex&gt; res = new ArrayList&lt;&gt;();\n    // \u54c8\u5e0c\u8868\uff0c\u7528\u4e8e\u8bb0\u5f55\u5df2\u88ab\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\n    Set&lt;Vertex&gt; visited = new HashSet&lt;&gt;();\n    visited.add(startVet);\n    // \u961f\u5217\u7528\u4e8e\u5b9e\u73b0 BFS\n    Queue&lt;Vertex&gt; que = new LinkedList&lt;&gt;();\n    que.offer(startVet);\n    // \u4ee5\u9876\u70b9 vet \u4e3a\u8d77\u70b9\uff0c\u5faa\u73af\u76f4\u81f3\u8bbf\u95ee\u5b8c\u6240\u6709\u9876\u70b9\n    while (!que.isEmpty()) {\n        Vertex vet = que.poll(); // \u961f\u9996\u9876\u70b9\u51fa\u961f\n        res.add(vet);            // \u8bb0\u5f55\u8bbf\u95ee\u9876\u70b9\n        // \u904d\u5386\u8be5\u9876\u70b9\u7684\u6240\u6709\u90bb\u63a5\u9876\u70b9\n        for (Vertex adjVet : graph.adjList.get(vet)) {\n            if (visited.contains(adjVet))\n                continue;        // \u8df3\u8fc7\u5df2\u88ab\u8bbf\u95ee\u7684\u9876\u70b9\n            que.offer(adjVet);   // \u53ea\u5165\u961f\u672a\u8bbf\u95ee\u7684\u9876\u70b9\n            visited.add(adjVet); // \u6807\u8bb0\u8be5\u9876\u70b9\u5df2\u88ab\u8bbf\u95ee\n        }\n    }\n    // \u8fd4\u56de\u9876\u70b9\u904d\u5386\u5e8f\u5217\n    return res;\n}\n</code></pre> &lt;1&gt;&lt;2&gt;&lt;3&gt;&lt;4&gt;&lt;5&gt;&lt;6&gt;&lt;7&gt;&lt;8&gt;&lt;9&gt;&lt;10&gt;&lt;11&gt; <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6240\u6709\u9876\u70b9\u90fd\u4f1a\u5165\u961f\u5e76\u51fa\u961f\u4e00\u6b21\uff0c\u4f7f\u7528 \\(O(|V|)\\) \u65f6\u95f4\uff1b\u5728\u904d\u5386\u90bb\u63a5\u9876\u70b9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u662f\u65e0\u5411\u56fe\uff0c\u56e0\u6b64\u6240\u6709\u8fb9\u90fd\u4f1a\u88ab\u8bbf\u95ee \\(2\\) \u6b21\uff0c\u4f7f\u7528 \\(O(2|E|)\\) \u65f6\u95f4\uff1b\u603b\u4f53\u4f7f\u7528 \\(O(|V| + |E|)\\) \u65f6\u95f4\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u5217\u8868 <code>res</code> \uff0c\u54c8\u5e0c\u8868 <code>visited</code> \uff0c\u961f\u5217 <code>que</code> \u4e2d\u7684\u9876\u70b9\u6570\u91cf\u6700\u591a\u4e3a \\(|V|\\) \uff0c\u4f7f\u7528 \\(O(|V|)\\) \u7a7a\u95f4\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/0.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0/#dfs","title":"DFS","text":"<p>\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u662f\u4e00\u79cd\u4f18\u5148\u8d70\u5230\u5e95\u3001\u65e0\u8def\u53ef\u8d70\u518d\u56de\u5934\u7684\u904d\u5386\u65b9\u5f0f\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4ece\u5de6\u4e0a\u89d2\u9876\u70b9\u51fa\u53d1\uff0c\u8bbf\u95ee\u5f53\u524d\u9876\u70b9\u7684\u67d0\u4e2a\u90bb\u63a5\u9876\u70b9\uff0c\u76f4\u5230\u8d70\u5230\u5c3d\u5934\u65f6\u8fd4\u56de\uff0c\u518d\u7ee7\u7eed\u8d70\u5230\u5c3d\u5934\u5e76\u8fd4\u56de\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u81f3\u6240\u6709\u9876\u70b9\u904d\u5386\u5b8c\u6210\u3002</p> <p></p> <p>\u8fd9\u79cd\u201c\u8d70\u5230\u5c3d\u5934\u518d\u8fd4\u56de\u201d\u7684\u7b97\u6cd5\u8303\u5f0f\u901a\u5e38\u57fa\u4e8e\u9012\u5f52\u6765\u5b9e\u73b0\u3002\u4e0e\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u7c7b\u4f3c\uff0c\u5728\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u4e2d\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u501f\u52a9\u4e00\u4e2a\u54c8\u5e0c\u8868 <code>visited</code> \u6765\u8bb0\u5f55\u5df2\u88ab\u8bbf\u95ee\u7684\u9876\u70b9\uff0c\u4ee5\u907f\u514d\u91cd\u590d\u8bbf\u95ee\u9876\u70b9\u3002</p> <pre><code>/* \u6df1\u5ea6\u4f18\u5148\u904d\u5386 DFS \u8f85\u52a9\u51fd\u6570 */\nvoid dfs(GraphAdjList graph, Set&lt;Vertex&gt; visited, List&lt;Vertex&gt; res, Vertex vet) {\n    res.add(vet);     // \u8bb0\u5f55\u8bbf\u95ee\u9876\u70b9\n    visited.add(vet); // \u6807\u8bb0\u8be5\u9876\u70b9\u5df2\u88ab\u8bbf\u95ee\n    // \u904d\u5386\u8be5\u9876\u70b9\u7684\u6240\u6709\u90bb\u63a5\u9876\u70b9\n    for (Vertex adjVet : graph.adjList.get(vet)) {\n        if (visited.contains(adjVet))\n            continue; // \u8df3\u8fc7\u5df2\u88ab\u8bbf\u95ee\u7684\u9876\u70b9\n        // \u9012\u5f52\u8bbf\u95ee\u90bb\u63a5\u9876\u70b9\n        dfs(graph, visited, res, adjVet);\n    }\n}\n\n/* \u6df1\u5ea6\u4f18\u5148\u904d\u5386 DFS */\n// \u4f7f\u7528\u90bb\u63a5\u8868\u6765\u8868\u793a\u56fe\uff0c\u4ee5\u4fbf\u83b7\u53d6\u6307\u5b9a\u9876\u70b9\u7684\u6240\u6709\u90bb\u63a5\u9876\u70b9\nList&lt;Vertex&gt; graphDFS(GraphAdjList graph, Vertex startVet) {\n    // \u9876\u70b9\u904d\u5386\u5e8f\u5217\n    List&lt;Vertex&gt; res = new ArrayList&lt;&gt;();\n    // \u54c8\u5e0c\u8868\uff0c\u7528\u4e8e\u8bb0\u5f55\u5df2\u88ab\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\n    Set&lt;Vertex&gt; visited = new HashSet&lt;&gt;();\n    dfs(graph, visited, res, startVet);\n    return res;\n}\n</code></pre> &lt;1&gt;&lt;2&gt;&lt;3&gt;&lt;4&gt;&lt;5&gt;&lt;6&gt;&lt;7&gt;&lt;8&gt;&lt;9&gt;&lt;10&gt;&lt;11&gt; <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6240\u6709\u9876\u70b9\u90fd\u4f1a\u88ab\u8bbf\u95ee \\(1\\) \u6b21\uff0c\u4f7f\u7528 \\(O(|V|)\\) \u65f6\u95f4\uff1b\u6240\u6709\u8fb9\u90fd\u4f1a\u88ab\u8bbf\u95ee \\(2\\) \u6b21\uff0c\u4f7f\u7528 \\(O(2|E|)\\) \u65f6\u95f4\uff1b\u603b\u4f53\u4f7f\u7528 \\(O(|V| + |E|)\\) \u65f6\u95f4\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u5217\u8868 <code>res</code> \uff0c\u54c8\u5e0c\u8868 <code>visited</code> \u9876\u70b9\u6570\u91cf\u6700\u591a\u4e3a \\(|V|\\) \uff0c\u9012\u5f52\u6df1\u5ea6\u6700\u5927\u4e3a \\(|V|\\) \uff0c\u56e0\u6b64\u4f7f\u7528 \\(O(|V|)\\) \u7a7a\u95f4\u3002</p> <p>\u9012\u5f52\u7248 DFS \u4e5f\u53ef\u4ee5\u6539\u5199\u4e3a\u8fed\u4ee3\u7248\uff0c\u4f7f\u7528\u6808\u6765\u5b9e\u73b0\u3002\u4ee3\u7801\u7c7b\u4f3c\u4e8e BFS\u3002</p> <pre><code>public void dfs(GraphNode start) {\n    Deque&lt;GraphNode&gt; stack = new ArrayDeque&lt;&gt;();\n    stack.push(start);\n    visited.add(start);\n    while (!stack.isEmpty()) {\n        GraphNode cur = stack.pop();\n        System.out.println(cur.val);\n        for (GraphNode next : cur.children) {\n            if (!visited.contains(next)) {\n                stack.push(next);\n                visited.add(next); // mark node as visited when adding to stack!\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/","title":"\u7b97\u6cd5\u590d\u4e60","text":"<p>\u672c\u6587\u5927\u91cf\u5185\u5bb9\u548c\u56fe\u7247\u6765\u81ea\u4e8e Hello \u7b97\u6cd5\uff0c\u611f\u8c22 Krahets \u5927\u4f6c\u7684\u5f00\u6e90\u7cbe\u795e\u548c\u65e0\u79c1\u5206\u4eab\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_2","title":"\u641c\u7d22\u7b97\u6cd5","text":"\u7ebf\u6027\u641c\u7d22 \u4e8c\u5206\u67e5\u627e \u6811\u67e5\u627e \u54c8\u5e0c\u67e5\u627e \u67e5\u627e\u5143\u7d20 \\(O(n)\\) \\(O(\\log n)\\) \\(O(\\log n)\\) \\(O(1)\\) \u63d2\u5165\u5143\u7d20 \\(O(1)\\) \\(O(n)\\) \\(O(\\log n)\\) \\(O(1)\\) \u5220\u9664\u5143\u7d20 \\(O(n)\\) \\(O(n)\\) \\(O(\\log n)\\) \\(O(1)\\) \u989d\u5916\u7a7a\u95f4 \\(O(1)\\) \\(O(1)\\) \\(O(n)\\) \\(O(n)\\) \u6570\u636e\u9884\u5904\u7406 / \u6392\u5e8f \\(O(n \\log n)\\) \u5efa\u6811 \\(O(n \\log n)\\) \u5efa\u54c8\u5e0c\u8868 \\(O(n)\\) \u6570\u636e\u662f\u5426\u6709\u5e8f \u65e0\u5e8f \u6709\u5e8f \u6709\u5e8f \u65e0\u5e8f"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_3","title":"\u4e8c\u5206\u67e5\u627e","text":"\u7ecf\u5178\u4e8c\u5206\u540e\u7ee7\u578b\u4e8c\u5206\u524d\u9a71\u578b\u4e8c\u5206 <pre><code>class Solution {\n    public int search(int[] nums, int target) {\n        if (target &lt; nums[0] || target &gt; nums[nums.length - 1]) {\n            return -1;\n        }\n\n        int left = 0, right = nums.length - 1;\n        while (left &lt;= right) {\n            int mid = left + (right - left) / 2;\n            if (nums[mid] == target)\n                return mid;\n            else if (nums[mid] &lt; target)\n                left = mid + 1;\n            else if (nums[mid] &gt; target)\n                right = mid - 1;\n        }\n        return -1;\n    }\n}\n</code></pre> <p>\u67e5\u627e\u7b2c\u4e00\u4e2a <code>&gt;=target</code> \u7684\u6570\u7684\u4e0b\u6807\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de n\u3002\uff08\u540e\u7ee7\u578b\uff09</p> <pre><code>class Solution {\n    public int search(int[] nums, int target) {\n        // nums.length\u662f\u4fdd\u62a4\u8282\u70b9\uff0c\u7531\u4e8e\u5f80\u4e0b\u53d6\u6574\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u5230\uff0c\u5982\u679c\u6700\u540e\u8fd4\u56denums.length\u5219\u8868\u793a\u65e0\u89e3\n        int left = 0, right = nums.length;\n        while (left &lt; right) {\n            int mid = left + (right - left) / 2;\n            if (nums[mid] &gt;= target) { // \u6761\u4ef6\u88ab\u6ee1\u8db3\u7684\u4e00\u4fa7\u5e94\u8be5\u88ab\u5305\u542b\n                right = mid;\n            } else {\n                left = mid + 1; // \u6761\u4ef6\u4e0d\u6ee1\u8db3\u7684\u4e00\u4fa7\u76f4\u63a5\u53bb\u6389\n            }\n        }\n        return right;\n    }\n}\n</code></pre> <p>\u67e5\u627e\u6700\u540e\u4e00\u4e2a <code>&lt;= target</code> \u7684\u6570\u7684\u4e0b\u6807\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de -1\u3002\uff08\u524d\u9a71\u578b\uff09</p> <pre><code>class Solution {\n    public int search(int[] nums, int target) {\n        // -1\u662f\u4fdd\u62a4\u8282\u70b9\uff0c\u7531\u4e8e\u5411\u4e0a\u53d6\u6574\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u5230\uff0c\u5982\u679c\u6700\u540e\u8fd4\u56de-1\u5219\u8868\u793a\u65e0\u89e3\n        int left = -1, right = nums.length - 1;\n        while (left &lt; right) {\n            int mid = left + (right - left + 1) / 2; // \u5411\u4e0a\u53d6\u6574\uff0c\u907f\u514d\u9677\u5165\u6b7b\u5faa\u73af\n            if (nums[mid] &lt;= target) { // \u6761\u4ef6\u88ab\u6ee1\u8db3\u7684\u4e00\u4fa7\u5e94\u8be5\u88ab\u5305\u542b\n                left = mid;\n            } else {\n                right = mid - 1; // \u6761\u4ef6\u4e0d\u6ee1\u8db3\u7684\u4e00\u4fa7\u76f4\u63a5\u53bb\u6389\n            }\n        }\n        return right;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_4","title":"\u6392\u5e8f\u7b97\u6cd5","text":"<p>912. \u6392\u5e8f\u6570\u7ec4</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_5","title":"\u9009\u62e9\u6392\u5e8f","text":"<p>\u9009\u62e9\u6392\u5e8f</p> <p>\u300c\u9009\u62e9\u6392\u5e8f selection sort\u300d\u7684\u5de5\u4f5c\u539f\u7406\u975e\u5e38\u7b80\u5355\uff1a\u5f00\u542f\u4e00\u4e2a\u5faa\u73af\uff0c\u6bcf\u8f6e\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u9009\u62e9\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u5c06\u5176\u653e\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u7684\u672b\u5c3e\u3002</p> <p>\u8bbe\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a \\(n\\) \uff0c\u9009\u62e9\u6392\u5e8f\u7684\u7b97\u6cd5\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u521d\u59cb\u72b6\u6001\u4e0b\uff0c\u6240\u6709\u5143\u7d20\u672a\u6392\u5e8f\uff0c\u5373\u672a\u6392\u5e8f\uff08\u7d22\u5f15\uff09\u533a\u95f4\u4e3a \\([0, n-1]\\) \u3002</li> <li>\u9009\u53d6\u533a\u95f4 \\([0, n-1]\\) \u4e2d\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u5c06\u5176\u4e0e\u7d22\u5f15 \\(0\\) \u5904\u7684\u5143\u7d20\u4ea4\u6362\u3002\u5b8c\u6210\u540e\uff0c\u6570\u7ec4\u524d 1 \u4e2a\u5143\u7d20\u5df2\u6392\u5e8f\u3002</li> <li>\u9009\u53d6\u533a\u95f4 \\([1, n-1]\\) \u4e2d\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u5c06\u5176\u4e0e\u7d22\u5f15 \\(1\\) \u5904\u7684\u5143\u7d20\u4ea4\u6362\u3002\u5b8c\u6210\u540e\uff0c\u6570\u7ec4\u524d 2 \u4e2a\u5143\u7d20\u5df2\u6392\u5e8f\u3002</li> <li>\u4ee5\u6b64\u7c7b\u63a8\u3002\u7ecf\u8fc7 \\(n - 1\\) \u8f6e\u9009\u62e9\u4e0e\u4ea4\u6362\u540e\uff0c\u6570\u7ec4\u524d \\(n - 1\\) \u4e2a\u5143\u7d20\u5df2\u6392\u5e8f\u3002</li> <li>\u4ec5\u5269\u7684\u4e00\u4e2a\u5143\u7d20\u5fc5\u5b9a\u662f\u6700\u5927\u5143\u7d20\uff0c\u65e0\u987b\u6392\u5e8f\uff0c\u56e0\u6b64\u6570\u7ec4\u6392\u5e8f\u5b8c\u6210\u3002</li> </ol> <pre><code>public void selectionSort(int[] nums) {\n    int n = nums.length;\n    // \u5916\u5faa\u73af\uff1a\u672a\u6392\u5e8f\u533a\u95f4\u4e3a [i, n - 1]\n    for (int i = 0; i &lt; n - 1; i++) {\n        int minIdx = i;\n        // \u5185\u5faa\u73af\uff1a\u5728\u672a\u6392\u5e8f\u533a\u95f4\u4e2d\u5bfb\u627e\u6700\u5c0f\u5143\u7d20\n        for (int j = i + 1; j &lt; n; j++) {\n            if (nums[j] &lt; nums[minIdx]) {\n                minIdx = j;\n            }\n        }\n        swap(nums, i, minIdx);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_6","title":"\u5192\u6ce1\u6392\u5e8f","text":"<p>\u8bbe\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a \\(n\\) \uff0c\u5192\u6ce1\u6392\u5e8f\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u9996\u5148\uff0c\u5bf9 \\(n\\) \u4e2a\u5143\u7d20\u6267\u884c\u201c\u5192\u6ce1\u201d\uff0c\u5c06\u6570\u7ec4\u7684\u6700\u5927\u5143\u7d20\u4ea4\u6362\u81f3\u6b63\u786e\u4f4d\u7f6e\uff0c</li> <li>\u63a5\u4e0b\u6765\uff0c\u5bf9\u5269\u4f59 \\(n - 1\\) \u4e2a\u5143\u7d20\u6267\u884c\u201c\u5192\u6ce1\u201d\uff0c\u5c06\u7b2c\u4e8c\u5927\u5143\u7d20\u4ea4\u6362\u81f3\u6b63\u786e\u4f4d\u7f6e\u3002</li> <li>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7ecf\u8fc7 \\(n - 1\\) \u8f6e\u201c\u5192\u6ce1\u201d\u540e\uff0c\u524d \\(n - 1\\) \u5927\u7684\u5143\u7d20\u90fd\u88ab\u4ea4\u6362\u81f3\u6b63\u786e\u4f4d\u7f6e\u3002</li> <li>\u4ec5\u5269\u7684\u4e00\u4e2a\u5143\u7d20\u5fc5\u5b9a\u662f\u6700\u5c0f\u5143\u7d20\uff0c\u65e0\u987b\u6392\u5e8f\uff0c\u56e0\u6b64\u6570\u7ec4\u6392\u5e8f\u5b8c\u6210\u3002</li> </ol> <p></p> <pre><code>public void bubbleSort(int[] nums) {\n    int n = nums.length;\n    // \u5916\u5faa\u73af\uff1a\u672a\u6392\u5e8f\u533a\u95f4\u4e3a [0, i]\n    for (int i = n - 1; i &gt;= 0; i--) {\n        boolean flag = false;\n        // \u5185\u5faa\u73af\uff1a\u5c06\u672a\u6392\u5e8f\u533a\u95f4 [0, i] \u4e2d\u7684\u6700\u5927\u5143\u7d20\u4ea4\u6362\u81f3\u8be5\u533a\u95f4\u7684\u6700\u53f3\u7aef\n        for (int j = 0; j &lt; i; j++) {\n            if (nums[j] &gt; nums[j + 1]) {\n                swap(nums, j, j + 1);\n                flag = true;\n            }\n        }\n        if (!flag) break;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_7","title":"\u63d2\u5165\u6392\u5e8f","text":"<p>\u300c\u63d2\u5165\u6392\u5e8f insertion sort\u300d\u662f\u4e00\u79cd\u7b80\u5355\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u4e0e\u624b\u52a8\u6574\u7406\u4e00\u526f\u724c\u7684\u8fc7\u7a0b\u975e\u5e38\u76f8\u4f3c\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u672a\u6392\u5e8f\u533a\u95f4\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff0c\u5c06\u8be5\u5143\u7d20\u4e0e\u5176\u5de6\u4fa7\u5df2\u6392\u5e8f\u533a\u95f4\u7684\u5143\u7d20\u9010\u4e00\u6bd4\u8f83\u5927\u5c0f\uff0c\u5e76\u5c06\u8be5\u5143\u7d20\u63d2\u5165\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002</p> <p>\u63d2\u5165\u6392\u5e8f\u7684\u6574\u4f53\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u521d\u59cb\u72b6\u6001\u4e0b\uff0c\u6570\u7ec4\u7684\u7b2c 1 \u4e2a\u5143\u7d20\u5df2\u5b8c\u6210\u6392\u5e8f\u3002</li> <li>\u9009\u53d6\u6570\u7ec4\u7684\u7b2c 2 \u4e2a\u5143\u7d20\u4f5c\u4e3a <code>base</code> \uff0c\u5c06\u5176\u63d2\u5165\u5230\u6b63\u786e\u4f4d\u7f6e\u540e\uff0c\u6570\u7ec4\u7684\u524d 2 \u4e2a\u5143\u7d20\u5df2\u6392\u5e8f\u3002</li> <li>\u9009\u53d6\u7b2c 3 \u4e2a\u5143\u7d20\u4f5c\u4e3a <code>base</code> \uff0c\u5c06\u5176\u63d2\u5165\u5230\u6b63\u786e\u4f4d\u7f6e\u540e\uff0c\u6570\u7ec4\u7684\u524d 3 \u4e2a\u5143\u7d20\u5df2\u6392\u5e8f\u3002</li> <li>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5728\u6700\u540e\u4e00\u8f6e\u4e2d\uff0c\u9009\u53d6\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a <code>base</code> \uff0c\u5c06\u5176\u63d2\u5165\u5230\u6b63\u786e\u4f4d\u7f6e\u540e\uff0c\u6240\u6709\u5143\u7d20\u5747\u5df2\u6392\u5e8f\u3002</li> </ol> <p></p> <pre><code>// \u7a33\u5b9a\u7684\u7b97\u6cd5\uff0c\u6709\u5e8f\u6570\u7ec4\u7684\u60c5\u51b5\u4e0b O(N)\npublic void insertionSort(int[] nums) {\n    int n = nums.length;\n    for (int i = 0; i &lt; n; i++) {\n        // step 1:\u60f3\u8ba9\u6570\u7ec4\u5728[0, 0]\u8303\u56f4\u5185\u6709\u5e8f\n        // step 2:\u60f3\u8ba9\u6570\u7ec4\u5728[0, 1]\u8303\u56f4\u5185\u6709\u5e8f\n        // step i:\u60f3\u8ba9\u6570\u7ec4\u5728[0, i]\u8303\u56f4\u5185\u6709\u5e8f\n        for (int j = i; j &gt; 0; j--) {\n            // \u8ddf\u524d\u4e00\u4e2a\u6570\u6bd4\u5927\u5c0f\n            if (nums[j] &lt; nums[j - 1]) {\n                swap(nums, j - 1, j);\n            } else {\n                break;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_8","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u300c\u5feb\u901f\u6392\u5e8f quick sort\u300d\u662f\u4e00\u79cd\u57fa\u4e8e\u5206\u6cbb\u7b56\u7565\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u8fd0\u884c\u9ad8\u6548\uff0c\u5e94\u7528\u5e7f\u6cdb\u3002</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u6838\u5fc3\u64cd\u4f5c\u662f\u201c\u54e8\u5175\u5212\u5206\u201d\uff0c\u5176\u76ee\u6807\u662f\uff1a\u9009\u62e9\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\u4f5c\u4e3a\u201c\u57fa\u51c6\u6570\u201d\uff0c\u5c06\u6240\u6709\u5c0f\u4e8e\u57fa\u51c6\u6570\u7684\u5143\u7d20\u79fb\u5230\u5176\u5de6\u4fa7\uff0c\u800c\u5927\u4e8e\u57fa\u51c6\u6570\u7684\u5143\u7d20\u79fb\u5230\u5176\u53f3\u4fa7\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u54e8\u5175\u5212\u5206\u7684\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <ol> <li>\u9009\u53d6\u6570\u7ec4\u6700\u5de6\u7aef\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\u6570\uff0c\u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488 <code>i</code> \u548c <code>j</code> \u5206\u522b\u6307\u5411\u6570\u7ec4\u7684\u4e24\u7aef\u3002</li> <li>\u8bbe\u7f6e\u4e00\u4e2a\u5faa\u73af\uff0c\u5728\u6bcf\u8f6e\u4e2d\u4f7f\u7528 <code>i</code>\uff08<code>j</code>\uff09\u5206\u522b\u5bfb\u627e\u7b2c\u4e00\u4e2a\u6bd4\u57fa\u51c6\u6570\u5927\uff08\u5c0f\uff09\u7684\u5143\u7d20\uff0c\u7136\u540e\u4ea4\u6362\u8fd9\u4e24\u4e2a\u5143\u7d20\u3002</li> <li>\u5faa\u73af\u6267\u884c\u6b65\u9aa4 <code>2.</code> \uff0c\u76f4\u5230 <code>i</code> \u548c <code>j</code> \u76f8\u9047\u65f6\u505c\u6b62\uff0c\u6700\u540e\u5c06\u57fa\u51c6\u6570\u4ea4\u6362\u81f3\u4e24\u4e2a\u5b50\u6570\u7ec4\u7684\u5206\u754c\u7ebf\u3002</li> </ol> &lt;1&gt;&lt;2&gt;&lt;3&gt;&lt;4&gt;&lt;5&gt;&lt;6&gt;&lt;7&gt;&lt;8&gt;&lt;9&gt; <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u54e8\u5175\u5212\u5206\u5b8c\u6210\u540e\uff0c\u539f\u6570\u7ec4\u88ab\u5212\u5206\u6210\u4e09\u90e8\u5206\uff1a\u5de6\u5b50\u6570\u7ec4\u3001\u57fa\u51c6\u6570\u3001\u53f3\u5b50\u6570\u7ec4\uff0c\u4e14\u6ee1\u8db3\u201c\u5de6\u5b50\u6570\u7ec4\u4efb\u610f\u5143\u7d20 \\(\\leq\\) \u57fa\u51c6\u6570 \\(\\leq\\) \u53f3\u5b50\u6570\u7ec4\u4efb\u610f\u5143\u7d20\u201d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u53ea\u9700\u5bf9\u8fd9\u4e24\u4e2a\u5b50\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u5206\u6cbb\u7b56\u7565</p> <p>\u54e8\u5175\u5212\u5206\u7684\u5b9e\u8d28\u662f\u5c06\u4e00\u4e2a\u8f83\u957f\u6570\u7ec4\u7684\u6392\u5e8f\u95ee\u9898\u7b80\u5316\u4e3a\u4e24\u4e2a\u8f83\u77ed\u6570\u7ec4\u7684\u6392\u5e8f\u95ee\u9898\u3002</p> <pre><code>/* \u54e8\u5175\u5212\u5206 */\nint partition(int[] nums, int left, int right) {\n    // \u4ee5 nums[left] \u4e3a\u57fa\u51c6\u6570\n    int i = left, j = right;\n    int pivotVal = nums[left];\n    while (i &lt; j) {\n        while (i &lt; j &amp;&amp; nums[j] &gt;= pivotVal)\n            j--;          // \u4ece\u53f3\u5411\u5de6\u627e\u9996\u4e2a\u5c0f\u4e8e\u57fa\u51c6\u6570\u7684\u5143\u7d20\uff0c\u6ce8\u610f\u987a\u5e8f\n        while (i &lt; j &amp;&amp; nums[i] &lt;= pivotVal)\n            i++;          // \u4ece\u5de6\u5411\u53f3\u627e\u9996\u4e2a\u5927\u4e8e\u57fa\u51c6\u6570\u7684\u5143\u7d20\n        swap(nums, i, j); // \u4ea4\u6362\u8fd9\u4e24\u4e2a\u5143\u7d20\n    }\n    swap(nums, i, left);  // \u5c06\u57fa\u51c6\u6570\u4ea4\u6362\u81f3\u4e24\u5b50\u6570\u7ec4\u7684\u5206\u754c\u7ebf\n    return i;             // \u8fd4\u56de\u57fa\u51c6\u6570\u7684\u7d22\u5f15\n}\n</code></pre> <p>\u5feb\u901f\u6392\u5e8f\u7684\u6574\u4f53\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u9996\u5148\uff0c\u5bf9\u539f\u6570\u7ec4\u6267\u884c\u4e00\u6b21\u201c\u54e8\u5175\u5212\u5206\u201d\uff0c\u5f97\u5230\u672a\u6392\u5e8f\u7684\u5de6\u5b50\u6570\u7ec4\u548c\u53f3\u5b50\u6570\u7ec4\u3002</li> <li>\u7136\u540e\uff0c\u5bf9\u5de6\u5b50\u6570\u7ec4\u548c\u53f3\u5b50\u6570\u7ec4\u5206\u522b\u9012\u5f52\u6267\u884c\u201c\u54e8\u5175\u5212\u5206\u201d\u3002</li> <li>\u6301\u7eed\u9012\u5f52\uff0c\u76f4\u81f3\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 1 \u65f6\u7ec8\u6b62\uff0c\u4ece\u800c\u5b8c\u6210\u6574\u4e2a\u6570\u7ec4\u7684\u6392\u5e8f\u3002</li> </ol> <p> \u5feb\u901f\u6392\u5e8f\u4e3a\u4ec0\u4e48\u5feb\uff1f</p> <p>\u4ece\u540d\u79f0\u4e0a\u5c31\u80fd\u770b\u51fa\uff0c\u5feb\u901f\u6392\u5e8f\u5728\u6548\u7387\u65b9\u9762\u5e94\u8be5\u5177\u6709\u4e00\u5b9a\u7684\u4f18\u52bf\u3002\u5c3d\u7ba1\u5feb\u901f\u6392\u5e8f\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u201c\u5f52\u5e76\u6392\u5e8f\u201d\u548c\u201c\u5806\u6392\u5e8f\u201d\u76f8\u540c\uff0c\u4f46\u901a\u5e38\u5feb\u901f\u6392\u5e8f\u7684\u6548\u7387\u66f4\u9ad8\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u539f\u56e0\u3002</p> <ul> <li>\u51fa\u73b0\u6700\u5dee\u60c5\u51b5\u7684\u6982\u7387\u5f88\u4f4e\uff1a\u867d\u7136\u5feb\u901f\u6392\u5e8f\u7684\u6700\u5dee\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \uff0c\u6ca1\u6709\u5f52\u5e76\u6392\u5e8f\u7a33\u5b9a\uff0c\u4f46\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5feb\u901f\u6392\u5e8f\u80fd\u5728 \\(O(n \\log n)\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u8fd0\u884c\u3002</li> <li>\u7f13\u5b58\u4f7f\u7528\u6548\u7387\u9ad8\uff1a\u5728\u6267\u884c\u54e8\u5175\u5212\u5206\u64cd\u4f5c\u65f6\uff0c\u7cfb\u7edf\u53ef\u5c06\u6574\u4e2a\u5b50\u6570\u7ec4\u52a0\u8f7d\u5230\u7f13\u5b58\uff0c\u56e0\u6b64\u8bbf\u95ee\u5143\u7d20\u7684\u6548\u7387\u8f83\u9ad8\u3002\u800c\u50cf\u201c\u5806\u6392\u5e8f\u201d\u8fd9\u7c7b\u7b97\u6cd5\u9700\u8981\u8df3\u8dc3\u5f0f\u8bbf\u95ee\u5143\u7d20\uff0c\u4ece\u800c\u7f3a\u4e4f\u8fd9\u4e00\u7279\u6027\u3002</li> <li>\u590d\u6742\u5ea6\u7684\u5e38\u6570\u7cfb\u6570\u5c0f\uff1a\u5728\u4e0a\u8ff0\u4e09\u79cd\u7b97\u6cd5\u4e2d\uff0c\u5feb\u901f\u6392\u5e8f\u7684\u6bd4\u8f83\u3001\u8d4b\u503c\u3001\u4ea4\u6362\u7b49\u64cd\u4f5c\u7684\u603b\u6570\u91cf\u6700\u5c11\u3002\u8fd9\u4e0e\u201c\u63d2\u5165\u6392\u5e8f\u201d\u6bd4\u201c\u5192\u6ce1\u6392\u5e8f\u201d\u66f4\u5feb\u7684\u539f\u56e0\u7c7b\u4f3c\u3002</li> </ul> <p>\u57fa\u51c6\u6570\u4f18\u5316</p> <pre><code>class Solution {\n    public int[] sortArray(int[] nums) {\n        quickSort(nums, 0, nums.length - 1);\n        return nums;\n    }\n\n    public void quickSort(int[] arr, int l, int r) {\n        if (l &gt;= r) return;\n        int pivot = partition(arr, l, r);\n        quickSort(arr, l, pivot - 1);\n        quickSort(arr, pivot + 1, r);\n    }\n\n    public int partition(int[] arr, int l, int r) {\n        int randomIdx = l + (int) (Math.random() * (r - l + 1));\n        swap(arr, randomIdx, l);\n        int pivotVal = arr[l];\n        int i = l, j = r;\n        while (i &lt; j) {\n            while (i &lt; j &amp;&amp; arr[j] &gt;= pivotVal) j--;\n            while (i &lt; j &amp;&amp; arr[i] &lt;= pivotVal) i++;\n            swap(arr, i, j);\n        }\n        swap(arr, l, i);\n        return i;\n    }\n\n    public void swap(int[] arr, int i, int j) {\n        int temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_9","title":"\u5f52\u5e76\u6392\u5e8f","text":"<p>\u300c\u5f52\u5e76\u6392\u5e8f merge sort\u300d\u662f\u4e00\u79cd\u57fa\u4e8e\u5206\u6cbb\u7b56\u7565\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5305\u542b\u4e0b\u56fe\u6240\u793a\u7684\u201c\u5212\u5206\u201d\u548c\u201c\u5408\u5e76\u201d\u9636\u6bb5\u3002</p> <ol> <li>\u5212\u5206\u9636\u6bb5\uff1a\u901a\u8fc7\u9012\u5f52\u4e0d\u65ad\u5730\u5c06\u6570\u7ec4\u4ece\u4e2d\u70b9\u5904\u5206\u5f00\uff0c\u5c06\u957f\u6570\u7ec4\u7684\u6392\u5e8f\u95ee\u9898\u8f6c\u6362\u4e3a\u77ed\u6570\u7ec4\u7684\u6392\u5e8f\u95ee\u9898\u3002</li> <li>\u5408\u5e76\u9636\u6bb5\uff1a\u5f53\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 1 \u65f6\u7ec8\u6b62\u5212\u5206\uff0c\u5f00\u59cb\u5408\u5e76\uff0c\u6301\u7eed\u5730\u5c06\u5de6\u53f3\u4e24\u4e2a\u8f83\u77ed\u7684\u6709\u5e8f\u6570\u7ec4\u5408\u5e76\u4e3a\u4e00\u4e2a\u8f83\u957f\u7684\u6709\u5e8f\u6570\u7ec4\uff0c\u76f4\u81f3\u7ed3\u675f\u3002</li> </ol> <p></p> <p>\u7b97\u6cd5\u6d41\u7a0b\uff1a</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u201c\u5212\u5206\u9636\u6bb5\u201d\u4ece\u9876\u81f3\u5e95\u9012\u5f52\u5730\u5c06\u6570\u7ec4\u4ece\u4e2d\u70b9\u5207\u5206\u4e3a\u4e24\u4e2a\u5b50\u6570\u7ec4\u3002</p> <ol> <li>\u8ba1\u7b97\u6570\u7ec4\u4e2d\u70b9 <code>mid</code> \uff0c\u9012\u5f52\u5212\u5206\u5de6\u5b50\u6570\u7ec4\uff08\u533a\u95f4 <code>[left, mid]</code> \uff09\u548c\u53f3\u5b50\u6570\u7ec4\uff08\u533a\u95f4 <code>[mid + 1, right]</code> \uff09\u3002</li> <li>\u9012\u5f52\u6267\u884c\u6b65\u9aa4 <code>1.</code> \uff0c\u76f4\u81f3\u5b50\u6570\u7ec4\u533a\u95f4\u957f\u5ea6\u4e3a 1 \u65f6\u7ec8\u6b62\u3002</li> </ol> <p>\u201c\u5408\u5e76\u9636\u6bb5\u201d\u4ece\u5e95\u81f3\u9876\u5730\u5c06\u5de6\u5b50\u6570\u7ec4\u548c\u53f3\u5b50\u6570\u7ec4\u5408\u5e76\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4ece\u957f\u5ea6\u4e3a 1 \u7684\u5b50\u6570\u7ec4\u5f00\u59cb\u5408\u5e76\uff0c\u5408\u5e76\u9636\u6bb5\u4e2d\u7684\u6bcf\u4e2a\u5b50\u6570\u7ec4\u90fd\u662f\u6709\u5e8f\u7684\u3002</p> <pre><code>/* \u5f52\u5e76\u6392\u5e8f */\nvoid mergeSort(int[] nums, int left, int right) {\n    // \u7ec8\u6b62\u6761\u4ef6\n    if (left &gt;= right)\n        return; // \u5f53\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 1 \u65f6\u7ec8\u6b62\u9012\u5f52\n    // \u5212\u5206\u9636\u6bb5\n    int mid = (left + right) / 2; // \u8ba1\u7b97\u4e2d\u70b9\n    mergeSort(nums, left, mid); // \u9012\u5f52\u5de6\u5b50\u6570\u7ec4\n    mergeSort(nums, mid + 1, right); // \u9012\u5f52\u53f3\u5b50\u6570\u7ec4\n    // \u5408\u5e76\u9636\u6bb5\n    merge(nums, left, mid, right);\n}\n\n/* \u5408\u5e76\u5de6\u5b50\u6570\u7ec4\u548c\u53f3\u5b50\u6570\u7ec4 */\nvoid merge(int[] nums, int left, int mid, int right) {\n    // \u5de6\u5b50\u6570\u7ec4\u533a\u95f4 [left, mid], \u53f3\u5b50\u6570\u7ec4\u533a\u95f4 [mid+1, right]\n    // \u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4 tmp \uff0c\u7528\u4e8e\u5b58\u653e\u5408\u5e76\u540e\u7684\u7ed3\u679c\n    int[] tmp = new int[right - left + 1];\n    // \u521d\u59cb\u5316\u5de6\u5b50\u6570\u7ec4\u548c\u53f3\u5b50\u6570\u7ec4\u7684\u8d77\u59cb\u7d22\u5f15\n    int i = left, j = mid + 1, k = 0;\n    // \u5f53\u5de6\u53f3\u5b50\u6570\u7ec4\u90fd\u8fd8\u6709\u5143\u7d20\u65f6\uff0c\u6bd4\u8f83\u5e76\u5c06\u8f83\u5c0f\u7684\u5143\u7d20\u590d\u5236\u5230\u4e34\u65f6\u6570\u7ec4\u4e2d\n    while (i &lt;= mid &amp;&amp; j &lt;= right) {\n        if (nums[i] &lt;= nums[j])\n            tmp[k++] = nums[i++];\n        else\n            tmp[k++] = nums[j++];\n    }\n    // \u5c06\u5de6\u5b50\u6570\u7ec4\u548c\u53f3\u5b50\u6570\u7ec4\u7684\u5269\u4f59\u5143\u7d20\u590d\u5236\u5230\u4e34\u65f6\u6570\u7ec4\u4e2d\n    while (i &lt;= mid) {\n        tmp[k++] = nums[i++];\n    }\n    while (j &lt;= right) {\n        tmp[k++] = nums[j++];\n    }\n    // \u5c06\u4e34\u65f6\u6570\u7ec4 tmp \u4e2d\u7684\u5143\u7d20\u590d\u5236\u56de\u539f\u6570\u7ec4 nums \u7684\u5bf9\u5e94\u533a\u95f4\n    for (k = 0; k &lt; tmp.length; k++) {\n        nums[left + k] = tmp[k];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_10","title":"\u5806\u6392\u5e8f","text":"<p>\u8bbe\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a \\(n\\) \uff0c\u5806\u6392\u5e8f\u7684\u6d41\u7a0b\u5982\u4e0b:</p> <ol> <li>\u8f93\u5165\u6570\u7ec4\u5e76\u5efa\u7acb\u5927\u9876\u5806\u3002\u5b8c\u6210\u540e\uff0c\u6700\u5927\u5143\u7d20\u4f4d\u4e8e\u5806\u9876\u3002</li> <li>\u5c06\u5806\u9876\u5143\u7d20\uff08\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09\u4e0e\u5806\u5e95\u5143\u7d20\uff08\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u4ea4\u6362\u3002\u5b8c\u6210\u4ea4\u6362\u540e\uff0c\u5806\u7684\u957f\u5ea6\u51cf \\(1\\) \uff0c\u5df2\u6392\u5e8f\u5143\u7d20\u6570\u91cf\u52a0 \\(1\\) \u3002</li> <li>\u4ece\u5806\u9876\u5143\u7d20\u5f00\u59cb\uff0c\u4ece\u9876\u5230\u5e95\u6267\u884c\u5806\u5316\u64cd\u4f5c\uff08Sift Down\uff09\u3002\u5b8c\u6210\u5806\u5316\u540e\uff0c\u5806\u7684\u6027\u8d28\u5f97\u5230\u4fee\u590d\u3002</li> <li>\u5faa\u73af\u6267\u884c\u7b2c <code>2.</code> \u6b65\u548c\u7b2c <code>3.</code> \u6b65\u3002\u5faa\u73af \\(n - 1\\) \u8f6e\u540e\uff0c\u5373\u53ef\u5b8c\u6210\u6570\u7ec4\u6392\u5e8f\u3002</li> </ol> &lt;1&gt;&lt;2&gt;&lt;3&gt;&lt;4&gt;&lt;5&gt;&lt;6&gt;&lt;7&gt;&lt;8&gt;&lt;9&gt;&lt;10&gt;&lt;11&gt;&lt;12&gt; <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e0e\u201c\u5806\u201d\u7ae0\u8282\u76f8\u540c\u7684\u4ece\u9876\u81f3\u5e95\u5806\u5316 <code>sift_down()</code> \u51fd\u6570\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u5806\u7684\u957f\u5ea6\u4f1a\u968f\u7740\u63d0\u53d6\u6700\u5927\u5143\u7d20\u800c\u51cf\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ed9 <code>sift_down()</code> \u51fd\u6570\u6dfb\u52a0\u4e00\u4e2a\u957f\u5ea6\u53c2\u6570 \\(n\\) \uff0c\u7528\u4e8e\u6307\u5b9a\u5806\u7684\u5f53\u524d\u6709\u6548\u957f\u5ea6\u3002</p> <pre><code>/* \u5806\u6392\u5e8f */\nvoid heapSort(int[] nums) {\n    int n = nums.length;\n    // \u5efa\u5806\u64cd\u4f5c\uff1a\u5806\u5316\u9664\u53f6\u8282\u70b9\u4ee5\u5916\u7684\u5176\u4ed6\u6240\u6709\u8282\u70b9\n    for (int i = (n - 1) / 2; i &gt;= 0; i--) {\n        siftDown(nums, n, i);\n    }\n    // \u4ece\u5806\u4e2d\u63d0\u53d6\u6700\u5927\u5143\u7d20\uff0c\u5faa\u73af n-1 \u8f6e\n    for (int i = n - 1; i &gt; 0; i--) {\n        // \u4ea4\u6362\u6839\u8282\u70b9\u4e0e\u6700\u53f3\u53f6\u8282\u70b9\uff08\u4ea4\u6362\u9996\u5143\u7d20\u4e0e\u5c3e\u5143\u7d20\uff09\n        swap(nums, i, 0);\n        // \u4ee5\u6839\u8282\u70b9\u4e3a\u8d77\u70b9\uff0c\u4ece\u9876\u81f3\u5e95\u8fdb\u884c\u5806\u5316\n        siftDown(nums, i, 0);\n    }\n}\n\n/* \u5806\u7684\u957f\u5ea6\u4e3a n \uff0c\u4ece\u8282\u70b9 i \u5f00\u59cb\uff0c\u4ece\u9876\u81f3\u5e95\u5806\u5316 */\nvoid siftDown(int[] nums, int n, int i) {\n    while (true) {\n        // \u5224\u65ad\u8282\u70b9 i, l, r \u4e2d\u503c\u6700\u5927\u7684\u8282\u70b9\uff0c\u8bb0\u4e3a t\n        int l = 2 * i + 1;\n        int r = 2 * i + 2;\n        int t = i;\n        if (l &lt; n &amp;&amp; nums[l] &gt; nums[t])\n            t = l;\n        if (r &lt; n &amp;&amp; nums[r] &gt; nums[t])\n            t = r;\n        // \u82e5\u8282\u70b9 i \u6700\u5927\u6216\u7d22\u5f15 l, r \u8d8a\u754c\uff0c\u5219\u65e0\u987b\u7ee7\u7eed\u5806\u5316\uff0c\u8df3\u51fa\n        if (t == i)\n            break;\n        // \u4ea4\u6362\u4e24\u8282\u70b9\n        swap(nums, i, t);\n        // \u5faa\u73af\u5411\u4e0b\u5806\u5316\n        i = t;\n    }\n}\n\nvoid swap(int[] nums, int i, int j) {\n    int tmp = nums[i];\n    nums[i] = nums[j];\n    nums[j] = tmp;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_11","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u5e0c\u5c14\u6392\u5e8f\u662f\u4e00\u79cd\u57fa\u4e8e\u63d2\u5165\u6392\u5e8f\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5b83\u901a\u8fc7\u8bbe\u5b9a\u95f4\u9694\u5c06\u6570\u7ec4\u5206\u5272\u4e3a\u82e5\u5e72\u4e2a\u5b50\u6570\u7ec4\uff0c\u7136\u540e\u5206\u522b\u5bf9\u5404\u4e2a\u5b50\u6570\u7ec4\u6267\u884c\u63d2\u5165\u6392\u5e8f\uff0c\u6700\u540e\u9010\u6b65\u7f29\u5c0f\u95f4\u9694\uff0c\u76f4\u81f3\u95f4\u9694\u4e3a 1 \u65f6\u5b8c\u6210\u6392\u5e8f\u3002</p> <p>\u5e0c\u5c14\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u95f4\u9694\u5e8f\u5217\u7684\u9009\u62e9\u3002</p> \u6b65\u957f\u5e8f\u5217 \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 \\({n}/{2^i}\\) \\(O(n^2)\\) \\(2^{k} - 1\\) \\(O(n^{3/2})\\) \\(2^{i}3^{j}\\) \\(O(nlog^{2}n)\\) <pre><code>def shell_sort(nums):\n    n = len(nums)\n    # \u7ec4\u95f4\u8ddd (0, gap, 2*gap, 3*gap, ...)\n    gap = n // 2\n    while gap &gt; 0:\n        # \u7ec4\u5185\u6392\u5e8f\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\n        for i in range(gap, n):\n            j = i\n            while j &gt;= gap and nums[j - gap] &gt; nums[j]:\n                nums[j - gap], nums[j] = nums[j], nums[j - gap]\n                j -= gap\n        gap //= 2\n    return nums\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_12","title":"\u6876\u6392\u5e8f","text":"<p>\u524d\u8ff0\u51e0\u79cd\u6392\u5e8f\u7b97\u6cd5\u90fd\u5c5e\u4e8e\u201c\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u201d\uff0c\u5b83\u4eec\u901a\u8fc7\u6bd4\u8f83\u5143\u7d20\u95f4\u7684\u5927\u5c0f\u6765\u5b9e\u73b0\u6392\u5e8f\u3002\u6b64\u7c7b\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u65e0\u6cd5\u8d85\u8d8a \\(O(n \\log n)\\) \u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u51e0\u79cd\u201c\u975e\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u201d\uff0c\u5b83\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230\u7ebf\u6027\u9636\u3002</p> <p>\u300c\u6876\u6392\u5e8f bucket sort\u300d\u662f\u5206\u6cbb\u7b56\u7565\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\u3002\u5b83\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e9b\u5177\u6709\u5927\u5c0f\u987a\u5e8f\u7684\u6876\uff0c\u6bcf\u4e2a\u6876\u5bf9\u5e94\u4e00\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u5c06\u6570\u636e\u5e73\u5747\u5206\u914d\u5230\u5404\u4e2a\u6876\u4e2d\uff1b\u7136\u540e\uff0c\u5728\u6bcf\u4e2a\u6876\u5185\u90e8\u5206\u522b\u6267\u884c\u6392\u5e8f\uff1b\u6700\u7ec8\u6309\u7167\u6876\u7684\u987a\u5e8f\u5c06\u6240\u6709\u6570\u636e\u5408\u5e76\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u662f\u8303\u56f4 \\([0, 1)\\) \u5185\u7684\u6d6e\u70b9\u6570\u3002\u6876\u6392\u5e8f\u7684\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <ol> <li>\u521d\u59cb\u5316 \\(k\\) \u4e2a\u6876\uff0c\u5c06 \\(n\\) \u4e2a\u5143\u7d20\u5206\u914d\u5230 \\(k\\) \u4e2a\u6876\u4e2d\u3002</li> <li>\u5bf9\u6bcf\u4e2a\u6876\u5206\u522b\u6267\u884c\u6392\u5e8f\uff08\u8fd9\u91cc\u91c7\u7528\u7f16\u7a0b\u8bed\u8a00\u7684\u5185\u7f6e\u6392\u5e8f\u51fd\u6570\uff09\u3002</li> <li>\u6309\u7167\u6876\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u5408\u5e76\u7ed3\u679c\u3002</li> </ol> <p></p> <pre><code>def bucket_sort(nums):\n    # \u521d\u59cb\u5316 k = n/2 \u4e2a\u6876\uff0c\u9884\u671f\u5411\u6bcf\u4e2a\u6876\u5206\u914d 2 \u4e2a\u5143\u7d20\n    k = len(nums) // 2\n    buckets = [[] for _ in range(k)]\n    # 1. \u5c06\u6570\u7ec4\u5143\u7d20\u5206\u914d\u5230\u5404\u4e2a\u6876\u4e2d\n    for num in nums:\n        # \u8f93\u5165\u6570\u636e\u8303\u56f4\u4e3a [0, 1)\uff0c\u4f7f\u7528 num * k \u6620\u5c04\u5230\u7d22\u5f15\u8303\u56f4 [0, k-1]\n        i = int(num * k)\n        # \u5c06 num \u6dfb\u52a0\u8fdb\u6876 i\n        buckets[i].append(num)\n    # 2. \u5bf9\u5404\u4e2a\u6876\u6267\u884c\u6392\u5e8f\n    for bucket in buckets:\n        # \u4f7f\u7528\u5185\u7f6e\u6392\u5e8f\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u5176\u4ed6\u6392\u5e8f\u7b97\u6cd5\n        bucket.sort()\n    # 3. \u904d\u5386\u6876\u5408\u5e76\u7ed3\u679c\n    i = 0\n    for bucket in buckets:\n        for num in bucket:\n            nums[i] = num\n            i += 1\n</code></pre> <p>\u6876\u6392\u5e8f\u9002\u7528\u4e8e\u5904\u7406\u4f53\u91cf\u5f88\u5927\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u6570\u636e\u5305\u542b 100 \u4e07\u4e2a\u5143\u7d20\uff0c\u7531\u4e8e\u7a7a\u95f4\u9650\u5236\uff0c\u7cfb\u7edf\u5185\u5b58\u65e0\u6cd5\u4e00\u6b21\u6027\u52a0\u8f7d\u6240\u6709\u6570\u636e\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u5206\u6210 1000 \u4e2a\u6876\uff0c\u7136\u540e\u5206\u522b\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u5408\u5e76\u3002</p> <p>\u7b97\u6cd5\u7279\u6027</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n + k)\\) \uff1a\u5047\u8bbe\u5143\u7d20\u5728\u5404\u4e2a\u6876\u5185\u5e73\u5747\u5206\u5e03\uff0c\u90a3\u4e48\u6bcf\u4e2a\u6876\u5185\u7684\u5143\u7d20\u6570\u91cf\u4e3a \\(\\frac{n}{k}\\) \u3002\u5047\u8bbe\u6392\u5e8f\u5355\u4e2a\u6876\u4f7f\u7528 \\(O(\\frac{n}{k} \\log\\frac{n}{k})\\) \u65f6\u95f4\uff0c\u5219\u6392\u5e8f\u6240\u6709\u6876\u4f7f\u7528 \\(O(n \\log\\frac{n}{k})\\) \u65f6\u95f4\u3002\u5f53\u6876\u6570\u91cf \\(k\\) \u6bd4\u8f83\u5927\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5219\u8d8b\u5411\u4e8e \\(O(n)\\) \u3002\u5408\u5e76\u7ed3\u679c\u65f6\u9700\u8981\u904d\u5386\u6240\u6709\u6876\u548c\u5143\u7d20\uff0c\u82b1\u8d39 \\(O(n + k)\\) \u65f6\u95f4\u3002</li> <li>\u81ea\u9002\u5e94\u6392\u5e8f\uff1a\u5728\u6700\u5dee\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u6570\u636e\u88ab\u5206\u914d\u5230\u4e00\u4e2a\u6876\u4e2d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9000\u5316\u4e3a \\(O(n \\log n)\\)\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(n + k)\\)\u3001\u975e\u539f\u5730\u6392\u5e8f\uff1a\u9700\u8981\u501f\u52a9 \\(k\\) \u4e2a\u6876\u548c\u603b\u5171 \\(n\\) \u4e2a\u5143\u7d20\u7684\u989d\u5916\u7a7a\u95f4\u3002</li> <li>\u6876\u6392\u5e8f\u662f\u5426\u7a33\u5b9a\u53d6\u51b3\u4e8e\u6392\u5e8f\u6876\u5185\u5143\u7d20\u7684\u7b97\u6cd5\u662f\u5426\u7a33\u5b9a\u3002</li> </ul> <p>\u5982\u4f55\u5b9e\u73b0\u5e73\u5747\u5206\u914d</p> <p>\u6876\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7406\u8bba\u4e0a\u53ef\u4ee5\u8fbe\u5230 \\(O(n)\\) \uff0c\u5173\u952e\u5728\u4e8e\u5c06\u5143\u7d20\u5747\u5300\u5206\u914d\u5230\u5404\u4e2a\u6876\u4e2d\uff0c\u56e0\u4e3a\u5b9e\u9645\u6570\u636e\u5f80\u5f80\u4e0d\u662f\u5747\u5300\u5206\u5e03\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u8981\u5c06\u6dd8\u5b9d\u4e0a\u7684\u6240\u6709\u5546\u54c1\u6309\u4ef7\u683c\u8303\u56f4\u5e73\u5747\u5206\u914d\u5230 10 \u4e2a\u6876\u4e2d\uff0c\u4f46\u5546\u54c1\u4ef7\u683c\u5206\u5e03\u4e0d\u5747\uff0c\u4f4e\u4e8e 100 \u5143\u7684\u975e\u5e38\u591a\uff0c\u9ad8\u4e8e 1000 \u5143\u7684\u975e\u5e38\u5c11\u3002\u82e5\u5c06\u4ef7\u683c\u533a\u95f4\u5e73\u5747\u5212\u5206\u4e3a 10 \u4e2a\uff0c\u5404\u4e2a\u6876\u4e2d\u7684\u5546\u54c1\u6570\u91cf\u5dee\u8ddd\u4f1a\u975e\u5e38\u5927\u3002</p> <p>\u4e3a\u5b9e\u73b0\u5e73\u5747\u5206\u914d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8bbe\u5b9a\u4e00\u6761\u5927\u81f4\u7684\u5206\u754c\u7ebf\uff0c\u5c06\u6570\u636e\u7c97\u7565\u5730\u5206\u5230 3 \u4e2a\u6876\u4e2d\u3002\u5206\u914d\u5b8c\u6bd5\u540e\uff0c\u518d\u5c06\u5546\u54c1\u8f83\u591a\u7684\u6876\u7ee7\u7eed\u5212\u5206\u4e3a 3 \u4e2a\u6876\uff0c\u76f4\u81f3\u6240\u6709\u6876\u4e2d\u7684\u5143\u7d20\u6570\u91cf\u5927\u81f4\u76f8\u7b49\u3002</p> <p></p> <p>\u5982\u679c\u6211\u4eec\u63d0\u524d\u77e5\u9053\u5546\u54c1\u4ef7\u683c\u7684\u6982\u7387\u5206\u5e03\uff0c\u5219\u53ef\u4ee5\u6839\u636e\u6570\u636e\u6982\u7387\u5206\u5e03\u8bbe\u7f6e\u6bcf\u4e2a\u6876\u7684\u4ef7\u683c\u5206\u754c\u7ebf\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6570\u636e\u5206\u5e03\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u7279\u610f\u7edf\u8ba1\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u6570\u636e\u7279\u70b9\u91c7\u7528\u67d0\u79cd\u6982\u7387\u6a21\u578b\u8fdb\u884c\u8fd1\u4f3c\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u5047\u8bbe\u5546\u54c1\u4ef7\u683c\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5408\u7406\u5730\u8bbe\u5b9a\u4ef7\u683c\u533a\u95f4\uff0c\u4ece\u800c\u5c06\u5546\u54c1\u5e73\u5747\u5206\u914d\u5230\u5404\u4e2a\u6876\u4e2d\u3002</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_13","title":"\u6392\u5e8f\u7b97\u6cd5\u603b\u7ed3","text":"<ul> <li>\u5192\u6ce1\u6392\u5e8f\u901a\u8fc7\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u6765\u5b9e\u73b0\u6392\u5e8f\u3002\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u6807\u5fd7\u4f4d\u6765\u5b9e\u73b0\u63d0\u524d\u8fd4\u56de\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5192\u6ce1\u6392\u5e8f\u7684\u6700\u4f73\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230 \\(O(n)\\) \u3002</li> <li>\u63d2\u5165\u6392\u5e8f\u6bcf\u8f6e\u5c06\u672a\u6392\u5e8f\u533a\u95f4\u5185\u7684\u5143\u7d20\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u7684\u6b63\u786e\u4f4d\u7f6e\uff0c\u4ece\u800c\u5b8c\u6210\u6392\u5e8f\u3002\u867d\u7136\u63d2\u5165\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \uff0c\u4f46\u7531\u4e8e\u5355\u5143\u64cd\u4f5c\u76f8\u5bf9\u8f83\u5c11\uff0c\u56e0\u6b64\u5728\u5c0f\u6570\u636e\u91cf\u7684\u6392\u5e8f\u4efb\u52a1\u4e2d\u975e\u5e38\u53d7\u6b22\u8fce\u3002</li> <li>\u5feb\u901f\u6392\u5e8f\u57fa\u4e8e\u54e8\u5175\u5212\u5206\u64cd\u4f5c\u5b9e\u73b0\u6392\u5e8f\u3002\u5728\u54e8\u5175\u5212\u5206\u4e2d\uff0c\u6709\u53ef\u80fd\u6bcf\u6b21\u90fd\u9009\u53d6\u5230\u6700\u5dee\u7684\u57fa\u51c6\u6570\uff0c\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u52a3\u5316\u81f3 \\(O(n^2)\\) \u3002\u5f15\u5165\u4e2d\u4f4d\u6570\u57fa\u51c6\u6570\u6216\u968f\u673a\u57fa\u51c6\u6570\u53ef\u4ee5\u964d\u4f4e\u8fd9\u79cd\u52a3\u5316\u7684\u6982\u7387\u3002\u5c3e\u9012\u5f52\u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u5730\u51cf\u5c11\u9012\u5f52\u6df1\u5ea6\uff0c\u5c06\u7a7a\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230 \\(O(\\log n)\\) \u3002</li> <li>\u5f52\u5e76\u6392\u5e8f\u5305\u62ec\u5212\u5206\u548c\u5408\u5e76\u4e24\u4e2a\u9636\u6bb5\uff0c\u5178\u578b\u5730\u4f53\u73b0\u4e86\u5206\u6cbb\u7b56\u7565\u3002\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c\u6392\u5e8f\u6570\u7ec4\u9700\u8981\u521b\u5efa\u8f85\u52a9\u6570\u7ec4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \uff1b\u7136\u800c\u6392\u5e8f\u94fe\u8868\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u4f18\u5316\u81f3 \\(O(1)\\) \u3002</li> <li>\u6876\u6392\u5e8f\u5305\u542b\u4e09\u4e2a\u6b65\u9aa4\uff1a\u6570\u636e\u5206\u6876\u3001\u6876\u5185\u6392\u5e8f\u548c\u5408\u5e76\u7ed3\u679c\u3002\u5b83\u540c\u6837\u4f53\u73b0\u4e86\u5206\u6cbb\u7b56\u7565\uff0c\u9002\u7528\u4e8e\u6570\u636e\u4f53\u91cf\u5f88\u5927\u7684\u60c5\u51b5\u3002\u6876\u6392\u5e8f\u7684\u5173\u952e\u5728\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u5e73\u5747\u5206\u914d\u3002</li> <li>\u8ba1\u6570\u6392\u5e8f\u662f\u6876\u6392\u5e8f\u7684\u4e00\u4e2a\u7279\u4f8b\uff0c\u5b83\u901a\u8fc7\u7edf\u8ba1\u6570\u636e\u51fa\u73b0\u7684\u6b21\u6570\u6765\u5b9e\u73b0\u6392\u5e8f\u3002\u8ba1\u6570\u6392\u5e8f\u9002\u7528\u4e8e\u6570\u636e\u91cf\u5927\u4f46\u6570\u636e\u8303\u56f4\u6709\u9650\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u8981\u6c42\u6570\u636e\u80fd\u591f\u8f6c\u6362\u4e3a\u6b63\u6574\u6570\u3002</li> <li>\u57fa\u6570\u6392\u5e8f\u901a\u8fc7\u9010\u4f4d\u6392\u5e8f\u6765\u5b9e\u73b0\u6570\u636e\u6392\u5e8f\uff0c\u8981\u6c42\u6570\u636e\u80fd\u591f\u8868\u793a\u4e3a\u56fa\u5b9a\u4f4d\u6570\u7684\u6570\u5b57\u3002</li> <li>\u603b\u7684\u6765\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u79cd\u6392\u5e8f\u7b97\u6cd5\uff0c\u5177\u6709\u9ad8\u6548\u7387\u3001\u7a33\u5b9a\u3001\u539f\u5730\u4ee5\u53ca\u6b63\u5411\u81ea\u9002\u5e94\u6027\u7b49\u4f18\u70b9\u3002\u7136\u800c\uff0c\u6b63\u5982\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u4e00\u6837\uff0c\u6ca1\u6709\u4e00\u79cd\u6392\u5e8f\u7b97\u6cd5\u80fd\u591f\u540c\u65f6\u6ee1\u8db3\u6240\u6709\u8fd9\u4e9b\u6761\u4ef6\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u6570\u636e\u7684\u7279\u6027\u6765\u9009\u62e9\u5408\u9002\u7684\u6392\u5e8f\u7b97\u6cd5\u3002</li> <li>\u4e0b\u56fe\u5bf9\u6bd4\u4e86\u4e3b\u6d41\u6392\u5e8f\u7b97\u6cd5\u7684\u6548\u7387\u3001\u7a33\u5b9a\u6027\u3001\u5c31\u5730\u6027\u548c\u81ea\u9002\u5e94\u6027\u7b49\u3002</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_14","title":"\u5206\u6cbb","text":"<p>\u300c\u5206\u6cbb divide and conquer\u300d\uff0c\u5168\u79f0\u5206\u800c\u6cbb\u4e4b\uff0c\u662f\u4e00\u79cd\u975e\u5e38\u91cd\u8981\u4e14\u5e38\u89c1\u7684\u7b97\u6cd5\u7b56\u7565\u3002\u5206\u6cbb\u901a\u5e38\u57fa\u4e8e\u9012\u5f52\u5b9e\u73b0\uff0c\u5305\u62ec\u201c\u5206\u201d\u548c\u201c\u6cbb\u201d\u4e24\u4e2a\u6b65\u9aa4\u3002</p> <ol> <li>\u5206\uff08\u5212\u5206\u9636\u6bb5\uff09\uff1a\u9012\u5f52\u5730\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u4e24\u4e2a\u6216\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u76f4\u81f3\u5230\u8fbe\u6700\u5c0f\u5b50\u95ee\u9898\u65f6\u7ec8\u6b62\u3002</li> <li>\u6cbb\uff08\u5408\u5e76\u9636\u6bb5\uff09\uff1a\u4ece\u5df2\u77e5\u89e3\u7684\u6700\u5c0f\u5b50\u95ee\u9898\u5f00\u59cb\uff0c\u4ece\u5e95\u81f3\u9876\u5730\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u8fdb\u884c\u5408\u5e76\uff0c\u4ece\u800c\u6784\u5efa\u51fa\u539f\u95ee\u9898\u7684\u89e3\u3002</li> </ol> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u201c\u5f52\u5e76\u6392\u5e8f\u201d\u662f\u5206\u6cbb\u7b56\u7565\u7684\u5178\u578b\u5e94\u7528\u4e4b\u4e00\u3002</p> <ol> <li>\u5206\uff1a\u9012\u5f52\u5730\u5c06\u539f\u6570\u7ec4\uff08\u539f\u95ee\u9898\uff09\u5212\u5206\u4e3a\u4e24\u4e2a\u5b50\u6570\u7ec4\uff08\u5b50\u95ee\u9898\uff09\uff0c\u76f4\u5230\u5b50\u6570\u7ec4\u53ea\u5269\u4e00\u4e2a\u5143\u7d20\uff08\u6700\u5c0f\u5b50\u95ee\u9898\uff09\u3002</li> <li>\u6cbb\uff1a\u4ece\u5e95\u81f3\u9876\u5730\u5c06\u6709\u5e8f\u7684\u5b50\u6570\u7ec4\uff08\u5b50\u95ee\u9898\u7684\u89e3\uff09\u8fdb\u884c\u5408\u5e76\uff0c\u4ece\u800c\u5f97\u5230\u6709\u5e8f\u7684\u539f\u6570\u7ec4\uff08\u539f\u95ee\u9898\u7684\u89e3\uff09\u3002</li> </ol> <p></p> <p>\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u5206\u6cbb\u89e3\u51b3\uff0c\u901a\u5e38\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u51e0\u4e2a\u5224\u65ad\u4f9d\u636e\u3002</p> <ol> <li>\u95ee\u9898\u53ef\u4ee5\u5206\u89e3\uff1a\u539f\u95ee\u9898\u53ef\u4ee5\u5206\u89e3\u6210\u89c4\u6a21\u66f4\u5c0f\u3001\u7c7b\u4f3c\u7684\u5b50\u95ee\u9898\uff0c\u4ee5\u53ca\u80fd\u591f\u4ee5\u76f8\u540c\u65b9\u5f0f\u9012\u5f52\u5730\u8fdb\u884c\u5212\u5206\u3002</li> <li>\u5b50\u95ee\u9898\u662f\u72ec\u7acb\u7684\uff1a\u5b50\u95ee\u9898\u4e4b\u95f4\u6ca1\u6709\u91cd\u53e0\uff0c\u4e92\u4e0d\u4f9d\u8d56\uff0c\u53ef\u4ee5\u72ec\u7acb\u89e3\u51b3\u3002</li> <li>\u5b50\u95ee\u9898\u7684\u89e3\u53ef\u4ee5\u5408\u5e76\uff1a\u539f\u95ee\u9898\u7684\u89e3\u901a\u8fc7\u5408\u5e76\u5b50\u95ee\u9898\u7684\u89e3\u5f97\u6765\u3002</li> </ol> <p>\u5206\u6cbb\u5728\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u7684\u8bbe\u8ba1\u4e2d\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\u3002</p> <ul> <li>\u4e8c\u5206\u67e5\u627e\uff1a\u4e8c\u5206\u67e5\u627e\u662f\u5c06\u6709\u5e8f\u6570\u7ec4\u4ece\u4e2d\u70b9\u7d22\u5f15\u5904\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7136\u540e\u6839\u636e\u76ee\u6807\u503c\u4e0e\u4e2d\u95f4\u5143\u7d20\u503c\u6bd4\u8f83\u7ed3\u679c\uff0c\u51b3\u5b9a\u6392\u9664\u54ea\u4e00\u534a\u533a\u95f4\uff0c\u5e76\u5728\u5269\u4f59\u533a\u95f4\u6267\u884c\u76f8\u540c\u7684\u4e8c\u5206\u64cd\u4f5c\u3002</li> <li>\u5f52\u5e76\u6392\u5e8f\uff1a\u672c\u8282\u5f00\u5934\u5df2\u4ecb\u7ecd\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</li> <li>\u5feb\u901f\u6392\u5e8f\uff1a\u5feb\u901f\u6392\u5e8f\u662f\u9009\u53d6\u4e00\u4e2a\u57fa\u51c6\u503c\uff0c\u7136\u540e\u628a\u6570\u7ec4\u5206\u4e3a\u4e24\u4e2a\u5b50\u6570\u7ec4\uff0c\u4e00\u4e2a\u5b50\u6570\u7ec4\u7684\u5143\u7d20\u6bd4\u57fa\u51c6\u503c\u5c0f\uff0c\u53e6\u4e00\u5b50\u6570\u7ec4\u7684\u5143\u7d20\u6bd4\u57fa\u51c6\u503c\u5927\uff0c\u518d\u5bf9\u8fd9\u4e24\u90e8\u5206\u8fdb\u884c\u76f8\u540c\u7684\u5212\u5206\u64cd\u4f5c\uff0c\u76f4\u81f3\u5b50\u6570\u7ec4\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002</li> <li>\u6876\u6392\u5e8f\uff1a\u6876\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\u662f\u5c06\u6570\u636e\u5206\u6563\u5230\u591a\u4e2a\u6876\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u6876\u5185\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u5c06\u5404\u4e2a\u6876\u7684\u5143\u7d20\u4f9d\u6b21\u53d6\u51fa\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002</li> <li>\u6811\uff1a\u4f8b\u5982\u4e8c\u53c9\u641c\u7d22\u6811\u3001AVL \u6811\u3001\u7ea2\u9ed1\u6811\u3001B \u6811\u3001B+ \u6811\u7b49\uff0c\u5b83\u4eec\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u7b49\u64cd\u4f5c\u90fd\u53ef\u4ee5\u89c6\u4e3a\u5206\u6cbb\u7b56\u7565\u7684\u5e94\u7528\u3002</li> <li>\u5806\uff1a\u5806\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5176\u5404\u79cd\u64cd\u4f5c\uff0c\u5982\u63d2\u5165\u3001\u5220\u9664\u548c\u5806\u5316\uff0c\u5b9e\u9645\u4e0a\u90fd\u9690\u542b\u4e86\u5206\u6cbb\u7684\u601d\u60f3\u3002</li> <li>\u54c8\u5e0c\u8868\uff1a\u867d\u7136\u54c8\u5e0c\u8868\u6765\u5e76\u4e0d\u76f4\u63a5\u5e94\u7528\u5206\u6cbb\uff0c\u4f46\u67d0\u4e9b\u54c8\u5e0c\u51b2\u7a81\u89e3\u51b3\u65b9\u6848\u95f4\u63a5\u5e94\u7528\u4e86\u5206\u6cbb\u7b56\u7565\uff0c\u4f8b\u5982\uff0c\u94fe\u5f0f\u5730\u5740\u4e2d\u7684\u957f\u94fe\u8868\u4f1a\u88ab\u8f6c\u5316\u4e3a\u7ea2\u9ed1\u6811\uff0c\u4ee5\u63d0\u5347\u67e5\u8be2\u6548\u7387\u3002</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_15","title":"\u5206\u6cbb\u641c\u7d22\u7b56\u7565","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5b66\u8fc7\uff0c\u641c\u7d22\u7b97\u6cd5\u5206\u4e3a\u4e24\u5927\u7c7b\u3002</p> <ul> <li>\u66b4\u529b\u641c\u7d22\uff1a\u5b83\u901a\u8fc7\u904d\u5386\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u3002</li> <li>\u81ea\u9002\u5e94\u641c\u7d22\uff1a\u5b83\u5229\u7528\u7279\u6709\u7684\u6570\u636e\u7ec4\u7ec7\u5f62\u5f0f\u6216\u5148\u9a8c\u4fe1\u606f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u8fbe\u5230 \\(O(\\log n)\\) \u751a\u81f3 \\(O(1)\\) \u3002</li> </ul> <p>\u5b9e\u9645\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\) \u7684\u641c\u7d22\u7b97\u6cd5\u901a\u5e38\u662f\u57fa\u4e8e\u5206\u6cbb\u7b56\u7565\u5b9e\u73b0\u7684\uff0c\u4f8b\u5982\u4e8c\u5206\u67e5\u627e\u548c\u6811\u3002</p> <p>\u5206\u6cbb\u80fd\u591f\u63d0\u5347\u641c\u7d22\u6548\u7387\uff0c\u672c\u8d28\u4e0a\u662f\u56e0\u4e3a\u66b4\u529b\u641c\u7d22\u6bcf\u8f6e\u53ea\u80fd\u6392\u9664\u4e00\u4e2a\u9009\u9879\uff0c\u800c\u5206\u6cbb\u641c\u7d22\u6bcf\u8f6e\u53ef\u4ee5\u6392\u9664\u4e00\u534a\u9009\u9879\u3002</p> <p>\u57fa\u4e8e\u5206\u6cbb\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e</p> <p>\u4ece\u5206\u6cbb\u89d2\u5ea6\uff0c\u6211\u4eec\u5c06\u641c\u7d22\u533a\u95f4 \\([i, j]\\) \u5bf9\u5e94\u7684\u5b50\u95ee\u9898\u8bb0\u4e3a \\(f(i, j)\\) \u3002</p> <p>\u4ee5\u539f\u95ee\u9898 \\(f(0, n-1)\\) \u4e3a\u8d77\u59cb\u70b9\uff0c\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\u3002</p> <ol> <li>\u8ba1\u7b97\u641c\u7d22\u533a\u95f4 \\([i, j]\\) \u7684\u4e2d\u70b9 \\(m\\) \uff0c\u6839\u636e\u5b83\u6392\u9664\u4e00\u534a\u641c\u7d22\u533a\u95f4\u3002</li> <li>\u9012\u5f52\u6c42\u89e3\u89c4\u6a21\u51cf\u5c0f\u4e00\u534a\u7684\u5b50\u95ee\u9898\uff0c\u53ef\u80fd\u4e3a \\(f(i, m-1)\\) \u6216 \\(f(m+1, j)\\) \u3002</li> <li>\u5faa\u73af\u7b2c <code>1.</code> \u6b65\u548c\u7b2c <code>2.</code> \u6b65\uff0c\u76f4\u81f3\u627e\u5230 <code>target</code> \u6216\u533a\u95f4\u4e3a\u7a7a\u65f6\u8fd4\u56de\u3002</li> </ol> <pre><code>/* \u4e8c\u5206\u67e5\u627e\uff1a\u95ee\u9898 f(i, j) */\nint dfs(int[] nums, int target, int i, int j) {\n    // \u82e5\u533a\u95f4\u4e3a\u7a7a\uff0c\u4ee3\u8868\u65e0\u76ee\u6807\u5143\u7d20\uff0c\u5219\u8fd4\u56de -1\n    if (i &gt; j) {\n        return -1;\n    }\n    // \u8ba1\u7b97\u4e2d\u70b9\u7d22\u5f15 m\n    int m = (i + j) / 2;\n    if (nums[m] &lt; target) {\n        // \u9012\u5f52\u5b50\u95ee\u9898 f(m+1, j)\n        return dfs(nums, target, m + 1, j);\n    } else if (nums[m] &gt; target) {\n        // \u9012\u5f52\u5b50\u95ee\u9898 f(i, m-1)\n        return dfs(nums, target, i, m - 1);\n    } else {\n        // \u627e\u5230\u76ee\u6807\u5143\u7d20\uff0c\u8fd4\u56de\u5176\u7d22\u5f15\n        return m;\n    }\n}\n\n/* \u4e8c\u5206\u67e5\u627e */\nint binarySearch(int[] nums, int target) {\n    int n = nums.length;\n    // \u6c42\u89e3\u95ee\u9898 f(0, n-1)\n    return dfs(nums, target, 0, n - 1);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_16","title":"\u6784\u5efa\u4e8c\u53c9\u6811","text":"<p>Question</p> <p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386 <code>preorder</code> \u548c\u4e2d\u5e8f\u904d\u5386 <code>inorder</code> \uff0c\u8bf7\u4ece\u4e2d\u6784\u5efa\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u3002\u5047\u8bbe\u4e8c\u53c9\u6811\u4e2d\u6ca1\u6709\u503c\u91cd\u590d\u7684\u8282\u70b9\u3002</p> <p>\u57fa\u4e8e\u5206\u6cbb\u6784\u5efa\u4e8c\u53c9\u6811</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_17","title":"\u6c49\u8bfa\u5854\u95ee\u9898","text":"<p>\u6c49\u8bfa\u5854\u95ee\u9898</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_18","title":"\u56de\u6eaf\u7b97\u6cd5","text":"<p>\u300c\u56de\u6eaf\u7b97\u6cd5 backtracking algorithm\u300d\u662f\u4e00\u79cd\u901a\u8fc7\u7a77\u4e3e\u6765\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\u4ece\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\u51fa\u53d1\uff0c\u66b4\u529b\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5f53\u9047\u5230\u6b63\u786e\u7684\u89e3\u5219\u5c06\u5176\u8bb0\u5f55\uff0c\u76f4\u5230\u627e\u5230\u89e3\u6216\u8005\u5c1d\u8bd5\u4e86\u6240\u6709\u53ef\u80fd\u7684\u9009\u62e9\u90fd\u65e0\u6cd5\u627e\u5230\u89e3\u4e3a\u6b62\u3002</p> <p>\u56de\u6eaf\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u201c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u201d\u6765\u904d\u5386\u89e3\u7a7a\u95f4\u3002\u5728\u201c\u4e8c\u53c9\u6811\u201d\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\u524d\u5e8f\u3001\u4e2d\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u90fd\u5c5e\u4e8e\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5229\u7528\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e00\u4e2a\u56de\u6eaf\u95ee\u9898\uff0c\u9010\u6b65\u4e86\u89e3\u56de\u6eaf\u7b97\u6cd5\u7684\u5de5\u4f5c\u539f\u7406\u3002</p> <p>\u4f8b\u9898\u4e00</p> <p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u641c\u7d22\u5e76\u8bb0\u5f55\u6240\u6709\u503c\u4e3a \\(7\\) \u7684\u8282\u70b9\uff0c\u8bf7\u8fd4\u56de\u8282\u70b9\u5217\u8868\u3002</p> <p>\u5bf9\u4e8e\u6b64\u9898\uff0c\u6211\u4eec\u524d\u5e8f\u904d\u5386\u8fd9\u68f5\u6811\uff0c\u5e76\u5224\u65ad\u5f53\u524d\u8282\u70b9\u7684\u503c\u662f\u5426\u4e3a \\(7\\) \uff0c\u82e5\u662f\uff0c\u5219\u5c06\u8be5\u8282\u70b9\u7684\u503c\u52a0\u5165\u7ed3\u679c\u5217\u8868 <code>res</code> \u4e4b\u4e2d\u3002\u76f8\u5173\u8fc7\u7a0b\u5b9e\u73b0\u5982\u4e0b\u56fe\u548c\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a\uff1a</p> <pre><code>/* \u524d\u5e8f\u904d\u5386\uff1a\u4f8b\u9898\u4e00 */\nvoid preOrder(TreeNode root) {\n    if (root == null) {\n        return;\n    }\n    if (root.val == 7) {\n        // \u8bb0\u5f55\u89e3\n        res.add(root);\n    }\n    preOrder(root.left);\n    preOrder(root.right);\n}\n</code></pre> <p></p> <p>\u4e4b\u6240\u4ee5\u79f0\u4e4b\u4e3a\u56de\u6eaf\u7b97\u6cd5\uff0c\u662f\u56e0\u4e3a\u8be5\u7b97\u6cd5\u5728\u641c\u7d22\u89e3\u7a7a\u95f4\u65f6\u4f1a\u91c7\u7528\u201c\u5c1d\u8bd5\u201d\u4e0e\u201c\u56de\u9000\u201d\u7684\u7b56\u7565\u3002\u5f53\u7b97\u6cd5\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u9047\u5230\u67d0\u4e2a\u72b6\u6001\u65e0\u6cd5\u7ee7\u7eed\u524d\u8fdb\u6216\u65e0\u6cd5\u5f97\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u89e3\u65f6\uff0c\u5b83\u4f1a\u64a4\u9500\u4e0a\u4e00\u6b65\u7684\u9009\u62e9\uff0c\u9000\u56de\u5230\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u5e76\u5c1d\u8bd5\u5176\u4ed6\u53ef\u80fd\u7684\u9009\u62e9\u3002</p> <p>\u5bf9\u4e8e\u4f8b\u9898\u4e00\uff0c\u8bbf\u95ee\u6bcf\u4e2a\u8282\u70b9\u90fd\u4ee3\u8868\u4e00\u6b21\u201c\u5c1d\u8bd5\u201d\uff0c\u800c\u8d8a\u8fc7\u53f6\u8282\u70b9\u6216\u8fd4\u56de\u7236\u8282\u70b9\u7684 <code>return</code> \u5219\u8868\u793a\u201c\u56de\u9000\u201d\u3002</p> <p>\u4f8b\u9898\u4e8c</p> <p>\u5728\u4e8c\u53c9\u6811\u4e2d\u641c\u7d22\u6240\u6709\u503c\u4e3a \\(7\\) \u7684\u8282\u70b9\uff0c\u8bf7\u8fd4\u56de\u6839\u8282\u70b9\u5230\u8fd9\u4e9b\u8282\u70b9\u7684\u8def\u5f84\u3002</p> <p>\u5728\u4f8b\u9898\u4e00\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u501f\u52a9\u4e00\u4e2a\u5217\u8868 <code>path</code> \u8bb0\u5f55\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u8def\u5f84\u3002\u5f53\u8bbf\u95ee\u5230\u503c\u4e3a \\(7\\) \u7684\u8282\u70b9\u65f6\uff0c\u5219\u590d\u5236 <code>path</code> \u5e76\u6dfb\u52a0\u8fdb\u7ed3\u679c\u5217\u8868 <code>res</code> \u3002\u904d\u5386\u5b8c\u6210\u540e\uff0c<code>res</code> \u4e2d\u4fdd\u5b58\u7684\u5c31\u662f\u6240\u6709\u7684\u89e3\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>/* \u524d\u5e8f\u904d\u5386\uff1a\u4f8b\u9898\u4e8c */\nvoid preOrder(TreeNode root) {\n    if (root == null) {\n        return;\n    }\n    // \u5c1d\u8bd5\n    path.add(root);\n    if (root.val == 7) {\n        // \u8bb0\u5f55\u89e3\n        res.add(new ArrayList&lt;&gt;(path));\n    }\n    preOrder(root.left);\n    preOrder(root.right);\n    // \u56de\u9000\n    path.remove(path.size() - 1);\n}\n</code></pre> <p>\u5728\u6bcf\u6b21\u201c\u5c1d\u8bd5\u201d\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u5f53\u524d\u8282\u70b9\u6dfb\u52a0\u8fdb <code>path</code> \u6765\u8bb0\u5f55\u8def\u5f84\uff1b\u800c\u5728\u201c\u56de\u9000\u201d\u524d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8be5\u8282\u70b9\u4ece <code>path</code> \u4e2d\u5f39\u51fa\uff0c\u4ee5\u6062\u590d\u672c\u6b21\u5c1d\u8bd5\u4e4b\u524d\u7684\u72b6\u6001\u3002</p> <p>\u89c2\u5bdf\u4e0b\u56fe\u6240\u793a\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5c1d\u8bd5\u548c\u56de\u9000\u7406\u89e3\u4e3a\u201c\u524d\u8fdb\u201d\u4e0e\u201c\u64a4\u9500\u201d\uff0c\u4e24\u4e2a\u64cd\u4f5c\u4e92\u4e3a\u9006\u5411\u3002</p> &lt;1&gt;&lt;2&gt;&lt;3&gt;&lt;4&gt;&lt;5&gt;&lt;6&gt;&lt;7&gt;&lt;8&gt;&lt;9&gt;&lt;10&gt;&lt;11&gt; <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u590d\u6742\u7684\u56de\u6eaf\u95ee\u9898\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u7ea6\u675f\u6761\u4ef6\uff0c\u7ea6\u675f\u6761\u4ef6\u901a\u5e38\u53ef\u7528\u4e8e\u201c\u526a\u679d\u201d\u3002</p> <p>\u4f8b\u9898\u4e09</p> <p>\u5728\u4e8c\u53c9\u6811\u4e2d\u641c\u7d22\u6240\u6709\u503c\u4e3a \\(7\\) \u7684\u8282\u70b9\uff0c\u8bf7\u8fd4\u56de\u6839\u8282\u70b9\u5230\u8fd9\u4e9b\u8282\u70b9\u7684\u8def\u5f84\uff0c\u5e76\u8981\u6c42\u8def\u5f84\u4e2d\u4e0d\u5305\u542b\u503c\u4e3a \\(3\\) \u7684\u8282\u70b9\u3002</p> <p>\u4e3a\u4e86\u6ee1\u8db3\u4ee5\u4e0a\u7ea6\u675f\u6761\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u526a\u679d\u64cd\u4f5c\uff1a\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u9047\u5230\u503c\u4e3a \\(3\\) \u7684\u8282\u70b9\uff0c\u5219\u63d0\u524d\u8fd4\u56de\uff0c\u4e0d\u518d\u7ee7\u7eed\u641c\u7d22\u3002\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>/* \u524d\u5e8f\u904d\u5386\uff1a\u4f8b\u9898\u4e09 */\nvoid preOrder(TreeNode root) {\n    // \u526a\u679d\n    if (root == null || root.val == 3) {\n        return;\n    }\n    // \u5c1d\u8bd5\n    path.add(root);\n    if (root.val == 7) {\n        // \u8bb0\u5f55\u89e3\n        res.add(new ArrayList&lt;&gt;(path));\n    }\n    preOrder(root.left);\n    preOrder(root.right);\n    // \u56de\u9000\n    path.remove(path.size() - 1);\n}\n</code></pre> <p>\u201c\u526a\u679d\u201d\u662f\u4e00\u4e2a\u975e\u5e38\u5f62\u8c61\u7684\u540d\u8bcd\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u201c\u526a\u6389\u201d\u4e86\u4e0d\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u7684\u641c\u7d22\u5206\u652f\uff0c\u907f\u514d\u8bb8\u591a\u65e0\u610f\u4e49\u7684\u5c1d\u8bd5\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u641c\u7d22\u6548\u7387\u3002</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_19","title":"\u6846\u67b6\u4ee3\u7801","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c1d\u8bd5\u5c06\u56de\u6eaf\u7684\u201c\u5c1d\u8bd5\u3001\u56de\u9000\u3001\u526a\u679d\u201d\u7684\u4e3b\u4f53\u6846\u67b6\u63d0\u70bc\u51fa\u6765\uff0c\u63d0\u5347\u4ee3\u7801\u7684\u901a\u7528\u6027\u3002</p> <p>\u5728\u4ee5\u4e0b\u6846\u67b6\u4ee3\u7801\u4e2d\uff0c<code>state</code> \u8868\u793a\u95ee\u9898\u7684\u5f53\u524d\u72b6\u6001\uff0c<code>choices</code> \u8868\u793a\u5f53\u524d\u72b6\u6001\u4e0b\u53ef\u4ee5\u505a\u51fa\u7684\u9009\u62e9\uff1a</p> <pre><code>/* \u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */\nvoid backtrack(State state, List&lt;Choice&gt; choices, List&lt;State&gt; res) {\n    // \u5224\u65ad\u662f\u5426\u4e3a\u89e3\n    if (isSolution(state)) {\n        // \u8bb0\u5f55\u89e3\n        recordSolution(state, res);\n        // \u4e0d\u518d\u7ee7\u7eed\u641c\u7d22\n        return;\n    }\n    // \u904d\u5386\u6240\u6709\u9009\u62e9\n    for (Choice choice : choices) {\n        // \u526a\u679d\uff1a\u5224\u65ad\u9009\u62e9\u662f\u5426\u5408\u6cd5\n        if (isValid(state, choice)) {\n            // \u5c1d\u8bd5\uff1a\u505a\u51fa\u9009\u62e9\uff0c\u66f4\u65b0\u72b6\u6001\n            makeChoice(state, choice);\n            backtrack(state, choices, res);\n            // \u56de\u9000\uff1a\u64a4\u9500\u9009\u62e9\uff0c\u6062\u590d\u5230\u4e4b\u524d\u7684\u72b6\u6001\n            undoChoice(state, choice);\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_20","title":"\u5b50\u96c6/\u7ec4\u5408/\u5168\u6392\u5217\u95ee\u9898","text":"<p>\u5b50\u96c6\u95ee\u9898\u548c\u7ec4\u5408\u95ee\u9898\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u65e0\u975e\u5c31\u662f base case \u6709\u4e00\u4e9b\u533a\u522b\uff0c\u6240\u4ee5\u628a\u8fd9\u4e24\u4e2a\u95ee\u9898\u653e\u5728\u4e00\u8d77\u770b\u3002</p> <p>\u5f62\u5f0f\u4e00\uff1a\u5143\u7d20\u65e0\u91cd\u4e0d\u53ef\u590d\u9009\uff0c\u5373 nums \u4e2d\u7684\u5143\u7d20\u90fd\u662f\u552f\u4e00\u7684\uff0c\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u53ea\u80fd\u88ab\u4f7f\u7528\u4e00\u6b21\uff0cbacktrack \u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/* \u7ec4\u5408/\u5b50\u96c6\u95ee\u9898\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */\nvoid backtrack(int[] nums, int start) {\n    // \u56de\u6eaf\u7b97\u6cd5\u6807\u51c6\u6846\u67b6\n    for (int i = start; i &lt; nums.length; i++) {\n        // \u505a\u9009\u62e9\n        track.addLast(nums[i]);\n        // \u6ce8\u610f\u53c2\u6570\n        backtrack(nums, i + 1);\n        // \u64a4\u9500\u9009\u62e9\n        track.removeLast();\n    }\n}\n\n/* \u6392\u5217\u95ee\u9898\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */\nvoid backtrack(int[] nums) {\n    for (int i = 0; i &lt; nums.length; i++) {\n        // \u526a\u679d\u903b\u8f91\n        if (used[i]) {\n            continue;\n        }\n        // \u505a\u9009\u62e9\n        used[i] = true;\n        track.addLast(nums[i]);\n\n        backtrack(nums);\n        // \u64a4\u9500\u9009\u62e9\n        track.removeLast();\n        used[i] = false;\n    }\n}\n</code></pre> <p>\u5f62\u5f0f\u4e8c\uff1a\u5143\u7d20\u53ef\u91cd\u4e0d\u53ef\u590d\u9009\uff0c\u5373 nums \u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u5b58\u5728\u91cd\u590d\uff0c\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u53ea\u80fd\u88ab\u4f7f\u7528\u4e00\u6b21\uff0c\u5176\u5173\u952e\u5728\u4e8e\u6392\u5e8f\u548c\u526a\u679d\uff0cbacktrack \u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>Arrays.sort(nums);\n/* \u7ec4\u5408/\u5b50\u96c6\u95ee\u9898\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */\nvoid backtrack(int[] nums, int start) {\n    // \u56de\u6eaf\u7b97\u6cd5\u6807\u51c6\u6846\u67b6\n    for (int i = start; i &lt; nums.length; i++) {\n        // \u526a\u679d\u903b\u8f91\uff0c\u8df3\u8fc7\u503c\u76f8\u540c\u7684\u76f8\u90bb\u6811\u679d\n        if (i &gt; start &amp;&amp; nums[i] == nums[i - 1]) {\n            continue;\n        }\n        // \u505a\u9009\u62e9\n        track.addLast(nums[i]);\n        // \u6ce8\u610f\u53c2\u6570\n        backtrack(nums, i + 1);\n        // \u64a4\u9500\u9009\u62e9\n        track.removeLast();\n    }\n}\n\n\nArrays.sort(nums);\n/* \u6392\u5217\u95ee\u9898\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */\nvoid backtrack(int[] nums) {\n    for (int i = 0; i &lt; nums.length; i++) {\n        // \u526a\u679d\u903b\u8f91\n        if (used[i]) {\n            continue;\n        }\n        // \u526a\u679d\u903b\u8f91\uff0c\u56fa\u5b9a\u76f8\u540c\u7684\u5143\u7d20\u5728\u6392\u5217\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\n        if (i &gt; 0 &amp;&amp; nums[i] == nums[i - 1] &amp;&amp; !used[i - 1]) {\n            continue;\n        }\n        // \u505a\u9009\u62e9\n        used[i] = true;\n        track.addLast(nums[i]);\n\n        backtrack(nums);\n        // \u64a4\u9500\u9009\u62e9\n        track.removeLast();\n        used[i] = false;\n    }\n}\n</code></pre> <p>\u5f62\u5f0f\u4e09\uff1a\u5143\u7d20\u65e0\u91cd\u53ef\u590d\u9009\uff0c\u5373 nums \u4e2d\u7684\u5143\u7d20\u90fd\u662f\u552f\u4e00\u7684\uff0c\u6bcf\u4e2a\u5143\u7d20\u53ef\u4ee5\u88ab\u4f7f\u7528\u82e5\u5e72\u6b21\uff0c\u53ea\u8981\u5220\u6389\u53bb\u91cd\u903b\u8f91\u5373\u53ef\uff0cbacktrack \u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/* \u7ec4\u5408/\u5b50\u96c6\u95ee\u9898\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */\nvoid backtrack(int[] nums, int start) {\n    // \u56de\u6eaf\u7b97\u6cd5\u6807\u51c6\u6846\u67b6\n    for (int i = start; i &lt; nums.length; i++) {\n        // \u505a\u9009\u62e9\n        track.addLast(nums[i]);\n        // \u6ce8\u610f\u53c2\u6570\n        backtrack(nums, i);\n        // \u64a4\u9500\u9009\u62e9\n        track.removeLast();\n    }\n}\n\n\n/* \u6392\u5217\u95ee\u9898\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6 */\nvoid backtrack(int[] nums) {\n    for (int i = 0; i &lt; nums.length; i++) {\n        // \u505a\u9009\u62e9\n        track.addLast(nums[i]);\n        backtrack(nums);\n        // \u64a4\u9500\u9009\u62e9\n        track.removeLast();\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_21","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#01","title":"01 \u80cc\u5305\u95ee\u9898","text":"<p>DP41 \u3010\u6a21\u677f\u301101 \u80cc\u5305</p> <pre><code>n, V = map(int, input().split())\nv = []\nw = []\nfor _ in range(n):\n    vi, wi = map(int, input().split())\n    v.append(vi)\n    w.append(wi)\n\nf = [[0] * (V + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    for j in range(V + 1):\n        f[i][j] = f[i - 1][j]\n        if j &gt;= v[i - 1]:\n            f[i][j] = max(f[i][j], f[i - 1][j - v[i - 1]] + w[i - 1])\nprint(f[n][V])\n\nf2 = [-float('inf')] * (V + 1)\nf2[0] = 0\nfor i in range(n):\n    for j in range(V, v[i] - 1, -1): #  01 \u80cc\u5305\uff0c\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff0c\u5fc5\u987b\u9006\u5e8f\u904d\u5386\n        f2[j] = max(f2[j], f2[j - v[i]] + w[i])\nif f2[V] == -float('inf'):\n    print(0)\nelse:\n    print(f2[V])\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_22","title":"\u5b8c\u5168\u80cc\u5305\u95ee\u9898","text":"<p>DP42 \u3010\u6a21\u677f\u3011\u5b8c\u5168\u80cc\u5305</p> <pre><code>n, V = map(int, input().split())\nv = []\nw = []\nfor _ in range(n):\n    vi, wi = map(int, input().split())\n    v.append(vi)\n    w.append(wi)\n\nf = [[0] * (V + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    for j in range(V + 1):\n        f[i][j] = f[i - 1][j]\n        if j &gt;= v[i - 1]:\n            f[i][j] = max(f[i][j], f[i][j - v[i - 1]] + w[i - 1]) # \u5b8c\u5168\u80cc\u5305\uff0c\u53ea\u9700\u8981\u6539\u53d8\u8fd9\u4e00\u884c(i - 1 -&gt; i)\nprint(f[n][V])\n\nf2 = [-float('inf')] * (V + 1)\nf2[0] = 0\nfor i in range(n):\n    for j in range(v[i], V + 1): # \u5b8c\u5168\u80cc\u5305\uff0c\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff0c\u6b63\u5e8f\u904d\u5386\n        f2[j] = max(f2[j], f2[j - v[i]] + w[i])\nif f2[V] == -float('inf'):\n    print(0)\nelse:\n    print(f2[V])\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_23","title":"\u56fe\u8bba","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#dfs","title":"DFS","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_24","title":"\u6709\u5411\u56fe\u5224\u73af","text":"<p>\u5224\u65ad\u4e00\u4e2a\u6709\u5411\u56fe\u662f\u5426\u5b58\u5728\u56de\u8def\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u95ee\u9898\u3002</p> <p>\u4ec0\u4e48\u65f6\u5019\u4f1a\u51fa\u73b0\u56de\u8def\u5462? \u5f53\u4e00\u4e2a\u8282\u70b9\u5728\u9012\u5f52\u6808\u4e2d\u7684\u65f6\u5019, \u53d1\u73b0\u53ef\u4ee5\u4ece\u5176\u4ed6\u8282\u70b9\u56de\u5230\u8fd9\u4e2a\u8282\u70b9, \u5c31\u8bf4\u660e\u6709\u56de\u8def\u3002</p> <p>\u9664\u4e86 <code>visited</code> \u6570\u7ec4, \u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a <code>inStack</code> \u6570\u7ec4, \u7528\u6765\u8bb0\u5f55\u5f53\u524d\u9012\u5f52\u6808\u4e2d\u7684\u8282\u70b9\u3002</p> <p>Detect Cycle in a Directed Graph</p> <pre><code>boolean[] vis;\nboolean[] inStack;\n\nboolean hasCycle(int u) {\n    vis[u] = true;\n    inStack[u] = true;\n    for (int v : g[u]) {\n        // \u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u5c31\u9012\u5f52\u8bbf\u95ee\n        if (!vis[v]) {\n            // \u5982\u679c\u8bbf\u95ee\u8fc7\u4e86\uff0c\u5219\u7ee7\u7eed\u9012\u5f52\n            if (hasCycle(v)) {\n                return true;\n            }\n        } else if (inStack[v]) { // \u5982\u679c\u8bbf\u95ee\u8fc7\u4e86\uff0c\u5e76\u4e14\u5728\u6808\u4e2d\uff0c\u5c31\u8bf4\u660e\u6709\u73af\n            return true;\n        }\n    }\n    inStack[u] = false;\n    return false;\n}\n</code></pre> <p>\u9664\u4e86 DFS \u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u6765\u5224\u65ad\u6709\u5411\u56fe\u662f\u5426\u5b58\u5728\u73af\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_25","title":"\u65e0\u5411\u56fe\u5224\u73af","text":"<p>261. \u4ee5\u56fe\u5224\u6811</p> <p>\u7ed9\u5b9a\u7f16\u53f7\u4ece 0 \u5230 n - 1 \u7684 n \u4e2a\u7ed3\u70b9\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a edges \u5217\u8868\uff0c\u5176\u4e2d <code>edges[i] = [ai, bi]</code> \u8868\u793a\u56fe\u4e2d\u8282\u70b9 <code>ai</code> \u548c <code>bi</code> \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u65e0\u5411\u8fb9\u3002</p> <p>\u5982\u679c\u8fd9\u4e9b\u8fb9\u80fd\u591f\u5f62\u6210\u4e00\u4e2a\u5408\u6cd5\u6709\u6548\u7684\u6811\u7ed3\u6784\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false\u3002</p> <p></p> <pre><code>\u8f93\u5165: n = 5, edges = [[0,1],[1,2],[2,3],[1,3],[1,4]]\n\u8f93\u51fa: false\n</code></pre> <p>\u65e0\u5411\u56fe\u5224\u73af\u7684\u65b9\u6cd5\u548c\u6709\u5411\u56fe\u5224\u73af\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u53ea\u662f\u5728\u5224\u65ad\u662f\u5426\u5b58\u5728\u73af\u7684\u65f6\u5019\uff0c\u9700\u8981\u5224\u65ad\u5f53\u524d\u8282\u70b9\u662f\u5426\u662f\u7236\u8282\u70b9\uff08\u4fdd\u6301\u641c\u7d22\u7684\u65b9\u5411\uff0c\u907f\u514d\u300c\u9006\u884c\u300d\uff09\uff0c\u5982\u679c\u662f\u7236\u8282\u70b9\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u9012\u5f52\u8bbf\u95ee\u4e86\u3002</p> <pre><code># \u5224\u65ad\u56fe\u662f\u4e0d\u662f\u6811\uff0c\u6ee1\u8db3\u4e24\u70b9\uff1a\n# 1.\u662f\u8fde\u901a\u56fe  2.\u4e0d\u5b58\u5728\u73af\nclass Solution:\n    def validTree(self, n: int, edges: List[List[int]]) -&gt; bool:\n        g = defaultdict(list)\n        for u, v in edges:\n            g[u].append(v)\n            g[v].append(u)\n        vis = set()\n\n        def hasCycle(u, parent):\n            vis.add(u)\n            for v in g[u]:\n                if v == parent:\n                    continue\n                if v in vis or hasCycle(v, u):\n                    return True\n            return False\n\n        return not hasCycle(0, -1) and len(vis) == n\n</code></pre> <p>\u5176\u5b9e\u8fd9\u9053\u9898\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e76\u67e5\u96c6\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#bfs","title":"BFS","text":"<p>\u4f8b\u9898\uff1a847. \u56fe\u4e2d\u70b9\u7684\u5c42\u6b21</p> <pre><code>from collections import deque, defaultdict\n\nn, m = map(int, input().split())\ng = defaultdict(list)\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    g[a].append(b)\n\ndef bfs():\n    ans = 0\n    q = deque()\n    q.append(1)\n    vis = set()\n    vis.add(1)\n    while q:\n        size = len(q)\n        for _ in range(size):\n            cur = q.popleft()\n            if cur == n:\n                return ans\n            for nxt in g[cur]:\n                if nxt not in vis:\n                    vis.add(nxt)\n                    q.append(nxt)\n        ans += 1\n    return -1\n\nprint(bfs())\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#_26","title":"\u62d3\u6251\u6392\u5e8f","text":"<p>\u4f8b\u9898\uff1a207. \u8bfe\u7a0b\u8868</p> <p>\u62d3\u6251\u6392\u5e8f\u95ee\u9898\uff1a\u5e38\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u56fe\u662f\u5426\u662f\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09</p> <ol> <li>\u6839\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c\u6784\u5efa\u90bb\u63a5\u8868\u3001\u5165\u5ea6\u6570\u7ec4\u3002</li> <li>\u9009\u53d6\u5165\u5ea6\u4e3a 0 \u7684\u6570\u636e\uff0c\u6839\u636e\u90bb\u63a5\u8868\uff0c\u51cf\u5c0f\u4f9d\u8d56\u5b83\u7684\u6570\u636e\u7684\u5165\u5ea6\u3002</li> <li>\u627e\u51fa\u5165\u5ea6\u53d8\u4e3a 0 \u7684\u6570\u636e\uff0c\u91cd\u590d\u7b2c 2 \u6b65\u3002</li> <li>\u76f4\u81f3\u6240\u6709\u6570\u636e\u7684\u5165\u5ea6\u4e3a 0\uff0c\u5f97\u5230\u6392\u5e8f\uff0c\u5982\u679c\u8fd8\u6709\u6570\u636e\u7684\u5165\u5ea6\u4e0d\u4e3a 0\uff0c\u8bf4\u660e\u56fe\u4e2d\u5b58\u5728\u73af\u3002</li> </ol> <pre><code>class Solution {\n    public boolean canFinish(int numCourses, int[][] prerequisites) {\n        int n = numCourses;\n        // \u5165\u5ea6\u6570\u7ec4\n        int[] inDegree = new int[n];\n        // \u90bb\u63a5\u8868\u5efa\u56fe\n        List&lt;Integer&gt;[] edges = new List[n];\n        for (int i = 0; i &lt; n; i++) {\n            edges[i] = new ArrayList&lt;&gt;();\n        }\n        for (int[] edge : prerequisites) {\n            int to = edge[0];\n            int from = edge[1];\n            inDegree[to]++;\n            edges[from].add(to);\n        }\n        // BFS\n        Queue&lt;Integer&gt; q = new ArrayDeque&lt;&gt;();\n        // \u52a0\u5165\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\n        for (int i = 0; i &lt; n; i++) {\n            if (inDegree[i] == 0) q.offer(i);\n        }\n        while (!q.isEmpty()) {\n            int t = q.poll();\n            for (int i : edges[t]) {\n                inDegree[i]--;\n                if (inDegree[i] == 0) q.offer(i);\n            }\n        }\n        // \u68c0\u67e5\u662f\u5426\u8fd8\u6709\u5165\u5ea6\u4e0d\u4e3a0\u7684\u8282\u70b9\n        for (int x : inDegree) {\n            if (x != 0) return false;\n        }\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/1.%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/#dijkstra","title":"Dijkstra","text":"<p>\u6700\u77ed\u8def\u7b97\u6cd5\u6a21\u677f\u9898\uff1a743. \u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4</p> <p>Dijkstra \u7b97\u6cd5\u9002\u7528\u4e8e\u6240\u6709\u8fb9\u6743\u90fd\u662f\u6b63\u6570\u7684\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a n \u4e2a\u70b9\uff0cm \u6761\u8fb9\u7684\u56fe\uff0cDijkstra \u7b97\u6cd5\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a</p> <ul> <li>\u6734\u7d20\u7248\uff1a\u90bb\u63a5\u77e9\u9635\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\)</li> <li>\u5806\u4f18\u5316\u7248\uff1a\u90bb\u63a5\u8868\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(mlogm)\\)</li> </ul> <p>\u901a\u5e38\u6765\u8bf4\u53ea\u8981\u8bb0\u4f4f\u5806\u4f18\u5316\u7248\u5c31\u53ef\u4ee5\u4e86\u3002\u5806\u4f18\u5316\u7248\u7b97\u6cd5\u6d41\u7a0b\uff1a</p> <p></p> <p>\u7b97\u6cd5\u91cd\u70b9\uff1a</p> <ul> <li>\u7528 <code>distance</code> \u6570\u7ec4\u8bb0\u5f55\u6e90\u70b9\u5230\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\uff0c\u6e90\u70b9\u4e3a 0\u3002</li> <li>\u7528 <code>visited</code> \u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u662f\u5426\u5df2\u7ecf\u786e\u5b9a\u4e86\u6700\u77ed\u8def\uff0c\u521d\u59cb\u5316\u4e3a false\u3002</li> <li>\u7ef4\u62a4\u4e00\u4e2a <code>(x\u70b9, \u6e90\u70b9\u5230x\u7684\u8ddd\u79bb)</code> \u7684\u5c0f\u6839\u5806\uff0c\u5165\u5806\u7684\u6761\u4ef6\u4e3a\uff1a1. <code>visited[u]==false</code>\uff0c2. <code>distance[u] + w &lt; distance[v]</code></li> </ul> \u6734\u7d20\u7248 Dijkstra\u5806\u4f18\u5316\u7248 Dijkstra <pre><code>class Solution {\n    public int networkDelayTime(int[][] times, int n, int k) {\n        final int INF = Integer.MAX_VALUE / 2;\n        // \u5efa\u56fe\uff0c\u90bb\u63a5\u77e9\u9635\n        int[][] g = new int[n + 1][n + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            Arrays.fill(g[i], INF);\n        }\n        for (int[] t : times) {\n            int x = t[0];\n            int y = t[1];\n            g[x][y] = t[2];\n        }\n        // \u521b\u5efadist\u6570\u7ec4\n        int[] dist = new int[n + 1];\n        Arrays.fill(dist, INF);\n        dist[k] = 0;\n        boolean[] visited = new boolean[n + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            int x = -1;\n            for (int y = 1; y &lt;= n; y++) {\n                // \u6bcf\u6b21\u627e\u5230\u300c\u6700\u77ed\u8ddd\u79bb\u6700\u5c0f\u300d\u4e14\u300c\u672a\u88ab\u66f4\u65b0\u300d\u7684\u70b9x\n                if (!visited[y] &amp;&amp; (x == -1 || dist[y] &lt; dist[x])) {\n                    x = y;\n                }\n            }\n            visited[x] = true;\n            for (int y = 1; y &lt;= n; y++) {\n                dist[y] = Math.min(dist[y], dist[x] + g[x][y]);\n            }\n        }\n        int ans = 0;\n        for (int i = 1; i &lt;= n; i++) {\n            ans = Math.max(ans, dist[i]);\n        }\n        return ans == INF ? -1 : ans;\n    }\n}\n</code></pre> <pre><code>class Solution {\n    public int networkDelayTime(int[][] times, int n, int k) {\n        int INF = Integer.MAX_VALUE / 2;\n        List&lt;int[]&gt;[] g = new ArrayList[n + 1];\n        Arrays.setAll(g, i -&gt; new ArrayList&lt;&gt;());\n        for (int[] e : times) {\n            int u = e[0], v = e[1], w = e[2];\n            g[u].add(new int[]{v, w});\n        }\n        int[] dist = new int[n + 1];\n        Arrays.fill(dist, INF);\n        dist[k] = 0;\n        boolean[] vis = new boolean[n + 1];\n        PriorityQueue&lt;int[]&gt; pq = new PriorityQueue&lt;&gt;((a, b) -&gt; a[1] - b[1]);\n        pq.offer(new int[]{k, 0});\n        while (!pq.isEmpty()) {\n            int u = pq.poll()[0];\n            if (vis[u]) continue;\n            vis[u] = true;\n            for (int[] e : g[u]) {\n                int v = e[0], w = e[1];\n                if (!vis[v] &amp;&amp; dist[u] + w &lt; dist[v]) {\n                    dist[v] = dist[u] + w;\n                    pq.offer(new int[]{v, dist[u] + w});\n                }\n            }\n        }\n        int ans = 0;\n        for (int i = 1; i &lt;= n; i++) {\n            if (dist[i] == INF) return -1;\n            ans = Math.max(ans, dist[i]);\n        }\n        return ans;\n    }\n}\n</code></pre> <p>\u53d8\u79cd\u9898\uff1a1631. \u6700\u5c0f\u4f53\u529b\u6d88\u8017\u8def\u5f84</p> <p>\u628a <code>(\u70b9x, \u539f\u70b9\u5230\u70b9x\u7684\u8ddd\u79bb)</code> \u66ff\u6362\u4e3a <code>(\u70b9x, \u539f\u70b9\u5230\u70b9x\u7684\u4ee3\u4ef7)</code> \u5373\u53ef\u3002Dijkstra \u7b97\u6cd5\u7ef4\u62a4\u7684\u662f\u70b9\u4e0e\u539f\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u800c\u672c\u9898\u9700\u8981\u7ef4\u62a4\u7684\u662f\u4ece\u539f\u70b9\u51fa\u53d1\u7684\u8def\u5f84\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <pre><code>class Solution {\n    public int minimumEffortPath(int[][] heights) {\n        int m = heights.length, n = heights[0].length;\n        int[][] dist = new int[m][n];\n        for (int[] row : dist) {\n            Arrays.fill(row, Integer.MAX_VALUE);\n        }\n        dist[0][0] = 0;\n        // vis[i][j] = true means we have found the shortest path from (0, 0) to (i, j)\n        boolean[][] vis = new boolean[m][n];\n        // {row, col, cost}\n        PriorityQueue&lt;int[]&gt; pq = new PriorityQueue&lt;&gt;((a, b) -&gt; a[2] - b[2]);\n        pq.offer(new int[]{0, 0, 0});\n        int[][] dirs = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n        while (!pq.isEmpty()) {\n            int[] cur = pq.poll();\n            int r = cur[0], c = cur[1], cost = cur[2];\n            if (r == m - 1 &amp;&amp; c == n - 1) {\n                return cost;\n            }\n            if (vis[r][c]) continue;\n            vis[r][c] = true;\n            for (int[] dir : dirs) {\n                int nr = r + dir[0], nc = c + dir[1];\n                if (nr &gt;= 0 &amp;&amp; nr &lt; m &amp;&amp; nc &gt;= 0 &amp;&amp; nc &lt; n &amp;&amp; !vis[nr][nc]) {\n                    // \u5bf9\u6bd4 dist[v] = dist[u] + w;\n                    int newCost = Math.max(cost, Math.abs(heights[nr][nc] - heights[r][c]));\n                    if (newCost &lt; dist[nr][nc]) {\n                        dist[nr][nc] = newCost;\n                        pq.offer(new int[]{nr, nc, newCost});\n                    }\n                }\n            }\n        }\n        return -1;\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(mnlog(mn))\\)</p> <p>\u53d8\u79cd\u9898\uff1a778. \u6c34\u4f4d\u4e0a\u5347\u7684\u6cf3\u6c60\u4e2d\u6e38\u6cf3</p> <p>Dijkstra \u7b97\u6cd5\u7ef4\u62a4\u7684\u662f\u70b9\u4e0e\u539f\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u800c\u672c\u9898\u9700\u8981\u7ef4\u62a4\u7684\u662f\u4ece\u539f\u70b9\u51fa\u53d1\u7684\u8def\u5f84\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u4ee3\u4ef7 = max(\u5f53\u524d\u70b9\u7684\u9ad8\u5ea6, \u4e0b\u4e00\u4e2a\u70b9\u7684\u9ad8\u5ea6)\u3002</p> <pre><code>class Solution {\n    public int swimInWater(int[][] grid) {\n        int m = grid.length, n = grid[0].length;\n        int[][] dist = new int[m][n];\n        for (int[] row : dist) {\n            Arrays.fill(row, Integer.MAX_VALUE);\n        }\n        dist[0][0] = grid[0][0];\n        // vis[i][j] = true means we have found the shortest path from (0, 0) to (i, j)\n        boolean[][] vis = new boolean[m][n];\n        // {row, col, cost}\n        PriorityQueue&lt;int[]&gt; pq = new PriorityQueue&lt;&gt;((a, b) -&gt; a[2] - b[2]);\n        pq.offer(new int[]{0, 0, grid[0][0]});\n        int[][] dirs = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n        while (!pq.isEmpty()) {\n            int[] cur = pq.poll();\n            int r = cur[0], c = cur[1], cost = cur[2];\n            if (r == m - 1 &amp;&amp; c == n - 1) {\n                return cost;\n            }\n            if (vis[r][c]) continue;\n            vis[r][c] = true;\n            for (int[] dir : dirs) {\n                int nr = r + dir[0], nc = c + dir[1];\n                if (nr &gt;= 0 &amp;&amp; nr &lt; m &amp;&amp; nc &gt;= 0 &amp;&amp; nc &lt; n &amp;&amp; !vis[nr][nc]) {\n                    // \u5bf9\u6bd4 dist[v] = dist[u] + w;\n                    int newCost = Math.max(cost, grid[nr][nc]);\n                    if (newCost &lt; dist[nr][nc]) {\n                        dist[nr][nc] = newCost;\n                        pq.offer(new int[]{nr, nc, newCost});\n                    }\n                }\n            }\n        }\n        return -1;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/","title":"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7b14\u8bb0","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_2","title":"\u6392\u5e8f","text":"<p>\u6a21\u677f\u9898\uff1a912. \u6392\u5e8f\u6570\u7ec4</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_3","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u5feb\u901f\u6392\u5e8f\u662f\u57fa\u4e8e\u5206\u6cbb\u7684\u7b97\u6cd5\uff1a</p> <ul> <li>\u4ece\u6570\u7ec4\u4e2d\u9009\u53d6\u4e2d\u8f74\u5143\u7d20 pivot</li> <li>\u5c06\u5c0f\u5143\u7d20\u653e\u5728 pivot \u5de6\u8fb9\uff0c\u5927\u5143\u7d20\u653e\u53f3\u8fb9</li> <li>\u7136\u540e\u5206\u522b\u5bf9\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u5b50\u6570\u7ec4\u8fdb\u884c\u5feb\u6392</li> </ul> <p>\u4f8b\u9898\uff1a 215. \u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u6700\u5927\u5143\u7d20</p> <pre><code>public class Main {\n    public static void quickSort(int[] q, int l, int r) {\n        if (l &gt;= r) return;\n        int x = q[l + r &gt;&gt; 1], i = l - 1, j = r + 1;\n        while (i &lt; j) {\n            while (q[++i] &lt; x) ;\n            while (q[--j] &gt; x) ;\n            if (i &lt; j) {\n                int t = q[i];\n                q[i] = q[j];\n                q[j] = t;\n            }\n        }\n        quickSort(q, l, j);\n        quickSort(q, j + 1, r);\n    }\n}\n</code></pre> <pre><code>class Solution {\n    public int[] sortArray(int[] nums) {\n        quickSort(nums, 0, nums.length - 1);\n        return nums;\n    }\n\n    public void quickSort(int[] arr, int l, int r) {\n        if (l &gt;= r) return;\n        int pivot = partition(arr, l, r);\n        quickSort(arr, l, pivot - 1);\n        quickSort(arr, pivot + 1, r);\n    }\n    // partition\u51fd\u6570\uff1a\u786e\u5b9apivot\uff0c\u5e76\u8c03\u914d\u597dpivot\u5de6\u53f3\u7684\u6570\u7ec4\uff0c\u8fd4\u56depivot\n    public int partition(int[] arr, int l, int r) {\n        int randomIdx = l + (int)(Math.random() * (r - l + 1));\n        swap(arr, randomIdx, r);\n        int pivotVal = arr[r];\n        // wall\u8868\u793apivot\u6700\u540e\u7684\u4e0b\u6807\n        int wall = l;\n        // for\u5faa\u73af\u7684\u610f\u4e49\u662f\u628a\u6bd4pivotVal\u5c0f\u7684\u5143\u7d20\u79fb\u5230\u524d\u9762\n        for (int i = l; i &lt;= r - 1; i++) {\n            if (arr[i] &lt; pivotVal) {\n                swap(arr, i, wall);\n                wall++;\n            }\n        }\n        swap(arr, wall, r);\n        return wall;\n    }\n\n    public void swap(int[] arr, int i, int j) {\n        int temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n}\n</code></pre> <p>786. \u7b2c k \u4e2a\u6570</p> <pre><code>from random import random\n\nn, k = map(int, input().split())\nnums = list(map(int, input().split()))\n\ndef partition(nums, l, r):\n    random_idx = l + int(random() * (r - l + 1))\n    nums[random_idx], nums[r] = nums[r], nums[random_idx]\n    pivot_val = nums[r]\n    wall = l\n    for i in range(l, r):\n        if nums[i] &lt; pivot_val:\n            nums[i], nums[wall] = nums[wall], nums[i]\n            wall += 1\n    nums[wall], nums[r] = nums[r], nums[wall]\n    return wall\n\ndef find_k(nums, k):\n    target = k - 1\n    left, right = 0, len(nums) - 1\n    while left &lt;= right:\n        mid = partition(nums, left, right)\n        if mid == target:\n            return nums[mid]\n        elif mid &lt; target:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return -1\n\nprint(find_k(nums, k))\n</code></pre> <p>\u4e09\u8def\u5f52\u5e76\u3001\u8377\u5170\u56fd\u65d7\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4<code>arr</code>\u548c\u4e00\u4e2a\u6570<code>pivot</code>\uff0c\u4f7f\u7528<code>O(N)</code>\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5c06 &lt; pivot \u7684\u6570\u90fd\u653e\u5728\u5de6\u8fb9\uff0c\u5c06 == pivot \u7684\u6570\u653e\u4e2d\u95f4\uff0c\u5c06 &gt; pivot \u7684\u6570\u653e\u53f3\u8fb9\u3002</p> <pre><code>def partition(arr, pivot, l, r):\n    l_wall = l\n    r_wall = r\n    i = l\n    while i &lt; r_wall:\n        if arr[i] &lt; pivot:\n            arr[i], arr[l_wall] = arr[l_wall], arr[i]\n            i += 1\n            l_wall += 1\n        elif arr[i] == pivot:\n            i += 1\n        else:\n            arr[i], arr[r_wall] = arr[r_wall], arr[i]\n            r_wall -= 1\n\narr = [3,5,6,3,4,5,2,6,9,0]\npartition(arr, 5, 0, len(arr) - 1)\nprint(arr)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_4","title":"\u5f52\u5e76\u6392\u5e8f","text":"<p>\u5f52\u5e76\u6392\u5e8f\u662f\u57fa\u4e8e\u5206\u6cbb\u7684\u6392\u5e8f\u7b97\u6cd5</p> <ul> <li>\u539f\u95ee\u9898\uff1a\u628a\u6570\u7ec4\u6392\u5e8f</li> <li>\u5b50\u95ee\u9898\uff1a\u628a\u6570\u7ec4\u524d\u4e00\u534a\u3001\u540e\u4e00\u534a\u5206\u522b\u6392\u5e8f\uff0c\u7136\u540e\u518d\u5408\u5e76\u4e24\u534a</li> </ul> <pre><code>public class Sort {\n    public void mergeSort(int[] arr, int l, int r) {\n        if (l &gt;= r) return;\n        int mid = (l + r) / 2;\n        mergeSort(arr, l, mid);\n        mergeSort(arr, mid + 1, r);\n        merge(arr, l, mid, r);\n    }\n\n    private void merge(int[] arr, int l, int mid, int r) {\n        int[] temp = new int[r - l + 1];\n        int i = l, j = mid + 1, idx = 0;\n        while (i &lt;= mid &amp;&amp; j &lt;= r) {\n            if (arr[i] &lt;= arr[j]) temp[idx++] = arr[i++];\n            else temp[idx++] = arr[j++];\n        }\n        while (i &lt;= mid) temp[idx++] = arr[i++];\n        while (j &lt;= r) temp[idx++] = arr[j++];\n        for (int k = 0; k &lt; temp.length; k++) {\n            arr[l + k] = temp[k];\n        }\n    }\n}\n</code></pre> <p>\u4f8b\u9898\uff1a\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9</p> <pre><code>class Solution {\n    int ans = 0;\n\n    public int reversePairs(int[] nums) {\n        mergeSort(nums, 0, nums.length - 1);\n        return ans;\n    }\n\n    private void mergeSort(int[] nums, int l, int r) {\n        if (l &gt;= r) return;\n        int mid = l + r &gt;&gt; 1;\n        mergeSort(nums, l, mid);\n        mergeSort(nums, mid + 1, r);\n        merge(nums, l, mid, r);\n    }\n\n    private void merge(int[] nums, int l, int mid, int r) {\n        int[] temp = new int[r - l + 1];\n        int i = l, j = mid + 1, idx = 0;\n        while (i &lt;= mid &amp;&amp; j &lt;= r) {\n            if (nums[i] &lt;= nums[j]) temp[idx++] = nums[i++];\n            else {\n                ans += mid - i + 1;\n                temp[idx++] = nums[j++];\n            }\n        }\n        while (i &lt;= mid) temp[idx++] = nums[i++];\n        while (j &lt;= r) temp[idx++] = nums[j++];\n        for (int k = 0; k &lt; temp.length; k++) {\n            nums[l + k] = temp[k];\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_5","title":"\u5806\u6392\u5e8f","text":"<pre><code>import java.util.*;\n\nclass Program {\n    static int endIdx;\n\n    public static int[] heapSort(int[] array) {\n        int n = array.length;\n        int[] heap = array;\n        endIdx = n - 1;\n        // O(n)\u5efa\u5806\u65b9\u5f0f\uff0c\u4ece\u5012\u6570\u7b2c\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cbheapifyDown\n        for (int i = (n - 1) / 2; i &gt;= 0; i--) {\n            heapifyDown(heap, i);\n        }\n        int[] ans = new int[n];\n        for (int i = 0; i &lt; n; i++) {\n            ans[i] = heap[0];\n            heap[0] = heap[endIdx];\n            endIdx--;\n            heapifyDown(heap, 0);\n        }\n        return ans;\n    }\n\n    public static void heapifyDown(int[] heap, int idx) {\n        // \u627e\u5230\u81ea\u5df1\u3001\u5de6\u5b69\u5b50\u3001\u53f3\u5b69\u5b50\u4e09\u8005\u7684\u6700\u5c0f\u503c\uff0c\u5373\u8981\u4ea4\u6362\u5230\u7684\u76ee\u6807\u4e0b\u6807\n        int t = idx;\n        if (2 * idx + 1 &lt;= endIdx &amp;&amp; heap[2 * idx + 1] &lt; heap[t])\n            t = 2 * idx + 1;\n        if (2 * idx + 2 &lt;= endIdx &amp;&amp; heap[2 * idx + 2] &lt; heap[t])\n            t = 2 * idx + 2;\n        if (idx != t) {\n            int temp = heap[idx];\n            heap[idx] = heap[t];\n            heap[t] = temp;\n            heapifyDown(heap, t);\n        }\n    }\n}\n</code></pre> <pre><code>def heapify_up(arr, idx):\n    while arr[idx] &lt; arr[(idx - 1) // 2]:  # \u7236\u8282\u70b9\u4e0b\u6807 (i - 1) // 2\n        arr[idx], arr[(idx - 1) // 2] = arr[(idx - 1) // 2], arr[idx]\n        idx = (idx - 1) // 2\n\n\ndef heapify_down(arr, idx):\n    # \u627e\u5230\u81ea\u5df1\u3001\u5de6\u5b69\u5b50\u3001\u53f3\u5b69\u5b50\u4e09\u8005\u7684\u6700\u5c0f\u503c\uff0c\u5373\u8981\u4ea4\u6362\u5230\u7684\u76ee\u6807\u4e0b\u6807\n    t = idx\n    left = 2 * idx + 1\n    right = 2 * idx + 2\n    if left &lt; len(arr) and arr[left] &lt; arr[t]:\n        t = left\n    if right &lt; len(arr) and arr[right] &lt; arr[t]:\n        t = right\n    if idx != t:\n        arr[idx], arr[t] = arr[t], arr[idx]\n        heapify_down(arr, t)\n\n\ndef heapify(arr):\n    # O(N)\u5efa\u5806\n    for i in range((len(arr) - 2) // 2, -1, -1):\n        heapify_down(arr, i)\n\n\ndef heappop(arr):\n    ans = arr[0]\n    arr[0] = arr[-1]\n    arr.pop()\n    heapify_down(arr, 0)\n    return ans\n\n\ndef heappush(arr, num):\n    arr.append(num)\n    heapify_up(arr, len(arr) - 1)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_6","title":"\u4e8c\u5206","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_7","title":"\u7ecf\u5178\u4e8c\u5206","text":"<pre><code>class Solution {\n    public int search(int[] nums, int target) {\n        if (target &lt; nums[0] || target &gt; nums[nums.length - 1]) {\n            return -1;\n        }\n\n        int left = 0, right = nums.length - 1;\n        while (left &lt;= right) {\n            int mid = left + (right - left) / 2;\n            if (nums[mid] == target)\n                return mid;\n            else if (nums[mid] &lt; target)\n                left = mid + 1;\n            else if (nums[mid] &gt; target)\n                right = mid - 1;\n        }\n        return -1;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_8","title":"\u540e\u7ee7\u578b\u4e8c\u5206","text":"<p>\u67e5\u627e\u7b2c\u4e00\u4e2a <code>&gt;=target</code> \u7684\u6570\u7684\u4e0b\u6807\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de n\u3002\uff08\u540e\u7ee7\u578b\uff09</p> <pre><code>class Solution {\n    public int search(int[] nums, int target) {\n        // nums.length\u662f\u4fdd\u62a4\u8282\u70b9\uff0c\u7531\u4e8e\u5f80\u4e0b\u53d6\u6574\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u5230\uff0c\u5982\u679c\u6700\u540e\u8fd4\u56denums.length\u5219\u8868\u793a\u65e0\u89e3\n        int left = 0, right = nums.length;\n        while (left &lt; right) {\n            int mid = left + (right - left) / 2;\n            if (nums[mid] &gt;= target) { // \u6761\u4ef6\u88ab\u6ee1\u8db3\u7684\u4e00\u4fa7\u5e94\u8be5\u88ab\u5305\u542b\n                right = mid;\n            } else {\n                left = mid + 1; // \u6761\u4ef6\u4e0d\u6ee1\u8db3\u7684\u4e00\u4fa7\u76f4\u63a5\u53bb\u6389\n            }\n        }\n        return right;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_9","title":"\u524d\u9a71\u578b\u4e8c\u5206","text":"<p>\u67e5\u627e\u6700\u540e\u4e00\u4e2a <code>&lt;= target</code> \u7684\u6570\u7684\u4e0b\u6807\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de -1\u3002\uff08\u524d\u9a71\u578b\uff09</p> <pre><code>class Solution {\n    public int search(int[] nums, int target) {\n        // -1\u662f\u4fdd\u62a4\u8282\u70b9\uff0c\u7531\u4e8e\u5411\u4e0a\u53d6\u6574\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u5230\uff0c\u5982\u679c\u6700\u540e\u8fd4\u56de-1\u5219\u8868\u793a\u65e0\u89e3\n        int left = -1, right = nums.length - 1;\n        while (left &lt; right) {\n            int mid = left + (right - left + 1) / 2; // \u5411\u4e0a\u53d6\u6574\uff0c\u907f\u514d\u9677\u5165\u6b7b\u5faa\u73af\n            if (nums[mid] &lt;= target) { // \u6761\u4ef6\u88ab\u6ee1\u8db3\u7684\u4e00\u4fa7\u5e94\u8be5\u88ab\u5305\u542b\n                left = mid;\n            } else {\n                right = mid - 1; // \u6761\u4ef6\u4e0d\u6ee1\u8db3\u7684\u4e00\u4fa7\u76f4\u63a5\u53bb\u6389\n            }\n        }\n        return right;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_10","title":"\u53cc\u6307\u9488","text":"<pre><code>for (i = 0, j = 0; i &lt; n; i++) {\n    while (j &lt; i &amp;&amp; check(i, j)) j++;\n    // \u4e3b\u8981\u903b\u8f91\n}\n</code></pre> <p>\u4f8b\u9898\uff1a\u5229\u7528\u53cc\u6307\u9488\u5b9e\u73b0 <code>String.split(\" \")</code></p> <pre><code>public class Main {\n    public static void main(String[] args) {\n        String s = \"abc def ghi\";\n        char[] arr = s.toCharArray();\n        int n = s.length();\n        for (int i = 0; i &lt; n; i++) {\n            int j = i;\n            while (j &lt; n &amp;&amp; arr[j] != ' ') j++;\n            for (int k = i; k &lt; j; k++) System.out.print(arr[k]);\n            System.out.println();\n            i = j;\n        }\n    }\n}\n</code></pre> <p>\u4f8b\u9898\uff1a2511. \u6700\u591a\u53ef\u4ee5\u6467\u6bc1\u7684\u654c\u4eba\u57ce\u5821\u6570\u76ee</p> <p>\u4f8b\u9898\uff1a3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32</p> <pre><code>class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        if (s.length()==0) return 0;\n        HashMap&lt;Character, Integer&gt; map = new HashMap&lt;&gt;();\n        int ans = 0;\n        int left = 0;\n        for (int i = 0; i &lt; s.length(); i++) {\n            map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);\n            while (map.get(s.charAt(i)) &gt; 1) {\n                map.put(s.charAt(left), map.get(s.charAt(left)) - 1);\n                left++;\n            }\n            ans = Math.max(ans, i - left + 1);\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_11","title":"\u4f4d\u8fd0\u7b97","text":"<p>\u4f8b\u9898\uff1a191. \u4f4d 1 \u7684\u4e2a\u6570</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57 a\uff0c<code>a&amp;1</code>\u5f97\u5230\u4e86\u8be5\u6570\u5b57\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u4e4b\u540e\u5c06 a \u53f3\u79fb\u4e00\u4f4d\uff0c\u76f4\u5230\u4e3a 0\uff0c\u5c31\u5f97\u5230\u4e86 1 \u7684\u4e2a\u6570</p> <pre><code>class Solution:\n    def hammingWeight(self, n: int) -&gt; int:\n        ans = 0\n        for i in range(32):\n            if (n &gt;&gt; i) &amp; 1:\n                ans += 1\n        return ans\n</code></pre> <pre><code>class Solution:\n    def hammingWeight(self, n: int) -&gt; int:\n        ans = 0\n        while n:\n            ans += 1\n            n -= self.low_bit(n)\n        return ans\n\n    def low_bit(self, x):\n        return x &amp; (-x)\n</code></pre> <p><code>lowbit(x)</code>\uff1a\u8fd4\u56de x \u7684\u6700\u540e\u4e00\u4f4d 1 \u53ca\u4e4b\u540e\u7684\u6570</p> <p>\u70ed\u77e5\u8bc6\uff1a<code>-x = ~x + 1</code></p> <code>x\u7684\u4e8c\u8fdb\u5236\u8868\u793a</code> <code>lowbit(x)</code> 1010 10 101000 1000 <p><code>lowbit(x) = x &amp; -x = x &amp; (~x + 1)</code></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_12","title":"\u533a\u95f4\u548c\uff08\u79bb\u6563\u5316\uff09","text":"<p>\u79bb\u6563\u5316\u7684\u672c\u8d28\u662f\u5efa\u7acb\u4e86\u4e00\u6bb5\u6570\u5217\u5230\u81ea\u7136\u6570\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\uff08value -&gt; index)\uff0c\u901a\u8fc7\u5efa\u7acb\u65b0\u7d22\u5f15\uff0c\u6765\u7f29\u5c0f\u76ee\u6807\u533a\u95f4\uff0c\u4f7f\u5f97\u53ef\u4ee5\u8fdb\u884c\u4e00\u7cfb\u5217\u8fde\u7eed\u6570\u7ec4\u53ef\u4ee5\u8fdb\u884c\u7684\u64cd\u4f5c\u6bd4\u5982\u4e8c\u5206\uff0c\u524d\u7f00\u548c\u7b49\u3002</p> <p>\u2b50 \u4f8b\u9898\uff1a802. \u533a\u95f4\u548c</p> <p>Java \u7684\u597d\u5904\u5728\u4e8e\u53ef\u4ee5\u4f7f\u7528 TreeMap \u7684 <code>floorKey()</code> \u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u4e0d\u7528\u81ea\u5df1\u5199\u4e8c\u5206\u67e5\u627e\u7684\u51fd\u6570\u3002</p> <pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        TreeMap&lt;Integer, Integer&gt; map = new TreeMap&lt;&gt;();\n        for (int i = 0; i &lt; n; i++) {\n            int x = sc.nextInt();\n            int c = sc.nextInt();\n            map.put(x, map.getOrDefault(x, 0) + c);\n        }\n        List&lt;int[]&gt; query = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; m; i++) {\n            int l = sc.nextInt();\n            int r = sc.nextInt();\n            query.add(new int[] { l, r });\n        }\n        int preSum = 0;\n        for (int key : map.keySet()) {\n            int curSum = map.get(key);\n            map.put(key, curSum + preSum);\n            preSum += curSum;\n        }\n        for (int[] q : query) {\n            int l = q[0];\n            int r = q[1];\n            Integer l_key = map.floorKey(l - 1);\n            Integer r_key = map.floorKey(r);\n            Integer l_value = l_key == null ? 0 : map.get(l_key);\n            Integer r_value = r_key == null ? 0 : map.get(r_key);\n            System.out.println(r_value - l_value);\n        }\n    }\n}\n</code></pre> <pre><code>from collections import Counter\nfrom itertools import accumulate\n\nn, m = map(int, input().split())\nd = Counter()\n\nfor _ in range(n):\n    x, c = map(int, input().split())\n    d[x] += c\n\nquery = []\nfor _ in range(m):\n    l, r = map(int, input().split())\n    query.append((l, r))\n\ndef find(nums, target):\n    left, right = -1, len(nums) - 1\n    while left &lt; right:\n        mid = (left + right + 1) &gt;&gt; 1\n        if nums[mid] &lt;= target:\n            left = mid\n        else:\n            right = mid - 1\n    return right\n\nkeys = sorted(list(d.keys()))\nvalues = [d[k] for k in keys]\npre_sum = list(accumulate(values))\n\nfor l, r in query:\n    l_index = find(keys, l - 1)\n    r_index = find(keys, r)\n    l_value = pre_sum[l_index] if l_index != -1 else 0\n    r_value = pre_sum[r_index] if r_index != -1 else 0\n    print(r_value - l_value)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_13","title":"\u533a\u95f4\u5408\u5e76","text":"<p>56. \u5408\u5e76\u533a\u95f4</p> <p>\u7531\u4e8e\u6bcf\u6b21\u6bd4\u8f83\u533a\u95f4\u90fd\u662f\u548c\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u6bd4\u8f83\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u7528<code>LinkedList</code>\u6216\u8005<code>Stack</code>\u5b58\u7b54\u6848\u6570\u7ec4</p> <pre><code>class Solution {\n    public int[][] merge(int[][] intervals) {\n        // \u5148\u6309\u7167\u533a\u95f4\u8d77\u59cb\u4f4d\u7f6e\u6392\u5e8f\n        Arrays.sort(intervals, (v1, v2) -&gt; v1[0] - v2[0]);\n        // \u904d\u5386\u533a\u95f4\n        int[][] res = new int[intervals.length][2];\n        int idx = -1;\n        for (int[] interval: intervals) {\n            // \u5982\u679c\u7ed3\u679c\u6570\u7ec4\u662f\u7a7a\u7684\uff0c\u6216\u8005\u5f53\u524d\u533a\u95f4\u7684\u8d77\u59cb\u4f4d\u7f6e &gt; \u7ed3\u679c\u6570\u7ec4\u4e2d\u6700\u540e\u533a\u95f4\u7684\u7ec8\u6b62\u4f4d\u7f6e\uff0c\n            // \u5219\u4e0d\u5408\u5e76\uff0c\u76f4\u63a5\u5c06\u5f53\u524d\u533a\u95f4\u52a0\u5165\u7ed3\u679c\u6570\u7ec4\u3002\n            if (idx == -1 || interval[0] &gt; res[idx][1]) {\n                res[++idx] = interval;\n            } else {\n                // \u53cd\u4e4b\u5c06\u5f53\u524d\u533a\u95f4\u5408\u5e76\u81f3\u7ed3\u679c\u6570\u7ec4\u7684\u6700\u540e\u533a\u95f4\n                res[idx][1] = Math.max(res[idx][1], interval[1]);\n            }\n        }\n        return Arrays.copyOf(res, idx + 1);\n    }\n}\n</code></pre> <p>729. \u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868 I</p> <pre><code>class MyCalendar {\n    TreeSet&lt;int[]&gt; set;\n\n    public MyCalendar() {\n        set = new TreeSet&lt;&gt;((a, b) -&gt; a[0] - b[0]);\n        set.add(new int[]{-1, -1});\n        set.add(new int[]{(int)1e9 + 1, (int)1e9 + 1});\n    }\n\n    public boolean book(int start, int end) {\n        // set.floor(E e): \u8fd4\u56deset\u4e2d &lt;= e \u7684\u6700\u5927\u5143\u7d20\n        // set.ceiling(E e): \u8fd4\u56deset\u4e2d &gt;= e \u7684\u6700\u5c0f\u5143\u7d20\n        int[] t = new int[]{start, end};\n        int[] a = set.floor(t);\n        int[] b = set.ceiling(t);\n        if (!(start &gt;= a[1] &amp;&amp; end &lt;= b[0])) return false;\n        set.add(t);\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_14","title":"\u524d\u7f00\u548c\u4e0e\u5dee\u5206","text":"<p>304. \u4e8c\u7ef4\u533a\u57df\u548c\u68c0\u7d22 - \u77e9\u9635\u4e0d\u53ef\u53d8</p> <p></p> <pre><code>class NumMatrix {\n    int[][] preSum;\n\n    // preSum[i][j]\u8868\u793a\u4ee5(i, j)\u4e3a\u53f3\u4e0b\u89d2\uff0c(0, 0)\u4e3a\u5de6\u4e0a\u89d2\u7684\u533a\u57df\u548c\n    public NumMatrix(int[][] matrix) {\n        int m = matrix.length, n = matrix[0].length;\n        preSum = new int[m + 1][n + 1];\n        for (int i = 1; i &lt;= m; i++) {\n            for (int j = 1; j &lt;= n; j++) {\n                preSum[i][j] = preSum[i - 1][j] + preSum[i][j - 1] - preSum[i - 1][j - 1] + matrix[i - 1][j - 1];\n            }\n        }\n    }\n\n    // \u6ce8\u610f\u8fd9\u91cc\u7531\u4e8e\u5de6\u4e0a\u89d2\u662f(row1, col1)\uff0c\u800c\u6211\u4eecpreSum[i][j]\u7684\u5b9a\u4e49\u662f\u53f3\u4e0b\u89d2\uff0c\u56e0\u6b64\u5de6\u4e0a\u89d2\u7684\u7684\u533a\u57df\u548c\u5176\u5b9e\u662f(row1 - 1, col1 - 1)\n    // \u53e6\u5916\u6211\u4eec\u8981\u628a\u539fmatrix\u7684\u4e0b\u6807\u90fd+1\u8f6c\u6362\u5230preSum\u5bf9\u5e94\u7684\u4e0b\u6807\n    public int sumRegion(int row1, int col1, int row2, int col2) {\n        int x1 = ++row1, y1 = ++col1, x2 = ++row2, y2 = ++col2;\n        return preSum[x2][y2] - preSum[x2][y1 - 1] - preSum[x1 - 1][y2] + preSum[x1 - 1][y1 - 1];\n    }\n}\n</code></pre> <p>797. \u5dee\u5206</p> <pre><code>n, m = map(int, input().split())\nnums = [0] + list(map(int, input().split()))\nqueries = []\nfor _ in range(m):\n    l, r, c = map(int, input().split())\n    queries.append((l, r, c))\n\n# \u6784\u5efa\u5dee\u5206\u6570\u7ec4\ndiff = [0] * (n + 1)\nfor i in range(1, n + 1):\n    diff[i] = nums[i] - nums[i - 1]\n\n\n# \u5c06\u5e8f\u5217\u4e2d[l, r]\u4e4b\u95f4\u7684\u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0ac\ndef add(l, r, c):\n    diff[l] += c\n    if r + 1 &lt;= n:\n        diff[r + 1] -= c\n\n\nfor l, r, c in queries:\n    add(l, r, c)\n\nans = [0] * (n + 1)\n# \u524d\u7f00\u548c\u6c42\u539f\u6570\u7ec4\nfor i in range(1, n + 1):\n    ans[i] = ans[i - 1] + diff[i]\n    print(ans[i], end=\" \")\n</code></pre> <p>1109. \u822a\u73ed\u9884\u8ba2\u7edf\u8ba1</p> <pre><code>class Solution:\n    def corpFlightBookings(self, bookings: List[List[int]], n: int) -&gt; List[int]:\n        ans = [0] * (n + 1)\n        diff = [0] * (n + 1)\n\n        def add(l, r, c):\n            diff[l] += c\n            if r + 1 &lt;= n:\n                diff[r + 1] -= c\n\n        for l, r, c in bookings:\n            add(l, r, c)\n\n        for i in range(1, n + 1):\n            ans[i] = ans[i - 1] + diff[i]\n\n        return ans[1:]\n</code></pre> <p>1094. \u62fc\u8f66</p> <pre><code>class Solution:\n    def carPooling(self, trips: List[List[int]], capacity: int) -&gt; bool:\n        diff = [0] * 1002\n\n        def add(l, r, c):\n            diff[l] += c\n            if r + 1 &lt; len(diff):\n                diff[r + 1] -= c\n\n        for c, l, r in trips:\n            add(l, r - 1, c)\n\n        ans = list(accumulate(diff))\n        return all(x &lt;= capacity for x in ans)\n</code></pre> <p>6919. \u4f7f\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u7b49\u4e8e\u96f6</p> <pre><code>class Solution:\n    def checkArray(self, nums: List[int], k: int) -&gt; bool:\n        n = len(nums)\n        d = [0] * (n + 1)\n        sum_d = 0\n        for i, x in enumerate(nums):\n            sum_d += d[i]\n            x += sum_d\n            if x == 0: continue  # \u65e0\u9700\u64cd\u4f5c\n            if x &lt; 0 or i + k &gt; n: return False  # \u65e0\u6cd5\u64cd\u4f5c\n            sum_d -= x  # \u76f4\u63a5\u52a0\u5230 sum_d \u4e2d\n            d[i + k] += x\n        return True\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_15","title":"\u5b57\u7b26\u4e32\u7b97\u6cd5","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#kmp","title":"KMP","text":"<p>GFG</p> <pre><code>def get_next_array(t):\n    if len(t) == 1:\n        return [-1]\n    next = [0] * len(t)\n    next[0] = -1\n    next[1] = 0\n    i = 2\n    cn = 0  # cn: \u62ff\u54ea\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u548c t[i-1] \u6bd4, \u4e5f\u662f\u524d\u7f00\u7684\u957f\u5ea6\n    while i &lt; len(next):\n        if t[i - 1] == t[cn]:\n            cn += 1\n            next[i] = cn\n            i += 1\n        elif cn &gt; 0:\n            cn = next[cn]\n        else:\n            next[i] = 0\n            i += 1\n    return next\n\n\ndef get_index_of(s: str, t: str) -&gt; int:\n    i = j = 0\n    next = get_next_array(t)\n    while i &lt; len(s) and j &lt; len(t):\n        if s[i] == t[j]:\n            i += 1\n            j += 1\n        # \u76f8\u5f53\u4e8e next[j] == -1, \u5df2\u7ecf\u5f80\u524d\u8df3\u4e0d\u52a8\u4e86, \u6b64\u65f6\u53ea\u80fd i += 1 \u5f80\u4e0b\u5339\u914d\n        elif j == 0:\n            i += 1\n        else:\n            j = next[j]  # \u5f80\u524d\u8df3\n    # i \u6216 j \u8d8a\u754c\u4e86\n    return i - j if j == len(t) else -1\n\n\nif __name__ == '__main__':\n    s = \"ABABDABACDABABCABAB\"\n    t = \"ABABCABAB\"\n    print(get_index_of(s, t))\n    print(s.find(t))\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_16","title":"\u5355\u8c03\u6808","text":"<p>\u4f8b\u9898\uff1a830. \u5355\u8c03\u6808</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a N \u7684\u6574\u6570\u6570\u5217\uff0c\u8f93\u51fa\u6bcf\u4e2a\u6570\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6570\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8f93\u51fa \u22121\u3002</p> <pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] nums = new int[n];\n        for (int i = 0; i &lt; n; i++) {\n            nums[i] = sc.nextInt();\n        }\n        Deque&lt;Integer&gt; stack = new ArrayDeque&lt;&gt;();\n        for (int i = 0; i &lt; n; i++) {\n            while (!stack.isEmpty() &amp;&amp; stack.peek() &gt;= nums[i]) {\n                stack.pop();\n            }\n            if (stack.isEmpty()) System.out.print(-1 + \" \");\n            else System.out.print(stack.peek() + \" \");\n            stack.push(nums[i]);\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_17","title":"\u5355\u8c03\u961f\u5217","text":"<p>\u2b50 \u4f8b\u9898\uff1a239. \u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c</p> <p>\u601d\u8def\uff1a\u5982\u679c\u7a97\u53e3\u4e2d\u6709 2 \u4e2a\u5143\u7d20\u4e0b\u6807\u4e3a<code>i</code>\u548c<code>j</code>(i &lt; j)\uff0c\u5e76\u4e14<code>nums[i] &lt; nums[j]</code>\uff0c\u90a3\u4e48<code>nums[i]</code>\u5c31\u6ca1\u6709\u5b58\u5728\u7684\u5fc5\u8981\u4e86\uff08\u56e0\u4e3a<code>nums[i]</code>\u65e2\u6bd4<code>nums[j]</code>\u5c0f\uff0c\u53c8\u6bd4<code>nums[j]</code>\u5148\u51fa\u961f\uff09\u3002\u57fa\u4e8e\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u52a8\u6001\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u5355\u8c03\u961f\u5217\u3002</p> <pre><code>class Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -&gt; List[int]:\n        n = len(nums)\n        ans = []\n        q = deque()\n        for i in range(n):\n            # \u5220\u9664\u51fa\u754c\u5143\u7d20\n            while q and q[0] &lt;= i - k:\n                q.popleft()\n            # \u7ef4\u62a4\u5355\u8c03\u9012\u51cf\u961f\u5217\n            while q and nums[i] &gt;= nums[q[-1]]:\n                q.pop()\n            q.append(i)\n            if i &gt;= k - 1:\n                ans.append(nums[q[0]])\n        return ans\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a<code>O(n)</code>\uff0c\u6bcf\u4e00\u4e2a\u4e0b\u6807\u6070\u597d\u88ab\u653e\u5165\u961f\u5217\u4e00\u6b21\uff0c\u5e76\u4e14\u6700\u591a\u88ab\u5f39\u51fa\u961f\u5217\u4e00\u6b21</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a<code>O(k)</code></p> <pre><code>class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        // \u5927\u6839\u5806\u5b58[\u503c\uff0c\u4e0b\u6807]\n        PriorityQueue&lt;int[]&gt; pq = new PriorityQueue&lt;&gt;((a, b) -&gt; b[0] - a[0]);\n        int[] ans = new int[nums.length - k + 1];\n        for (int i = 0; i &lt; nums.length; i++) {\n            pq.offer(new int[]{nums[i], i});\n            // \u521d\u59cb\u5316\u5230\u7a97\u53e3\u957f\u5ea6\u4e3ak\u7684\u65f6\u5019\u624d\u5f00\u59cb\u66f4\u65b0\u7b54\u6848\n            if (i &gt;= k - 1) {\n                // \u61d2\u60f0\u5220\u9664\uff0c\u68c0\u67e5\u5806\u9876\u7684\u5143\u7d20\u7684\u4e0b\u6807\u662f\u5426\u5728\u7a97\u53e3\u4e2d\n                while (pq.peek()[1] &lt;= i - k) pq.poll();\n                ans[i - k + 1] = pq.peek()[0];\n            }\n        }\n        return ans;\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a<code>O(nlogn)</code>\uff0c\u6700\u5dee\u60c5\u51b5\u6570\u7ec4\u5355\u8c03\u9012\u589e\uff0c\u6ca1\u6709\u5143\u7d20\u88ab\u5f39\u51fa\uff0c\u5165\u5806\u64cd\u4f5c\u4e3a<code>logn</code></p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a<code>O(n)</code></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#trie","title":"Trie","text":"<p>\u4f8b\u9898\uff1a</p> <ul> <li>208. \u5b9e\u73b0 Trie (\u524d\u7f00\u6811)</li> <li>720. \u8bcd\u5178\u4e2d\u6700\u957f\u7684\u5355\u8bcd</li> <li>212. \u5355\u8bcd\u641c\u7d22 II</li> <li>421. \u6570\u7ec4\u4e2d\u4e24\u4e2a\u6570\u7684\u6700\u5927\u5f02\u6216\u503c</li> </ul> <p>\u5982\u679c\u9898\u76ee\u8bf4\u660e\u4e86\u53ea\u6709\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u4ee3\u66ff\u54c8\u5e0c\u8868\u5b9e\u73b0</p> <p>835. Trie \u5b57\u7b26\u4e32\u7edf\u8ba1</p> <pre><code>class Trie:\n    def __init__(self):\n        self.count = 0\n        self.children = {}\n\n    def insert(self, word):\n        cur = self\n        for ch in word:\n            if ch not in cur.children:\n                cur.children[ch] = Trie()\n            cur = cur.children[ch]\n        cur.count += 1\n\n    def search(self, word):\n        cur = self\n        for ch in word:\n            if ch not in cur.children:\n                return 0\n            cur = cur.children[ch]\n        return cur.count\n</code></pre> <pre><code>class Trie {\n    int count; //\u8bcd\u9891\n    HashMap&lt;Character, Trie&gt; children; //\u5b57\u7b26\u6620\u5c04\n\n    public Trie() {\n        count = 0;\n        children = new HashMap&lt;&gt;();\n    }\n\n    public void insert(String word) {\n        Trie cur = this;\n        for (char ch : word.toCharArray()) {\n            if (!cur.children.containsKey(ch)) {\n                cur.children.put(ch, new Trie());\n            }\n            cur = cur.children.get(ch);\n        }\n        cur.count++;\n    }\n\n    public boolean search(String word) {\n        Trie cur = this;\n        for (char ch : word.toCharArray()) {\n            if (!cur.children.containsKey(ch)) {\n                return false;\n            }\n            cur = cur.children.get(ch);\n        }\n        // \u9632\u6b62insert\u4e86\"abc\"\u4f46\u662f\u8981\u67e5\u627e\"a\"\u7684\u60c5\u51b5\n        return cur.count &gt; 0;\n    }\n\n    public boolean startsWith(String prefix) {\n        Trie cur = this;\n        for (char ch : prefix.toCharArray()) {\n            if (!cur.children.containsKey(ch)) {\n                return false;\n            }\n            cur = cur.children.get(ch);\n        }\n        return true;\n    }\n}\n</code></pre> <pre><code>class Trie {\n    Trie[] children;\n    boolean isEnd;\n\n    public Trie() {\n        children = new Trie[26];\n        isEnd = false;\n    }\n\n    public void insert(String word) {\n        Trie cur = this;\n        for (char c : word.toCharArray()) {\n            int idx = c - 'a';\n            if (cur.children[idx] == null) {\n                cur.children[idx] = new Trie();\n            }\n            cur = cur.children[idx];\n        }\n        cur.isEnd = true;\n    }\n\n    public boolean search(String word) {\n        Trie cur = this;\n        for (char c : word.toCharArray()) {\n            int idx = c - 'a';\n            if (cur.children[idx] == null) {\n                return false;\n            }\n            cur = cur.children[idx];\n        }\n        return cur.isEnd;\n    }\n\n    public boolean startsWith(String prefix) {\n        Trie cur = this;\n        for (char c : prefix.toCharArray()) {\n            int idx = c - 'a';\n            if (cur.children[idx] == null) {\n                return false;\n            }\n            cur = cur.children[idx];\n        }\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_18","title":"\u5e76\u67e5\u96c6","text":"<p>\u4f8b\u9898\uff1a</p> <ul> <li>836. \u5408\u5e76\u96c6\u5408</li> <li>837. \u8fde\u901a\u5757\u4e2d\u70b9\u7684\u6570\u91cf</li> <li>684. \u5197\u4f59\u8fde\u63a5</li> <li>547. \u7701\u4efd\u6570\u91cf</li> </ul> <pre><code>class UnionFindSet {\n    int[] fa;\n\n    public UnionFindSet(int n) {\n        fa = new int[n];\n        for (int i = 0; i &lt; n; i++) {\n            fa[i] = i;\n        }\n    }\n\n    public int find(int x) {\n        if (x != fa[x]) {\n            fa[x] = find(fa[x]);\n        }\n        return fa[x];\n    }\n\n    public void union(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x != y) {\n            fa[x] = y;\n        }\n    }\n}\n</code></pre> <pre><code>class UnionFind:\n    def __init__(self, n):\n        self.parent = list(range(n))\n        self.n = n\n\n    def find(self, x):\n        if self.parent[x] != x:\n            self.parent[x] = self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        if x != y:\n            self.parent[x] = y\n\n    def is_connected(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        return x == y\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_19","title":"\u5806","text":"<p>https://www.geeksforgeeks.org/binary-heap/</p> <p>https://www.programiz.com/dsa/heap-data-structure</p> <p></p> <p>heap \u5e95\u5c42\u7531\u6570\u7ec4\u5b9e\u73b0\uff0c\u6839\u8282\u70b9\u5728<code>Arr[0]</code>\u3002</p> <pre><code>Arr[(i-1)/2]    Returns the parent node\nArr[(2*i)+1]    Returns the left child node\nArr[(2*i)+2]    Returns the right child node\n</code></pre> <p>\u5982\u4f55\u624b\u5199\u4e00\u4e2a\u5c0f\u6839\u5806\uff1a\u5982\u679c\u6570\u7ec4\u4e0b\u6807\u4ece 0 \u5f00\u59cb</p> <ol> <li>\u63d2\u5165\u4e00\u4e2a\u6570\uff1a<code>heap[size++] = x; up(size - 1);</code></li> <li>\u6c42\u6700\u5c0f\u503c\uff1a<code>heap[0];</code></li> <li>\u5220\u9664\u6700\u5c0f\u503c\uff1a<code>heap[0] = heap[size - 1]; size--; down(0);</code></li> <li>\u5220\u9664\u7b2c k \u4e2a\u5143\u7d20\uff1a<code>heap[k - 1] = heap[size - 1]; size--; down(k-1); up(k-1);</code></li> <li>\u4fee\u6539\u7b2c k \u4e2a\u5143\u7d20\uff1a<code>heap[k - 1] = x; down(k-1); up(k-1);</code></li> </ol> <p>\u4f8b\u9898\uff1a838. \u5806\u6392\u5e8f</p> <pre><code>n, m = list(map(int, input().split()))\nheap = list(map(int, input().split()))\n\n# \u627e\u5230\u81ea\u5df1\u3001\u5de6\u5b69\u5b50\u3001\u53f3\u5b69\u5b50\u4e09\u8005\u7684\u6700\u5c0f\u503c\uff0c\u5373\u8981\u4ea4\u6362\u5230\u7684\u76ee\u6807\u4e0b\u6807\ndef heapify(heap, i):\n    smallest = i\n    l = 2 * i + 1\n    r = 2 * i + 2\n\n    if l &lt; len(heap) and heap[l] &lt; heap[i]:\n        smallest = l\n    if r &lt; len(heap) and heap[r] &lt; heap[smallest]:\n        smallest = r\n    if smallest != i:\n        heap[i], heap[smallest] = heap[smallest], heap[i]\n        heapify(heap, smallest)\n\n# O(n)\u5efa\u5806\u65b9\u5f0f\uff0c\u4ece\u5012\u6570\u7b2c\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cbheapify Down\nfor i in range((len(heap) - 2) // 2, -1, -1):\n    heapify(heap, i)\n\nfor i in range(m):\n    print(heap[0], end=\" \")\n    heap[0] = heap[-1]\n    heap.pop()\n    heapify(heap, 0)\n</code></pre> <pre><code>def heapify_up(arr, idx):\n    while arr[idx] &lt; arr[(idx - 1) // 2]:  # \u7236\u8282\u70b9\u4e0b\u6807 (i - 1) // 2\n        arr[idx], arr[(idx - 1) // 2] = arr[(idx - 1) // 2], arr[idx]\n        idx = (idx - 1) // 2\n\n\ndef heapify_down(arr, idx):\n    # \u627e\u5230\u81ea\u5df1\u3001\u5de6\u5b69\u5b50\u3001\u53f3\u5b69\u5b50\u4e09\u8005\u7684\u6700\u5c0f\u503c\uff0c\u5373\u8981\u4ea4\u6362\u5230\u7684\u76ee\u6807\u4e0b\u6807\n    t = idx\n    left = 2 * idx + 1\n    right = 2 * idx + 2\n    if left &lt; len(arr) and arr[left] &lt; arr[t]:\n        t = left\n    if right &lt; len(arr) and arr[right] &lt; arr[t]:\n        t = right\n    if idx != t:\n        arr[idx], arr[t] = arr[t], arr[idx]\n        heapify_down(arr, t)\n\n\ndef heapify(arr):\n    # O(N)\u5efa\u5806\n    for i in range((len(arr) - 2) // 2, -1, -1):\n        heapify_down(arr, i)\n\n\ndef heappop(arr):\n    ans = arr[0]\n    arr[0] = arr[-1]\n    arr.pop()\n    heapify_down(arr, 0)\n    return ans\n\n\ndef heappush(arr, num):\n    arr.append(num)\n    heapify_up(arr, len(arr) - 1)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_20","title":"\u5b57\u7b26\u4e32\u54c8\u5e0c","text":"<p>\u5b57\u7b26\u4e32\u54c8\u5e0c\u7b97\u6cd5\uff1aAcWing 841. \u5b57\u7b26\u4e32\u54c8\u5e0c \u3010\u516c\u5f0f\u52a9\u7406\u89e3\u3011</p> <p>\u5728 Java \u4e2d\uff0c\u5b57\u7b26\u4e32 s \u7684 <code>hashcode()</code> \u65b9\u6cd5\u7684\u5b9e\u73b0\u4e3a\uff1a</p> <p>\\(s[0]*31^{n - 1} + s[1]*31^{n - 2} + ... + s[n - 1]\\)</p> <p><code>s[0] ... s[n-1]</code>\u4ee3\u8868 s \u7684\u4e0b\u6807\u4e3a i \u5904\u7684\u5b57\u7b26\u7684 ASCII \u503c\uff0chashcode \u8ba1\u7b97\u65b9\u5f0f\u662f\u628a\u6574\u4e2a\u957f\u5ea6\u4e3a n \u7684\u5b57\u7b26\u4e32\u770b\u4f5c\u4e00\u4e2a\u4f4d\u6570\u4e3a n \u7684 31 \u8fdb\u5236\u6570\uff0chashcode \u5c31\u662f\u8fd9\u4e2a 31 \u8fdb\u5236\u6570\u4ee3\u8868\u7684 10 \u8fdb\u5236\u6570\u3002</p> <pre><code>import java.util.*;\n\nclass Main {\n    static int P = 31; // p\u662f\u8fdb\u5236\u6570\n    static long[] h; // \u8fd9\u662f\u5b58\u653ehash\u524d\u7f00\u503c\u7684\u6570\u7ec4\n    static long[] p; //\u8fd9\u662f\u5b58\u653ep\u7684n\u6b21\u65b9\u7684\u6570\u7ec4\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        String s = sc.next();\n        h = new long[n + 1];\n        p = new long[n + 1];\n        p[0] = 1; // p\u76840\u6b21\u65b9\n        for (int i = 1; i &lt;= n; i++) {\n            p[i] = p[i - 1] * P;\n            h[i] = h[i - 1] * P + s.charAt(i - 1);\n        }\n        for (int i = 0; i &lt; m; i++) {\n            int l1 = sc.nextInt();\n            int r1 = sc.nextInt();\n            int l2 = sc.nextInt();\n            int r2 = sc.nextInt();\n            if (hashcode(l1, r1) == hashcode(l2, r2)) System.out.println(\"Yes\");\n            else System.out.println(\"No\");\n        }\n    }\n\n    public static long hashcode(int l, int r) {\n        return h[r] - h[l - 1] * p[r - l + 1];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_21","title":"\u56de\u6eaf","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_22","title":"\u5b50\u96c6\u95ee\u9898","text":"<ul> <li>\u5143\u7d20\u65e0\u91cd\u4e0d\u53ef\u590d\u9009\uff1a78. \u5b50\u96c6</li> <li>\u5143\u7d20\u53ef\u91cd\u4e0d\u53ef\u590d\u9009\uff1a90. \u5b50\u96c6 II</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_23","title":"\u7ec4\u5408\u95ee\u9898","text":"<ul> <li>\u5143\u7d20\u65e0\u91cd\u4e0d\u53ef\u590d\u9009\uff1a77. \u7ec4\u5408\u3001216. \u7ec4\u5408\u603b\u548c III</li> <li>\u5143\u7d20\u53ef\u91cd\u4e0d\u53ef\u590d\u9009\uff1a40. \u7ec4\u5408\u603b\u548c II</li> <li>\u5143\u7d20\u65e0\u91cd\u53ef\u590d\u9009\uff1a39. \u7ec4\u5408\u603b\u548c</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_24","title":"\u6392\u5217\u95ee\u9898","text":"<ul> <li>\u5143\u7d20\u65e0\u91cd\u4e0d\u53ef\u590d\u9009\uff1a46. \u5168\u6392\u5217</li> <li>\u5143\u7d20\u53ef\u91cd\u4e0d\u53ef\u590d\u9009\uff1a47. \u5168\u6392\u5217 II</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_25","title":"\u5207\u5272\u95ee\u9898","text":"<ul> <li>131.\u5206\u5272\u56de\u6587\u4e32</li> <li>132.\u590d\u539f IP \u5730\u5740</li> <li>133.\u5355\u8bcd\u62c6\u5206 II</li> <li>\u5251\u6307 Offer 46. \u628a\u6570\u5b57\u7ffb\u8bd1\u6210\u5b57\u7b26\u4e32</li> </ul> <pre><code>s = \"apple\"\nn = len(s)\npath = []\nans = []\n\ndef backtrack(idx):\n    if idx == n:\n        ans.append(path[:])\n        return\n    for i in range(idx, n):\n        path.append(s[idx : i + 1])\n        backtrack(i + 1)\n        path.pop()\n\nbacktrack(0)\nans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_26","title":"\u641c\u7d22\u4e0e\u56fe\u8bba","text":"<p>\u7f51\u683c\u7c7b\u641c\u7d22\u6a21\u677f\u9898\uff1a200. \u5c9b\u5c7f\u6570\u91cf</p> <p>\u56fe\u8bba\u6a21\u677f\u9898\uff1a1971. \u5bfb\u627e\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u8def\u5f84</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#dfs","title":"DFS","text":"<p>\u6a21\u677f\u9898\uff1aDFS of Graph</p> <pre><code>class Solution {\n    ArrayList&lt;Integer&gt; ans;\n    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; adj;\n    boolean[] visited;\n\n    public ArrayList&lt;Integer&gt; dfsOfGraph(int V, ArrayList&lt;ArrayList&lt;Integer&gt;&gt; adj) {\n        ans = new ArrayList&lt;&gt;();\n        this.adj = adj;\n        visited = new boolean[V];\n        dfs(0);\n        return ans;\n    }\n\n    private void dfs(int s) {\n        visited[s] = true;\n        ans.add(s);\n        for (int t : adj.get(s)) {\n            if (!visited[t]){\n                dfs(t);\n            }\n        }\n    }\n}\n</code></pre> <p>\u4f8b\u9898\uff1a846. \u6811\u7684\u91cd\u5fc3</p> <p></p> <pre><code>from collections import defaultdict\n\nn = int(input())\ng = defaultdict(list)\n\nfor _ in range(n - 1):\n    a, b = map(int, input().split())\n    g[a].append(b)\n    g[b].append(a)\n\nvis = set()\nans = float(\"inf\")\n\n# \u8fd4\u56de\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u5305\u62ecu\u8282\u70b9\ndef dfs(u):\n    global ans\n    # \u5220\u6389\u67d0\u4e2a\u8282\u70b9\u4e4b\u540e\uff0c\u6700\u5927\u7684\u8fde\u901a\u5b50\u56fe\u8282\u70b9\u6570\n    res = 0\n    vis.add(u)\n    # \u4ee5u\u4e3a\u6839\u7684\u6811\u7684\u8282\u70b9\u6570, \u5305\u62ecu\n    count = 1\n\n    for v in g[u]:\n        if v in vis:\n            continue\n        s = dfs(v)\n        res = max(res, s)\n        count += s\n\n    res = max(res, n - count)\n    ans = min(res, ans)\n    return count\n\ndfs(1)\nprint(ans)\n</code></pre> <p>\u4f8b\u9898\uff1a200. \u5c9b\u5c7f\u6570\u91cf</p> <pre><code>class Solution {\n    int[] dx = new int[] {1, 0, -1, 0};\n    int[] dy = new int[] {0, -1, 0, 1};\n    boolean[][] visited;\n\n    public int numIslands(char[][] grid) {\n        int m = grid.length, n = grid[0].length;\n        visited = new boolean[m][n];\n        int ans = 0;\n        for (int i = 0; i &lt; m; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                if (grid[i][j] == '1' &amp;&amp; !visited[i][j]) {\n                    dfs(grid, i, j);\n                    ans++;\n                }\n            }\n        }\n        return ans;\n    }\n\n    private void dfs(char[][] grid, int x, int y) {\n        if (!inArea(grid, x, y)) return;\n        if (grid[x][y] != '1') return;\n        if (visited[x][y]) return;\n        visited[x][y] = true;\n        for (int i = 0; i &lt; 4; i++) {\n            int nx = x + dx[i];\n            int ny = y + dy[i];\n            dfs(grid, nx, ny);\n        }\n    }\n\n    private boolean inArea(char[][] grid, int x, int y) {\n        int m = grid.length, n = grid[0].length;\n        if (x &lt; 0 || x &gt;= m || y &lt; 0 || y &gt;= n) return false;\n        return true;\n    }\n}\n</code></pre> <p>\u4f8b\u9898\uff1aCycle In Graph</p> <p>\u7528<code>visited</code>\u8bb0\u5f55\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u8282\u70b9\uff0c\u7528<code>inStack</code>\u8bb0\u5f55\u5f53\u524d\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u8282\u70b9\u3002\u8bb0\u5f97\u56de\u6eaf\u3002</p> <pre><code>import java.util.*;\n\nclass Program {\n    boolean[] visited;\n    boolean[] inStack;\n\n    public boolean cycleInGraph(int[][] edges) {\n        int n = edges.length;\n        visited = new boolean[n];\n        inStack = new boolean[n];\n        for (int i = 0; i &lt; n; i++) {\n            if (dfs(edges, i)) return true;\n        }\n        return false;\n    }\n\n    public boolean dfs(int[][] edges, int node) {\n        visited[node] = true;\n        inStack[node] = true;\n        boolean hasCycle = false;\n        for (int u : edges[node]) {\n            if (!visited[u]) {\n                hasCycle = dfs(edges, u);\n            }\n            if (visited[u] &amp;&amp; inStack[u]) {\n                return true;\n            }\n        }\n        inStack[node] = false;\n        return false;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#bfs","title":"BFS","text":"<p>\u6a21\u677f\u9898\uff1aBFS of graph</p> <pre><code>class Solution {\n    public ArrayList&lt;Integer&gt; bfsOfGraph(int V, ArrayList&lt;ArrayList&lt;Integer&gt;&gt; adj) {\n        ArrayList&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n        boolean[] visited = new boolean[V];\n        Deque&lt;Integer&gt; q = new ArrayDeque&lt;&gt;();\n        q.offer(0);\n        visited[0] = true;\n        while (!q.isEmpty()) {\n            int t = q.poll();\n            ans.add(t);\n            for (int s : adj.get(t)) {\n                if (!visited[s]) {\n                    q.offer(s);\n                    visited[s] = true;\n                }\n            }\n        }\n        return ans;\n    }\n}\n</code></pre> <p>\u4f8b\u9898\uff1a847. \u56fe\u4e2d\u70b9\u7684\u5c42\u6b21</p> <pre><code>import java.util.*;\n\npublic class Main {\n    static List&lt;Integer&gt;[] edges; // \u51fa\u8fb9\u6570\u7ec4\n    static boolean[] used;\n    static int[] distance; // distance[i]\u8868\u793a\u4ecebfs\u7684\u8d77\u70b9\u5230i\u7684\u8ddd\u79bb\uff0c\u672c\u9898\u5373bfs(1)\u8fd4\u56dedistance[n]\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        used = new boolean[n + 1];\n        distance = new int[n + 1];\n        Arrays.fill(distance, -1); // distance[]\u521d\u59cb\u5316\u4e3a\u4e0d\u53ef\u8fbe\n        edges = new List[n + 1];\n        for (int i = 0; i &lt;= n; i++) {\n            edges[i] = new ArrayList&lt;&gt;();\n        }\n        for (int i = 0; i &lt; m; i++) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            edges[a].add(b);\n        }\n        bfs(1);\n        System.out.println(distance[n]);\n    }\n\n    // \u4ece\u70b9u\u51fa\u53d1\u7684bfs\n    public static void bfs(int u) {\n        Queue&lt;Integer&gt; q = new ArrayDeque&lt;&gt;();\n        q.offer(u);\n        used[u] = true;\n        distance[u] = 0; // \u8d77\u70b9\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4e3a0\n        int d = 1;\n        while (!q.isEmpty()) {\n            int size = q.size();\n            for (int i = 0; i &lt; size; i++) {\n                u = q.poll();\n                for (int v : edges[u]) {\n                    if (!used[v]) {\n                        q.offer(v);\n                        used[v] = true;\n                        distance[v] = d;\n                    }\n                }\n            }\n            d++;\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_27","title":"\u62d3\u6251\u6392\u5e8f","text":"<p>\u4f8b\u9898\uff1a</p> <ul> <li>848. \u6709\u5411\u56fe\u7684\u62d3\u6251\u5e8f\u5217</li> <li>207. \u8bfe\u7a0b\u8868</li> </ul> <p>\u62d3\u6251\u6392\u5e8f\uff08Topological Sorting\uff09\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u7684\u6240\u6709\u9876\u70b9\u7684\u7ebf\u6027\u5e8f\u5217\u3002\u62d3\u6251\u5e8f\u5217\u662f\u4e00\u6761\u6ee1\u8db3\u56fe\u4e2d\u6709\u5411\u8fb9\u524d\u540e\u5173\u7cfb\u7684\u5e8f\u5217\uff0c\u4efb\u4e00\u6709\u5411\u8fb9\u8d77\u70b9\u5728\u5e8f\u5217\u4e2d\u4e00\u5b9a\u65e9\u4e8e\u7ec8\u70b9\u51fa\u73b0\u3002\u5982\u679c\u56fe\u4e2d\u6709\u73af\uff0c\u5219\u65e0\u6cd5\u63d0\u53d6\u51fa\u62d3\u6251\u5e8f\u5217\u3002\u6240\u4ee5\u62d3\u6251\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u5728\u7ed9\u5b9a\u7684\u6709\u5411\u56fe\u4e2d\u5224\u5b9a\u662f\u5426\u5b58\u5728\u73af\u8def\u3002</p> <p>\u4e00\u4e2a DAG\uff0c\u4e00\u5b9a\u81f3\u5c11\u6709\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u70b9\uff0c\u62d3\u6251\u6392\u5e8f\u4ece\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u5f00\u59cb\uff0c\u5404\u4e2a\u51fb\u7834\u3002</p> <p>\u62d3\u6251\u6392\u5e8f\u95ee\u9898\uff1a\u5e38\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u56fe\u662f\u5426\u662f\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09</p> <ol> <li>\u6839\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c\u6784\u5efa\u90bb\u63a5\u8868\u3001\u5165\u5ea6\u6570\u7ec4\u3002</li> <li>\u9009\u53d6\u5165\u5ea6\u4e3a 0 \u7684\u6570\u636e\uff0c\u6839\u636e\u90bb\u63a5\u8868\uff0c\u51cf\u5c0f\u4f9d\u8d56\u5b83\u7684\u6570\u636e\u7684\u5165\u5ea6\u3002</li> <li>\u627e\u51fa\u5165\u5ea6\u53d8\u4e3a 0 \u7684\u6570\u636e\uff0c\u91cd\u590d\u7b2c 2 \u6b65\u3002</li> <li>\u76f4\u81f3\u6240\u6709\u6570\u636e\u7684\u5165\u5ea6\u4e3a 0\uff0c\u5f97\u5230\u6392\u5e8f\uff0c\u5982\u679c\u8fd8\u6709\u6570\u636e\u7684\u5165\u5ea6\u4e0d\u4e3a 0\uff0c\u8bf4\u660e\u56fe\u4e2d\u5b58\u5728\u73af\u3002</li> </ol> <p>\u4e3a\u4ec0\u4e48\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u7528\u6765\u5224\u73af\uff1f\u56e0\u4e3a\u5982\u679c\u6709\u73af\uff0c\u90a3\u4e48\u73af\u4e0a\u7684\u70b9\u7684\u5165\u5ea6\u90fd\u4e0d\u4e3a 0\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u62ff\u8fd9\u4e2a\u73af\u65e0\u4ece\u4e0b\u624b\u3002</p> <pre><code>class Solution {\n    public boolean canFinish(int numCourses, int[][] prerequisites) {\n        int n = numCourses;\n        // \u5165\u5ea6\u6570\u7ec4\n        int[] inDegree = new int[n];\n        // \u90bb\u63a5\u8868\u5efa\u56fe\n        List&lt;Integer&gt;[] edges = new List[n];\n        for (int i = 0; i &lt; n; i++) {\n            edges[i] = new ArrayList&lt;&gt;();\n        }\n        for (int[] edge : prerequisites) {\n            int to = edge[0];\n            int from = edge[1];\n            inDegree[to]++;\n            edges[from].add(to);\n        }\n        // BFS\n        Queue&lt;Integer&gt; q = new ArrayDeque&lt;&gt;();\n        // \u52a0\u5165\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\n        for (int i = 0; i &lt; n; i++) {\n            if (inDegree[i] == 0) q.offer(i);\n        }\n        while (!q.isEmpty()) {\n            int t = q.poll();\n            for (int i : edges[t]) {\n                inDegree[i]--;\n                if (inDegree[i] == 0) q.offer(i);\n            }\n        }\n        // \u68c0\u67e5\u662f\u5426\u8fd8\u6709\u5165\u5ea6\u4e0d\u4e3a0\u7684\u8282\u70b9\n        for (int x : inDegree) {\n            if (x != 0) return false;\n        }\n        return true;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#dijkstra","title":"Dijkstra \u7b97\u6cd5","text":"<p>\u4f8b\u9898\uff1a</p> <ul> <li>743. \u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4\uff08\u591a\u79cd\u7b97\u6cd5\u901a\u7528\uff09</li> <li>849. Dijkstra \u6c42\u6700\u77ed\u8def I</li> <li>850. Dijkstra \u6c42\u6700\u77ed\u8def II</li> <li>1514. \u6982\u7387\u6700\u5927\u7684\u8def\u5f84</li> <li>1334. \u9608\u503c\u8ddd\u79bb\u5185\u90bb\u5c45\u6700\u5c11\u7684\u57ce\u5e02\uff08\u591a\u79cd\u7b97\u6cd5\u901a\u7528\uff0cFloyd \u6bd4\u8f83\u7b80\u5355\uff09</li> </ul> <p> </p> <p>\u203b Dijkstra \u7b97\u6cd5\u56fe\u89e3</p> <p>Dijkstra \u7b97\u6cd5\u9002\u7528\u4e8e\u6240\u6709\u8fb9\u6743\u90fd\u662f\u6b63\u6570\u7684\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a<code>O(n^2)</code></p> <p>Dijkstra \u6c42\u6700\u77ed\u8def\u7684\u601d\u8def\u5982\u4e0b\uff1a</p> <p>\u5982\u679c\u6211\u4eec\u8981\u6c42\u8282\u70b9 1 \u5230\u8282\u70b9 n \u7684\u5355\u6e90\u6700\u77ed\u8def\uff0c</p> <ul> <li>\u7528\u90bb\u63a5\u77e9\u9635\u5efa\u56fe\uff08\u6ce8\u610f\u5728\u904d\u5386\u8bb0\u5f55\u8fb9\u4e4b\u524d\u8981\u5148\u628a\u77e9\u9635\u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77\uff09</li> <li>\u65b0\u5efa\u4e00\u4e2a visited \u96c6\u5408\uff0c\u7528\u4e8e\u4fdd\u5b58\u786e\u5b9a\u4e86\u548c 1 \u53f7\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u7684\u70b9</li> <li>\u65b0\u5efa dist \u6570\u7ec4\uff0c\u7528\u4e8e\u8bb0\u5f55\u5404\u4e2a\u8282\u70b9\u4e0e 1 \u53f7\u8282\u70b9\u7684\u8ddd\u79bb\uff08\u9664 1 \u53f7\u70b9\u4e4b\u5916\u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77\uff09</li> <li>\u5faa\u73af n-1 \u6b21\uff0c\u5c06 n-1 \u4e2a\u70b9\u52a0\u5165\u5230 s \u96c6\u5408\u4e2d</li> <li>\u627e\u5230\u5f53\u524d\u8ddd\u79bb 1 \u53f7\u8282\u70b9\u6700\u8fd1\u7684\u8282\u70b9</li> <li>\u5c06\u8fd9\u4e2a\u8282\u70b9\u52a0\u5165 visited \u96c6\u5408\u4e2d</li> <li>\u7531\u8fd9\u4e2a\u70b9\u66f4\u65b0\u5176\u5b83\u8282\u70b9\u5230 1 \u53f7\u8282\u70b9\u7684\u8ddd\u79bb</li> </ul> <p>\u4f8b\u9898\uff1a849. Dijkstra \u6c42\u6700\u77ed\u8def I</p> <pre><code>import java.util.*;\n\nclass Main {\n    static int INF = Integer.MAX_VALUE / 2;\n    static int n;\n    static int m;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        m = sc.nextInt();\n        // \u7a20\u5bc6\u56fe\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\n        int[][] g = new int [n + 1][n + 1];\n        // \u521d\u59cb\u5316\u8ddd\u79bb\u4e3a\u6b63\u65e0\u7a77\n        for (int i = 1; i &lt;= n; i++) Arrays.fill(g[i], INF);\n        while (m-- &gt; 0) {\n            int x = sc.nextInt();\n            int y = sc.nextInt();\n            int z = sc.nextInt();\n            g[x][y] = Math.min(g[x][y], z);\n        }\n        System.out.println(dijkstra(g));\n    }\n\n    public static int dijkstra(int[][] g) {\n        int[] dist = new int[n + 1];\n        // \u76f8\u5f53\u4e8es\u96c6\u5408\uff0c\u786e\u5b9a\u4e86\u548c1\u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u7684\u70b9\u52a0\u5165\u5230s\u96c6\u5408\u4e2d\n        boolean[] st = new boolean[n + 1];\n        Arrays.fill(dist, INF);\n        dist[1] = 0;\n        // \u5faa\u73afn-1\u6b21\uff0c\u5c06\u96641\u8282\u70b9\u5916\u7684n-1\u4e2a\u70b9\u52a0\u5165s\u96c6\u5408\u4e2d\n        for (int i = 0; i &lt; n - 1; i++) {\n            // \u627e\u5230\u5f53\u524d\u8ddd\u79bb1\u53f7\u70b9\u6700\u8fd1\u7684\u70b9\n            int t = -1;\n            for (int j = 1; j &lt;= n; j++) {\n                if (st[j]) continue;\n                if (t == -1 || dist[j] &lt; dist[t]) {\n                    t = j;\n                }\n            }\n            st[t] = true;\n            //\u66f4\u65b0\u5176\u4ed6\u8282\u70b9\u52301\u53f7\u70b9\u7684\u8ddd\u79bb\n            for (int j = 1; j &lt;= n; j++) {\n                dist[j] = Math.min(dist[j], dist[t] + g[t][j]);\n            }\n        }\n        if (dist[n] == INF) return -1;\n        return dist[n];\n    }\n}\n</code></pre> <pre><code>n, m = map(int, input().split())\ninf = float('inf')\ng = [[inf] * (n + 1) for _ in range(n + 1)]\nfor _ in range(m):\n    x, y, z = map(int, input().split())\n    g[x][y] = min(g[x][y], z)\ndist = [inf] * (n + 1)\ndist[1] = 0\nstate = [False] * (n + 1)\n\ndef dijkstra():\n    for _ in range(n):\n        x = -1\n        for y in range(1, n + 1):\n            if (state[y] == False) and (x == -1 or dist[y] &lt; dist[x]):\n                x = y\n        state[x] = True\n        for y, d in enumerate(g[x]):\n            if d == inf: continue\n            dist[y] = min(dist[y], dist[x] + d)\n    if dist[n] == inf:\n        return -1\n    else:\n        return dist[n]\n\nprint(dijkstra())\n</code></pre> <p>\u5806\u4f18\u5316\u7248\uff1a</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a<code>O(mlogn)</code></p> <p>\u4f8b\u9898\uff1a850. Dijkstra \u6c42\u6700\u77ed\u8def II</p> <pre><code>import java.util.*;\n\nclass Main {\n    static int INF = Integer.MAX_VALUE / 2;\n    static int n;\n    static int m;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        m = sc.nextInt();\n        // \u7a00\u758f\u56fe\u7528\u90bb\u63a5\u8868\u5b58\u56fe\n        List&lt;int[]&gt;[] edges = new ArrayList[n + 1];\n        for (int i = 0; i &lt;= n; i++) {\n            edges[i] = new ArrayList&lt;&gt;();\n        }\n        while (m-- &gt; 0) {\n            int x = sc.nextInt();\n            int y = sc.nextInt();\n            int z = sc.nextInt();\n            edges[x].add(new int[] {y, z});\n        }\n        System.out.println(dijkstra(edges));\n    }\n\n    public static int dijkstra(List&lt;int[]&gt;[] edges) {\n        PriorityQueue&lt;int[]&gt; pq = new PriorityQueue&lt;&gt;((a, b) -&gt; a[1] - b[1]);\n        int[] dist = new int[n + 1];\n        // \u76f8\u5f53\u4e8es\u96c6\u5408\uff0c\u786e\u5b9a\u4e86\u548c1\u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u7684\u70b9\u52a0\u5165\u5230s\u96c6\u5408\u4e2d\n        boolean[] st = new boolean[n + 1];\n        Arrays.fill(dist, INF);\n        pq.offer(new int[] {1, 0});\n        dist[1] = 0;\n        while (!pq.isEmpty()) {\n            int[] cur = pq.poll();\n            int ver = cur[0];\n            int distance = cur[1];\n            if (st[ver]) continue;\n            st[ver] = true;\n            for (int[] v : edges[ver]) {\n                dist[v[0]] = Math.min(dist[v[0]], distance + v[1]);\n                pq.offer(new int[] {v[0], dist[v[0]]});\n            }\n        }\n        if (dist[n] == INF) return -1;\n        return dist[n];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#bellman-ford","title":"Bellman-Ford \u7b97\u6cd5","text":"<p>Bellman-Ford \u7b97\u6cd5\u4e2d\u53ef\u4ee5\u5b58\u5728\u8d1f\u6743\u8fb9\uff0c\u4f46\u662f\u4e0d\u80fd\u5b58\u5728\u8d1f\u73af\u3002Bellman-Ford \u5e38\u7528\u5728\u6c42\u5e26\u8fb9\u6570\u9650\u5236\u7684\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\u3002\u597d\u5904\u662f\u904d\u5386\u8fb9\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u50cf Dijkstra \u90a3\u6837\u81ea\u5df1\u5efa\u56fe\u3002\u6ce8\u610f\u70b9\u662f\u8981\u6bcf\u4e00\u8f6e\u66f4\u65b0\u8981\u4f7f\u7528\u4e0a\u4e00\u8f6e\u5907\u4efd\u7684 dist \u6570\u7ec4\uff0c\u9632\u6b62\u6570\u636e\u4e32\u8054\u3002</p> <p></p> <p>\u4f8b\u9898\uff1a</p> <ul> <li>853. \u6709\u8fb9\u6570\u9650\u5236\u7684\u6700\u77ed\u8def</li> <li>743. \u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4</li> <li>787. K \u7ad9\u4e2d\u8f6c\u5185\u6700\u4fbf\u5b9c\u7684\u822a\u73ed\uff08\u5e26\u9650\u5236\u7684\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\uff09</li> <li>1928. \u89c4\u5b9a\u65f6\u95f4\u5185\u5230\u8fbe\u7ec8\u70b9\u7684\u6700\u5c0f\u82b1\u8d39</li> </ul> <pre><code># \u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\uff1aBellman-Ford\u7b97\u6cd5\nclass Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -&gt; int:\n        dist = [inf] * (n + 1)\n        dist[k] = 0\n        # n\u4e2a\u70b9\u4e2d\u4e00\u6761\u8def\u5f84\u6700\u591a n-1 \u6761\u8fb9\n        # \u5faa\u73af n-1 \u8f6e\n        for _ in range(n - 1):\n            backup = dist.copy()\n            for x, y, z in times:\n                dist[y] = min(dist[y], backup[x] + z)\n        ans = max(dist[1:])\n        if ans == inf:\n            return -1\n        return ans\n</code></pre> <p>\u603b\u7ed3\uff1aDijkstra \u7b97\u6cd5\u9700\u8981\u81ea\u5df1\u5efa\u56fe\uff0c\u800c Bellman-Ford \u7b97\u6cd5\u4e0d\u9700\u8981\u81ea\u5df1\u5efa\u56fe\uff1bDijkstra \u7b97\u6cd5\u9700\u8981\u904d\u5386\u70b9\uff0c\u800c Bellman-Ford \u7b97\u6cd5\u9700\u8981\u904d\u5386\u8fb9\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#floyd-warshall","title":"Floyd-Warshall \u7b97\u6cd5","text":"<p>\u4f8b\u9898\uff1a</p> <ul> <li>854. Floyd \u6c42\u6700\u77ed\u8def</li> <li>743. \u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4</li> <li>1334. \u9608\u503c\u8ddd\u79bb\u5185\u90bb\u5c45\u6700\u5c11\u7684\u57ce\u5e02\uff08\u591a\u79cd\u7b97\u6cd5\u901a\u7528\uff09</li> <li>399. \u9664\u6cd5\u6c42\u503c</li> </ul> <p>\u662f\u89e3\u51b3\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u5f84\u7684\u4e00\u79cd\u7b97\u6cd5\uff0c\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u6709\u5411\u56fe\u6216\u8d1f\u6743\uff08\u4f46\u4e0d\u53ef\u5b58\u5728\u8d1f\u6743\u56de\u8def\uff09\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(n^3)</code>\u3002</p> <p>Floyd-Warshall \u7b97\u6cd5\u7684\u539f\u7406\u662f\u52a8\u6001\u89c4\u5212\u3002 \\(\u8bbe D_{k,i,j}\u4e3a\u4ecei\u5230j\u7684\u53ea\u4ee5(1...k)\u96c6\u5408\u4e2d\u7684\u8282\u70b9\u4e3a\u4e2d\u95f4\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\\) \\(1.\u82e5\u6700\u77ed\u8def\u5f84\u7ecf\u8fc7\u70b9k\uff0c\u5219D_{k,i,j} = D_{k-1,i,k} + D_{k-1,k,j}\\) \\(2.\u82e5\u6700\u77ed\u8def\u5f84\u4e0d\u7ecf\u8fc7\u70b9k\uff0c\u5219D_{k,i,j} = D_{k-1,i,j}\\) \\(\u56e0\u6b64D_{k,i,j} = min(D_{k-1,i,j}, D_{k-1,i,k} + D_{k-1,k,j})\\)</p> <pre><code>g = new int[n + 1][n + 1];\n\nfor (int i = 1; i &lt;= n; i++) {\n    for (int j = 1; j &lt;= n; j++) {\n        if (i == j) g[i][j] = 0;\n        else g[i][j] = INF;\n    }\n}\n\npublic static void floyd() {\n    for (int k = 1; k &lt;= n; k++) {\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= n; j++) {\n                g[i][j] = Math.min(g[i][j], g[i][k] + g[k][j]);\n            }\n        }\n    }\n}\n</code></pre> <p>\u4f8b\u9898\uff1a854. Floyd \u6c42\u6700\u77ed\u8def</p> <pre><code>n, m, k = map(int, input().split())\ninf = float('inf')\ng = [[inf] * (n + 1) for _ in range(n + 1)]\n\n# \u6ce8\u610f\u521d\u59cb\u5316g[i][i] = 0 !!!\nfor i in range(1, n + 1):\n    g[i][i] = 0\n\nfor _ in range(m):\n    x, y, z = map(int, input().split())\n    g[x][y] = min(g[x][y], z)\n\ndef floyd():\n    for k in range(1, n + 1):\n        for i in range(1, n + 1):\n            for j in range(1, n + 1):\n                g[i][j] = min(g[i][j], g[i][k] + g[k][j])\n\nfloyd()\nfor _ in range(k):\n    x, y = map(int, input().split())\n    if g[x][y] == inf:\n        print('impossible')\n    else:\n        print(g[x][y])\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#kruskal","title":"Kruskal \u7b97\u6cd5","text":"<p>\u6700\u5c0f\u751f\u6210\u6811\uff08MST\uff09\u95ee\u9898\u7684\u80cc\u666f\uff1a\u6709 n \u4e2a\u57ce\u5e02\uff0c\u5982\u679c\u8981\u5728\u57ce\u5e02\u95f4\u94fa\u8bbe\u516c\u8def\uff0c\u4f7f\u5f97\u6240\u6709\u57ce\u5e02\u80fd\u591f\u76f8\u4e92\u8fde\u901a\uff0c\u6c42\u6700\u5c0f\u7684\u516c\u8def\u7684\u82b1\u8d39\u3002</p> <p>  \u4f8b\u9898\uff1a</p> <ul> <li>1584. \u8fde\u63a5\u6240\u6709\u70b9\u7684\u6700\u5c0f\u8d39\u7528</li> </ul> <pre><code>class UnionFind:\n    def __init__(self, n):\n        self.parent = list(range(n))\n        self.n = n\n\n    def find(self, x):\n        if self.parent[x] != x:\n            self.parent[x] = self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        if x != y:\n            self.parent[x] = y\n\n    def is_connected(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n        return x == y\n\nclass Solution:\n    def minCostConnectPoints(self, points: List[List[int]]) -&gt; int:\n        n = len(points)\n\n        def get_dist(x, y):\n            return abs(points[x][0] - points[y][0]) + abs(points[x][1] - points[y][1])\n\n        uf = UnionFind(n)\n        edges = []\n        for i in range(n):\n            for j in range(i + 1, n):\n                edges.append((get_dist(i, j), i, j))\n\n        edges.sort()\n\n        ans = 0\n        count = 1\n        for z, x, y in edges:\n            if uf.is_connected(x, y):\n                continue\n            uf.union(x, y)\n            ans += z\n            count += 1\n            if count == n:\n                break\n\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_28","title":"\u56fe\u8bba\u7b97\u6cd5\u5e94\u7528","text":"<p>\u65e0\u5411\u56fe\u5224\u73af\uff1a</p> <ul> <li>684. \u5197\u4f59\u8fde\u63a5\uff08\u5e76\u67e5\u96c6\u3001\u62d3\u6251\u6392\u5e8f\u3001DFS\u3001BFS\uff09\u9898\u89e3</li> </ul> <p>\u6709\u5411\u56fe\u5224\u73af\uff1a</p> <ul> <li>207. \u8bfe\u7a0b\u8868</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_29","title":"\u6570\u5b66\u77e5\u8bc6","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_30","title":"\u8d28\u6570","text":"<pre><code>private int GCD(int a, int b) {\n    if (b == 0) return a;\n    return GCD(b, a % b);\n}\n</code></pre> <p>\u4f8b\u9898\uff1a866. \u8bd5\u9664\u6cd5\u5224\u5b9a\u8d28\u6570</p> <pre><code>public static boolean isPrime(int n) {\n    if (n &lt; 2) return false;\n    for (int i = 2; i &lt;= n / i; i++) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}\n</code></pre> <p>\u4f8b\u9898\uff1a867. \u5206\u89e3\u8d28\u56e0\u6570</p> <p>\u7ed9\u5b9a n \u4e2a\u6b63\u6574\u6570\uff0c\u5c06\u6bcf\u4e2a\u6570\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5e76\u6309\u7167\u8d28\u56e0\u6570\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8f93\u51fa\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u5e95\u6570\u548c\u6307\u6570\u3002</p> <pre><code>import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        while (n-- &gt; 0) {\n            int x = sc.nextInt();\n            factorization(x);\n        }\n    }\n\n    public static void factorization(int n) {\n        for (int i = 2; i &lt;= n / i; i++) {\n            int count = 0;\n            while (n % i == 0) {\n                n /= i;\n                count++;\n            }\n            if (count &gt; 0) System.out.printf(\"%d %d\\n\", i, count);\n        }\n        if (n &gt; 1) System.out.printf(\"%d %d\\n\", n, 1);\n        System.out.println();\n    }\n}\n</code></pre> <pre><code>def prime_factors(n):\n    i = 2\n    factors = []\n    while i * i &lt;= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n &gt; 1:\n        factors.append(n)\n    return factors\n</code></pre> <p>\u57c3\u6c0f\u7b5b\uff1a \u4f8b\u9898\uff1a204. \u8ba1\u6570\u8d28\u6570</p> <p>\u7ed9\u5b9a\u6574\u6570 n \uff0c\u8fd4\u56de \u6240\u6709\u5c0f\u4e8e\u975e\u8d1f\u6574\u6570 n \u7684\u8d28\u6570\u7684\u6570\u91cf</p> <pre><code>class Solution {\n    public int countPrimes(int n) {\n        boolean[] isPrime = new boolean[n + 1];\n        Arrays.fill(isPrime, true);\n        int ans = 0;\n        for (int i = 2; i &lt;= n / i; i++) {\n            // \u7531\u4e8e\u6240\u6709\u7684\u5408\u6570\u90fd\u662f\u8d28\u6570\u7684\u500d\u6570\uff0c\u56e0\u6b64\u53ea\u8981\u7b5b\u8d28\u6570\u7684\u500d\u6570\u5373\u53ef\n            if (isPrime[i]) {\n                for (int j = i + i; j &lt; n; j += i) {\n                    isPrime[j] = false;\n                }\n            }\n        }\n        for (int i = 2; i &lt; n; i++) {\n            if (isPrime[i]) ans++;\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_31","title":"\u7ea6\u6570","text":"<p>\u4f8b\u9898\uff1a869. \u8bd5\u9664\u6cd5\u6c42\u7ea6\u6570</p> <pre><code>import java.util.*;\n\nclass Main {\n    static List&lt;Integer&gt; ans;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        ans = new ArrayList&lt;&gt;();\n        while (n-- &gt; 0) {\n            int x = sc.nextInt();\n            ans.clear();\n            getDivisors(x);\n            Collections.sort(ans);\n            for (int i : ans) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void getDivisors(int n) {\n        for (int i = 1; i &lt;= n / i; i++) {\n            if (n % i == 0) {\n                ans.add(i);\n                if (i != n / i) ans.add(n / i);\n            }\n        }\n    }\n}\n</code></pre> <p>\u4f8b\u9898\uff1a870. \u7ea6\u6570\u4e2a\u6570</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5927\u4e8e 1 \u7684\u6b63\u6574\u6570 n\uff0c\u53ef\u4ee5\u5206\u89e3\u8d28\u56e0\u6570\uff1a</p> <p>\\(n=\\prod_{i=1}^k p_i^{a_i}=p_1^{a_1} \\cdot p_2^{a_2} \\cdots p_k^{a_k}\\)</p> <p>\u5219 n \u7684\u6b63\u7ea6\u6570\u7684\u4e2a\u6570\u5c31\u662f\uff1a</p> <p>\\(f(n)=\\prod_{i=1}^k\\left(a_i+1\\right)=\\left(a_1+1\\right)\\left(a_2+1\\right) \\cdots\\left(a_k+1\\right)\\)</p> <pre><code>import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        Map&lt;Integer, Integer&gt; primes = new HashMap&lt;&gt;();\n        while (n-- &gt; 0) {\n            int x = sc.nextInt();\n            for (int i = 2; i &lt;= x / i; i++) {\n                while (x % i == 0) {\n                    x /= i;\n                    primes.put(i, primes.getOrDefault(i, 0) + 1);\n                }\n            }\n            if (x &gt; 1) {\n                primes.put(x, primes.getOrDefault(x, 0) + 1);\n            }\n        }\n        long ans = 1;\n        for (int prime : primes.values()) {\n            ans = ans * (prime + 1) % ((int)1e9 + 7);\n        }\n        System.out.println(ans);\n    }\n}\n</code></pre> <p>\u6700\u5927\u516c\u7ea6\u6570 &amp; \u6700\u5c0f\u516c\u500d\u6570</p> <pre><code>private int gcd(int a, int b) {\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\n\nprivate int lcm(int a, int b) {\n    return a * b / gcd(a, b);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_32","title":"\u540c\u4f59\u5b9a\u7406","text":"<p>\u4e24\u4e2a\u6570 x \u548c y\uff0c\u5982\u679c (x\u2212y) \u200amod\u200a p = 0\uff0c\u5219\u79f0 x \u4e0e y \u5bf9\u6a21 p \u540c\u4f59\uff0c\u90a3\u4e48\uff1a</p> <p>\\(x \\mod\\ p = y \\mod\\ p\\)</p> <p>\u8d1f\u6570\u53d6\u6a21\uff1a\u5982\u679c x &lt; 0\uff0cy &gt;= 0</p> <p>\\(x \\mod p + p = y \\mod p\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_33","title":"\u5feb\u901f\u5e42","text":"<p>\u4f8b\u9898\uff1a</p> <ul> <li>372. \u8d85\u7ea7\u6b21\u65b9</li> <li>50. Pow(x, n)</li> </ul> <p>875. \u5feb\u901f\u5e42</p> <pre><code>n = int(input())\n\ndef quick_multiply(a, b, p):\n    if b == 1:\n        return a % p\n    if b % 2 == 0:\n        t = quick_multiply(a, b // 2, p)\n        return t * t % p\n    else:\n        t = quick_multiply(a, b // 2, p)\n        return t * t * a % p\n\nfor _ in range(n):\n    a, b, p = map(int, input().split())\n    print(quick_multiply(a, b, p))\n</code></pre> <pre><code>n = int(input())\n\ndef quick_multiply(a, k, p):\n    ans = 1\n    while k:\n        if k &amp; 1:\n            ans = ans * a % p\n        a = a * a % p\n        k &gt;&gt;= 1\n    return ans\n\n\nfor _ in range(n):\n    a, k, p = map(int, input().split())\n    print(quick_multiply(a, k, p))\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_34","title":"\u535a\u5f08\u8bba","text":"<p>\u4f8b\u9898\uff1a</p> <ul> <li>292. Nim \u6e38\u620f</li> <li>877. \u77f3\u5b50\u6e38\u620f</li> <li>319. \u706f\u6ce1\u5f00\u5173</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_35","title":"\u8d2a\u5fc3","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_36","title":"\u533a\u95f4\u9009\u70b9","text":"<p>905. \u533a\u95f4\u9009\u70b9</p> <ul> <li>\u5c06\u6bcf\u4e2a\u533a\u95f4\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</li> <li>\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u5f53\u524d\u533a\u95f4\u5df2\u7ecf\u5305\u542b\u8be5\u70b9\uff0c\u5219\u76f4\u63a5 pass\uff0c\u5426\u5219\uff0c\u9009\u62e9\u5f53\u524d\u533a\u95f4\u7684\u53f3\u7aef\u70b9</li> </ul> <pre><code>n = int(input())\nintervals = []\nfor _ in range(n):\n    l, r = map(int, input().split())\n    intervals.append((l, r))\n\nintervals.sort(key=lambda x: x[1])\nans = 0\npre = -float('inf')\n\nfor l, r in intervals:\n    if l &gt; pre:\n        ans += 1\n        pre = r\n\nprint(ans)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_37","title":"\u65e0\u91cd\u53e0\u533a\u95f4","text":"<p>908. \u6700\u5927\u4e0d\u76f8\u4ea4\u533a\u95f4\u6570\u91cf</p> <p>\u53ef\u4ee5\u6309\u524d\u4e00\u9898\u7684\u65b9\u5f0f\u5c06\u6240\u6709\u533a\u95f4\u5206\u4e3a\u51e0\u4e2a\u96c6\u5408\uff0c\u6bcf\u4e2a\u96c6\u5408\u4e2d\u5404\u4e2a\u533a\u95f4\u90fd\u81f3\u5c11\u6709\u4e00\u70b9\u76f8\u4ea4\u3002\u82e5\u8981\u9009\u53d6\u4e0d\u76f8\u4ea4\u4e24\u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u4e24\u4e2a\u533a\u95f4\u5fc5\u5b9a\u5904\u4e8e\u4e0d\u540c\u7684\u96c6\u5408\u4e2d\uff0c\u800c\u6700\u5927\u7684\u4e0d\u76f8\u4ea4\u533a\u95f4\u6570\u91cf\u4fbf\u662f\u603b\u96c6\u5408\u6570\uff0c\u4e5f\u5c31\u662f\u533a\u95f4\u9009\u70b9\u7684\u6570\u91cf\u3002\u6240\u4ee5\u4e24\u9898\u4ee3\u7801\u76f8\u540c\u3002</p> <pre><code>n = int(input())\nintervals = []\nfor _ in range(n):\n    l, r = map(int, input().split())\n    intervals.append((l, r))\n\nintervals.sort(key=lambda x: x[1])\nans = 0\npre = -float('inf')\n\nfor l, r in intervals:\n    if l &gt; pre:\n        ans += 1\n        pre = r\n\nprint(ans)\n</code></pre> <p>\u2b50 435. \u65e0\u91cd\u53e0\u533a\u95f4</p> <p>\u4e3a\u4ec0\u4e48\u8981\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff1f\u56e0\u4e3a\u65e0\u91cd\u53e0\u533a\u95f4\u95ee\u9898\u672c\u8d28\u662f\u4e00\u4e2a\u4f1a\u8bae\u95ee\u9898\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f\u80fd\u591f\u627e\u5230\u6700\u65e9\u7ed3\u675f\u7684\u4f1a\u8bae\uff0c\u4e5f\u5c31\u80fd\u7ed9\u540e\u9762\u9884\u7559\u66f4\u591a\u7684\u65f6\u95f4\u3002\u800c\u5982\u679c\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u5219\u53ea\u80fd\u627e\u5230\u6700\u65e9\u5f00\u59cb\u7684\u4f1a\u8bae\uff0c\u800c\u4e0d\u4e00\u5b9a\u662f\u6700\u65e9\u7ed3\u675f\u7684\u3002\u4f8b\uff1a</p> <pre><code>|_________|                  \u533a\u95f4a\n  |___|                      \u533a\u95f4b\n       |__|                  \u533a\u95f4c\n            |______|         \u533a\u95f4d\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff1a\u4e3a\u4e86\u627e\u5230\u6700\u591a\u7684\u4e0d\u91cd\u53e0\u533a\u95f4\uff0c\u6211\u4eec\u4e0d\u5728\u610f\u533a\u95f4\u7684\u8d77\u70b9\uff0c\u800c\u53ea\u5728\u610f\u7ec8\u70b9\u8d8a\u5c0f\u8d8a\u597d\uff08\u4f1a\u8bae\u7ed3\u675f\u8d8a\u65e9\u8d8a\u597d\uff09\u3002</p> <pre><code>// \u8d2a\u5fc3\u533a\u95f4\u95ee\u9898\u6a21\u677f\u9898\uff1a\u6c42\u4e0d\u76f8\u4ea4\u533a\u95f4\u6700\u5927\u6570\u91cf -&gt; \u9009\u51fa\u6700\u591a\u6570\u91cf\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u5b83\u4eec\u4e92\u4e0d\u91cd\u53e0\n// \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)\nclass Solution {\n    public int eraseOverlapIntervals(int[][] intervals) {\n        // \u91cd\u70b9\uff1a\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\n        Arrays.sort(intervals, (a, b) -&gt; a[1] - b[1]);\n        int count = 0;\n        int right = Integer.MIN_VALUE;\n        for (int i = 0; i &lt; intervals.length; i++) {\n            if (intervals[i][0] &gt;= right) {\n                count++;\n                right = intervals[i][1];\n            }\n        }\n        return intervals.length - count;\n    }\n}\n</code></pre> <pre><code>// \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\n// f[i]: \u4ee5\u533a\u95f4 i \u4e3a\u6700\u540e\u4e00\u4e2a\u533a\u95f4\uff0c\u53ef\u4ee5\u9009\u51fa\u7684\u4e0d\u91cd\u53e0\u533a\u95f4\u6570\u7684\u6700\u5927\u503c\n// \u672c\u8d28\u662f\u4e2a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u95ee\u9898\uff0c\u53ef\u4ee5\u4f18\u5316\u81f3O(nlogn)\nclass Solution {\n    public int eraseOverlapIntervals(int[][] intervals) {\n        int n = intervals.length;\n        Arrays.sort(intervals, (x, y) -&gt; x[0] - y[0]);\n        int[] f = new int[n];\n        Arrays.fill(f, 1);\n        for (int i = 1; i &lt; n; i++) {\n            for (int j = 0; j &lt; i; j++) {\n                if (intervals[j][1] &lt;= intervals[i][0]) {\n                    f[i] = Math.max(f[i], f[j] + 1);\n                }\n            }\n        }\n        int count = Arrays.stream(f).max().getAsInt();\n        return n - count;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_38","title":"\u533a\u95f4\u5206\u7ec4","text":"<p>\u4f8b\u9898\uff1a\u2b50 2406. \u5c06\u533a\u95f4\u5206\u4e3a\u6700\u5c11\u7ec4\u6570</p> <p>\u6309\u7167\u5de6\u7aef\u70b9<code>left</code>\u6392\u5e8f\u540e\uff0c\u7528\u6700\u5c0f\u5806\u6a21\u62df\uff0c\u5806\u9876\u5b58\u50a8\u6bcf\u4e2a\u7ec4\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684<code>right</code>\u3002</p> <p>\u904d\u5386\u533a\u95f4\uff1a</p> <ul> <li>\u5982\u679c\u5f53\u524d\u7684<code>left</code>\u5927\u4e8e\u5806\u9876\uff0c\u5219\u53ef\u4ee5\u63a5\u5728\u8fd9\u4e2a\u7ec4\u7684\u672b\u5c3e\uff0c\u66f4\u65b0\u5806\u9876\u4e3a<code>right</code>\uff1b</li> <li>\u5426\u5219\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ec4\u3002</li> </ul> <pre><code>class Solution {\n    public int minGroups(int[][] intervals) {\n        Arrays.sort(intervals, (a, b) -&gt; a[0] - b[0]);\n        PriorityQueue&lt;Integer&gt; pq = new PriorityQueue&lt;&gt;();\n        for (int[] p : intervals) {\n            if (!pq.isEmpty() &amp;&amp; pq.peek() &lt; p[0]) {\n                pq.poll();\n            }\n            pq.offer(p[1]);\n        }\n        return pq.size();\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_39","title":"\u533a\u95f4\u8986\u76d6","text":"<ul> <li>55. \u8df3\u8dc3\u6e38\u620f</li> <li>45. \u8df3\u8dc3\u6e38\u620f II</li> <li>ACW907. \u533a\u95f4\u8986\u76d6</li> <li>1024. \u89c6\u9891\u62fc\u63a5</li> <li>1326. \u704c\u6e89\u82b1\u56ed\u7684\u6700\u5c11\u6c34\u9f99\u5934\u6570\u76ee</li> </ul> <p>\u4f8b\u9898\uff1a907. \u533a\u95f4\u8986\u76d6</p> <p>\u89e3\u9898\u601d\u8def\uff1a</p> <ol> <li>\u5c06\u6240\u6709\u7684\u533a\u95f4\u6309\u7167\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</li> <li>\u627e\u5230\u6240\u6709\u5de6\u7aef\u70b9\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u8981\u8986\u76d6\u533a\u95f4\u8d77\u70b9\u7684\u7ebf\u6bb5\uff0c\u5e76\u53d6\u5176\u4e2d\u53f3\u7aef\u70b9\u6700\u5927\u7684\u7ebf\u6bb5</li> <li>\u5c06\u8d77\u70b9\u66f4\u65b0\u4e3a\u6700\u5927\u53f3\u7aef\u70b9</li> </ol> <pre><code>start, end = map(int, input().split())\nn = int(input())\nintervals = []\nfor _ in range(n):\n    l, r = map(int, input().split())\n    intervals.append((l, r))\n\nintervals.sort()\nans = 0\n# i \u4ee3\u8868\u5f53\u524d\u6b63\u5728\u8003\u8651\u7684\u533a\u95f4\u7684\u4e0b\u6807\ni = 0\nfind = False\n\nwhile True:\n    # \u6bcf\u6b21\u5faa\u73af\u90fd\u8981\u91cd\u7f6e r \u662f\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u4e4b\u540e\u626b\u63cf\u7684\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u90fd\u4e0d\u591f\u4e4b\u524d\u7684 r\n    r = -float('inf')\n    # \u904d\u5386\u6240\u6709\u5de6\u7aef\u70b9 &lt;= start \u7684\u533a\u95f4\uff08\u80fd\u8986\u76d6start\uff09\uff0c\u627e\u5230\u6700\u8fdc\u7684\u53f3\u7aef\u70b9\n    while i &lt; n and intervals[i][0] &lt;= start:\n        r = max(r, intervals[i][1])\n        i += 1\n    # \u5982\u679c\u6700\u8fdc\u7684\u53f3\u7aef\u70b9\u90fd &lt; start\uff0c\u65e0\u89e3\n    if r &lt; start:\n        break\n    ans += 1\n    start = r\n    if r &gt;= end:\n        find = True\n        break\n\nif find:\n    print(ans)\nelse:\n    print(-1)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_40","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_41","title":"\u80cc\u5305\u95ee\u9898","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#01","title":"01 \u80cc\u5305","text":"<p>\u56de\u6eaf\u8bb0\u5fc6\u5316\u641c\u7d22\u89e3\u6cd5\uff1a</p> <pre><code>def zero_one_knapsack(capacity: int, w: List[int], v: List[int]) -&gt; int:\n    n = len(w)\n\n    @cache\n    def dfs(i, c):\n        if i &lt; 0:\n            return 0\n        if w[i] &gt; c:\n            return dfs(i - 1, c)\n        return max(dfs(i - 1, c), dfs(i - 1, c - w[i]) + v[i])\n\n    return dfs(n - 1, capacity)\n</code></pre> <p>2. 01 \u80cc\u5305\u95ee\u9898</p> <pre><code>n, V = map(int, input().split())\nv = [0] * (n + 1)\nw = [0] * (n + 1)\nfor i in range(1, n + 1):\n    v[i], w[i] = map(int, input().split())\n\nf = [[0] * (V + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):  # \u904d\u5386\u7269\u54c1\n    for j in range(V + 1):  # \u904d\u5386\u80cc\u5305\u5bb9\u91cf\n        f[i][j] = f[i - 1][j]  # if j &lt; v[i]\uff0c\u4e0d\u9009\n        if j &gt;= v[i]:  # \u9009\uff0c\u4f46\u662f\u9700\u8981 j &gt;= v[i]\n            f[i][j] = max(f[i][j], f[i - 1][j - v[i]] + w[i])\n\nprint(f[n][V])\n</code></pre> <pre><code>n, V = map(int, input().split())\nv = [0] * (n + 1)\nw = [0] * (n + 1)\nfor i in range(1, n + 1):\n    v[i], w[i] = map(int, input().split())\n\nf = [0] * (V + 1)\n\nfor i in range(1, n + 1):\n    for j in range(V, v[i] - 1, -1):\n        f[j] = max(f[j], f[j - v[i]] + w[i])\n\nprint(f[V])\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_42","title":"\u5b8c\u5168\u80cc\u5305","text":"<p>\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u548c 01 \u80cc\u5305\u95ee\u9898\u552f\u4e00\u7684\u533a\u522b\u662f\uff1a\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u6bcf\u4e2a\u7269\u54c1\u6709\u65e0\u6570\u4e2a\uff0c\u4e0d\u518d\u6709\u6700\u591a 1 \u4e2a\u7684\u9650\u5236\u3002 3. \u5b8c\u5168\u80cc\u5305\u95ee\u9898</p> <pre><code>import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] v = new int[n + 1];\n        int[] w = new int[n + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            v[i] = sc.nextInt();\n            w[i] = sc.nextInt();\n        }\n        int[][] f = new int[n + 1][m + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 0; j &lt;= m; j++) {\n                for (int k = 0; k * v[i] &lt;= j; k++) {\n                    f[i][j] = Math.max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]);\n                }\n            }\n        }\n        System.out.println(f[n][m]);\n    }\n}\n</code></pre> <pre><code>import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int V = sc.nextInt();\n        int[] v = new int[n + 1];\n        int[] w = new int[n + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            v[i] = sc.nextInt();\n            w[i] = sc.nextInt();\n        }\n        int[] f = new int[V + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            // \u6ce8\u610f\u8fd9\u91cc\u7531\u4e8e\u6211\u4eec\u5c31\u662f\u4ece\u7b2ci\u5c42\u8f6c\u79fb\u8fc7\u6765\uff0c\u56e0\u6b64\u4ece\u5c0f\u5230\u5927\u904d\u5386\u5373\u53ef\n            for (int j = v[i]; j &lt;= V; j++) {\n                f[j] = Math.max(f[j], f[j - v[i]] + w[i]);\n            }\n        }\n        System.out.println(f[V]);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_43","title":"\u591a\u91cd\u80cc\u5305","text":"<p>\u591a\u91cd\u80cc\u5305\u95ee\u9898\u5c31\u662f\u5728\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u7684\u57fa\u7840\u4e0a\uff0c\u9650\u5236\u4e86\u6bcf\u79cd\u7269\u54c1\u7684\u6570\u91cf\u3002 4. \u591a\u91cd\u80cc\u5305\u95ee\u9898 I</p> <pre><code>n, V = map(int, input().split())\nv = [0] * (n + 1)\nw = [0] * (n + 1)\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    v[i], w[i], s[i] = map(int, input().split())\n\nf = [[0] * (V + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(V + 1):\n        k = 0\n        while k &lt;= s[i] and k * v[i] &lt;= j:\n            f[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i])\n            k += 1\n\nprint(f[n][V])\n</code></pre> <p>5. \u591a\u91cd\u80cc\u5305\u95ee\u9898 II</p> <pre><code>import sys\n\nn, V = map(int, sys.stdin.readline().split())\nv, w, s = [0] * (n + 1), [0] * (n + 1), [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    v[i], w[i], s[i] = map(int, sys.stdin.readline().split())\n\nf = [0] * (V + 1)\nnv, nw = [0], [0]\n\nfor i in range(1, n + 1):\n    a, b, c = v[i], w[i], s[i]\n    k = 1\n    while k &lt;= c:\n        nv.append(a * k)\n        nw.append(b * k)\n        c -= k\n        k *= 2\n    if c &gt; 0:\n        nv.append(a * c)\n        nw.append(b * c)\n\nfor i in range(1, len(nv)):\n    for j in range(V, nv[i] - 1, -1):\n        f[j] = max(f[j], f[j - nv[i]] + nw[i])\n\nprint(f[V])\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_44","title":"\u5206\u7ec4\u80cc\u5305","text":"<p>9. \u5206\u7ec4\u80cc\u5305\u95ee\u9898</p> <pre><code>n, V = map(int, input().split())\nv = [[] for _ in range(n + 1)]  # v[i][j]: \u7b2ci\u7ec4\u7684\u7b2cj\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\nw = [[] for _ in range(n + 1)]  # w[i][j]: \u7b2ci\u7ec4\u7684\u7b2cj\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\ns = [0] * (n + 1)  # s[i]: \u7b2ci\u7ec4\u6709s[i]\u4e2a\u7269\u54c1\nfor i in range(1, n + 1):\n    s[i] = int(input())\n    for _ in range(s[i]):\n        a, b = map(int, input().split())\n        v[i].append(a)\n        w[i].append(b)\nf = [[0] * (V + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(0, V + 1):\n        f[i][j] = f[i - 1][j]  # \u4e0d\u9009\n        for k in range(s[i]):  # \u9009\n            if j &gt;= v[i][k]:\n                f[i][j] = max(f[i][j], f[i - 1][j - v[i][k]] + w[i][k])\n\nprint(f[n][V])\n</code></pre> <pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int V = sc.nextInt();\n        List&lt;List&lt;Integer&gt;&gt; v = new ArrayList&lt;&gt;();\n        List&lt;List&lt;Integer&gt;&gt; w = new ArrayList&lt;&gt;();\n        int[] s = new int[n + 1];\n        for (int i = 0; i &lt;= n; i++) {\n            v.add(new ArrayList&lt;&gt;());\n            w.add(new ArrayList&lt;&gt;());\n        }\n        for (int i = 1; i &lt;= n; i++) {\n            s[i] = sc.nextInt();\n            for (int j = 0; j &lt; s[i]; j++) {\n                int a = sc.nextInt();\n                int b = sc.nextInt();\n                v.get(i).add(a);\n                w.get(i).add(b);\n            }\n        }\n        int[][] f = new int[n + 1][V + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 0; j &lt;= V; j++) {\n                f[i][j] = f[i - 1][j];\n                for (int k = 0; k &lt; s[i]; k++) {\n                    if (j &gt;= v.get(i).get(k)) {\n                        f[i][j] = Math.max(f[i][j], f[i - 1][j - v.get(i).get(k)] + w.get(i).get(k));\n                    }\n                }\n            }\n        }\n        System.out.println(f[n][V]);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#dp","title":"\u7ebf\u6027 DP","text":"<p>898. \u6570\u5b57\u4e09\u89d2\u5f62</p> <pre><code>n = int(input())\ninf = float('inf')\ng = [[-inf] * (n + 1) for _ in range(n + 1)]\nfor i in range(1, n + 1):\n    line = list(map(int, input().split()))\n    for j in range(1, len(line) + 1):\n        g[i][j] = line[j - 1]\n\nfor i in range(2, n + 1):\n    for j in range(1, i + 1):\n        g[i][j] += max(g[i - 1][j - 1], g[i - 1][j])\n\nprint(max([g[n][j] for j in range(1, n + 1)]))\n</code></pre> <p>895. \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217</p> <pre><code>n = int(input())\nnums = list(map(int, input().split()))\ndp = [1] * n\n\nfor i in range(n):\n    for j in range(i):\n        if nums[i] &gt; nums[j]:\n            dp[i] = max(dp[i], dp[j] + 1)\n\nprint(max(dp))\n</code></pre> <p>897. \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 \u8fd9\u9053\u9898\u5bf9\u72b6\u6001\u96c6\u5408\u7684\u5212\u5206\u7684\u8bb2\u89e3\uff1ahttps://www.acwing.com/file_system/file/content/whole/index/content/4814/ </p> <pre><code>m, n = map(int, input().split())\ns1 = \" \" + input()\ns2 = \" \" + input()\n\ndp = [[0] * (n + 1) for _ in range(m + 1)]\n\nfor i in range(1, m + 1):\n    for j in range(1, n + 1):\n        dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n        if s1[i] == s2[j]:\n            dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + 1)\n\nprint(dp[m][n])\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#dp_1","title":"\u533a\u95f4 DP","text":"<p>\u533a\u95f4 DP \u4f8b\u9898\uff1a 282. \u77f3\u5b50\u5408\u5e76 1068. \u73af\u5f62\u77f3\u5b50\u5408\u5e76 516. \u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217 5. \u6700\u957f\u56de\u6587\u5b50\u4e32 1000. \u5408\u5e76\u77f3\u5934\u7684\u6700\u4f4e\u6210\u672c 813. \u6700\u5927\u5e73\u5747\u503c\u548c\u7684\u5206\u7ec4 410. \u5206\u5272\u6570\u7ec4\u7684\u6700\u5927\u503c 1039. \u591a\u8fb9\u5f62\u4e09\u89d2\u5256\u5206\u7684\u6700\u4f4e\u5f97\u5206 312. \u6233\u6c14\u7403 375. \u731c\u6570\u5b57\u5927\u5c0f II 877. \u77f3\u5b50\u6e38\u620f 1335. \u5de5\u4f5c\u8ba1\u5212\u7684\u6700\u4f4e\u96be\u5ea6</p> <p>282. \u77f3\u5b50\u5408\u5e76 \u9898\u610f\uff1a\u5408\u5e76 N \u5806\u77f3\u5b50\uff0c\u6bcf\u6b21\u53ea\u80fd\u5408\u5e76\u76f8\u90bb\u7684\u4e24\u5806\u77f3\u5b50\uff0c\u6c42\u6700\u5c0f\u4ee3\u4ef7 \u89e3\u9898\u601d\u8def\uff1a</p> <ul> <li>\u5173\u952e\u70b9\uff1a\u6700\u540e\u4e00\u6b21\u5408\u5e76\u4e00\u5b9a\u662f\u5de6\u8fb9\u8fde\u7eed\u7684\u4e00\u90e8\u5206\u548c\u53f3\u8fb9\u8fde\u7eed\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u5408\u5e76</li> <li>\u72b6\u6001\u8868\u793a\uff1a<code>f[i][j]</code> \u8868\u793a\u5c06 i \u5230 j \u8fd9\u4e00\u6bb5\u77f3\u5b50\u5408\u5e76\u6210\u4e00\u5806\u7684\u65b9\u6848\u7684\u96c6\u5408\uff0c\u5c5e\u6027 Min</li> </ul> <p>\u72b6\u6001\u8ba1\u7b97\uff1a \\(f[i][j] = \\min _{i \\leqslant k \\leqslant j-1}(f[i][k] + f[k+1][j] + presum[j] - presum[i-1])\\)</p> <pre><code>// \u9884\u5904\u7406\u533a\u95f4\u957f\u5ea6\u4e3a1\u7684\u60c5\u51b5\n// \u72b6\u6001\u8ba1\u7b97\nfor (int len = 2; len &lt;= n; len++) { // \u9636\u6bb5\uff1a\u679a\u4e3e\u533a\u95f4\u957f\u5ea6\n    for (int l = 1; l + len - 1 &lt;= n; l++) { // \u72b6\u6001\uff1a\u679a\u4e3e\u533a\u95f4\u8d77\u70b9\n        int r = l + len - 1; // \u533a\u95f4\u7ec8\u70b9\n        for (int k = l; k &lt; r; k++) { // \u51b3\u7b56\uff1a\u679a\u4e3e\u5206\u5272\u70b9\n            f[l][r] = min(f[l][r], f[l][k] + f[k + 1][r] + s[r] - s[l - 1]);\n        }\n    }\n}\nreturn f[1][n];\n</code></pre> <pre><code>n = int(input())\n# \u4e0b\u6807\u4ece1\u5f00\u59cb\nstones = [0] + list(map(int, input().split()))\n\n# \u524d\u7f00\u548c\uff0c\u7531\u4e8e\u6570\u7ec4\u4e0b\u6807\u4ece1\u5f00\u59cb\uff0c\u56e0\u6b64[i...j]\u533a\u95f4\u548c\u4e3a s[j] - s[i-1]\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] = s[i - 1] + stones[i]\n\n# dp[i][j]: \u5408\u5e76[i...j]\u533a\u95f4\u7684\u77f3\u5934\u9700\u8981\u7684\u6700\u5c0f\u4f53\u529b\n# \u7b54\u6848\u5c31\u662f dp[1][n]\ndp = [[float(\"inf\")] * (n + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    dp[i][i] = 0\n\n# \u679a\u4e3e\u533a\u95f4\u957f\u5ea6\nfor len in range(2, n + 1):\n    # \u679a\u4e3e\u5de6\u7aef\u70b9i\uff0c\u53f3\u7aef\u70b9j = i + len - 1 &lt;= n\n    for i in range(1, n - len + 2):\n        j = i + len - 1\n        # \u679a\u4e3e\u5206\u754c\u70b9\n        for k in range(i, j):\n            dp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j] + s[j] - s[i - 1])\n\nprint(dp[1][n])\n</code></pre> <pre><code>n = int(input())\n# \u4e0b\u6807\u4ece1\u5f00\u59cb\nstones = [0] + list(map(int, input().split()))\n\n# \u524d\u7f00\u548c\uff0c\u7531\u4e8e\u6570\u7ec4\u4e0b\u6807\u4ece1\u5f00\u59cb\uff0c\u56e0\u6b64[i...j]\u533a\u95f4\u548c\u4e3a s[j] - s[i-1]\ns = [0] * (n + 1)\nfor i in range(1, n + 1):\n    s[i] = s[i - 1] + stones[i]\n\nmemo = [[-1] * (n + 1) for _ in range(n + 1)]\n\n\n# dfs(i, j): \u5408\u5e76\u533a\u95f4[i...j]\u7684\u6700\u5c0f\u4f53\u529b\ndef dfs(i, j):\n    if memo[i][j] != -1:\n        return memo[i][j]\n    if i == j:\n        return 0\n    ans = float(\"inf\")\n    for k in range(i, j):\n        ans = min(ans, dfs(i, k) + dfs(k + 1, j) + s[j] - s[i - 1])\n    memo[i][j] = ans\n    return ans\n\n\nprint(dfs(1, n))\n</code></pre> <p>516. \u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217</p> <pre><code>class Solution:\n    def longestPalindromeSubseq(self, s: str) -&gt; int:\n        n = len(s)\n        memo = [[-1] * n for _ in range(n)]\n\n        def dfs(i, j):\n            if memo[i][j] != -1:\n                return memo[i][j]\n            if i == j:\n                return 1\n            if i &gt; j:\n                return 0\n            ans = 0\n            if s[i] == s[j]:\n                ans = 2 + dfs(i + 1, j - 1)\n            else:\n                ans = max(dfs(i + 1, j), dfs(i, j - 1))\n            memo[i][j] = ans\n            return ans\n\n        return dfs(0, n - 1)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#dp_2","title":"\u6811\u5f62 DP","text":"<p>285. \u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a</p> <pre><code>from collections import defaultdict\nimport sys\nlimit = 10000\nsys.setrecursionlimit(limit)\n\nn = int(input())\nhappy = [0] * (n + 1)\nf = [[0, 0] for _ in range(n + 1)]\ng = defaultdict(list)\nhas_father = [False] * (n + 1)\n\nfor i in range(1, n + 1):\n    happy[i] = int(input())\n\nfor i in range(1, n):\n    a, b = map(int, input().split())\n    has_father[a] = True\n    g[b].append(a)\n\nroot = 1\nwhile has_father[root]:\n    root += 1\n\ndef dfs(root):\n    f[root][1] = happy[root]\n    for child in g[root]:\n        dfs(child)\n        f[root][0] += max(f[child][1], f[child][0])\n        f[root][1] += f[child][0]\n\ndfs(root)\nprint(max(f[root][0], f[root][1]))\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#dp_3","title":"\u6570\u4f4d DP","text":"<p>1012. \u81f3\u5c11\u6709 1 \u4f4d\u91cd\u590d\u7684\u6570\u5b57</p> <pre><code>class Solution:\n    def numDupDigitsAtMostN(self, n: int) -&gt; int:\n        s = str(n)\n\n        @cache  # \u8bb0\u5fc6\u5316\u641c\u7d22\n        def f(i: int, mask: int, is_limit: bool, is_num: bool) -&gt; int:\n            if i == len(s):\n                return int(is_num)  # is_num \u4e3a True \u8868\u793a\u5f97\u5230\u4e86\u4e00\u4e2a\u5408\u6cd5\u6570\u5b57\n            ans = 0\n            if not is_num:  # \u53ef\u4ee5\u8df3\u8fc7\u5f53\u524d\u6570\u4f4d\n                ans = f(i + 1, mask, False, False)\n            # \u5982\u679c\u524d\u9762\u6ca1\u6709\u586b\u6570\u5b57\uff0c\u5fc5\u987b\u4ece 1 \u5f00\u59cb\uff08\u56e0\u4e3a\u4e0d\u80fd\u6709\u524d\u5bfc\u96f6\uff09\n            low = 0 if is_num else 1\n            # \u5982\u679c\u524d\u9762\u586b\u7684\u6570\u5b57\u90fd\u548c n \u7684\u4e00\u6837\uff0c\u90a3\u4e48\u8fd9\u4e00\u4f4d\u81f3\u591a\u586b s[i]\uff08\u5426\u5219\u5c31\u8d85\u8fc7 n \u5566\uff09\n            up = int(s[i]) if is_limit else 9\n            for d in range(low, up + 1):  # \u679a\u4e3e\u8981\u586b\u5165\u7684\u6570\u5b57 d\n                if (mask &gt;&gt; d &amp; 1) == 0:  # d \u4e0d\u5728 mask \u4e2d\n                    ans += f(i + 1, mask | (1 &lt;&lt; d), is_limit and d == up, True)\n            return ans\n\n        return n - f(0, 0, True, False)\n</code></pre> <p>233. \u6570\u5b57 1 \u7684\u4e2a\u6570</p> <pre><code>class Solution:\n    def countDigitOne(self, n: int) -&gt; int:\n        s = str(n)\n\n        @cache\n        def f(idx: int, one_cnt: int, is_limit: bool) -&gt; int:\n            if idx == len(s):\n                return one_cnt\n            up = int(s[idx]) if is_limit else 9\n            ans = 0\n            for digit in range(up + 1):\n                ans += f(idx + 1, one_cnt + (digit == 1), is_limit and digit == up)\n            return ans\n\n        return f(0, 0, True)\n</code></pre> <p>338. \u8ba1\u6570\u95ee\u9898</p> <pre><code>from functools import lru_cache\nfrom collections import Counter\n\ndef count_digit(n, digit):\n    s = str(n)\n\n    @lru_cache(maxsize=None)\n    def f(idx: int, digit_count: int, is_limit: bool, is_num: bool, digit: int) -&gt; int:\n        if idx == len(s):\n            return digit_count if is_num else 0\n        ans = 0\n        if not is_num:\n            ans = f(idx + 1, digit_count, False, False, digit)\n        low = 0 if is_num else 1\n        up = int(s[idx]) if is_limit else 9\n        for d in range(low, up + 1):\n            ans += f(idx + 1, digit_count + (d == digit), is_limit and d == up, True, digit)\n        return ans\n\n    return f(0, 0 if digit != '0' else 1, True, False, digit)\n\n\nif __name__ == '__main__':\n    while True:\n        line = input()\n        if line == \"0 0\":\n            break\n        a, b = map(int, line.split())\n        a, b = min(a, b), max(a, b)\n        c = Counter(str(a))\n        for digit in range(10):\n            ans = count_digit(b, digit) - count_digit(a, digit) + c[str(digit)]\n            print(ans, end=\" \")\n        print()\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_45","title":"\u6811\u72b6\u6570\u7ec4\u4e0e\u7ebf\u6bb5\u6811","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_46","title":"\u6811\u72b6\u6570\u7ec4","text":"<p>\u6811\u72b6\u6570\u7ec4\uff08Binary Indexed Tree\uff09\u662f\u4e00\u79cd\u7ef4\u62a4\u6570\u7ec4\u524d\u7f00\u548c\u3001\u533a\u95f4\u548c\u7684\u6570\u636e\u7ed3\u6784\u3002  \u6811\u72b6\u6570\u7ec4\u5185\u90e8\u6bcf\u4e2a\u8282\u70b9<code>tree[x]</code>\u4fdd\u5b58\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u7684\u548c\u3002\u9664\u6811\u6839\u5916\uff0c\u6bcf\u4e2a\u5185\u90e8\u8282\u70b9<code>tree[x]</code>\u7684\u7236\u8282\u70b9\u662f<code>tree[x + lowbit(x)]</code></p> <p>\u6811\u72b6\u6570\u7ec4\u652f\u6301\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff1a\u67e5\u8be2\u524d\u7f00\u548c\uff08\u524d x \u4e2a\u6570\u636e\u7684\u548c\uff09</p> <pre><code>int query(int x) {\n    int ans = 0;\n    while (x &gt; 0) {\n        ans += tree[x];\n        x -= lowbit(x);\n    }\n    return ans;\n}\n</code></pre> <p>\u56e0\u6b64\uff0c\u533a\u95f4\u548c\uff08\u7b2c<code>l</code>\u5230\u7b2c<code>r</code>\u4e2a\u6570\u636e\u7684\u548c\uff09\u5373\u4e3a\uff1a<code>query(r) - query(l-1)</code> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a<code>O(logN)</code></p> <p>\u6811\u72b6\u6570\u7ec4\u652f\u6301\u7684\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff1a\u66f4\u65b0\uff08\u628a\u67d0\u4e2a\u6570\u636e x \u589e\u52a0\u4e00\u4e2a\u503c delta\uff09 \u9700\u8981\u66f4\u65b0<code>tree[x]</code>\u4ee5\u53ca\u5b83\u7684\u6240\u6709\u7956\u5148 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a<code>O(logN)</code></p> <pre><code>void add(int x, int delta) {\n    while (x &lt;= n) {\n        tree[x] += delta;\n        x += lowbit(x);\n    }\n}\n</code></pre> <p>307. \u533a\u57df\u548c\u68c0\u7d22 - \u6570\u7ec4\u53ef\u4fee\u6539</p> <pre><code>class NumArray {\n    int[] tree, arr;\n    int n;\n\n    public NumArray(int[] nums) {\n        this.n = nums.length;\n        this.arr = new int[n + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            this.arr[i] = nums[i - 1];\n        }\n        this.tree = new int[n + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            add(i, arr[i]);\n        }\n    }\n\n    private int lowbit(int x) {\n        return x &amp; -x;\n    }\n\n    // \u5355\u70b9\u589e\u52a0\uff08\u7b2c x \u4e2a\u6570\u589e\u52a0 delta\uff09\uff0c\u5e76\u5411\u4e0a\u52a8\u6001\u4fee\u6539\u7236\u8282\u70b9\n    private void add(int x, int delta) {\n        while (x &lt;= n) {\n            tree[x] += delta;\n            x += lowbit(x);  // \u6c42tree[x]\u7684\u7236\u8282\u70b9: tree[x + lowbit(x)]\n        }\n    }\n\n    // \u67e5\u8be2\u524d\u7f00\u548c\uff08\u524d x \u4e2a\u6570\u7684\u548c\uff09\n    private int query(int x) {\n        int ans = 0;\n        while (x &gt; 0) {\n            ans += tree[x];\n            x -= lowbit(x);  // tree[x]\u8282\u70b9\u4e2d\u5b58\u4e86lowbit(x)\u4e2a\u6570\n        }\n        return ans;\n    }\n\n    public void update(int index, int val) {\n        int idx = index + 1;  // tree \u7684\u4e0b\u6807\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u56e0\u6b64\u5bf9\u5e94\u539f\u6570\u7ec4 index + 1\n        add(idx, val - arr[idx]);\n        arr[idx] = val;\n    }\n\n    public int sumRange(int left, int right) {\n        int l = left + 1, r = right + 1;\n        return query(r) - query(l - 1);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/#_47","title":"\u7ebf\u6bb5\u6811","text":"<p>307. \u533a\u57df\u548c\u68c0\u7d22 - \u6570\u7ec4\u53ef\u4fee\u6539</p> <pre><code>class NumArray {\n    private int[] segmentTree;\n    private int n;\n\n    public NumArray(int[] nums) {\n        n = nums.length;\n        segmentTree = new int[nums.length * 4];\n        build(0, 0, n - 1, nums);\n    }\n\n    public void update(int index, int val) {\n        change(index, val, 0, 0, n - 1);\n    }\n\n    public int sumRange(int left, int right) {\n        return range(left, right, 0, 0, n - 1);\n    }\n\n    private void build(int node, int l, int r, int[] nums) {\n        if (l == r) {\n            segmentTree[node] = nums[l];\n            return;\n        }\n        int m = l + (r - l) / 2;\n        build(node * 2 + 1, l, m, nums);\n        build(node * 2 + 2, m + 1, r, nums);\n        segmentTree[node] = segmentTree[node * 2 + 1] + segmentTree[node * 2 + 2];\n    }\n\n    private void change(int index, int val, int node, int l, int r) {\n        if (l == r) {\n            segmentTree[node] = val;\n            return;\n        }\n        int m = l + (r - l) / 2;\n        if (index &lt;= m) {\n            change(index, val, node * 2 + 1, l, m);\n        } else {\n            change(index, val, node * 2 + 2, m + 1, r);\n        }\n        segmentTree[node] = segmentTree[node * 2 + 1] + segmentTree[node * 2 + 2];\n    }\n\n    private int range(int left, int right, int node, int l, int r) {\n        if (left == l &amp;&amp; right == r) {\n            return segmentTree[node];\n        }\n        int m = l + (r - l) / 2;\n        if (right &lt;= m) {\n            return range(left, right, node * 2 + 1, l, m);\n        } else if (left &gt; m) {\n            return range(left, right, node * 2 + 2, m + 1, r);\n        } else {\n            return range(left, m, node * 2 + 1, l, m) + range(m + 1, right, node * 2 + 2, m + 1, r);\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","title":"\u7ebf\u6027\u52a8\u6001\u89c4\u5212","text":"<p>\u5c06\u95ee\u9898\u89c4\u6a21\u51cf\u5c0f\u7684\u65b9\u5f0f\u6709\u5f88\u591a\u79cd\uff0c\u4e00\u4e9b\u5178\u578b\u7684\u51cf\u5c0f\u65b9\u5f0f\u662f\u52a8\u6001\u89c4\u5212\u5206\u7c7b\u7684\u4f9d\u636e\uff0c\u4f8b\u5982\u7ebf\u6027\uff0c\u533a\u95f4\uff0c\u6811\u5f62\u7b49\u3002\u7ebf\u6027\u52a8\u6001\u89c4\u5212\u7f29\u5c0f\u95ee\u9898\u89c4\u6a21\u7684\u601d\u8def\u901a\u5e38\u6709\uff1a</p> <ul> <li>\u6bcf\u6b21\u51cf\u5c11\u4e00\u534a\uff1a\u6bcf\u6b21\u5c06\u95ee\u9898\u89c4\u6a21\u51cf\u5c11\u4e00\u534a</li> <li>\u6bcf\u6b21\u51cf\u5c11\u4e00\u4e2a\uff1a\u8bb0 f(n) \u4e3a\u4ee5\u7b2c n \u4e2a\u6570\u7ed3\u5c3e\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff0c\u6bcf\u6b21\u51cf\u5c11\u4e00\u4e2a\uff0c\u5c06\u539f\u95ee\u9898\u5206\u4e3a f(n\u22121), f(n\u22122), ..., f(1)\uff0c\u5171 n\u22121 \u4e2a\u5b50\u95ee\u9898\u3002</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_1","title":"\u5355\u4e32\u95ee\u9898","text":"<p>1.\u4f9d\u8d56\u6bd4 i \u5c0f\u7684 O(1) \u4e2a\u5b50\u95ee\u9898</p> <p>53. \u6700\u5927\u5b50\u6570\u7ec4\u548c</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002</p> \u7ebf\u6027 DP\u5206\u6cbb\u524d\u7f00\u548c <pre><code>class Solution:\n    def maxSubArray(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [-inf] * n\n        for i in range(n):\n            f[i] = max(nums[i], f[i - 1] + nums[i] if i &gt; 0 else nums[i])\n        return max(f)\n</code></pre> <p>\u4f7f\u7528\u5206\u6cbb\u53ef\u4ee5\u6c42\u5f97\u4efb\u610f <code>[l...r]</code> \u533a\u95f4\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\uff1a\u4e8b\u5b9e\u4e0a\u662f\u7ebf\u6bb5\u6811\u7684 pushUp \u64cd\u4f5c</p> <pre><code>class Solution {\n    static class Node {\n        int lmax, rmax, tmax, sum;\n        Node(int lmax, int rmax, int tmax, int sum) {\n            this.lmax = lmax;\n            this.rmax = rmax;\n            this.tmax = tmax;\n            this.sum = sum;\n        }\n    }\n\n    public int maxSubArray(int[] nums) {\n        return query(nums, 0, nums.length - 1).tmax;\n    }\n\n    private Node query(int[] a, int l, int r) {\n        if (l == r) {\n            return new Node(a[l], a[l], a[l], a[l]);\n        }\n        int mid = l + r &gt;&gt; 1;\n        Node left = query(a, l, mid);\n        Node right = query(a, mid + 1, r);\n        return pushUp(left, right);\n    }\n\n    private Node pushUp(Node left, Node right) {\n        int sum = left.sum + right.sum;\n        int lmax = Math.max(left.lmax, left.sum + right.lmax);\n        int rmax = Math.max(right.rmax, right.sum + left.rmax);\n        int tmax = Math.max(Math.max(left.tmax, right.tmax), left.rmax + right.lmax);\n        return new Node(lmax, rmax, tmax, sum);\n    }\n}\n</code></pre> <pre><code>class Solution:\n    def maxSubArray(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        presum = 0\n        min_presum = inf\n        ans = -inf\n        for x in nums:\n            min_presum = min(min_presum, presum)\n            presum += x\n            ans = max(ans, presum - min_presum)\n        return ans\n</code></pre> <p>2.\u4f9d\u8d56\u6bd4 i \u5c0f\u7684 O(n) \u4e2a\u5b50\u95ee\u9898</p> <p>300. \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6574\u6570\u6570\u7ec4\uff0c\u627e\u5230\u5176\u4e2d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> <pre><code>class Solution:\n    def lengthOfLIS(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [1] * n\n        for i in range(n):\n            for j in range(i):\n                if nums[i] &gt; nums[j]:\n                    f[i] = max(f[i], f[j] + 1)\n        return max(f)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#lis","title":"LIS \u95ee\u9898","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#300","title":"300. \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217","text":"\u7ebf\u6027 DP \u8d2a\u5fc3 + \u4e8c\u5206 <pre><code>class Solution:\n    def lengthOfLIS(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [1] * n\n        for i in range(n):\n            for j in range(i):\n                if nums[i] &gt; nums[j]:\n                    f[i] = max(f[i], f[j] + 1)\n        return max(f)\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u8d2a\u5fc3\uff0c\u5982\u679c\u6211\u4eec\u8981\u4f7f\u4e0a\u5347\u5b50\u5e8f\u5217\u5c3d\u53ef\u80fd\u7684\u957f\uff0c\u5219\u6211\u4eec\u9700\u8981\u8ba9\u5e8f\u5217\u4e0a\u5347\u5f97\u5c3d\u53ef\u80fd\u6162\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u6bcf\u6b21\u5728\u4e0a\u5347\u5b50\u5e8f\u5217\u6700\u540e\u52a0\u4e0a\u7684\u90a3\u4e2a\u6570\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002 \u57fa\u4e8e\u4e0a\u9762\u7684\u8d2a\u5fc3\u601d\u8def\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 <code>d[i]</code> \uff0c\u8868\u793a\u957f\u5ea6\u4e3a <code>(i+1)</code> \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\u5143\u7d20\u7684\u6700\u5c0f\u503c\uff0c\u7528 <code>len(d)</code> \u8bb0\u5f55\u76ee\u524d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u540c\u65f6\u6211\u4eec\u6ce8\u610f\u5230 <code>d[i]</code> \u662f\u5173\u4e8e <code>i</code> \u5355\u8c03\u9012\u589e\u7684\u3002</p> <pre><code>class Solution:\n    def lengthOfLIS(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        g = []\n        for x in nums:\n            j = bisect_left(g, x)\n            if j == len(g):\n                g.append(x)\n            else:\n                g[j] = x\n        return len(g)\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nlogn)\\)</p> \u5173\u4e8e\u8d2a\u5fc3 + \u4e8c\u5206\u7684\u89e3\u91ca <p>\u601d\u8def\u6e90\u81ea\u4e8e\u7eb8\u724c\u6e38\u620f patience game</p> <p></p> <p>\u7ed9\u4f60\u4e00\u6392\u6251\u514b\u724c\uff0c\u6211\u4eec\u50cf\u904d\u5386\u6570\u7ec4\u90a3\u6837\u4ece\u5de6\u5230\u53f3\u4e00\u5f20\u4e00\u5f20\u5904\u7406\u8fd9\u4e9b\u6251\u514b\u724c\uff0c\u6700\u7ec8\u8981\u628a\u8fd9\u4e9b\u724c\u5206\u6210\u82e5\u5e72\u5806\u3002\u53ea\u80fd\u628a\u70b9\u6570\u5c0f\u7684\u724c\u538b\u5230\u70b9\u6570\u6bd4\u5b83\u5927\u7684\u724c\u4e0a\uff1b\u5982\u679c\u5f53\u524d\u724c\u70b9\u6570\u8f83\u5927\u6ca1\u6709\u53ef\u4ee5\u653e\u7f6e\u7684\u5806\uff0c\u5219\u65b0\u5efa\u4e00\u4e2a\u5806\uff0c\u628a\u8fd9\u5f20\u724c\u653e\u8fdb\u53bb\uff1b\u5982\u679c\u5f53\u524d\u724c\u6709\u591a\u4e2a\u5806\u53ef\u4f9b\u9009\u62e9\uff0c\u5219\u9009\u62e9\u6700\u5de6\u8fb9\u7684\u90a3\u4e00\u5806\u653e\u7f6e\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u724c\u5806\u9876\u7684\u724c\u6709\u5e8f\uff082, 4, 7, 8, Q\uff09\u3002</p> <p></p> <p>[3, 5, 7, 8, Q] \u5c31\u662f LIS</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#673","title":"673. \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570","text":"<p>\u4ee5 <code>nums[i]</code> \u4e3a\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\uff0c\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u4e3a <code>count[i]</code>\u3002</p> <p>\u90a3\u4e48\u5728 <code>nums[i]</code> &gt; <code>nums[j]</code> \u524d\u63d0\u4e0b\uff0c\u5982\u679c\u5728 <code>[0, i-1]</code> \u7684\u8303\u56f4\u5185\uff0c\u627e\u5230\u4e86 j\uff0c\u4f7f\u5f97 <code>dp[j] + 1 &gt; dp[i]</code>\uff0c\u8bf4\u660e\u627e\u5230\u4e86\u4e00\u4e2a\u66f4\u957f\u7684\u9012\u589e\u5b50\u5e8f\u5217\u3002</p> <p>\u90a3\u4e48\u4ee5 j \u4e3a\u7ed3\u5c3e\u7684\u5b50\u4e32\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u5c31\u662f\u6700\u65b0\u7684\u4ee5 i \u4e3a\u7ed3\u5c3e\u7684\u5b50\u4e32\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u5373\uff1a<code>count[i] = count[j]</code>\u3002</p> <p>\u5728 <code>nums[i] &gt; nums[j]</code> \u524d\u63d0\u4e0b\uff0c\u5982\u679c\u5728 <code>[0, i-1]</code> \u7684\u8303\u56f4\u5185\uff0c\u627e\u5230\u4e86 j\uff0c\u4f7f\u5f97 <code>dp[j] + 1 == dp[i]</code>\uff0c\u8bf4\u660e\u627e\u5230\u4e86\u4e24\u4e2a\u76f8\u540c\u957f\u5ea6\u7684\u9012\u589e\u5b50\u5e8f\u5217\u3002</p> <p>\u90a3\u4e48\u4ee5 i \u4e3a\u7ed3\u5c3e\u7684\u5b50\u4e32\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570 \u5c31\u5e94\u8be5\u52a0\u4e0a\u4ee5 j \u4e3a\u7ed3\u5c3e\u7684\u5b50\u4e32\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u5373\uff1a<code>count[i] += count[j]</code> \u3002</p> <pre><code>class Solution:\n    def findNumberOfLIS(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [1] * n\n        # \u5b9a\u4e49g[i]\u4e3a\u4ee5nums[i]\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u65b9\u6848\u6570\n        g = [1] * n\n        max_len = 1\n        for i in range(n):\n            for j in range(i):\n                if nums[i] &gt; nums[j]:\n                    # \u610f\u5473\u7740\u6211\u4eec\u7b2c\u4e00\u6b21\u627e\u5230\u4ee5nums[i]\u7ed3\u5c3e\u7684LIS\n                    if f[i] &lt; f[j] + 1:\n                        f[i] = f[j] + 1\n                        g[i] = g[j]\n                    # \u610f\u5473\u7740\u6211\u4eec\u4e0d\u662f\u7b2c\u4e00\u6b21\u627e\u5230\u4ee5nums[i]\u7ed3\u5c3e\u3001\u957f\u5ea6\u4e3af[i]\u7684LIS\u4e86\uff0c\u5e76\u627e\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u7b26\u5408\u6761\u4ef6\u7684\u524d\u9a71\n                    elif f[i] == f[j] + 1:\n                        g[i] += g[j]\n            max_len = max(max_len, f[i])\n        ans = 0\n        for i in range(n):\n            if f[i] == max_len:\n                ans += g[i]\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#354","title":"354. \u4fc4\u7f57\u65af\u5957\u5a03\u4fe1\u5c01\u95ee\u9898","text":"\u66b4\u529b\u89e3\u6cd5\u6392\u5e8f + \u4e8c\u5206 <p>\u66b4\u529b\u89e3\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\\(O(n^2)\\)\uff0c\u56e0\u6b64\u4f1a\u8d85\u65f6\u3002</p> <pre><code>class Solution:\n    def maxEnvelopes(self, envelopes: List[List[int]]) -&gt; int:\n        envelopes.sort()\n        n = len(envelopes)\n        f = [1] * n\n        for i in range(n):\n            for j in range(i):\n                if envelopes[i][0] &gt; envelopes[j][0] and envelopes[i][1] &gt; envelopes[j][1]:\n                    f[i] = max(f[i], f[j] + 1)\n        return max(f)\n</code></pre> <p>\u601d\u8def\u540c LIS \u95ee\u9898\u7684\u8d2a\u5fc3 + \u4e8c\u5206\u89e3\u6cd5\u3002\u8fd9\u91cc\u5c06\u9ad8\u5ea6\u9006\u5e8f\u6392\u5e8f\u7684\u610f\u4e49\u662f\uff0c\u5bf9\u4e8e\u76f8\u540c\u5bbd\u5ea6\u7684\u4fe1\u5c01\uff0c\u591a\u4e2a\u9ad8\u5ea6\u6211\u4eec\u53ea\u4f1a\u53d6\u4e00\u4e2a\uff0c\u540c\u65f6\u7531\u4e8e\u4e8c\u5206\uff0c\u6211\u4eec\u80fd\u540c\u65f6\u8003\u8651\u6240\u6709\u7684\u9ad8\u5ea6\u3002<code>g[i]</code>: \u957f\u5ea6\u4e3a <code>(i+1)</code> \u7684 LIS \u7684\u6700\u5c0f\u300c\u4fe1\u5c01\u9ad8\u5ea6\u300d\u3002\u601d\u8def\u6e90\u81ea\u4e8e\u7eb8\u724c\u6e38\u620f patience game\u3002</p> <pre><code>class Solution:\n    def maxEnvelopes(self, envelopes: List[List[int]]) -&gt; int:\n        n = len(envelopes)\n        envelopes.sort(key=lambda x: (x[0], -x[1]))\n        # g[i]: \u957f\u5ea6\u4e3a (i+1) \u7684 LIS \u7684\u6700\u5c0f\u300c\u4fe1\u5c01\u9ad8\u5ea6\u300d\n        g = []\n        size = 0\n        for w, h in envelopes:\n            if not g or h &gt; g[-1]:\n                g.append(h)\n                size += 1\n            else:\n                idx = bisect_left(g, h)\n                g[idx] = h\n        return size\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_2","title":"\u6700\u5927\u5b50\u6570\u7ec4\u548c\u95ee\u9898","text":"<p>53. \u6700\u5927\u5b50\u6570\u7ec4\u548c</p> \u7ebf\u6027 DP\u5206\u6cbb\u89e3\u6cd5 <pre><code>class Solution:\n    def maxSubArray(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [-inf] * n\n        for i in range(n):\n            f[i] = max(nums[i], f[i - 1] + nums[i] if i &gt; 0 else nums[i])\n        return max(f)\n</code></pre> <pre><code>class Solution {\n    static class Node {\n        int lmax, rmax, tmax, sum;\n        Node(int lmax, int rmax, int tmax, int sum) {\n            this.lmax = lmax;\n            this.rmax = rmax;\n            this.tmax = tmax;\n            this.sum = sum;\n        }\n    }\n\n    public int maxSubArray(int[] nums) {\n        return query(nums, 0, nums.length - 1).tmax;\n    }\n\n    private Node query(int[] a, int l, int r) {\n        if (l == r) {\n            return new Node(a[l], a[l], a[l], a[l]);\n        }\n        int mid = l + r &gt;&gt; 1;\n        Node left = query(a, l, mid);\n        Node right = query(a, mid + 1, r);\n        return pushUp(left, right);\n    }\n\n    private Node pushUp(Node left, Node right) {\n        int sum = left.sum + right.sum;\n        int lmax = Math.max(left.lmax, left.sum + right.lmax);\n        int rmax = Math.max(right.rmax, right.sum + left.rmax);\n        int tmax = Math.max(Math.max(left.tmax, right.tmax), left.rmax + right.lmax);\n        return new Node(lmax, rmax, tmax, sum);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#152","title":"152. \u4e58\u79ef\u6700\u5927\u5b50\u6570\u7ec4","text":"<p>\u6574\u4f53\u601d\u8def\u548c 53 \u9898\u7c7b\u4f3c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a <code>nums[i]</code> \u8003\u8651 2 \u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u63a5\u5728 <code>f[i-1]</code> \u540e\u9762</li> <li>\u4e0d\u63a5\u5728 <code>f[i-1]</code> \u540e\u9762</li> </ul> <p>\u7531\u4e8e <code>nums[i]</code> \u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u56e0\u6b64\u9664\u4e86\u7ef4\u62a4\u4e00\u4e2a <code>pre_max</code> \u4e4b\u5916\u8fd8\u8981\u989d\u5916\u7ef4\u62a4\u4e00\u4e2a <code>pre_min</code> \uff0c\u7528\u4e8e\u5904\u7406\u8d1f\u6570\u7684\u60c5\u51b5\u3002</p> <pre><code>class Solution:\n    def maxProduct(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        pre_max = pre_min = nums[0]\n        ans = nums[0]\n        for i in range(1, n):\n            cur_max = max(pre_max * nums[i], pre_min * nums[i], nums[i])\n            cur_min = min(pre_max * nums[i], pre_min * nums[i], nums[i])\n            ans = max(ans, cur_max)\n            pre_max = cur_max\n            pre_min = cur_min\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#918","title":"918. \u73af\u5f62\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c","text":"<pre><code>class Solution:\n    def maxSubarraySumCircular(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        fmax = [-inf] * n\n        fmin = [inf] * n\n        fmax[0] = fmin[0] = nums[0]\n        mx = mn = nums[0]\n        for i in range(1, n):\n            fmax[i] = max(nums[i], fmax[i - 1] + nums[i])\n            mx = max(mx, fmax[i])\n            fmin[i] = min(nums[i], fmin[i - 1] + nums[i])\n            mn = min(mn, fmin[i])\n        # \u6ce8\u610f\u5168\u662f\u8d1f\u6570\u7684\u60c5\u51b5\n        if mx &lt; 0:\n            return mx\n        return max(mx, sum(nums) - mn)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#1724","title":"\u9762\u8bd5\u9898 17.24. \u6700\u5927\u5b50\u77e9\u9635","text":"<pre><code>class Solution:\n    def getMaxMatrix(self, matrix):\n        m, n = len(matrix), len(matrix[0])\n        # \u8bb0\u5f55\u5f53\u524di~j\u884c\u7ec4\u6210\u5927\u77e9\u9635\u7684\u6bcf\u4e00\u5217\u7684\u548c\uff0c\u5c06\u4e8c\u7ef4\u8f6c\u5316\u4e3a\u4e00\u7ef4\n        b = [0] * n\n        max_sum = -inf\n        ans = [0, 0, 0, 0]\n        # \u8bb0\u5f55\u5de6\u4e0a\u89d2\n        start = [0, 0]\n        for i in range(m):\n            b = [0] * n\n            for j in range(i, m):\n                sum_ = 0\n                for k in range(n):\n                    b[k] += matrix[j][k]\n                    if sum_ &gt; 0:\n                        sum_ += b[k]\n                    else:\n                        sum_ = b[k]\n                        start = [i, k]\n                    if sum_ &gt; max_sum:\n                        max_sum = sum_\n                        ans = [start[0], start[1], j, k]\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#363-k","title":"363. \u77e9\u5f62\u533a\u57df\u4e0d\u8d85\u8fc7 K \u7684\u6700\u5927\u6570\u503c\u548c","text":"\u4e8c\u7ef4\u524d\u7f00\u548c + \u679a\u4e3e\u6709\u5e8f\u96c6\u5408 + \u4e8c\u5206 <p>\u9898\u89e3</p> <pre><code>class Solution {\n    public int maxSumSubmatrix(int[][] matrix, int k) {\n        int ans = Integer.MIN_VALUE;\n        int m = matrix.length, n = matrix[0].length;\n        for (int i = 0; i &lt; m; i++) {  // \u679a\u4e3e\u4e0a\u8fb9\u754c\n            int[] sum = new int[n];\n            for (int j = i; j &lt; m; j++) {  // \u679a\u4e3e\u4e0b\u8fb9\u754c\n                for (int c = 0; c &lt; n; c++) {\n                    sum[c] += matrix[j][c];\n                }\n                TreeSet&lt;Integer&gt; set = new TreeSet&lt;&gt;();\n                set.add(0);\n                int s = 0;\n                for (int v : sum) {\n                    s += v;\n                    Integer ceil = set.ceiling(s - k);\n                    if (ceil != null) {\n                        ans = Math.max(ans, s - ceil);\n                    }\n                    set.add(s);\n                }\n            }\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_3","title":"\u6253\u5bb6\u52ab\u820d\u95ee\u9898","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#198","title":"198. \u6253\u5bb6\u52ab\u820d","text":"\u8bb0\u5fc6\u5316\u641c\u7d22\u7ebf\u6027 DP <pre><code>class Solution:\n    def rob(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n\n        @cache\n        def dfs(idx):\n            if idx &lt; 0:\n                return 0\n            return max(dfs(idx - 1), dfs(idx - 2) + nums[idx])\n\n        return dfs(n - 1)\n</code></pre> <pre><code>class Solution:\n    def rob(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        nums = [0, 0] + nums\n        f = [0] * (n + 2)\n        for i in range(2, n + 2):\n            f[i] = max(f[i - 1], f[i - 2] + nums[i])\n        return f[-1]\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#213-ii","title":"213. \u6253\u5bb6\u52ab\u820d II","text":"<pre><code>class Solution {\n    public int rob(int[] nums) {\n        int n = nums.length;\n        if (n == 1) return nums[0];\n        int ans1 = rob(nums, 0, n - 2);\n        int ans2 = rob(nums, 1, n - 1);\n        return Math.max(ans1, ans2);\n    }\n\n    private int rob(int[] nums, int l, int r) {\n        if (r == l) return nums[l];\n        int[] dp = new int[nums.length];\n        dp[l] = nums[l];\n        dp[l + 1] = Math.max(nums[l], nums[l + 1]);\n        for (int i = l + 2; i &lt; nums.length; i++) {\n            dp[i] = Math.max(dp[i - 2] + nums[i], dp[i - 1]);\n        }\n        return dp[r];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#740","title":"740. \u5220\u9664\u5e76\u83b7\u5f97\u70b9\u6570","text":"\u601d\u8def\u4e00\u6253\u5bb6\u52ab\u820d <p>\u601d\u8def</p> <p>\u5982\u679c\u6211\u4eec\u5c06\u6570\u7ec4\u6392\u597d\u5e8f\uff0c\u4ece\u524d\u5f80\u540e\u5904\u7406\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u8003\u8651\u201c\u5f53\u524d\u6570\u201d\u4e0e\u201c\u524d\u4e00\u4e2a\u6570\u201d\u7684\u300c\u5927\u5c0f &amp; \u9009\u62e9\u300d\u5173\u7cfb\u5373\u53ef\uff0c\u8fd9\u6837\u5904\u7406\u5b8c\uff0c\u663e\u7136\u6bcf\u4e2a\u6570\u7684\u300c\u524d\u4e00\u4f4d/\u540e\u4e00\u4f4d\u300d\u90fd\u4f1a\u88ab\u8003\u8651\u5230\u3002</p> <p>\u8fd9\u6837\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u300c\u5e8f\u5217 DP\u300d\u95ee\u9898\uff08\u9009\u62e9\u67d0\u4e2a\u6570\uff0c\u9700\u8981\u8003\u8651\u524d\u4e00\u4e2a\u6570\u7684\u300c\u5927\u5c0f/\u9009\u62e9\u300d\u72b6\u6001\uff09\u3002</p> <pre><code>class Solution:\n    def deleteAndEarn(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        cnt = Counter(nums)\n        mx = max(nums)\n        # f[i][0] \u4ee3\u8868\u300c\u4e0d\u9009\u300d\u6570\u503c i\uff1bf[i][1] \u4ee3\u8868\u300c\u9009\u62e9\u300d\u6570\u503c i\n        f = [[0] * 2 for _ in range(mx + 1)]\n        for i in range(1, mx + 1):\n            f[i][1] = f[i - 1][0] + i * cnt[i]\n            f[i][0] = max(f[i - 1][1], f[i - 1][0])\n        return max(f[mx][0], f[mx][1])\n</code></pre> <p><code>dp[i]</code> \u8868\u793a\u5220\u9664\u5143\u7d20 i \u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570</p> <p><code>c[i]</code> \u8868\u793a\u5143\u7d20 i \u7684\u4e2a\u6570</p> <p>\u5982\u679c\u5220\u9664 i\uff0c\u83b7\u5f97\u7684\u70b9\u6570\u662f <code>dp[i] = dp[i - 2] + i * c[i]</code></p> <p>\u5982\u679c\u4e0d\u5220 i\uff0c\u83b7\u5f97\u7684\u70b9\u6570\u662f <code>dp[i - 1]</code></p> <p>\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a<code>dp[i] = max(dp[i - 1], dp[i - 2] + i * c[i])</code></p> <pre><code>class Solution:\n    def deleteAndEarn(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        c = Counter(nums)\n        mx = max(nums)\n        f = [0] * (mx + 1)\n        f[1] = 1 * c[1]\n        for i in range(2, mx + 1):\n            f[i] = max(f[i - 2] + i * c[i], f[i - 1])\n        return f[mx]\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#1388-3n","title":"1388. 3n \u5757\u62ab\u8428","text":"<p>\u95ee\u9898\u7ffb\u8bd1\uff1a\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a 3n \u7684\u73af\u5f62\u6570\u7ec4\u4e2d\uff0c\u9009\u62e9\u5176\u4e2d n \u4e2a\u4e0d\u76f8\u90bb\u7684\u6570\uff0c\u4f7f\u5f97\u8fd9 n \u4e2a\u6570\u7684\u548c\u6700\u5927\u3002</p> <p>740. \u5220\u9664\u5e76\u83b7\u5f97\u70b9\u6570\u7684\u73af\u5f62\u7248\uff0c\u89e3\u51b3\u601d\u8def\u548c\u73af\u5f62\u6253\u5bb6\u52ab\u820d\u76f8\u540c\uff0c\u73af\u72b6\u5e8f\u5217\u76f8\u8f83\u4e8e\u666e\u901a\u5e8f\u5217\uff0c\u76f8\u5f53\u4e8e\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9650\u5236\uff1a\u666e\u901a\u5e8f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u6570\u4e0d\u80fd\u540c\u65f6\u9009\u3002</p> <p>\u5982\u679c\u662f\u73af\u5f62\u95ee\u9898\uff0c\u5219\u8003\u8651 2 \u6b21\u52a8\u6001\u89c4\u5212\uff0c\u4e00\u6b21\u5220\u53bb\u7b2c\u4e00\u4e2a\u6570\uff0c\u7b2c\u4e8c\u6b21\u5220\u53bb\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u8fd4\u56de\u4e8c\u8005\u7684\u8f83\u5927\u503c\u3002</p> PythonJava <pre><code>class Solution:\n    def maxSizeSlices(self, slices: List[int]) -&gt; int:\n        m = len(slices) // 3\n\n        def calculate(slices):\n            n = len(slices)\n            # f[i][j]: \u5728\u524d i \u4e2a\u6570\u4e2d\u9009\u62e9\u4e86 j \u4e2a\u4e0d\u76f8\u90bb\u7684\u6570\u7684\u6700\u5927\u548c\n            f = [[0] * (m + 1) for _ in range(n)]\n            f[0][1] = slices[0]\n            f[1][1] = max(slices[0], slices[1])\n            for i in range(2, n):\n                for j in range(1, m + 1):\n                    f[i][j] = max(f[i - 1][j], f[i - 2][j - 1] + slices[i])\n            return f[n - 1][m]\n\n        ans1 = calculate(slices[:-1])\n        ans2 = calculate(slices[1:])\n        return max(ans1, ans2)\n</code></pre> <pre><code>class Solution {\n    public int maxSizeSlices(int[] slices) {\n        int[] t1 = new int[slices.length - 1];\n        int[] t2 = new int[slices.length - 1];\n        System.arraycopy(slices, 1, t1, 0, slices.length - 1);\n        System.arraycopy(slices, 0, t2, 0, slices.length - 1);\n        int ans1 = calculate(t1);\n        int ans2 = calculate(t2);\n        return Math.max(ans1, ans2);\n    }\n\n    private int calculate(int[] slices) {\n        int n = slices.length;\n        int m = (slices.length + 1) / 3;\n        int[][] f = new int[n][m + 1];\n        f[0][1] = slices[0];\n        f[1][1] = Math.max(slices[0], slices[1]);\n        for (int i = 2; i &lt; n; i++) {\n            for (int j = 1; j &lt;= m; j++) {\n                f[i][j] = Math.max(f[i - 1][j], f[i - 2][j - 1] + slices[i]);\n            }\n        }\n        return f[n - 1][m];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_4","title":"\u7b49\u5dee\u6570\u5217\u95ee\u9898","text":"<p>\u53d8\u5f62\uff0c\u9700\u8981\u4e24\u4e2a\u4f4d\u7f6e\u7684\u60c5\u51b5: <code>dp[i][j]</code> \u4ee5 i \u548c j \u7ed3\u5c3e\uff1a</p> <ul> <li>\u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5b50\u5e8f\u5217\u7684\u957f\u5ea6 \u2014\u2014 <code>dp[i][j]</code>: \u4ee5 j, i \u7ed3\u5c3e\uff0c\u8f6c\u79fb\u65f6\u5728 <code>[0...j]</code> \u4e2d\u627e\u6ee1\u8db3\u6761\u4ef6\u7684 k\uff0c \u8fd9\u4e00\u6b65\u53ef\u4ee5\u4e8c\u5206\u6216\u54c8\u5e0c\u8868</li> <li>\u6700\u957f\u7b49\u5dee\u6570\u5217 \u2014\u2014 <code>dp[i][j]</code>: \u4ee5 i, j \u7ed3\u5c3e\uff0c\u8f6c\u79fb\u65f6\u5728 <code>[0...i]</code> \u4e2d\u627e\u6ee1\u8db3\u6761\u4ef6\u7684 k \u8fd9\u4e00\u6b65\u7528\u54c8\u5e0c\u8868\uff0c\u952e\u4e3a\u6570\u7ec4\u503c\uff0c\u503c\u4e3a\u4fdd\u5b58\u4e0b\u6807\u7684\u5e73\u8861\u6811</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#873","title":"873. \u6700\u957f\u7684\u6590\u6ce2\u90a3\u5951\u5b50\u5e8f\u5217\u7684\u957f\u5ea6","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709 k, j, i \u4e09\u4e2a\u6307\u9488\uff0c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8981\u6c42 <code>arr[k] + arr[j] = arr[i]</code>\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4f7f\u7528 2 \u5c42 for \u5faa\u73af\uff0c\u5916\u5c42 i \u904d\u5386 <code>0 ~ n-1</code>\uff0c\u5185\u5c42 j \u904d\u5386 <code>0 ~ i-1</code>\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765 <code>target = arr[i] - arr[j]</code>\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u95ee\u9898\u8f6c\u6362\u6210\u4e86\u4e24\u6570\u4e4b\u548c\u95ee\u9898\uff0c\u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\u5982\u4f55\u5feb\u901f\u67e5\u627e\u503c\u4e3a <code>target</code> \u7684\u6570\u7684\u4e0b\u6807\uff1a\u4f7f\u7528\u54c8\u5e0c\u8868\u3002</p> <p>\u7531\u4e8e\u6bcf\u4e00\u4e2a <code>arr[i]</code>\uff0c\u63a5\u5728\u4e0d\u540c\u7684 <code>arr[j]</code> \u540e\u9762\uff0c\u53ef\u4ee5\u5f62\u6210\u4e0d\u540c\u7684\u6590\u6ce2\u90a3\u5951\u5e8f\u5217\uff0c\u5e76\u4e14\u524d\u9762\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u7684\u6590\u6ce2\u90a3\u5951\u5e8f\u5217\u7684\u957f\u5ea6\u53ef\u4ee5\u590d\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6709 2 \u4e2a\u7ef4\u5ea6\u7684 dp \u6570\u7ec4\uff1a</p> <p>\u6211\u4eec\u5b9a\u4e49\uff1a <code>f[i][j]</code> \u4e3a\u4ee5 <code>arr[i]</code> \u7ed3\u5c3e\u7684\uff0c\u63a5\u5728 <code>arr[j]</code> \u540e\u9762\u7684\u6700\u957f\u6590\u6ce2\u90a3\u5951\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> \\[f[i][j] = max(f[i][j], f[j][k] + 1)\\] <p>\u4e00\u4e9b\u7ec6\u8282\uff1a</p> <ul> <li>\u7531\u4e8e\u4efb\u4f55 2 \u4e2a\u6570\u90fd\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u524d\u4e24\u9879\uff0c\u56e0\u6b64 dp \u6570\u7ec4\u521d\u59cb\u5316\u7684\u65f6\u5019\u8981\u521d\u59cb\u5316\u4e3a 2\u3002</li> <li>\u4f7f\u7528\u54c8\u5e0c\u8868\u67e5\u627e k \u7684\u4e0b\u6807\u65f6\uff0c\u5fc5\u987b\u4fdd\u8bc1 <code>k &lt; j</code>\u3002</li> </ul> <pre><code>class Solution:\n    def lenLongestFibSubseq(self, arr: List[int]) -&gt; int:\n        n = len(arr)\n        f = [[2] * n for _ in range(n)]\n        ans = 0\n        d = dict()\n        for i, x in enumerate(arr):\n            d[x] = i\n        for i in range(n):\n            for j in range(i):\n                target = arr[i] - arr[j]\n                if target in d:\n                    k = d[target]\n                    if k &lt; j:\n                        f[i][j] = max(f[i][j], f[j][k] + 1)\n                        ans = max(ans, f[i][j])\n        return ans if ans &gt;= 3 else 0\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#1027","title":"1027. \u6700\u957f\u7b49\u5dee\u6570\u5217","text":"<p>\u76f4\u63a5\u770b\u4f18\u5316\u4e8c\u4ee3\u7801\u3002</p> <p>\u5bf9\u4e8e\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff0c\u901a\u5e38\u53ef\u4ee5\u4ece\u300c\u9009\u6216\u4e0d\u9009\u300d\u548c\u300c\u679a\u4e3e\u9009\u54ea\u4e2a\u300d\u8fd9\u4e24\u4e2a\u89d2\u5ea6\u5165\u624b\u3002 \u770b\u5230\u5b50\u5e8f\u5217\uff0c\u4f60\u53ef\u80fd\u60f3\u5230\u4e86\u300c\u9009\u6216\u4e0d\u9009\u300d\u8fd9\u4e2a\u601d\u8def\uff0c\u4f46\u662f\u672c\u9898\u8981\u5bfb\u627e\u7684\u662f\u7b49\u5dee\u5b50\u5e8f\u5217\uff0c\u5047\u8bbe\u6211\u4eec\u786e\u5b9a\u4e86\u7b49\u5dee\u5b50\u5e8f\u5217\u7684\u672b\u9879\u548c\u516c\u5dee\uff0c\u90a3\u4e48\u5176\u5b83\u6570\u4e5f\u5c31\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u5bfb\u627e\u7b49\u5dee\u5b50\u5e8f\u5217\u66f4\u50cf\u662f\u4e00\u4ef6\u300c\u679a\u4e3e\u9009\u54ea\u4e2a\u300d\u7684\u4e8b\u60c5\u4e86\u3002from: \u7075\u8336\u5c71\u827e\u5e9c</p> DP\u4f18\u5316\u4e00\u4f18\u5316\u4e8c <p>\u9664\u4e86\u7ef4\u62a4\u4ee5 <code>nums[i]</code> \u7ed3\u5c3e\u7684\u7b49\u5dee\u6570\u5217\u8fd9\u4e2a\u4fe1\u606f\u8fd8\u4e0d\u591f\uff0c\u8fd8\u9700\u8981\u989d\u5916\u518d\u7ef4\u62a4\u4e00\u4e2a\u4fe1\u606f\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u7684\u95ee\u9898\u662f\uff1a\u6211\u4eec\u7ef4\u62a4\u63a5\u5728\u54ea\u4e2a\u6570\u5b57\u4e4b\u540e\u7684 <code>nums[j]</code> \u5462\uff1f\u8fd8\u662f\u7ef4\u62a4\u516c\u5dee d \uff1f</p> <p>\u5bf9\u4e8e\u786e\u5b9a\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u6765\u8bf4\u4e8c\u8005\u90fd\u884c\uff0c\u4f46\u662f\u4e3a\u4e86 dp \u6570\u7ec4\u7684\u4fe1\u606f\u80fd\u591f\u590d\u7528\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u516c\u5dee d\u3002\u8fd9\u6837\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u7684\u63a8\u5bfc\u5f0f\u6765\u590d\u7528\u5b50\u95ee\u9898\u7684\u8ba1\u7b97\u7ed3\u679c\uff1a</p> \\[f[i][d] = max(f[i][d], f[j][d] + 1)\\] <p><code>f[i][d]</code>: \u4ee5 <code>nums[i]</code> \u7ed3\u5c3e\u4e14\u516c\u5dee\u4e3a <code>d</code> \u7684\u7b49\u5dee\u6570\u5217\u7684\u6700\u5927\u957f\u5ea6</p> <p>\u521d\u59cb\u5316\uff1a\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u957f\u5ea6\u4e3a 1 \u7684\u7b49\u5dee\u6570\u5217</p> <p>\u679a\u4e3e <code>nums[i]</code> \u4e4b\u524d\u7684\u5143\u7d20 <code>nums[j]</code>\uff0c\u516c\u5dee <code>d = nums[i] - nums[j]</code></p> <p><code>f[i][d] = max(f[i][d], f[j][d] + 1)</code></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff1a</p> <ul> <li>\u5bf9\u4e8e\u516c\u5dee\u8fd9\u4e2a\u7ef4\u5ea6\uff0c\u7531\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f00\u6570\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u54c8\u5e0c\u8868\uff0c\u4e0d\u8fc7\u54c8\u5e0c\u8868\u8981\u989d\u5916\u6ce8\u610f key \u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff08\u5e94\u8be5\u8fd4\u56de\u9ed8\u8ba4\u503c 1\uff09</li> <li>\u4e0d\u50cf\u4e0a\u4e00\u9898\uff0c\u6570\u7ec4\u4e0d\u518d\u662f\u5355\u8c03\u9012\u589e\u7684\u4e86</li> </ul> <pre><code>class Solution:\n    def longestArithSeqLength(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [{} for _ in range(n)]\n        ans = 0\n        for i in range(n):\n            for j in range(i):\n                d = nums[i] - nums[j]  # \u516c\u5dee\n                f[i][d] = max(f[i].get(d, 1), f[j].get(d, 1) + 1)\n                ans = max(ans, f[i][d])\n        return ans\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u5bf9\u4e8e <code>nums[i]</code> \u4e4b\u524d\u6240\u6709\u7684 <code>nums[j]</code>\uff0c\u4e3a\u4e86\u5f97\u5230\u6700\u957f\u7684\u7b49\u5dee\u6570\u5217\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u516c\u5dee\uff0c\u6211\u4eec\u8d2a\u5fc3\u5730\u9009\u62e9\u6700\u53f3\u8fb9\u7684\u90a3\u4e2a <code>nums[j]</code>\u3002\u56e0\u6b64\u6211\u4eec\u9006\u5e8f\u904d\u5386 j\u3002</p> <pre><code>class Solution:\n    def longestArithSeqLength(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [{} for _ in range(n)]\n        ans = 0\n        for i in range(n):\n            for j in range(i - 1, -1, -1):\n                d = nums[i] - nums[j]  # \u516c\u5dee\n                if d not in f[i]:\n                    f[i][d] = f[j].get(d, 1) + 1\n                    ans = max(ans, f[i][d])\n        return ans\n</code></pre> <p>\u7531\u4e8e\u503c\u57df\u6bd4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u7ec4\u6765\u4ee3\u66ff\u54c8\u5e0c\u8868\u3002\u7531\u4e8e\u516c\u5dee\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u4e14\u6700\u5927\u5dee\u503c\u4e3a 500\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7edf\u4e00\u5c06\u516c\u5dee\u52a0\u4e0a 500\uff0c\u8fd9\u6837\u516c\u5dee\u7684\u8303\u56f4\u5c31\u53d8\u6210\u4e86 [0,1000]\u3002</p> <pre><code>class Solution:\n    def longestArithSeqLength(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [[1] * 1001 for _ in range(n)]\n        ans = 0\n        for i in range(n):\n            for j in range(i):\n                d = nums[i] - nums[j] + 500\n                f[i][d] = max(f[i][d], f[j][d] + 1)\n                ans = max(ans, f[i][d])\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_5","title":"\u4e0e\u5176\u4ed6\u7b97\u6cd5\u914d\u5408","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#1055","title":"1055. \u5f62\u6210\u5b57\u7b26\u4e32\u7684\u6700\u77ed\u8def\u5f84","text":"<pre><code>class Solution:\n    def shortestWay(self, source: str, target: str) -&gt; int:\n        m, n = len(source), len(target)\n        ans = 0\n        j = 0\n        while j &lt; n:\n            pre = j\n            for i in range(m):\n                if j &lt; n and source[i] == target[j]:\n                    j += 1\n            if pre == j:  # \u5982\u679c j \u6ca1\u6709\u79fb\u52a8\n                return -1\n            ans += 1\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#368","title":"368. \u6700\u5927\u6574\u9664\u5b50\u96c6","text":"<p>\u5982\u679c\u8981\u8bb0\u5f55\u7b54\u6848\uff0c\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u53e6\u5f00\u4e00\u4e2a g \u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u662f\u4ece\u54ea\u8f6c\u79fb\u8fc7\u6765\u7684\u3002</p> Solution 1Solution 2 <pre><code>class Solution:\n    def largestDivisibleSubset(self, nums: List[int]) -&gt; List[int]:\n        n = len(nums)\n        nums.sort()\n        # \u81f3\u5c11\u5305\u542b\u81ea\u8eab\u4e00\u4e2a\u6570\uff0c\u56e0\u6b64\u8d77\u59cb\u957f\u5ea6\u4e3a 1\n        f = [1] * n\n        # \u7531\u81ea\u8eab\u8f6c\u79fb\u800c\u6765\n        g = [i for i in range(n)]\n        for i in range(n):\n            for j in range(i):\n                if nums[i] % nums[j] == 0:\n                    # \u5982\u679c\u80fd\u63a5\u5728\u66f4\u957f\u7684\u5e8f\u5217\u540e\u9762\uff0c\u5219\u66f4\u65b0\u300c\u6700\u5927\u957f\u5ea6\u300d&amp;\u300c\u4ece\u4f55\u8f6c\u79fb\u800c\u6765\u300d\n                    if f[j] + 1 &gt; f[i]:\n                        f[i] = f[j] + 1\n                        g[i] = j\n        # \u904d\u5386\u6240\u6709\u7684 f[i]\uff0c\u53d6\u5f97\u300c\u6700\u5927\u957f\u5ea6\u300d\u548c\u300c\u5bf9\u5e94\u4e0b\u6807\u300d\n        max_len = idx = -1\n        for i in range(n):\n            if f[i] &gt; max_len:\n                idx = i\n                max_len = f[i]\n        # \u4f7f\u7528 g[] \u6570\u7ec4\u56de\u6eaf\u51fa\u5177\u4f53\u65b9\u6848\n        ans = []\n        while len(ans) &lt; max_len:\n            ans.append(nums[idx])\n            idx = g[idx]\n        ans.reverse()\n        return ans\n</code></pre> <pre><code>class Solution:\n    def largestDivisibleSubset(self, nums: List[int]) -&gt; List[int]:\n        n = len(nums)\n        nums.sort()\n        # \u6bcf\u4e2a f[i] \u90fd\u662f\u4e00\u4e2a\u6700\u5927\u6574\u9664\u5b50\u96c6\n        f = [[x] for x in nums]\n        ans = f[0]\n        for i in range(n):\n            for j in range(i):\n                if f[i][-1] % f[j][-1] == 0 and len(f[j]) &gt;= len(f[i]):\n                    f[i] = f[j] + [f[i][-1]]\n                    if len(f[i]) &gt; len(ans):\n                        ans = f[i]\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_6","title":"\u5176\u4ed6\u5355\u4e32\u95ee\u9898","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#32","title":"32. \u6700\u957f\u6709\u6548\u62ec\u53f7","text":"<p><code>f[i]</code>: \u4ee5 <code>s[i]</code> \u7ed3\u5c3e\u7684\u6700\u957f\u6709\u6548\u62ec\u53f7\u7684\u957f\u5ea6\u3002\u663e\u7136\uff0c\u6709\u6548\u7684\u5b50\u4e32\u4e00\u5b9a\u4ee5 <code>\")\"</code> \u7ed3\u5c3e\u3002</p> <p>\u6211\u4eec\u4ece\u524d\u5f80\u540e\u904d\u5386\u5b57\u7b26\u4e32\u6c42\u89e3\uff0c\u6bcf\u4e24\u4e2a\u5b57\u7b26\u68c0\u67e5\u4e00\u6b21\uff1a</p> <ul> <li><code>s[i] == ')' \u4e14 s[i-1] == '('</code>\uff0c\u4e5f\u5c31\u662f\u5f62\u5982 <code>\"...()\"</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\uff1a</li> </ul> \\[f[i] = 2 + f[i-2]\\] <ul> <li><code>s[i] == ')' \u4e14 s[i-1] == ')'</code>\uff0c\u4e5f\u5c31\u662f\u5f62\u5982 <code>\"...))\"</code>\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c <code>s[i - f[i-1] - 1] == '('</code>\uff0c\u90a3\u4e48\uff1a</li> </ul> \\[f[i] = 2 + f[i - 1] + f[i - f[i-1] - 2]\\] <p>\u8fd9\u91cc\u7684 <code>f[i - 1]</code> \u6307\u7684\u662f\u5185\u90e8\u7684\u6709\u6548\u5b50\u4e32\u957f\u5ea6\uff0c<code>f[i - f[i-1] - 2]</code> \u6307\u7684\u662f\u5916\u90e8\u7684\u6709\u6548\u5b50\u4e32\u957f\u5ea6\u3002</p> <p></p> DP\u6808 <pre><code>class Solution:\n    def longestValidParentheses(self, s: str) -&gt; int:\n        if not s:\n            return 0\n        n = len(s)\n        f = [0] * n\n        for i in range(n):\n            if s[i] == ')':\n                if i &gt; 0 and s[i - 1] == '(':\n                    f[i] = 2 + (f[i - 2] if i - 2 &gt;= 0 else 0)\n                elif i &gt; 0 and s[i - 1] == ')' and i - f[i - 1] - 1 &gt;= 0 and s[i - f[i - 1] - 1] == '(':\n                    f[i] = 2 + f[i - 1] + (f[i - f[i - 1] - 2] if i - f[i - 1] - 2 &gt;= 0 else 0)\n        return max(f)\n</code></pre> <p>\u601d\u8def\uff1a\u5229\u7528\u6808\u5148\u627e\u5230\u6240\u6709\u53ef\u4ee5\u5339\u914d\u7684\u7d22\u5f15\u4e0b\u6807\uff0c\u7136\u540e\u627e\u51fa\u8fd9\u4e9b\u7d22\u5f15\u4e2d\u7684\u6700\u957f\u8fde\u7eed\u6570\u5217\u3002</p> <p>\u4f8b\u5982\uff1a<code>s = )(()())</code>\uff0c\u6211\u4eec\u7528\u6808\u53ef\u4ee5\u627e\u5230\uff1a</p> <ul> <li> <p>\u4f4d\u7f6e 2 \u548c\u4f4d\u7f6e 3 \u5339\u914d</p> </li> <li> <p>\u4f4d\u7f6e 4 \u548c\u4f4d\u7f6e 5 \u5339\u914d</p> </li> <li> <p>\u4f4d\u7f6e 1 \u548c\u4f4d\u7f6e 6 \u5339\u914d</p> </li> </ul> <p>\u8fd9\u4e2a\u6570\u7ec4\u4e3a\uff1a<code>2,3,4,5,1,6</code> \u8fd9\u662f\u901a\u8fc7\u6808\u627e\u5230\u7684\uff0c\u6211\u4eec\u6309\u9012\u589e\u6392\u5e8f\uff01<code>1,2,3,4,5,6</code></p> <p>\u627e\u51fa\u8be5\u6570\u7ec4\u7684\u6700\u957f\u8fde\u7eed\u6570\u5217\u7684\u957f\u5ea6\u5c31\u662f\u6700\u957f\u6709\u6548\u62ec\u53f7\u957f\u5ea6\uff01</p> <pre><code>class Solution:\n    def longestValidParentheses(self, s: str) -&gt; int:\n        if not s:\n            return 0\n        res = []\n        stack = []\n        for i in range(len(s)):\n            if s[i] =='(':\n                stack.append(i)\n            if stack and s[i] == ')':\n                res.append(stack.pop())\n                res.append(i)\n        res.sort()\n        i = 0\n        ans = 0\n        n = len(res)\n        while i &lt; n:\n            j = i\n            while j &lt; n - 1 and res[j + 1] == res[j] + 1:\n                j += 1\n            ans = max(ans, j - i + 1)\n            i = j + 1\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#413","title":"413. \u7b49\u5dee\u6570\u5217\u5212\u5206","text":"\u66b4\u529b\u89e3\u6cd5DP <p>\u5916\u5c42 for \u5faa\u73af\u679a\u4e3e\u7b49\u5dee\u6570\u5217\u7684\u5f00\u5934\uff0c\u5185\u5c42 for \u5faa\u73af\u679a\u4e3e\u7b49\u5dee\u6570\u5217\u7684\u7ed3\u5c3e\uff0c\u76f4\u5230 <code>nums[j] - nums[j - 1] != d</code> \u5373\u53ef break\u3002</p> <pre><code>class Solution:\n    def numberOfArithmeticSlices(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        if n &lt; 3:\n            return 0\n        ans = 0\n        for i in range(n - 1):\n            d = nums[i + 1] - nums[i]\n            for j in range(i + 2, n):\n                if nums[j] - nums[j - 1] == d:\n                    ans += 1\n                else:\n                    break\n        return ans\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <pre><code>class Solution:\n    def numberOfArithmeticSlices(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        if n &lt; 3:\n            return 0\n        # \u5b9a\u4e49\u72b6\u6001 dp[i] : \u4ee5 nums[i] \u7ed3\u5c3e\u7684\u7b49\u5dee\u5b50\u6570\u5217\u7684\u4e2a\u6570\n        f = [0] * n\n        ans = 0\n        for i in range(2, n):\n            if nums[i] - nums[i - 1] == nums[i - 1] - nums[i - 2]:\n                f[i] = f[i - 1] + 1\n                ans += f[i]\n            # else:\n            #     f[i] = 0\n        return ans\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#91","title":"91. \u89e3\u7801\u65b9\u6cd5","text":"DP\u8bb0\u5fc6\u5316\u641c\u7d22 <p>\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u5b57\u7b26\u4e32 s \u7684\u67d0\u4e2a\u4f4d\u7f6e i \u800c\u8a00\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u300c\u4f4d\u7f6e i \u81ea\u5df1\u80fd\u5426\u5f62\u6210\u72ec\u7acb item \u300d\u548c\u300c\u4f4d\u7f6e i \u80fd\u591f\u4e0e\u4e0a\u4e00\u4f4d\u7f6e\uff08i-1\uff09\u80fd\u5426\u5f62\u6210 item\u300d\uff0c\u800c\u4e0d\u5173\u5fc3 i-1 \u4e4b\u524d\u7684\u4f4d\u7f6e\u3002</p> <p>\u5b9a\u4e49 <code>f[i]</code> \u4e3a\u8003\u8651\u524d i \u4e2a\u5b57\u7b26\u7684\u89e3\u7801\u65b9\u6848\u6570\u3002</p> <p>\u5bf9\u4e8e\u5b57\u7b26\u4e32 s \u7684\u4efb\u610f\u4f4d\u7f6e i \u800c\u8a00\uff0c\u5176\u5b58\u5728\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u53ea\u80fd\u7531\u4f4d\u7f6e i \u7684\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a item\uff0c\u8f6c\u79fb\u903b\u8f91\u4e3a \\(f[i] = f[i - 1]\\)</li> <li>\u53ea\u80fd\u7531\u4f4d\u7f6e i \u7684\u4e0e\u524d\u4e00\u4f4d\u7f6e\uff08i-1\uff09\u5171\u540c\u4f5c\u4e3a\u4e00\u4e2a item\uff0c\u8f6c\u79fb\u903b\u8f91\u4e3a \\(f[i] = f[i - 2]\\)</li> <li>\u4f4d\u7f6e i \u65e2\u80fd\u4f5c\u4e3a\u72ec\u7acb item \u4e5f\u80fd\u4e0e\u4e0a\u4e00\u4f4d\u7f6e\u5f62\u6210 item\uff0c\u8f6c\u79fb\u903b\u8f91\u4e3a \\(f[i] = f[i - 1] + f[i - 2]\\)</li> </ul> <pre><code>class Solution:\n    def numDecodings(self, s: str) -&gt; int:\n        n = len(s)\n        s = \" \" + s\n        mapping = dict()\n        for i in range(1, 27):\n            mapping[str(i)] = chr(i + ord('A') - 1)\n        f = [0] * (n + 1)\n        f[0] = 1\n        for i in range(1, n + 1):\n            if s[i] in mapping:\n                f[i] = f[i - 1]\n            if (s[i - 1] + s[i]) in mapping:\n                f[i] += f[i - 2] if i &gt;= 2 else 0\n        return f[n]\n</code></pre> <pre><code>class Solution:\n    def numDecodings(self, s: str) -&gt; int:\n        n = len(s)\n        mapping = dict()\n        for i in range(1, 27):\n            mapping[str(i)] = chr(i + ord('A') - 1)\n\n        @cache\n        def dfs(idx):\n            if idx == n:\n                return 1\n            ans = 0\n            if s[idx] in mapping:\n                ans += dfs(idx + 1)\n            if idx + 1 &lt; n and (s[idx] + s[idx + 1]) in mapping:\n                ans += dfs(idx + 2)\n            return ans\n\n        return dfs(0)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#132-ii","title":"132. \u5206\u5272\u56de\u6587\u4e32 II","text":"DP\u8bb0\u5fc6\u5316\u641c\u7d22 <p>\u7531\u4e8e\u9700\u8981\u9891\u7e41\u5224\u65ad\u67d0\u4e2a\u4e0b\u6807\u533a\u95f4\u5185\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d0\u524d\u9884\u5904\u7406\u4e00\u4e2a\u4e8c\u7ef4\u5e03\u5c14\u6570\u7ec4 g\uff0c<code>g[i][j]</code> \u8868\u793a <code>s[i...j]</code> \u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u4e32\u3002</p> <p>\u6211\u4eec\u5b9a\u4e49 <code>f[i]</code> \u8868\u793a\u4ee5 i \u7ed3\u5c3e\u7684\u5206\u5272\u6210\u56de\u6587\u4e32\u7684\u6700\u5c11\u6b21\u6570\u3002</p> <ul> <li>\u5982\u679c <code>s[0...i]</code> \u672c\u8eab\u5c31\u662f\u56de\u6587\u4e32\u3002\u90a3\u4e48\u6700\u5c0f\u5206\u5272\u6b21\u6570\u4e3a 0\uff0c\u6b64\u65f6\u6709 \\(f[i] = 0\\)</li> <li>\u5982\u679c <code>s[0...i]</code> \u4e0d\u662f\u56de\u6587\u4e32\u3002\u6b64\u65f6\u6211\u4eec\u679a\u4e3e\u5de6\u7aef\u70b9 <code>j</code>\uff0c\u5982\u679c <code>s[j+1...i]</code> \u8fd9\u4e00\u6bb5\u662f\u56de\u6587\u4e32\u7684\u8bdd\uff0c\u90a3\u4e48 \\(f[i] = min(f[i], f[j] + 1)\\)\u3002\u5bf9\u4e8e\u591a\u4e2a\u53ef\u80fd\u7684 <code>j</code>\uff0c\u9009\u53d6\u6700\u5c0f\u7684\u65b9\u6848\u6570\u3002</li> </ul> <pre><code>class Solution:\n    def minCut(self, s: str) -&gt; int:\n        n = len(s)\n        if n == 1:\n            return 0\n        # \u9884\u5904\u7406\u5224\u65ad\u56de\u6587\u4e32\n        g = [[False] * n for _ in range(n)]\n        for i in range(n - 1, -1, -1):\n            for j in range(i, n):\n                length = j - i + 1\n                if s[i] == s[j]:\n                    if length &lt;= 2:\n                        g[i][j] = True\n                    else:\n                        g[i][j] = g[i + 1][j - 1]\n\n        f = [inf] * n\n        for i in range(n):\n            if g[0][i]:\n                f[i] = 0\n            else:\n                for j in range(i):\n                    if g[j + 1][i]:\n                        f[i] = min(f[i], f[j] + 1)\n        return f[n - 1]\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <pre><code>class Solution:\n    def minCut(self, s: str) -&gt; int:\n        n = len(s)\n        if n == 1:\n            return 0\n        # \u9884\u5904\u7406\u5224\u65ad\u56de\u6587\u4e32\n        g = [[False] * n for _ in range(n)]\n        for i in range(n - 1, -1, -1):\n            for j in range(i, n):\n                length = j - i + 1\n                if s[i] == s[j]:\n                    if length &lt;= 2:\n                        g[i][j] = True\n                    else:\n                        g[i][j] = g[i + 1][j - 1]\n\n        @cache\n        def dfs(i):\n            if i &lt; 0:\n                return 0\n            ans = inf\n            if g[0][i]:\n                return 0\n            for j in range(i - 1, -1, -1):\n                if g[j + 1][i]:\n                    ans = min(ans, dfs(j) + 1)\n            return ans\n\n        return dfs(n - 1)\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#801","title":"801. \u4f7f\u5e8f\u5217\u9012\u589e\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570","text":"<p>\u72b6\u6001\u673a\u6a21\u578b\uff1a</p> <p>\u56e0\u4e3a\u6bcf\u6b21\u53ea\u80fd\u4ea4\u6362\u76f8\u540c\u4f4d\u7f6e\u7684\u4e24\u4e2a\u6570\uff0c\u6240\u4ee5\u4f4d\u7f6e i \u4e00\u5b9a\u81f3\u5c11\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e2d\u7684\u4e00\u79cd\uff1a</p> <ol> <li>\\(nums_1[i] &gt; nums_1[i - 1] \\And nums_2[i] &gt; nums_2[i - 1]\\)</li> <li>\\(nums_1[i] &gt; nums_2[i - 1] \\And nums_2[i] &gt; nums_1[i - 1]\\)</li> </ol> <p>\u5426\u5219\u65e0\u8bba\u662f\u5426\u4ea4\u6362 <code>nums1[i]</code> \u548c <code>nums2[i]</code> \u90fd\u4e0d\u53ef\u80fd\u4f7f\u6570\u7ec4 <code>nums1</code> \u548c <code>nums2</code> \u6700\u7ec8\u4e25\u683c\u9012\u589e\u3002\u56e0\u4e3a\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u6765\u8bf4\u53ea\u6709\u4ea4\u6362\u548c\u4e0d\u4ea4\u6362\u4e24\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe \\(dp[i][0/1]\\) \u8868\u793a\u5230\u4f4d\u7f6e i \u4e3a\u6b62\u4f7f\u6570\u7ec4 <code>nums1</code> \u548c <code>nums2</code> \u6ee1\u8db3\u4e25\u683c\u9012\u589e\u5e76\u4e14\u4f4d\u7f6e i \u4e0d\u8fdb\u884c/\u8fdb\u884c\u4ea4\u6362\u64cd\u4f5c\u7684\u6700\u5c0f\u64cd\u4f5c\u6570\u3002</p> <p></p> <pre><code>class Solution:\n    def minSwap(self, nums1: List[int], nums2: List[int]) -&gt; int:\n        n = len(nums1)\n        # f[i][0/1] \u8868\u793a\u8ba9 nums1 \u548c nums2 \u7684\u524d i \u4e2a\u6570\u4e25\u683c\u9012\u589e\u6240\u9700\u64cd\u4f5c\u7684\u6700\u5c0f\u6b21\u6570\n        # \u5176\u4e2d f[i][0] \u4e0d\u4ea4\u6362 nums1[i] \u548c nums2[i]\uff0cf[i][1] \u4ea4\u6362 nums1[i] \u548c nums2[i]\n        f = [[inf, inf] for _ in range(n)]\n        f[0] = [0, 1]\n        for i in range(1, n):\n            if nums1[i - 1] &lt; nums1[i] and nums2[i - 1] &lt; nums2[i]:\n                f[i][0] = f[i - 1][0]\n                f[i][1] = f[i - 1][1] + 1\n            if nums2[i - 1] &lt; nums1[i] and nums1[i - 1] &lt; nums2[i]:\n                f[i][0] = min(f[i][0], f[i - 1][1])\n                f[i][1] = min(f[i][1], f[i - 1][0] + 1)\n        return min(f[-1])\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#871","title":"871. \u6700\u4f4e\u52a0\u6cb9\u6b21\u6570","text":"\u7ebf\u6027 DP\u8d2a\u5fc3 + \u5806 <pre><code>class Solution:\n    def minRefuelStops(self, target: int, startFuel: int, stations: List[List[int]]) -&gt; int:\n        n = len(stations)\n        dp = [startFuel] + [0] * n\n        for i in range(n):\n            pos, fuel = stations[i][0], stations[i][1]\n            for j in range(i, -1, -1):\n                if dp[j] &gt;= pos:\n                    dp[j + 1] = max(dp[j + 1], dp[j] + fuel)\n        for i in range(n + 1):\n            if dp[i] &gt;= target:\n                return i\n        return -1\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <pre><code>class Solution {\n    public int minRefuelStops(int target, int startFuel, int[][] stations) {\n        int ans = 0;\n        int curFuel = startFuel;\n        int curPos = 0;\n        PriorityQueue&lt;Integer&gt; pq = new PriorityQueue&lt;&gt;((a, b) -&gt; b - a);\n        // Loop through all stations\n        for (int[] station : stations) {\n            int pos = station[0];\n            int fuel = station[1];\n            // While we can't reach the next station\n            while (curFuel &lt; pos - curPos) {\n                if (pq.isEmpty()) {\n                    // If we can't refuel, return -1\n                    return -1;\n                }\n                // Refuel with the largest amount of fuel available\n                curFuel += pq.poll();\n                ans++;\n            }\n            // Add the current station's fuel to the priority queue\n            pq.offer(fuel);\n            curFuel -= pos - curPos;\n            curPos = pos;\n        }\n        // Check if we can reach the target\n        while (curFuel &lt; target - curPos) {\n            if (pq.isEmpty()) {\n                return -1;\n            }\n            curFuel += pq.poll();\n            ans++;\n        }\n        return ans;\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nlogn)\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_7","title":"\u53cc\u4e32\u95ee\u9898","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#lcs","title":"LCS","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#583","title":"583. \u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5220\u9664\u64cd\u4f5c","text":"\u975e LCS \u89e3\u6cd5LCS <pre><code>class Solution:\n    def minDistance(self, word1: str, word2: str) -&gt; int:\n        m, n = len(word1), len(word2)\n\n        @cache\n        def dfs(i, j):\n            if i &lt; 0 and j &lt; 0:\n                return 0\n            if i &lt; 0:\n                return j + 1\n            if j &lt; 0:\n                return i + 1\n            if word1[i] == word2[j]:\n                return dfs(i - 1, j - 1)\n            else:\n                return min(dfs(i - 1, j), dfs(i, j - 1)) + 1\n\n        return dfs(m - 1, n - 1)\n</code></pre> <pre><code>class Solution:\n    def minDistance(self, s: str, t: str) -&gt; int:\n        m, n = len(s), len(t)\n        s = \" \" + s\n        t = \" \" + t\n        f = [[0] * (n + 1) for _ in range(m + 1)]\n        for i in range(1, m + 1):\n            for j in range(1, n + 1):\n                if s[i] == t[j]:\n                    f[i][j] = f[i - 1][j - 1] + 1\n                else:\n                    f[i][j] = max(f[i - 1][j], f[i][j - 1])\n        lcs = f[m][n]\n        return m + n - 2 * lcs\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(mn)\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/","title":"\u80cc\u5305\u95ee\u9898","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#01","title":"01 \u80cc\u5305\u95ee\u9898","text":"<p>\u6709 n \u4ef6\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a V \u7684\u80cc\u5305\uff0c\u7b2c i \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u662f <code>v[i]</code> \uff0c\u4ef7\u503c\u662f <code>w[i]</code> \uff0c\u6c42\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\u53ef\u4f7f\u4ef7\u503c\u603b\u548c\u6700\u5927\u3002</p> <p>01 \u80cc\u5305\u95ee\u9898\u662f\u6700\u57fa\u7840\u7684\u80cc\u5305\u95ee\u9898\uff0c\u7279\u70b9\u662f\uff1a\u6bcf\u79cd\u7269\u54c1\u4ec5\u6709\u4e00\u4ef6\uff0c\u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1\u6709\u653e\u6216\u4e0d\u653e\u4e24\u79cd\u9009\u62e9\u3002</p> <p>\u5982\u679c\u4ece\u66b4\u529b\u89e3\u6cd5\u51fa\u53d1\uff0c\u5373\u4f7f\u7528\u56de\u6eaf\u6cd5\u53bb\u6a21\u62df\u6bcf\u4ef6\u7269\u54c1\u653e\u548c\u4e0d\u653e\u7684 2 \u79cd\u60c5\u51b5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6307\u6570\u7ea7\u522b\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u56de\u6eaf\u6cd5\u7684\u4ee3\u7801\u4e3a\uff1a</p> <pre><code>public class Backpack {\n    int ans = 0;\n\n    public int backpack(int[] weight, int[] value, int volume) {\n        backtrack(weight, value, volume, 0, 0, 0);\n        return ans;\n    }\n\n    private void backtrack(int[] weight, int[] value, int volume, int curWeight, int curValue, int idx) {\n        if (curWeight &gt; volume) return;\n        int n = weight.length;\n        if (idx &gt;= n) return;\n        ans = Math.max(ans, curValue);\n        backtrack(weight, value, volume, curWeight, curValue, idx + 1);\n        backtrack(weight, value, volume, curWeight + weight[idx], curValue + value[idx], idx + 1);\n    }\n\n    @Test\n    public void test() {\n        int[] weight = {1, 3, 4};\n        int[] value = {15, 20, 30};\n        int volume = 4;\n        System.out.println(backpack(weight, value, volume));\n    }\n}\n</code></pre> <p>\u5bf9\u4e8e\u4e0a\u8ff0\u95ee\u9898\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u4f18\u5316\u7684\u6807\u51c6\u65b9\u6cd5\u5c31\u662f\u5957\u7528\u80cc\u5305\u95ee\u9898\u7684\u6a21\u578b\u3002</p> <p>\u7b2c\u4e00\u6b65\uff1a\u5b9a\u4e49 DP \u6570\u7ec4</p> <p>\u6211\u4eec\u5b9a\u4e49 <code>dp[i][j]</code> \u8868\u793a\u4ece\u4e0b\u6807\u4e3a <code>[0...i]</code> \u4e2d\u7684\u7269\u54c1\u4e2d\u9009\u7269\u54c1\uff0c\u653e\u5165\u4e00\u4e2a\u5bb9\u91cf\u4e3a j \u7684\u80cc\u5305\uff0c\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u7b2c\u4e8c\u6b65\uff1a\u786e\u5b9a\u9012\u63a8\u516c\u5f0f</p> <p>\u53c2\u8003\u56de\u6eaf\u7684\u601d\u8def\uff0c\u53ef\u4ee5\u4ece 2 \u4e2a\u65b9\u5411\u63a8\u51fa\u6765 <code>dp[i][j]</code>\uff1a</p> <ul> <li>\u4e0d\u653e\u7269\u54c1 i\uff1a\u6b64\u65f6 <code>dp[i][j] = dp[i-1][j]</code></li> <li>\u653e\u7269\u54c1 i\uff1a\u6b64\u65f6 <code>dp[i][j] = dp[i-1][j-v[i]] + w[i]</code></li> </ul> <p>\u56e0\u6b64\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a</p> <p>\\(f[i][j] = max(f[i-1][j], f[i-1][j-v[i]] + w[i])\\)</p> <p>\u7b2c\u4e09\u6b65\uff1aDP \u6570\u7ec4\u521d\u59cb\u5316</p> <p>\u5f53\u80cc\u5305\u5bb9\u91cf j \u4e3a 0 \u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u653e\u5165\u4efb\u4f55\u7269\u54c1\uff0c\u56e0\u6b64 <code>dp[i][0] = 0</code>\u3002\u5f53\u7269\u54c1\u7f16\u53f7 i \u4e3a 0 \u7684\u65f6\u5019\uff0c\u5982\u679c\u80cc\u5305\u80fd\u88c5\u4e0b\u7269\u54c1 0\uff0c\u5373 <code>j &gt;= v[0]</code> \u65f6\uff0c\u5219 <code>dp[0][j] = w[0]</code>\uff1b\u5426\u5219 <code>dp[0][j] = 0</code>\u3002</p> <p>\u56e0\u6b64\uff0c\u521d\u59cb\u5316\u7684\u4ee3\u7801\u4e3a\uff1a</p> <pre><code>for (int j = v[0]; j &lt;= V; j++) {\n    dp[0][j] = w[0];\n}\n</code></pre> <p>\u7b2c\u56db\u6b65\uff1a\u786e\u5b9a\u904d\u5386\u987a\u5e8f</p> <p>\u6709 2 \u4e2a\u904d\u5386\u7684\u7ef4\u5ea6\uff1a\u7269\u54c1\uff08i\uff09\u4e0e\u80cc\u5305\u5bb9\u91cf\uff08j\uff09</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5148\u904d\u5386\u7269\u54c1\u548c\u5148\u904d\u5386\u80cc\u5305\u5bb9\u91cf\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u5148\u904d\u5386\u7269\u54c1\u66f4\u597d\u7406\u89e3\u3002</p> <pre><code>for (int i = 1; i &lt; n; i++) { // \u904d\u5386n\u4e2a\u7269\u54c1\n    for (int j = 0; j &lt;= V; j++) { // \u904d\u5386\u80cc\u5305\u5bb9\u91cf\n        dp[i][j] = dp[i - 1][j]; // \u4e0d\u88c5\u7269\u54c1i\n        if (j &gt;= v[i]) { // \u88c5\u7269\u54c1i\uff0c\u9700\u8981 j &gt;= v[i]\n            dp[i][j] = Math.max(dp[i - 1][j], dp[i - 1][j - v[i]] + w[i]);\n        }\n    }\n}\n\nfor (int j = 0; j &lt;= V; j++) { // \u904d\u5386\u80cc\u5305\u5bb9\u91cf\n    for (int i = 1; i &lt; n; i++) { // \u904d\u5386n\u4e2a\u7269\u54c1\n        dp[i][j] = dp[i - 1][j]; // \u4e0d\u88c5\u7269\u54c1i\n        if (j &gt;= v[i]) { // \u88c5\u7269\u54c1i\uff0c\u9700\u8981 j &gt;= v[i]\n            dp[i][j] = Math.max(dp[i - 1][j], dp[i - 1][j - v[i]] + w[i]);\n        }\n    }\n}\n</code></pre> <p>\u7b2c\u4e94\u6b65\uff08\u53ef\u9009\uff09\uff1a\u6eda\u52a8\u6570\u7ec4\u4f18\u5316</p> <p>\u4ece\u8f6c\u79fb\u65b9\u7a0b \\(f[i][j] = max(f[i-1][j], f[i-1][j-v[i]] + w[i])\\) \u53ef\u77e5\uff0c\u7b2c i \u5c42\u7684 DP \u6570\u7ec4\u5b8c\u5168\u662f\u4ece\u7b2c i-1 \u5c42\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u628a\u4e8c\u7ef4\u6570\u7ec4\u538b\u7f29\u6210\u4e00\u7ef4\u7684\uff0c\u5373 \\(f[j] = max(f[j], f[j-v[i]] + w[i])\\)\u3002</p> <p>\u5728\u4e00\u7ef4 dp \u6570\u7ec4\u4e2d\uff0c<code>dp[j]</code> \u8868\u793a\uff1a\u5bb9\u91cf\u4e3a j \u7684\u80cc\u5305\uff0c\u6240\u80cc\u7684\u7269\u54c1\u4ef7\u503c\u53ef\u4ee5\u6700\u5927\u4e3a <code>dp[j]</code>\u3002</p> <p>\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f18\u5316\u4e4b\u524d\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u66f4\u65b0 <code>dp[i][j]</code> \u65f6\u7528\u7684\u662f i-1 \u5c42\u7684\u6570\u636e\uff0c\u4f46\u662f\u4f18\u5316\u6210\u4e00\u7ef4\u4e4b\u540e\uff0c\u5982\u679c\u4f9d\u7136\u662f\u4ece\u5de6\u5230\u53f3/\u4ece\u5c0f\u5230\u5927\u904d\u5386\u7684\u987a\u5e8f\uff0c\u90a3\u4e48\u4e0a\u4e00\u5c42\u7684\u6570\u636e\u4f1a\u88ab\u66f4\u65b0\u7684 <code>dp[j]</code> \u8986\u76d6\u6389\uff0c\u56e0\u6b64\u4f1a\u4ea7\u751f\u9519\u8bef\u7684\u7ed3\u679c\u3002\uff08\u5373\u7528\u4e86\u7b2c i \u5c42\u7684\u6570\u636e\u53bb\u66f4\u65b0\u7b2c i \u5c42\uff0c\u6362\u53e5\u8bdd\u8bf4\u4e5f\u5c31\u662f\u7269\u54c1 i \u88ab\u653e\u5165\u4e86\u4e0d\u6b62\u4e00\u6b21\uff0c\u800c\u5012\u5e8f\u904d\u5386\u662f\u4e3a\u4e86\u4fdd\u8bc1\u7269\u54c1 i \u53ea\u88ab\u653e\u5165\u80cc\u5305\u4e00\u6b21\uff09\u3002\u56e0\u6b64\uff0c\u5728\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u65f6\uff0c\u8981\u6ce8\u610f\u904d\u5386\u987a\u5e8f\u662f\u80cc\u5305\u5bb9\u91cf\u4ece\u5927\u5230\u5c0f\u7684\u3002</p> <p>\u5173\u4e8e\u521d\u59cb\u5316\u7684\u95ee\u9898\uff1a<code>dp[j]</code> \u8868\u793a\u5bb9\u91cf\u4e3a j \u7684\u80cc\u5305\uff0c\u6240\u80cc\u7684\u7269\u54c1\u4ef7\u503c\u53ef\u4ee5\u6700\u5927\u4e3a <code>dp[j]</code>\uff0c\u90a3\u4e48 <code>dp[0]</code> \u5c31\u5e94\u8be5\u662f 0\uff0c\u56e0\u4e3a\u80cc\u5305\u5bb9\u91cf\u4e3a 0 \u6240\u80cc\u7684\u7269\u54c1\u7684\u6700\u5927\u4ef7\u503c\u5c31\u662f 0\u3002\u53e6\u5916\uff0c\u6211\u4eec\u5728\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u4e60\u60ef\u5148\u521d\u59cb\u5316 <code>dp[0][j]</code> \u7136\u540e\u904d\u5386\u65f6\u518d\u4ece <code>i = 1</code> \u5f00\u59cb\uff0c\u4f46\u5728\u4e00\u4f4d\u6570\u7ec4\u4e2d\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece <code>i = 0</code> \u5f00\u59cb\uff0c\u56e0\u4e3a <code>i = 0</code> \u8fd9\u4e00\u8f6e\u76f8\u5f53\u4e8e\u5c31\u662f\u6211\u4eec\u5728\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u521d\u59cb\u5316 <code>dp[0][j]</code>\uff08\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u4ee3\u5165 i = 0 \u65f6\u5c31\u61c2\u4e86\uff0c\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u7269\u54c1 0\uff0c\u53ea\u8981 <code>j&gt;=v[0]</code>\uff0c<code>dp[j] = w[0]</code>\uff09\u3002</p> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7684\u7ed3\u8bba\u662f\uff1a\u5916\u5c42\u987a\u5e8f\u904d\u5386\uff0c\u5185\u5c42\u5012\u5e8f\u904d\u5386\u80cc\u5305\u3002</p> <pre><code>for (int i = 0; i &lt; n; i++) { // \u904d\u5386n\u4e2a\u7269\u54c1\n    for (int j = V; j &gt;= v[i]; j--) { // \u904d\u5386\u80cc\u5305\u5bb9\u91cf\n        dp[j] = Math.max(dp[j], dp[j - v[i]] + w[i]);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#01_1","title":"\u6a21\u677f\u9898\uff1a01 \u80cc\u5305\u95ee\u9898","text":"<p>2. 01 \u80cc\u5305\u95ee\u9898</p> \u6807\u51c6\u505a\u6cd5\u4e0b\u6807\u4ece 1 \u5f00\u59cb <pre><code>import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt(); // \u7269\u54c1\u6570\u91cf\n        int V = sc.nextInt(); // \u80cc\u5305\u5bb9\u91cf\n        int[] v = new int[n]; // \u6bcf\u4ef6\u7269\u54c1\u7684\u4f53\u79ef\n        int[] w = new int[n]; // \u6bcf\u4ef6\u7269\u54c1\u7684\u4ef7\u503c\n        for (int i = 0; i &lt; n; i++) {\n            v[i] = sc.nextInt();\n            w[i] = sc.nextInt();\n        }\n        int[][] dp = new int[n][V + 1];\n        // \u521d\u59cb\u5316\n        for (int j = v[0]; j &lt;= V; j++) {\n            dp[0][j] = w[0];\n        }\n        for (int i = 1; i &lt; n; i++) { // \u904d\u5386\u7269\u54c1\n            for (int j = 0; j &lt;= V; j++) { // \u904d\u5386\u80cc\u5305\u5bb9\u91cf\n                dp[i][j] = dp[i - 1][j]; // if (j &lt; v[i]) \u4e0d\u88c5\n                if (j &gt;= v[i]) { // \u88c5\uff0c\u4f46\u9700\u8981 j &gt;= v[i]\n                    dp[i][j] = Math.max(dp[i][j], dp[i - 1][j - v[i]] + w[i]);\n                }\n            }\n        }\n        System.out.println(dp[n - 1][V]);\n    }\n}\n</code></pre> <pre><code>n, V = map(int, input().split())\nv = [0] * (n + 1)\nw = [0] * (n + 1)\nfor i in range(1, n + 1):\n    v[i], w[i] = map(int, input().split())\n\nf = [[0] * (V + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):  # \u904d\u5386\u7269\u54c1\n    for j in range(V + 1):  # \u904d\u5386\u80cc\u5305\u5bb9\u91cf\n        f[i][j] = f[i - 1][j]  # if j &lt; v[i]\uff0c\u4e0d\u9009\n        if j &gt;= v[i]:  # \u9009\uff0c\u4f46\u662f\u9700\u8981 j &gt;= v[i]\n            f[i][j] = max(f[i][j], f[i - 1][j - v[i]] + w[i])\n\nprint(f[n][V])\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_1","title":"\u8fd9\u4e2a\u80cc\u5305\u80fd\u88c5\u6ee1\u5417\uff1f","text":"<p>416. \u5206\u5272\u7b49\u548c\u5b50\u96c6</p> <p>\u9898\u76ee\u8981\u6c42\uff1a\u5c06\u6570\u7ec4\u5206\u5272\u6210\u4e24\u4e2a\u5b50\u96c6\uff0c\u4f7f\u5f97\u4e24\u4e2a\u5b50\u96c6\u7684\u5143\u7d20\u548c\u76f8\u7b49\u3002\u8fd9\u53e5\u8bdd\u7b49\u4ef7\u4e8e\uff0c\u5982\u679c\u6570\u7ec4\u548c\u4e3a <code>sum</code>\uff0c\u76f8\u5f53\u4e8e\u8981\u6c42\u6570\u7ec4\u91cc\u80fd\u5426\u51fa\u73b0\u603b\u548c\u4e3a <code>sum/2</code> \u7684\u5b50\u96c6\uff08\u5f53\u7136\uff0c\u5982\u679c <code>sum</code> \u4e3a\u5947\u6570\u65f6\u76f4\u63a5\u53ef\u4ee5\u8fd4\u56de false\uff09\u3002\u5373\u80cc\u5305\u5bb9\u91cf\u4e3a <code>sum/2</code> \u7684 01 \u80cc\u5305\u95ee\u9898\uff0c\u5982\u679c\u80cc\u5305\u6b63\u597d\u88c5\u6ee1\uff0c\u5219\u8fd4\u56de true\u3002\u6ce8\uff1a\u672c\u9898\u4e2d\uff0c\u7269\u54c1\u7684\u91cd\u91cf\u548c\u4ef7\u503c\u662f\u4e00\u6837\u7684\u3002</p> <pre><code>class Solution {\n    public boolean canPartition(int[] nums) {\n        int n = nums.length;\n        if (n &lt; 2) return false;\n        int sum = 0, max = 0;\n        for (int num : nums) {\n            sum += num;\n            max = Math.max(max, num);\n        }\n        if (sum % 2 != 0) return false;\n        int target = sum / 2;\n        if (max &gt; target) return false;\n\n        int[][] dp = new int[n][target + 1];\n        // \u521d\u59cb\u5316\n        for (int j = nums[0]; j &lt;= target; j++) {\n            dp[0][j] = nums[0];\n        }\n        for (int i = 1; i &lt; n; i++) {\n            for (int j = 0; j &lt;= target; j++) {\n                dp[i][j] = dp[i - 1][j];\n                if (j &gt;= nums[i]) {\n                    dp[i][j] = Math.max(dp[i][j], dp[i - 1][j - nums[i]] + nums[i]);\n                }\n            }\n        }\n        return dp[n - 1][target] == target;\n    }\n}\n</code></pre> <p>\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff1a</p> <pre><code>class Solution {\n    public boolean canPartition(int[] nums) {\n        int n = nums.length;\n        if (n &lt; 2) return false;\n        int sum = 0, max = 0;\n        for (int num : nums) {\n            sum += num;\n            max = Math.max(max, num);\n        }\n        if (sum % 2 != 0) return false;\n        int target = sum / 2;\n        if (max &gt; target) return false;\n\n        int[] dp = new int[target + 1];\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = target; j &gt;= nums[i]; j--) {\n                dp[j] = Math.max(dp[j], dp[j - nums[i]] + nums[i]);\n            }\n        }\n        return dp[target] == target;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_2","title":"\u8fd9\u4e2a\u80cc\u5305\u6700\u591a\u80fd\u88c5\u591a\u5c11\uff1f","text":"<p>1049. \u6700\u540e\u4e00\u5757\u77f3\u5934\u7684\u91cd\u91cf II</p> <p>\u9898\u76ee\u8981\u6c42\u7b49\u4ef7\u4e8e\u8ba9\u6211\u4eec\u5c3d\u53ef\u80fd\u5e73\u5747\u5730\u628a\u77f3\u5934\u5206\u6210 2 \u4efd\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u91cd\u91cf\u4e4b\u5dee\u3002\u7531\u4e8e <code>target = sum/2</code> \u662f\u5411\u4e0b\u53d6\u6574\uff0c\u56e0\u6b64\u8f83\u8f7b\u7684\u90a3\u4efd\u7684\u6700\u5927\u91cd\u91cf\u662f <code>dp[target]</code>\uff0c\u91cd\u91cf\u591a\u7684\u90a3\u4efd\u5c31\u662f <code>sum - dp[target]</code>\uff0c\u56e0\u6b64\u7b54\u6848\u5c31\u662f <code>sum - 2 * dp[target]</code>\u3002</p> <pre><code>class Solution {\n    public int lastStoneWeightII(int[] stones) {\n        int n = stones.length;\n        int sum = 0;\n        for (int x : stones) {\n            sum += x;\n        }\n        int target = sum / 2;\n        int[][] dp = new int[n][target + 1];\n        for (int j = stones[0]; j &lt;= target; j++) {\n            dp[0][j] = stones[0];\n        }\n        for (int i = 1; i &lt; n; i++) {\n            for (int j = 0; j &lt;= target; j++) {\n                dp[i][j] = dp[i - 1][j];\n                if (j &gt;= stones[i]) {\n                    dp[i][j] = Math.max(dp[i][j], dp[i - 1][j - stones[i]] + stones[i]);\n                }\n            }\n        }\n        return sum - 2 * dp[n - 1][target];\n    }\n}\n</code></pre> <p>\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff1a</p> <pre><code>class Solution {\n    public int lastStoneWeightII(int[] stones) {\n        int n = stones.length;\n        int sum = 0;\n        for (int x : stones) {\n            sum += x;\n        }\n        int target = sum / 2;\n        int[] dp = new int[target + 1];\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = target; j &gt;= stones[i]; j--) {\n                dp[j] = Math.max(dp[j], dp[j - stones[i]] + stones[i]);\n            }\n        }\n        return sum - 2 * dp[target];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_3","title":"\u88c5\u6ee1\u80cc\u5305\u6709\u591a\u5c11\u79cd\u65b9\u6848\uff1f","text":"<p>494. \u76ee\u6807\u548c</p> <p>\u6839\u636e\u9898\u76ee\u7684\u8981\u6c42\uff0c\u5e76\u4e14\u770b\u5230 <code>1 &lt;= nums.length &lt;= 20</code> \u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7528\u56de\u6eaf\u6cd5\u66b4\u529b\u641c\u7d22\u3002</p> <pre><code>class Solution {\n    int ans = 0;\n\n    public int findTargetSumWays(int[] nums, int target) {\n        backtrack(nums, target, 0, 0);\n        return ans;\n    }\n\n    private void backtrack(int[] nums, int target, int sum, int idx) {\n        if (idx == nums.length) {\n            if (sum == target) ans++;\n            return;\n        }\n        backtrack(nums, target, sum + nums[idx], idx + 1);\n        backtrack(nums, target, sum - nums[idx], idx + 1);\n    }\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u56de\u6eaf\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6307\u6570\u7ea7\u522b\u7684\uff0c\u5373 <code>O(2^n)</code>\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u52a8\u6001\u89c4\u5212\u4f18\u5316\u5b83\u3002</p> <p>\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u6570\u6570\u7ec4\u5206\u4e3a 2 \u4efd\uff0c\u4e00\u4efd\u4e3a\u6b63\u6570\u6570\u7ec4\uff0c\u4e00\u4efd\u4e3a\u8d1f\u6570\u6570\u7ec4\u3002\u7531\u4e8e\u662f\u975e\u8d1f\u6570\u7ec4\uff0c\u76f8\u5f53\u4e8e\u8981\u627e\u628a\u54ea\u4e9b\u6570\u5b57\u53d8\u6210\u8d1f\u6570\u3002\u8bb0\u8d1f\u6570\u6570\u7ec4\u7684\u548c\u4e3a <code>neg</code>\uff0c\u7531\u4e8e <code>(sum - neg) - neg = target</code>\uff0c<code>neg = (sum - target) / 2</code>\uff0c\u6210\u7acb\u7684\u6761\u4ef6\u4e3a <code>sum - target</code> \u4e3a\u975e\u8d1f\u5076\u6570\u3002</p> <p>\u6b64\u65f6\u7684\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\uff1a\u5728\u6570\u7ec4\u4e2d\u9009\u53d6\u4e00\u4e9b\u5143\u7d20\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u5143\u7d20\u4e4b\u548c\u7b49\u4e8e <code>neg</code>\uff0c\u6c42\u65b9\u6848\u6570\u3002\u5373\u88c5\u6ee1\u5bb9\u91cf\u4e3a <code>neg</code> \u7684\u80cc\u5305\uff0c\u603b\u5171\u6709\u51e0\u79cd\u65b9\u6848\uff1f\u8fd9\u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u7ec4\u5408\u95ee\u9898\uff0c\u548c\u4e4b\u524d\u6c42\u5bb9\u91cf\u4e3a j \u7684\u80cc\u5305\u6700\u591a\u80fd\u88c5\u591a\u5c11\u4e0d\u540c\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u8981\u4fee\u6539\u4e00\u4e0b DP \u6570\u7ec4\u7684\u5b9a\u4e49\u3002</p> <p>\u6211\u4eec\u5b9a\u4e49 <code>dp[i][j]</code> \u4e3a\uff1a\u4f7f\u7528\u524d i \u4e2a\u7269\u54c1\uff08i \u7684\u4e0b\u6807\u4ece 1 \u5f00\u59cb\uff09\uff0c\u586b\u6ee1\u5bb9\u91cf\u4e3a j \u7684\u80cc\u5305\uff0c\u6709 <code>dp[i][j]</code> \u79cd\u65b9\u6cd5\u3002\u540c\u65f6\uff0c\u6211\u4eec\u521d\u59cb\u5316\u8fb9\u754c\u6761\u4ef6 <code>dp[0][0] = 1</code>\uff0c\u4ee3\u8868\u4e0d\u8003\u8651\u4efb\u4f55\u6570\uff0c\u51d1\u51fa\u8ba1\u7b97\u7ed3\u679c\u4e3a 0 \u7684\u65b9\u6848\u6570\u4e3a 1 \u79cd\uff0c\u7528\u4e8e\u9012\u63a8\u3002</p> <p>\u5bf9\u4e8e\u6570\u7ec4 <code>nums</code> \u4e2d\u7684\u7b2c i \u4e2a\u5143\u7d20 <code>num</code>\uff08i \u7684\u8ba1\u6570\u4ece 1 \u5f00\u59cb\uff09\uff0c\u57fa\u4e8e\u300c\u4e0d\u9009\u300d\u548c\u300c\u9009\u300d\u4e24\u79cd\u51b3\u7b56\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff1a</p> <ul> <li>\u5982\u679c <code>j &lt; num</code>\uff0c\u5219\u4e0d\u80fd\u9009 <code>num</code>\uff0c\u6b64\u65f6\u6709 \\(dp[i][j] = dp[i - 1][j]\\)</li> <li>\u5982\u679c <code>j &gt;= num</code></li> <li>\u5982\u679c\u4e0d\u9009 <code>num</code>\uff0c\u65b9\u6848\u6570\u4e3a \\(dp[i][j] = dp[i - 1][j]\\)</li> <li>\u5982\u679c\u9009 <code>num</code>\uff0c\u65b9\u6848\u6570\u4e3a \\(dp[i][j] = dp[i - 1][j] + dp[i - 1][j - num]\\)</li> </ul> <p>\u6700\u7ec8\u7684\u7b54\u6848\u4e3a <code>dp[n][neg]</code></p> <pre><code>class Solution {\n    public int findTargetSumWays(int[] nums, int target) {\n        int n = nums.length;\n        int sum = 0;\n        for (int x : nums) {\n            sum += x;\n        }\n        if (target &gt; sum || (sum - target) % 2 != 0) return 0;\n        int size = (sum - target) / 2;\n        int[][] dp = new int[n + 1][size + 1]; // \u6ce8\u610f\u8fd9\u91cc n + 1\n        dp[0][0] = 1; // dp[0][0]\u4e3a\u8d77\u59cb\u6761\u4ef6\uff0c\u4ee3\u8868\u4e0d\u8003\u8651\u4efb\u4f55\u6570\uff0c\u51d1\u51fa\u7ed3\u679c\u4e3a0\u7684\u65b9\u6848\u6570\u67091\u79cd\n        for (int i = 1; i &lt;= n; i++) {\n            int num = nums[i - 1]; // \u9700\u8981\u9519\u4f4d\n            for (int j = 0; j &lt;= size; j++) {\n                dp[i][j] = dp[i - 1][j];\n                if (j &gt;= num) {\n                    dp[i][j] += dp[i - 1][j - num];\n                }\n            }\n        }\n        return dp[n][size];\n    }\n}\n</code></pre> <p>\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff1a</p> <pre><code>class Solution {\n    public int findTargetSumWays(int[] nums, int target) {\n        int n = nums.length;\n        int sum = 0;\n        for (int x : nums) {\n            sum += x;\n        }\n        if (target &gt; sum || (sum - target) % 2 != 0) return 0;\n        int size = (sum - target) / 2;\n        int[] dp = new int[size + 1];\n        dp[0] = 1;\n        for (int num : nums) {\n            for (int j = size; j &gt;= num; j--) {\n                dp[j] += dp[j - num];\n            }\n        }\n        return dp[size];\n    }\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u6c42\u88c5\u6ee1\u80cc\u5305\u7684\u65b9\u6848\u6570</p> <pre><code>dp[0] = 1;\nfor (int num : nums) {\n    for (int j = size; j &gt;= num; j--) {\n        dp[j] += dp[j - num];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_4","title":"\u88c5\u6ee1\u80cc\u5305\u6700\u591a\u7528\u591a\u5c11\u4e2a\u7269\u54c1\uff1f","text":"<p>474. \u4e00\u548c\u96f6</p> <p>\u901a\u5e38\u4e0e\u300c\u80cc\u5305\u95ee\u9898\u300d\u76f8\u5173\u7684\u9898\u8003\u5bdf\u7684\u662f \u5c06\u539f\u95ee\u9898\u8f6c\u6362\u4e3a\u300c\u80cc\u5305\u95ee\u9898\u300d\u7684\u80fd\u529b\u3002\u8981\u5c06\u539f\u95ee\u9898\u8f6c\u6362\u4e3a\u300c\u80cc\u5305\u95ee\u9898\u300d\uff0c\u5f80\u5f80\u9700\u8981\u4ece\u9898\u76ee\u4e2d\u62bd\u8c61\u51fa\u300c\u4ef7\u503c\u300d\u4e0e\u300c\u6210\u672c\u300d\u7684\u6982\u5ff5\u3002</p> <p>\u672c\u9898\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u4ef7\u503c\u90fd\u662f 1\uff08\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u90fd\u662f 1\uff09\uff0c\u9009\u62e9\u7684\u6210\u672c\u662f\u5b57\u7b26\u4e32\u4e2d 1 \u7684\u6570\u91cf\u548c 0 \u7684\u6570\u91cf\u3002\u56e0\u6b64\uff0c\u672c\u9898\u5176\u5b9e\u662f\u5728\u95ee\uff1a\u5728 1 \u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 m\uff0c0 \u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 n \u7684\u6761\u4ef6\u4e0b\uff0c\u6700\u5927\u4ef7\u503c\u662f\u591a\u5c11\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684\u80cc\u5305\u5bb9\u91cf\u9650\u5236\u4ece\u4e4b\u524d\u7684\u4e00\u7ef4\u63d0\u5347\u5230\u4e86\u73b0\u5728\u7684\u4e8c\u7ef4\u3002</p> <p>\u6211\u4eec\u5b9a\u4e49\uff1a<code>dp[k][i][j]</code> \u4ee3\u8868\u8003\u8651\u524d k \u4e2a\u7269\u54c1\uff0c\u5728\u6570\u5b57 1 \u5bb9\u91cf\u4e0d\u8d85\u8fc7 i\uff0c\u6570\u5b57 0 \u5bb9\u91cf\u4e0d\u8d85\u8fc7 j \u7684\u6761\u4ef6\u4e0b\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <p>\\(dp[k][i][j] = max(dp[k-1][i][j], dp[k-1][i - cnt[k][0]][j - cnt[k][1]] + 1)\\)</p> <p>\u5176\u4e2d <code>cnt</code> \u6570\u7ec4\u8bb0\u5f55\u4e86\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684 0 \u548c 1 \u7684\u6570\u91cf\u3002</p> <pre><code>class Solution {\n    public int findMaxForm(String[] strs, int m, int n) {\n        int len = strs.length;\n        int[][] cnt = new int[len][2];\n        for (int i = 0; i &lt; len; i++) {\n            String str = strs[i];\n            int zero = 0, one = 0;\n            for (char c : str.toCharArray()) {\n                if (c == '0') zero++;\n                else one++;\n            }\n            cnt[i] = new int[]{zero, one};\n        }\n        int[][][] dp = new int[len + 1][m + 1][n + 1];\n        for (int k = 1; k &lt;= len; k++) {\n            int zero = cnt[k - 1][0], one = cnt[k - 1][1];\n            for (int i = 0; i &lt;= m; i++) {\n                for (int j = 0; j &lt;= n; j++) {\n                    int a = dp[k - 1][i][j];\n                    int b = (i &gt;= zero &amp;&amp; j &gt;= one) ? dp[k - 1][i - zero][j - one] + 1 : 0;\n                    dp[k][i][j] = Math.max(a, b);\n                }\n            }\n        }\n        return dp[len][m][n];\n    }\n}\n</code></pre> <p>\u4e00\u7ef4\u7a7a\u95f4\u4f18\u5316\uff1a</p> <p>\u6211\u4eec\u53d1\u73b0\uff1a<code>dp[k][i][j]</code> \u4e0d\u4ec5\u4ec5\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u884c\uff0c\u8fd8\u660e\u786e\u4f9d\u8d56\u4e8e\u6bd4 i \u5c0f\u548c\u6bd4 j \u5c0f\u7684\u72b6\u6001\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53d6\u6d88\u6389\u300c\u7269\u54c1\u7ef4\u5ea6\u300d\uff0c\u7136\u540e\u8c03\u6574\u5bb9\u91cf\u7684\u904d\u5386\u987a\u5e8f\u3002</p> <pre><code>class Solution {\n    public int findMaxForm(String[] strs, int m, int n) {\n        int len = strs.length;\n        int[][] cnt = new int[len][2];\n        for (int i = 0; i &lt; len; i++) {\n            int zero = 0, one = 0;\n            for (char c : strs[i].toCharArray()) {\n                if (c == '0') zero++;\n                else one++;\n            }\n            cnt[i] = new int[]{zero, one};\n        }\n        int[][] f = new int[m + 1][n + 1];\n        for (int k = 0; k &lt; len; k++) {\n            int zero = cnt[k][0], one = cnt[k][1];\n            for (int i = m; i &gt;= zero; i--) {\n                for (int j = n; j &gt;= one; j--) {\n                    f[i][j] = Math.max(f[i][j], f[i - zero][j - one] + 1);\n                }\n            }\n        }\n        return f[m][n];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_5","title":"\u5b8c\u5168\u80cc\u5305\u95ee\u9898","text":"<p>\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u548c 01 \u80cc\u5305\u95ee\u9898\u552f\u4e00\u7684\u533a\u522b\u662f\uff1a\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u6bcf\u4e2a\u7269\u54c1\u6709\u65e0\u6570\u4e2a\uff0c\u4e0d\u518d\u6709\u6700\u591a 1 \u4e2a\u7684\u9650\u5236\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_6","title":"\u6a21\u677f\u9898\uff1a\u5b8c\u5168\u80cc\u5305\u95ee\u9898","text":"<p>3. \u5b8c\u5168\u80cc\u5305\u95ee\u9898</p> <pre><code>import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] v = new int[n + 1];\n        int[] w = new int[n + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            v[i] = sc.nextInt();\n            w[i] = sc.nextInt();\n        }\n        int[][] f = new int[n + 1][m + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 0; j &lt;= m; j++) {\n                for (int k = 0; k * v[i] &lt;= j; k++) {\n                    f[i][j] = Math.max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]);\n                }\n            }\n        }\n        System.out.println(f[n][m]);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_7","title":"\u88c5\u6ee1\u80cc\u5305\u6709\u591a\u5c11\u79cd\u65b9\u6848\uff1f\u6c42\u7ec4\u5408\u6570","text":"<p>518. \u96f6\u94b1\u5151\u6362 II</p> <p>\u6839\u636e\u9898\u610f\u6211\u4eec\u5f88\u5bb9\u6613\u5224\u65ad\u51fa\u6765\u8fd9\u662f\u4e00\u9053\u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff0c\u56e0\u6b64\u505a\u4ee5\u4e0b\u5b9a\u4e49\uff1a<code>dp[i][j]</code> \u4e3a\u8003\u8651\u524d i \u4ef6\u7269\u54c1\uff0c\u51d1\u6210\u603b\u548c\u4e3a j \u7684\u65b9\u6848\u6570\u91cf\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u521d\u59cb\u5316\uff0c\u6211\u4eec\u8ba9 <code>dp[0][j]</code> \u4ee3\u8868\u4e0d\u8003\u8651\u4efb\u4f55\u7269\u54c1\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u4e3a\u4e86\u65b9\u4fbf\u9012\u63a8\uff0c\u6211\u4eec\u521d\u59cb\u5316 <code>dp[0][0] = 1</code>\uff0c\u5176\u4f59 <code>dp[0][j] = 0</code>\u3002\u4ee3\u8868\u6ca1\u6709\u4efb\u4f55\u786c\u5e01\u7684\u65f6\u5019\uff0c\u51d1\u6210\u603b\u548c\u4e3a 0 \u7684\u65b9\u6848\u6570\u4e3a 1\uff08\u4ec5\u4ec5\u662f\u4e3a\u4e86\u521d\u59cb\u5316\u65b9\u4fbf\u9012\u63a8\uff09\uff0c\u51d1\u6210\u5176\u4ed6\u603b\u548c\u7684\u65b9\u6848\u4e0d\u5b58\u5728\u3002</p> <p>\u5bf9\u4e8e\u7b2c i \u4e2a\u786c\u5e01\u6211\u4eec\u6709 2 \u79cd\u51b3\u7b56\uff1a</p> <ul> <li>\u4e0d\u4f7f\u7528\u8be5\u786c\u5e01\uff1a<code>dp[i][j] = dp[i - 1][j]</code></li> <li>\u4f7f\u7528\u8be5\u786c\u5e01\uff1a\u7531\u4e8e\u6bcf\u4e2a\u786c\u5e01\u6570\u91cf\u65e0\u9650\uff0c\u56e0\u6b64\u5728\u5bb9\u91cf\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u65b9\u6848\u6570\u91cf\u5e94\u8be5\u662f\u9009\u62e9\u300c\u4efb\u610f\u4e2a\u300d\u8be5\u786c\u5e01\u7684\u65b9\u6848\u603b\u548c <code>dp[i][j] += dp[i - 1][j - k * coin]</code></li> </ul> <pre><code>class Solution {\n    public int change(int amount, int[] coins) {\n        int n = coins.length;\n        int[][] dp = new int[n + 1][amount + 1];\n        dp[0][0] = 1;\n        for (int i = 1; i &lt;= n; i++) {\n            int coin = coins[i - 1];\n            for (int j = 0; j &lt;= amount; j++) {\n                dp[i][j] = dp[i - 1][j];\n                for (int k = 1; k * coin &lt;= j; k++) {\n                    dp[i][j] += dp[i - 1][j - k * coin];\n                }\n            }\n        }\n        return dp[n][amount];\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5171\u6709 <code>n * amount</code> \u4e2a\u72b6\u6001\u9700\u8981\u8f6c\u79fb\uff0c\u6bcf\u4e2a\u72b6\u6001\u8f6c\u79fb\u6700\u591a\u904d\u5386 <code>amount</code> \u6b21\u3002<code>O(n * amount^2)</code></p> <p>\u4e00\u7ef4\u6570\u7ec4\u4f18\u5316\uff1a</p> <ul> <li>\u5728\u4e8c\u7ef4\u6570\u7ec4\u7684\u57fa\u7840\u4e0a\uff0c\u76f4\u63a5\u53bb\u6389\u300c\u7269\u54c1\u7ef4\u5ea6\u300d</li> <li>\u786e\u4fdd\u300c\u5bb9\u91cf\u7ef4\u5ea6\u300d\u7684\u904d\u5386\u987a\u5e8f\u4e3a\u4ece\u5c0f\u5230\u5927\uff08\u9002\u7528\u4e8e\u5b8c\u5168\u80cc\u5305\uff09</li> <li>\u5c06\u8f6c\u79fb\u65b9\u7a0b\u6539\u4e3a <code>dp[j - coin]</code>\uff0c\u5c06\u300c\u5bb9\u91cf\u7ef4\u5ea6\u300d\u7684\u904d\u5386\u8d77\u70b9\u6539\u4e3a <code>coin</code></li> </ul> <p>\u5173\u4e8e\u4e0a\u9762\u7684\u7b2c\u4e8c\u70b9\u548c\u7b2c\u4e09\u70b9\u7684\u89e3\u91ca\uff1a\u56de\u987e\u6211\u4eec\u5728 01 \u80cc\u5305\u95ee\u9898\u7684\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u4e2d\u63d0\u5230\u7684\uff0c\u6eda\u52a8\u6570\u7ec4\u4e2d\u80cc\u5305\u5bb9\u91cf\u7684\u904d\u5386\u987a\u5e8f\u5fc5\u987b\u662f\u4ece\u5927\u5230\u5c0f\uff0c\u4e0d\u7136\u4f1a\u4f7f\u7528\u672c\u5c42\u66f4\u65b0\u8fc7\u7684\u6570\u636e\u8986\u76d6\uff08\u4e5f\u5c31\u662f \u7269\u54c1\u4f1a\u88ab\u653e\u5165\u80cc\u5305\u591a\u6b21\uff09\uff0c\u800c\u8fd9\u521a\u597d\u5c31\u662f\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u7684\u5b9a\u4e49\uff01\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u9700\u8981\u987a\u5e8f\u904d\u5386\u80cc\u5305\u5bb9\u91cf\uff0c\u56e0\u4e3a\u6211\u4eec\u5c31\u662f\u5e0c\u671b\u7528\u672c\u5c42\u66f4\u65b0\u8fc7\u7684\u6570\u636e\u6765\u8fdb\u884c\u9012\u63a8\u3002</p> <p>\u53e6\u5916\uff0c\u5173\u4e8e\u5148\u904d\u5386\u7269\u54c1\u8fd8\u662f\u5148\u904d\u5386\u80cc\u5305\u5bb9\u91cf\u7684\u95ee\u9898\uff0c\u5bf9\u4e8e\u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff0c\u5982\u679c\u8981\u6c42\u7684\u662f\u7ec4\u5408\u6570\uff0c\u5373\u5143\u7d20\u4e4b\u95f4\u660e\u786e\u8981\u6c42\u6ca1\u6709\u987a\u5e8f\uff0c\u90a3\u4e48\u5c31\u5916\u5c42\u904d\u5386\u7269\u54c1\uff0c\u5185\u5c42\u904d\u5386\u80cc\u5305\u5bb9\u91cf\uff1b\u5982\u679c\u8981\u6c42\u7684\u662f\u6392\u5217\u6570\uff0c\u5373\u5143\u7d20\u4e4b\u95f4\u660e\u786e\u6709\u987a\u5e8f\u8981\u6c42\uff0c\u90a3\u4e48\u5c31\u5916\u5c42\u904d\u5386\u80cc\u5305\u5bb9\u91cf\uff0c\u5185\u5c42\u904d\u5386\u7269\u54c1\u3002</p> <p>\u6211\u4eec\u5047\u8bbe <code>coins = [1, 5]</code></p> <pre><code>for (int i = 1; i &lt;= coins.length; i++) { // \u904d\u5386\u7269\u54c1\n    int coin = coins[i - 1];\n    for (int j = coin; j &lt;= amount; j++) { // \u904d\u5386\u80cc\u5305\u5bb9\u91cf\n        dp[j] += dp[j - coin];\n    }\n}\n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5148\u628a <code>1</code> \u52a0\u5165\u8ba1\u7b97\uff0c\u6240\u6709 <code>1</code> \u7684\u7ed3\u679c\u8ba1\u7b97\u5b8c\u4e86\u4e4b\u540e\uff0c\u518d\u628a <code>5</code> \u52a0\u5165\u8ba1\u7b97\uff0c\u5f97\u5230\u7684\u65b9\u6848\u6570\u91cf\u53ea\u4f1a\u6709 <code>{1, 5}</code> \u8fd9\u79cd\u60c5\u51b5\uff0c\u4e0d\u4f1a\u51fa\u73b0 <code>{5, 1}</code> \u8fd9\u79cd\u60c5\u51b5\u3002</p> <p>\u800c\u5982\u679c\u628a\u4e24\u4e2a for \u5faa\u73af\u4ea4\u6362\u987a\u5e8f\uff1a</p> <pre><code>for (int j = 0; j &lt;= amount; j++) { // \u904d\u5386\u80cc\u5305\u5bb9\u91cf\n    for (int i = 1; i &lt;= coins.length; i++) { // \u904d\u5386\u7269\u54c1\n        int coin = coins[i - 1];\n        if (j - coin &gt;= 0) {\n            dp[j] += dp[j - coin];\n        }\n    }\n}\n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5bf9\u4e8e\u80cc\u5305\u5bb9\u91cf\u7684\u6bcf\u4e00\u4e2a\u503c\uff0c\u90fd\u662f\u7ecf\u8fc7\u4e86 <code>1</code> \u548c <code>5</code> \u7684\u8ba1\u7b97\uff0c\u5305\u542b\u4e86 <code>{1, 5}</code> \u548c <code>{5, 1}</code> \u4e24\u79cd\u60c5\u51b5\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5982\u679c\u6c42\u7ec4\u5408\u6570\u5c31\u662f\u5916\u5c42 for \u5faa\u73af\u904d\u5386\u7269\u54c1\uff0c\u5185\u5c42 for \u904d\u5386\u80cc\u5305\u3002</li> <li>\u5982\u679c\u6c42\u6392\u5217\u6570\u5c31\u662f\u5916\u5c42 for \u904d\u5386\u80cc\u5305\uff0c\u5185\u5c42 for \u5faa\u73af\u904d\u5386\u7269\u54c1\u3002</li> </ul> <p>\u56e0\u6b64\u672c\u9898\u7684\u4e00\u7ef4\u6570\u7ec4\u4f18\u5316\uff1a</p> <pre><code>class Solution {\n    public int change(int amount, int[] coins) {\n        int n = coins.length;\n        int[] dp = new int[amount + 1];\n        dp[0] = 1;\n        for (int i = 1; i &lt;= n; i++) {\n            int coin = coins[i - 1];\n            for (int j = coin; j &lt;= amount; j++) {\n                dp[j] += dp[j - coin];\n            }\n        }\n        return dp[amount];\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5171\u6709 <code>n * amount</code> \u4e2a\u72b6\u6001\u9700\u8981\u8f6c\u79fb\uff0c<code>O(n * amount)</code></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_8","title":"\u88c5\u6ee1\u80cc\u5305\u6709\u591a\u5c11\u79cd\u65b9\u6848\uff1f\u6c42\u6392\u5217\u6570","text":"<p>377. \u7ec4\u5408\u603b\u548c \u2163</p> <p>\u672c\u9898\u540c\u6837\u662f\u6c42\u88c5\u6ee1\u80cc\u5305\u7684\u65b9\u6848\u6570\uff0c\u53ea\u4e0d\u8fc7\u662f\u6c42\u6392\u5217\u6570\uff0c\u800c\u4e0d\u662f\u7ec4\u5408\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u5916\u5c42 for \u904d\u5386\u80cc\u5305\u5bb9\u91cf\uff0c\u5185\u5c42 for \u904d\u5386\u7269\u54c1\u3002</p> <pre><code>class Solution {\n    public int combinationSum4(int[] nums, int target) {\n        int n = nums.length;\n        int[] dp = new int[target + 1];\n        dp[0] = 1;\n        for (int j = 0; j &lt;= target; j++) {\n            for (int i = 1; i &lt;= n; i++) {\n                int num = nums[i - 1];\n                if (j &gt;= num) {\n                    dp[j] += dp[j - num];\n                }\n            }\n        }\n        return dp[target];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#revisit","title":"\u722c\u697c\u68af\u95ee\u9898 Revisit\uff01","text":"<p>\u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 n \u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002</p> <p>\u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c <code>steps[i]</code> \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f</p> <p>\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 3, steps = [1, 2]\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\u67093\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\n1. 1 \u9636 + 1 \u9636 + 1 \u9636\n2. 2 \u9636 + 1 \u9636\n3. 1 \u9636 + 2 \u9636\n</code></pre> <p>\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 4, steps = [1, 2, 3]\n\u8f93\u51fa\uff1a7\n\u89e3\u91ca\uff1a\u67097\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\n1. [1, 1, 1, 1]\n2. [1, 1, 2]\n3. [1, 2, 1]\n4. [1, 3]\n5. [2, 1, 1]\n6. [2, 2]\n7. [3, 1]\n</code></pre> <p>\u6839\u636e\u9898\u610f\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff0c\u5e76\u4e14\u8981\u6c42\u7684\u65b9\u6848\u6570\u662f\u6392\u5217\u6570\uff08\u56e0\u4e3a\u5148\u722c 1 \u9636\u518d\u722c 2 \u9636\u548c\u5148\u722c 2 \u9636\u518d\u722c 1 \u9636\u662f\u4e0d\u540c\u7684\u65b9\u6848\uff09\u3002</p> <pre><code>class Solution {\n    public int climbStairs(int n, int[] steps) {\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        for (int j = 0; j &lt;= n; j++) {\n            for (int i = 1; i &lt;= steps.length; i++) {\n                int steps = steps[i - 1];\n                if (j &gt;= step) {\n                    dp[j] += dp[j - step];\n                }\n            }\n        }\n        return dp[n];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_9","title":"\u88c5\u6ee1\u80cc\u5305\u7684\u6700\u5c11\u7269\u54c1\u4e2a\u6570\uff1f","text":"<p>322. \u96f6\u94b1\u5151\u6362</p> <p>\u9898\u89e3</p> <pre><code>class Solution {\n    public int coinChange(int[] coins, int amount) {\n        int n = coins.length;\n        int[] dp = new int[amount + 1];\n        Arrays.fill(dp, amount + 1);\n        dp[0] = 0;\n        for (int i = 1; i &lt;= n; i++) {\n            int coin = coins[i - 1];\n            for (int j = coin; j &lt;= amount; j++) {\n                dp[j] = Math.min(dp[j], dp[j - coin] + 1);\n            }\n        }\n        return dp[amount] == amount + 1 ? -1 : dp[amount];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_10","title":"\u628a\u95ee\u9898\u8f6c\u6362\u4e3a\u5b8c\u5168\u80cc\u5305\u95ee\u9898","text":"<p>279. \u5b8c\u5168\u5e73\u65b9\u6570</p> <p>\u7531\u9898\u610f\u53ef\u77e5\uff1a\u5b8c\u5168\u5e73\u65b9\u6570\u5c31\u662f\u7269\u54c1\uff08\u53ef\u4ee5\u65e0\u9650\u4ef6\u4f7f\u7528\uff09\uff0c\u6b63\u6574\u6570 n \u5c31\u662f\u80cc\u5305\u5bb9\u91cf\uff0c\u95ee\u88c5\u6ee1\u8fd9\u4e2a\u80cc\u5305\u6700\u5c11\u6709\u591a\u5c11\u7269\u54c1\uff1f</p> <pre><code>class Solution {\n    public int numSquares(int n) {\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, n);\n        dp[0] = 0;\n        for (int i = 1; i * i &lt;= n; i++) {\n            for (int j = i * i; j &lt;= n; j++) {\n                dp[j] = Math.min(dp[j], dp[j - i * i] + 1);\n            }\n        }\n        return dp[n];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/#_11","title":"\u5b57\u7b26\u4e32\u5206\u5272\uff1f","text":"<p>139. \u5355\u8bcd\u62c6\u5206</p> <p>\u6211\u4eec\u5b9a\u4e49 <code>dp[i]</code> \u8868\u793a\u5b57\u7b26\u4e32 s \u7684\u524d i \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 <code>s[0...i-1]</code> \u80fd\u5426\u88ab\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u3002\u540c\u65f6\u6211\u4eec\u679a\u4e3e <code>s[0...i-1]</code> \u4e2d\u7684\u5206\u5272\u70b9 j\uff0c\u5982\u679c <code>dp[j] == true</code> \u5e76\u4e14 <code>s[j...i-1]</code> \u4e5f\u5408\u6cd5\u7684\u8bdd\uff0c\u90a3\u4e48 <code>dp[i] = true</code>\u3002</p> <p>\u56e0\u6b64\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a<code>dp[i] = dp[j] &amp;&amp; check(s[j...i-1])</code></p> <p>\u5bf9\u4e8e\u8fb9\u754c\u6761\u4ef6\uff0c\u6211\u4eec\u5b9a\u4e49 <code>dp[0] = true</code> \u8868\u793a\u7a7a\u4e32\u5408\u6cd5\uff0c\u7528\u4e8e\u9012\u63a8\u3002</p> <pre><code>class Solution {\n    public boolean wordBreak(String s, List&lt;String&gt; wordDict) {\n        int n = s.length();\n        Set&lt;String&gt; set = new HashSet&lt;&gt;(wordDict);\n        boolean[] dp = new boolean[n + 1];\n        dp[0] = true;\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 0; j &lt; i; j++) {\n                String str = s.substring(j, i);\n                if (dp[j] &amp;&amp; set.contains(str)) {\n                    dp[i] = true;\n                    break;\n                }\n            }\n        }\n        return dp[n];\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"\u4e8c\u53c9\u6811","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E4%BA%8C%E5%8F%89%E6%A0%91/#lcr-053","title":"LCR 053. \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u4e2d\u5e8f\u540e\u7ee7","text":"\u8fed\u4ee3\u4e2d\u5e8f\u904d\u5386BST \u6027\u8d28 <pre><code>class Solution:\n    def inorderSuccessor(self, root: 'TreeNode', p: 'TreeNode') -&gt; 'TreeNode':\n        st, pre, cur = [], None, root\n        while st or cur:\n            while cur:\n                st.append(cur)\n                cur = cur.left\n            cur = st.pop()\n            if pre == p:\n                return cur\n            pre = cur\n            cur = cur.right\n        return None\n</code></pre> <pre><code>class Solution:\ndef inorderSuccessor(self, root, p):\n    if not root:\n        return None\n    cur = None\n    while root:\n        # \u6839\u8282\u70b9\u5c0f\u4e8e\u7b49\u4e8ep.val\uff0c\u5219\u627e\u5b83\u7684\u53f3\u5b50\u6811\uff0c\u5982\u679c\u53f3\u5b50\u6811\u4e3a\u7a7a\uff0c\u5219\u8bf4\u660e\u6ca1\u6709\u4e2d\u5e8f\u540e\u7ee7\u8282\u70b9\n        if root.val &lt;= p.val:\n            root = root.right\n        # \u6839\u8282\u70b9\u5927\u4e8ep.val\uff0c\u5219\u627e\u5b83\u7684\u5de6\u5b50\u6811\uff0c\u4e00\u76f4\u987a\u5ef6\u627e\u4e0b\u53bb\uff0c\u624d\u80fd\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8ep.val\u7684\u8282\u70b9\uff0c\u5e76\u66f4\u65b0\u8282\u70b9\n        else:\n            cur = root\n            root = root.left\n    return cur\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E4%BA%8C%E5%8F%89%E6%A0%91/#124","title":"124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c","text":"DFS <pre><code>class Solution {\n    int ans = Integer.MIN_VALUE;\n\n    public int maxPathSum(TreeNode root) {\n        dfs(root);\n        return ans;\n    }\n\n    private int dfs(TreeNode root) {\n        if (root == null) return 0;\n        // \u9012\u5f52\u8ba1\u7b97\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u6700\u5927\u8d21\u732e\u503c\n        // \u53ea\u6709\u5728\u6700\u5927\u8d21\u732e\u503c\u5927\u4e8e 0 \u65f6\uff0c\u624d\u4f1a\u9009\u53d6\u5bf9\u5e94\u5b50\u8282\u70b9\n        int left = Math.max(dfs(root.left), 0);\n        int right = Math.max(dfs(root.right), 0);\n        // \u8282\u70b9\u7684\u6700\u5927\u8def\u5f84\u548c\u53d6\u51b3\u4e8e\u8be5\u8282\u70b9\u7684\u503c\u4e0e\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u6700\u5927\u8d21\u732e\u503c\n        int path = left + right + root.val;\n        ans = Math.max(ans, path);\n        // \u8fd4\u56de\u8282\u70b9\u7684\u6700\u5927\u8d21\u732e\u503c\n        return Math.max(left, right) + root.val;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E4%BA%8C%E5%8F%89%E6%A0%91/#297","title":"297. \u4e8c\u53c9\u6811\u7684\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316","text":"BFSDFS <pre><code>public class Codec {\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        List&lt;String&gt; list = new ArrayList&lt;&gt;();\n        Queue&lt;TreeNode&gt; q = new ArrayDeque&lt;&gt;();\n        if (root == null) return \"\";\n        q.offer(root);\n        list.add(String.valueOf(root.val));\n        while (!q.isEmpty()) {\n            TreeNode cur = q.poll();\n            if (cur.left != null) {\n                q.offer(cur.left);\n                list.add(String.valueOf(cur.left.val));\n            } else list.add(\"null\");\n            if (cur.right != null) {\n                q.offer(cur.right);\n                list.add(String.valueOf(cur.right.val));\n            } else list.add(\"null\");\n        }\n        return String.join(\",\", list);\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        if (data.length() == 0) return null;\n        String[] nodes = data.split(\",\");\n        int n = nodes.length;\n        Queue&lt;TreeNode&gt; q = new ArrayDeque&lt;&gt;();\n        TreeNode root = new TreeNode(Integer.parseInt(nodes[0]));\n        q.offer(root);\n        int idx = 1;\n        while (idx &lt; n) {\n            TreeNode cur = q.poll();\n            if (!nodes[idx].equals(\"null\")) {\n                TreeNode left = new TreeNode(Integer.parseInt(nodes[idx]));\n                cur.left = left;\n                q.offer(left);\n            }\n            idx++;\n            if (idx &lt; n &amp;&amp; !nodes[idx].equals(\"null\")) {\n                TreeNode right = new TreeNode(Integer.parseInt(nodes[idx]));\n                cur.right = right;\n                q.offer(right);\n            }\n            idx++;\n        }\n        return root;\n    }\n}\n</code></pre> <pre><code>public class Codec {\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        if(root == null){\n            return \"null\";\n        }\n        return root.val + \",\" + serialize(root.left) + \",\" + serialize(root.right);\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        Queue&lt;String&gt; queue = new ArrayDeque&lt;&gt;(Arrays.asList(data.split(\",\")));\n        return dfs(queue);\n    }\n\n    private TreeNode dfs(Queue&lt;String&gt; queue) {\n        String val = queue.poll();\n        if(val.equals(\"null\")){\n            return null;\n        }\n        TreeNode root = new TreeNode(Integer.parseInt(val));\n        root.left = dfs(queue);\n        root.right = dfs(queue);\n        return root;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%89%8D%E7%BC%80%E5%92%8C/","title":"\u524d\u7f00\u548c","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%89%8D%E7%BC%80%E5%92%8C/#560-k","title":"560. \u548c\u4e3a K \u7684\u5b50\u6570\u7ec4","text":"<p>Question</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code> \u548c\u4e00\u4e2a\u6574\u6570 k\uff0c\u4f60\u9700\u8981\u627e\u5230\u8be5\u6570\u7ec4\u4e2d\u548c\u4e3a k \u7684\u8fde\u7eed\u7684\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002<code>-1000 &lt;= nums[i] &lt;= 1000</code></p> <p>\u7ecf\u9a8c\u603b\u7ed3</p> <p>\u5f53\u770b\u5230\u6570\u7ec4\u4e2d\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\uff08\u5373\u5b50\u6570\u7ec4\uff09\u7684\u60c5\u51b5\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\uff1a1.\u6ed1\u52a8\u7a97\u53e3 2.\u524d\u7f00\u548c\u3002</p> <p>\u672c\u9898\u65e0\u6cd5\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\uff0c\u662f\u56e0\u4e3a\u6570\u7ec4\u4e2d\u6709\u8d1f\u6570\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u7a97\u53e3\u5185\u7684\u548c\u7684\u5355\u8c03\u6027\u3002</p> \u524d\u7f00\u548c + \u54c8\u5e0c\u8868 <pre><code>class Solution:\n    def subarraySum(self, nums: List[int], k: int) -&gt; int:\n        ans = 0\n        rolling_sum = 0\n        d = Counter()\n        d[0] = 1\n        for x in nums:\n            rolling_sum += x\n            target = rolling_sum - k\n            ans += d[target]\n            d[rolling_sum] += 1\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%89%8D%E7%BC%80%E5%92%8C/#525","title":"525. \u8fde\u7eed\u6570\u7ec4","text":"<p>Question</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4 <code>nums</code> , \u627e\u5230\u542b\u6709\u76f8\u540c\u6570\u91cf\u7684 <code>0</code> \u548c <code>1</code> \u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u8be5\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002</p> <p>\u7ecf\u5178\u7684\u5b50\u6570\u7ec4\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u524d\u7f00\u548c\u3002\u6211\u4eec\u5728\u9884\u5904\u7406\u524d\u7f00\u548c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5c06 <code>0</code> \u5f53\u505a <code>-1</code> \u5904\u7406\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u548c\u4e3a <code>0</code> \u7684\u6700\u957f\u5b50\u6570\u7ec4\u3002</p> <p>\u4e3a\u4e86\u6c42\u5f97\u6700\u957f\u4e00\u6bb5\u533a\u95f4\u548c\u4e3a <code>0</code> \u7684\u5b50\u6570\u7ec4\u3002 \u540c\u65f6\u4f7f\u7528\u300c\u54c8\u5e0c\u8868\u300d\u6765\u8bb0\u5f55\u300c\u67d0\u4e2a\u524d\u7f00\u548c\u9996\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\u300d\u662f\u591a\u5c11\u3002</p> \u524d\u7f00\u548c + \u54c8\u5e0c\u8868 <pre><code>class Solution:\n    def findMaxLength(self, nums: List[int]) -&gt; int:\n        ans = 0\n        pre_sum = 0\n        d = dict()\n        d[0] = -1\n        for i, x in enumerate(nums):\n            pre_sum += (1 if x == 1 else -1)\n            if pre_sum in d:\n                ans = max(ans, i - d[pre_sum])\n            if pre_sum not in d:\n                d[pre_sum] = i\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%93%88%E5%B8%8C%E8%A1%A8/","title":"\u54c8\u5e0c\u8868","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%93%88%E5%B8%8C%E8%A1%A8/#146-lru","title":"146. LRU \u7f13\u5b58","text":"<pre><code>class LRUCache {\n    class Node {\n        int key, value;\n        Node pre, next;\n\n        Node() {}\n\n        Node(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n    }\n\n    int capacity;\n    Node head, tail;\n    Map&lt;Integer, Node&gt; map;\n\n    public LRUCache(int capacity) {\n        this.capacity = capacity;\n        head = new Node();\n        tail = new Node();\n        head.next = tail;\n        tail.pre = head;\n        map = new HashMap&lt;&gt;();\n    }\n\n    public int get(int key) {\n        if (map.containsKey(key)) {\n            Node node = map.get(key);\n            moveToHead(node);\n            return node.value;\n        }\n        return -1;\n    }\n\n    public void put(int key, int value) {\n        if (map.containsKey(key)) {\n            Node node = map.get(key);\n            node.value = value;\n            moveToHead(node);\n        } else {\n            Node node = new Node(key, value);\n            map.put(key, node);\n            addToHead(node);\n            if (map.size() &gt; capacity) {\n                Node t = removeNode(tail.pre);\n                map.remove(t.key);\n            }\n        }\n    }\n\n    private Node removeNode(Node node) {\n        node.pre.next = node.next;\n        node.next.pre = node.pre;\n        return node;\n    }\n\n    private void addToHead(Node node) {\n        node.next = head.next;\n        node.pre = head;\n        node.next.pre = node;\n        head.next = node;\n    }\n\n    private void moveToHead(Node node) {\n        removeNode(node);\n        addToHead(node);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%A4%9A%E7%A7%8D%E8%A7%A3%E6%B3%95/","title":"\u591a\u79cd\u89e3\u6cd5","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%A4%9A%E7%A7%8D%E8%A7%A3%E6%B3%95/#53","title":"53. \u6700\u5927\u5b50\u6570\u7ec4\u548c","text":"<p>Tip</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002</p> \u7ebf\u6027 DP\u5206\u6cbb\u524d\u7f00\u548c <pre><code>class Solution:\n    def maxSubArray(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        f = [-inf] * n\n        for i in range(n):\n            f[i] = max(nums[i], f[i - 1] + nums[i] if i &gt; 0 else nums[i])\n        return max(f)\n</code></pre> <p>\u4f7f\u7528\u5206\u6cbb\u53ef\u4ee5\u6c42\u5f97\u4efb\u610f <code>[l...r]</code> \u533a\u95f4\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\uff1a\u4e8b\u5b9e\u4e0a\u662f\u7ebf\u6bb5\u6811\u7684 pushUp \u64cd\u4f5c</p> <pre><code>class Solution {\n    static class Node {\n        int lmax, rmax, tmax, sum;\n        Node(int lmax, int rmax, int tmax, int sum) {\n            this.lmax = lmax;\n            this.rmax = rmax;\n            this.tmax = tmax;\n            this.sum = sum;\n        }\n    }\n\n    public int maxSubArray(int[] nums) {\n        return query(nums, 0, nums.length - 1).tmax;\n    }\n\n    private Node query(int[] a, int l, int r) {\n        if (l == r) {\n            return new Node(a[l], a[l], a[l], a[l]);\n        }\n        int mid = l + r &gt;&gt; 1;\n        Node left = query(a, l, mid);\n        Node right = query(a, mid + 1, r);\n        return pushUp(left, right);\n    }\n\n    private Node pushUp(Node left, Node right) {\n        int sum = left.sum + right.sum;\n        int lmax = Math.max(left.lmax, left.sum + right.lmax);\n        int rmax = Math.max(right.rmax, right.sum + left.rmax);\n        int tmax = Math.max(Math.max(left.tmax, right.tmax), left.rmax + right.lmax);\n        return new Node(lmax, rmax, tmax, sum);\n    }\n}\n</code></pre> <p><code>\u6700\u5927\u5b50\u6570\u7ec4\u548c = max(\u5f53\u524d\u524d\u7f00\u548c - \u524d\u9762\u6700\u5c0f\u7684\u524d\u7f00\u548c)</code></p> <pre><code>class Solution:\n    def maxSubArray(self, nums: List[int]) -&gt; int:\n        n = len(nums)\n        presum = 0\n        min_presum = inf\n        ans = -inf\n        for x in nums:\n            min_presum = min(min_presum, presum)\n            presum += x\n            ans = max(ans, presum - min_presum)\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%A4%9A%E7%A7%8D%E8%A7%A3%E6%B3%95/#647","title":"647. \u56de\u6587\u5b50\u4e32","text":"<p>Tip</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u7edf\u8ba1\u5e76\u8fd4\u56de\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u56de\u6587\u5b50\u4e32\u7684\u6570\u76ee\u3002</p> <p>\u7ecf\u9a8c\u603b\u7ed3</p> <p>\u9884\u5904\u7406 <code>is_palindrome[i][j]</code>\u6570\u7ec4\uff0c\u8868\u793a <code>s[i...j]</code> \u662f\u5426\u4e3a\u56de\u6587\u4e32\u3002\\(O(n^2)\\)</p> \u533a\u95f4 DP <pre><code>class Solution:\n    def countSubstrings(self, s: str) -&gt; int:\n        n = len(s)\n        f = [[False] * n for _ in range(n)]\n        for i in range(n - 1, -1, -1):\n            for j in range(i, n):\n                length = j - i + 1\n                if s[i] == s[j]:\n                    if length &lt;= 2:\n                        f[i][j] = True\n                    else:\n                        f[i][j] = f[i + 1][j - 1]\n\n        ans = 0\n        for i in range(n):\n            for j in range(i, n):\n                if f[i][j]:\n                    ans += 1\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%A4%9A%E7%A7%8D%E8%A7%A3%E6%B3%95/#42","title":"42. \u63a5\u96e8\u6c34","text":"<p>Tip</p> <p>\u7ed9\u5b9a n \u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u5bbd\u5ea6\u4e3a 1 \u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u56fe\uff0c\u8ba1\u7b97\u6309\u6b64\u6392\u5217\u7684\u67f1\u5b50\uff0c\u4e0b\u96e8\u4e4b\u540e\u80fd\u63a5\u591a\u5c11\u96e8\u6c34\u3002</p> <p>\u5bf9\u6bcf\u6839\u67f1\u5b50\u800c\u8a00\uff0c\u6211\u4eec\u5148\u627e\u51fa\u5176\u300c\u5de6\u8fb9\u6700\u9ad8\u7684\u67f1\u5b50\u300d\u548c\u300c\u53f3\u8fb9\u6700\u9ad8\u7684\u67f1\u5b50\u300d\u3002</p> <p>\u5bf9\u5de6\u53f3\u6700\u9ad8\u67f1\u5b50\u53d6\u8f83\u5c0f\u503c\uff0c\u518d\u548c\u5f53\u524d\u67f1\u5b50\u9ad8\u5ea6\u505a\u6bd4\u8f83\uff0c\u5373\u53ef\u5f97\u51fa\u5f53\u524d\u4f4d\u7f6e\u53ef\u4ee5\u63a5\u4e0b\u7684\u96e8\u6c34\u3002</p> <p>\u540c\u65f6\uff0c\u8fb9\u7f18\u7684\u67f1\u5b50\u4e0d\u53ef\u80fd\u63a5\u5230\u96e8\u6c34\uff08\u67d0\u4e00\u4fa7\u6ca1\u6709\u67f1\u5b50\uff09\u3002</p> \u9884\u5904\u7406\u6700\u503c\u9884\u5904\u7406\u6700\u503c + \u4f18\u5316\u5355\u8c03\u6808\u9762\u79ef\u5dee\u503c <p>\u4e3a\u4e86\u907f\u514d\u5bf9\u6bcf\u4e2a\u67f1\u5b50\u90fd\u8981\u5f80\u5de6\u548c\u5f80\u53f3\u626b\u63cf\u4e00\u904d\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u67f1\u5b50\u7684\u5de6\u53f3\u6700\u503c\u3002</p> <pre><code>class Solution:\n    def trap(self, height: List[int]) -&gt; int:\n        n = len(height)\n        ans = 0\n        pre_max = [0] * n\n        post_max = [0] * n\n        pre_max[0] = height[0]\n        post_max[-1] = height[-1]\n        for i in range(1, n):\n            pre_max[i] = max(height[i], pre_max[i - 1])\n        for i in range(n - 2, -1, -1):\n            post_max[i] = max(height[i], post_max[i + 1])\n        for i in range(1, n - 1):\n            cur = height[i]\n            l_max, r_max = pre_max[i], post_max[i]\n            ans += min(l_max, r_max) - cur\n        return ans\n</code></pre> <pre><code>class Solution:\n    def trap(self, height: List[int]) -&gt; int:\n        n = len(height)\n        ans = 0\n        left, right = 0, n - 1\n        pre_max = 0\n        suf_max = 0\n        while left &lt;= right:\n            pre_max = max(pre_max, height[left])\n            suf_max = max(suf_max, height[right])\n            if pre_max &lt; suf_max:\n                ans += pre_max - height[left]\n                left += 1\n            else:\n                ans += suf_max - height[right]\n                right -= 1\n        return ans\n</code></pre> <p>\u4e8b\u5b9e\u4e0a\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u627e\u4e24\u4fa7\u6700\u5927\u503c\uff0c\u53ea\u9700\u8981\u627e\u5230\u4e24\u4fa7\u6700\u8fd1\u7684\u6bd4\u5f53\u524d\u4f4d\u7f6e\u9ad8\u7684\u67f1\u5b50\u5c31\u884c\u4e86\u3002\u9488\u5bf9\u8fd9\u4e00\u7c7b\u627e\u6700\u8fd1\u503c\u7684\u95ee\u9898\uff0c\u6709\u4e00\u4e2a\u901a\u7528\u89e3\u6cd5\uff1a\u5355\u8c03\u6808\u3002\u5355\u8c03\u6808\u5176\u5b9e\u5c31\u662f\u5728\u6808\u7684\u57fa\u7840\u4e0a\uff0c\u7ef4\u6301\u4e00\u4e2a\u6808\u5185\u5143\u7d20\u5355\u8c03\u3002</p> <p>\u5728\u8fd9\u9053\u9898\uff0c\u7531\u4e8e\u9700\u8981\u627e\u67d0\u4e2a\u4f4d\u7f6e\u4e24\u4fa7\u6bd4\u5176\u9ad8\u7684\u67f1\u5b50\uff08\u53ea\u6709\u4e24\u4fa7\u6709\u6bd4\u5f53\u524d\u4f4d\u7f6e\u9ad8\u7684\u67f1\u5b50\uff0c\u5f53\u524d\u4f4d\u7f6e\u624d\u80fd\u63a5\u4e0b\u96e8\u6c34\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u6301\u6808\u5185\u5143\u7d20\u7684\u5355\u8c03\u9012\u51cf\u3002</p> <p>PS\uff1a\u627e\u67d0\u4fa7\u6700\u8fd1\u4e00\u4e2a\u6bd4\u5176\u5927\u7684\u503c\uff0c\u4f7f\u7528\u5355\u8c03\u6808\u7ef4\u6301\u6808\u5185\u5143\u7d20\u9012\u51cf\uff1b\u627e\u67d0\u4fa7\u6700\u8fd1\u4e00\u4e2a\u6bd4\u5176\u5c0f\u7684\u503c\uff0c\u4f7f\u7528\u5355\u8c03\u6808\u7ef4\u6301\u6808\u5185\u5143\u7d20\u9012\u589e\u3002</p> <p>\u5f53\u67d0\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u5f39\u51fa\u6808\u65f6\uff0c\u4f8b\u5982\u4f4d\u7f6e i \uff0c\u6211\u4eec\u81ea\u7136\u53ef\u4ee5\u5f97\u5230 i \u4f4d\u7f6e\u4e24\u4fa7\u6bd4 i \u9ad8\u7684\u67f1\u5b50\uff1a</p> <ul> <li>\u4e00\u4e2a\u662f\u5bfc\u81f4 i \u4f4d\u7f6e\u5143\u7d20\u5f39\u51fa\u7684\u67f1\u5b50\uff08 i \u53f3\u4fa7\u6bd4 i \u9ad8\u7684\u67f1\u5b50\uff09</li> <li>\u4e00\u4e2a\u662f i \u5f39\u6808\u540e\u7684\u6808\u9876\u5143\u7d20\uff08i \u5de6\u4fa7\u6bd4 i \u9ad8\u7684\u67f1\u5b50\uff09</li> </ul> <p>\u5f53\u6709\u4e86 i \u5de6\u53f3\u4e24\u4fa7\u6bd4 i \u9ad8\u7684\u67f1\u5b50\u540e\uff0c\u4fbf\u53ef\u8ba1\u7b97 i \u4f4d\u7f6e\u53ef\u63a5\u4e0b\u7684\u96e8\u6c34\u91cf\u3002</p> <pre><code>class Solution:\n    def trap(self, height: List[int]) -&gt; int:\n        n = len(height)\n        ans = 0\n        d = deque()\n        for i in range(n):\n            while d and height[i] &gt; height[d[-1]]:\n                cur = d.pop()\n                # \u5982\u679c\u6808\u5185\u6ca1\u6709\u5143\u7d20\uff0c\u8bf4\u660e\u5f53\u524d\u4f4d\u7f6e\u5de6\u8fb9\u6ca1\u6709\u6bd4\u5176\u9ad8\u7684\u67f1\u5b50\uff0c\u8df3\u8fc7\n                if not d:\n                    break\n                # \u5de6\u53f3\u4f4d\u7f6e\uff0c\u5e76\u7531\u5de6\u53f3\u4f4d\u7f6e\u5f97\u51fa\u300c\u5bbd\u5ea6\u300d\u548c\u300c\u9ad8\u5ea6\u300d\n                l, r = d[-1], i\n                w = r - l + 1 - 2\n                h = min(height[l], height[r]) - height[cur]\n                ans += w * h\n            d.append(i)\n        return ans\n</code></pre> <p>\u9898\u89e3</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E5%A4%9A%E7%A7%8D%E8%A7%A3%E6%B3%95/#lcr-057-iii","title":"LCR 057. \u5b58\u5728\u91cd\u590d\u5143\u7d20 III","text":"\u6ed1\u52a8\u7a97\u53e3 + \u6709\u5e8f\u96c6\u5408\u6876\u6392\u5e8f <pre><code>class Solution {\n    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {\n        int n = nums.length;\n        TreeSet&lt;Long&gt; set = new TreeSet&lt;Long&gt;();\n        for (int i = 0; i &lt; n; i++) {\n            Long floor = set.floor((long) nums[i]);\n            Long ceiling = set.ceiling((long) nums[i]);\n            if (floor != null &amp;&amp; (long) nums[i] - floor &lt;= (long) t) {\n                return true;\n            }\n            if (ceiling != null &amp;&amp; ceiling - (long) nums[i] &lt;= (long) t) {\n                return true;\n            }\n            set.add((long) nums[i]);\n            if (i &gt;= k) {\n                set.remove((long) nums[i - k]);\n            }\n        }\n        return false;\n    }\n}\n</code></pre> <pre><code>class Solution {\n    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {\n        int n = nums.length;\n\n        //\u6876\u7684\u5927\u5c0f\u4e3at+1\uff0c\u5141\u8bb8\u6700\u5927\u5143\u7d20\u548c\u6700\u5c0f\u5143\u7d20\u4e4b\u5dee\u4e3at\n        long w = (long) t + 1;\n\n        //\u56e0\u4e3a\u4e00\u4e2a\u6876\u6709\u4e24\u4e2a\u5143\u7d20\u5c31\u4f1a\u8fd4\u56detrue\uff0c\u56e0\u6b64\u4e00\u4e2a\u6876\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u7528\u54c8\u5e0c\u8868\u7684\u4e00\u6761key-value\u8868\u793a\u6876\n        Map&lt;Long, Long&gt; map = new HashMap&lt;Long, Long&gt;();\n\n        for (int i = 0; i &lt; n; i++) {\n            long id = getID(nums[i], w);\n\n            //\u6876\u91cc\u5df2\u6709\u5143\u7d20x\uff0cnums[i]\u548cx\u540c\u5c5e\u4e00\u4e2a\u6876\uff0c\u503c\u7b26\u5408\u8303\u56f4\n            //\u53ea\u4fdd\u7559\u4e0b\u6807 i \u4e4b\u524d\u7684 k \u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u4e0b\u6807\u4e5f\u7b26\u5408\u8303\u56f4\n            //\u6876\u6709\u4e24\u4e2a\u5143\u7d20\u5c31\u4f1a\u8fd4\u56de\uff0c\u56e0\u6b64\u4e00\u4e2a\u6876\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\n            if (map.containsKey(id)) {\n                return true;\n            }\n\n            //\u524d\u4e00\u4e2a\u6876\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u4e14\u503c\u7684\u8303\u56f4\u7b26\u5408\u8981\u6c42\n            if (map.containsKey(id - 1) &amp;&amp; Math.abs(nums[i] - map.get(id - 1)) &lt; w) {\n                return true;\n            }\n\n            //\u540e\u4e00\u4e2a\u6876\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u4e14\u503c\u7684\u8303\u56f4\u7b26\u5408\u8981\u6c42\n            if (map.containsKey(id + 1) &amp;&amp; Math.abs(nums[i] - map.get(id + 1)) &lt; w) {\n                return true;\n            }\n\n            //\u6ca1\u6709\u548cnums[i]\u5339\u914d\u7684\u5143\u7d20\uff0c\u628anums[i]\u52a0\u5165\u81ea\u5df1\u7684\u6876\u91cc\n            map.put(id, (long) nums[i]);\n\n            //\u4e0b\u6807\u8303\u56f4[i-k+1, i]\uff0c\u4ecenums[i-k]\u6240\u5728\u6876\u79fb\u9664\u5143\u7d20\n            if (i &gt;= k) {\n                map.remove(getID(nums[i - k], w));\n            }\n        }\n        return false;\n    }\n\n    public long getID(long x, long w) {\n        //\u975e\u8d1f\u6570\u533a\u95f4\uff0c\u5982[0, t] \u4f1a\u88ab\u5f52\u5230 id=0\n        //\u5176\u4f59\u7684\u533a\u95f4\uff0c\u5982[(n-1)t+1, nt+1]\uff0c\u6bcft+1\u4e2a\u5143\u7d20\u4f1a\u88ab\u5f52\u5230 id = n-1\n        if (x &gt;= 0) {\n            return x / w;\n        }\n\n        //\u8d1f\u6570\u533a\u95f4\uff0c\u5982[-t, -1] \u4f1a\u88ab\u5f52\u5230 id=-1\n        //\u5176\u4f59\u7684\u533a\u95f4\uff0c\u5982[-(n+1)t-1, -nt-1]\uff0c\u6bcft+1\u4e2a\u5143\u7d20\u4f1a\u88ab\u5f52\u5230 id = -(n+1)\n        return (x + 1) / w - 1;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/","title":"\u6ed1\u52a8\u7a97\u53e3","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/#438","title":"438. \u627e\u5230\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5b57\u6bcd\u5f02\u4f4d\u8bcd","text":"<p>Question</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \u548c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e32 <code>p</code>\uff0c\u627e\u5230 <code>s</code> \u4e2d\u6240\u6709\u662f <code>p</code> \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7684\u5b50\u4e32\uff0c\u8fd4\u56de\u8fd9\u4e9b\u5b50\u4e32\u7684\u8d77\u59cb\u7d22\u5f15\u3002</p> \u4e00\u822c\u5199\u6cd5\u6ed1\u52a8\u7a97\u53e3 <pre><code>class Solution {\n    public List&lt;Integer&gt; findAnagrams(String s, String p) {\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n        int n = s.length(), m = p.length();\n        if (m &gt; n) return ans;\n        int[] pMap = new int[26];\n        int[] sMap = new int[26];\n        for (int i = 0; i &lt; m; i++) {\n            pMap[p.charAt(i) - 'a']++;\n            sMap[s.charAt(i) - 'a']++;\n        }\n        if (Arrays.equals(sMap, pMap)) {\n            ans.add(0);\n        }\n        for (int i = m; i &lt; n; i++) {\n            sMap[s.charAt(i) - 'a']++;\n            sMap[s.charAt(i - m) - 'a']--;\n            if (Arrays.equals(sMap, pMap)) {\n                ans.add(i - m + 1);\n            }\n        }\n        return ans;\n    }\n}\n</code></pre> <pre><code>class Solution {\n    public List&lt;Integer&gt; findAnagrams(String s, String p) {\n        int[] counter = new int[26];\n        for (char c : p.toCharArray()) {\n            counter[c - 'a']++;\n        }\n        List&lt;Integer&gt; ans = new ArrayList&lt;&gt;();\n        int[] map = new int[26];\n        int i = 0, j = 0;\n        while (j &lt; s.length()) {\n            map[s.charAt(j) - 'a']++;\n            if (j - i + 1 == p.length()) {\n                if (Arrays.equals(counter, map)) {\n                    ans.add(i);\n                }\n                map[s.charAt(i) - 'a']--;\n                i++;\n            }\n            j++;\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/#3","title":"3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32","text":"<p>Question</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6\u3002</p> \u6ed1\u52a8\u7a97\u53e3\u6ed1\u52a8\u7a97\u53e3\u4f18\u5316 <pre><code>class Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        d = Counter()\n        n = len(s)\n        ans = 0\n        left = 0\n        for right in range(n):\n            d[s[right]] += 1\n            while d[s[right]] &gt; 1:\n                d[s[left]] -= 1\n                left += 1\n            ans = max(ans, right - left + 1)\n        return ans\n</code></pre> <pre><code>class Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        d = Counter()\n        n = len(s)\n        ans = 0\n        left = 0\n        for right in range(n):\n            if s[right] in d:\n                left = max(left, d[s[right]] + 1) # \u6ce8\u610fleft\u53ea\u80fd\u5f80\u53f3\u79fb\n            ans = max(ans, right - left + 1)\n            d[s[right]] = right\n        return ans\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/#76","title":"76. \u6700\u5c0f\u8986\u76d6\u5b50\u4e32","text":"<p>Question</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u3001\u4e00\u4e2a\u5b57\u7b26\u4e32 t \u3002\u8fd4\u56de s \u4e2d\u6db5\u76d6 t \u6240\u6709\u5b57\u7b26\u7684\u6700\u5c0f\u5b50\u4e32\u3002\u5982\u679c s \u4e2d\u4e0d\u5b58\u5728\u6db5\u76d6 t \u6240\u6709\u5b57\u7b26\u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\" \u3002</p> \u6ed1\u52a8\u7a97\u53e3 <pre><code>class Solution:\n    def minWindow(self, s: str, t: str) -&gt; str:\n        t_map = Counter()\n        for c in t:\n            t_map[c] += 1\n        s_map = Counter()\n        left = 0\n        ans = \"\"\n        for right in range(len(s)):\n            s_map[s[right]] += 1\n            while self.check(s_map, t_map):\n                if not ans or right - left + 1 &lt; len(ans):\n                    ans = s[left : right + 1]\n                s_map[s[left]] -= 1\n                left += 1\n        return ans\n\n    def check(self, s_map, t_map):\n        for k, v in t_map.items():\n            if s_map[k] &lt; v:\n                return False\n        return True\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E9%93%BE%E8%A1%A8/","title":"\u94fe\u8868","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E9%93%BE%E8%A1%A8/#206","title":"206. \u53cd\u8f6c\u94fe\u8868","text":"\u8fed\u4ee3\u9012\u5f52 <pre><code>class Solution:\n    def reverseList(self, head: ListNode) -&gt; ListNode:\n        if not head:\n            return None\n        cur = head\n        pre = None\n        while cur:\n            nxt = cur.next\n            cur.next = pre\n            pre, cur = cur, nxt\n        return pre\n</code></pre> <pre><code>class Solution:\n    def reverseList(self, head: ListNode) -&gt; ListNode:\n        if not head:\n            return None\n        if not head.next:\n            return head\n        node = self.reverseList(head.next)\n        head.next.next = head\n        head.next = None\n        return node\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%A5%BD%E9%A2%98%E5%88%86%E7%B1%BB/%E9%93%BE%E8%A1%A8/#234","title":"234. \u56de\u6587\u94fe\u8868","text":"\u9012\u5f52\u627e\u4e2d\u70b9 + \u53cd\u8f6c\u94fe\u8868 <pre><code>class Solution:\n    def isPalindrome(self, head: ListNode) -&gt; bool:\n        self.p = head\n        self.ans = True\n\n        def recurse(cur):\n            if not cur:\n                return\n            recurse(cur.next)\n            if cur.val != self.p.val:\n                self.ans = False\n            self.p = self.p.next\n\n        recurse(head)\n        return self.ans\n</code></pre> <pre><code>class Solution {\n    public boolean isPalindrome(ListNode head) {\n        ListNode l1 = head;\n        ListNode mid = findMid(head);\n        ListNode l2 = mid.next;\n        mid.next = null;\n        l2 = reverseList(l2);\n        while (l2 != null) {\n            if (l1.val != l2.val) return false;\n            l1 = l1.next;\n            l2 = l2.next;\n        }\n        return true;\n    }\n\n    ListNode findMid(ListNode head) {\n        ListNode slow = head, fast = head;\n        while (fast.next != null &amp;&amp; fast.next.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        return slow;\n    }\n\n    ListNode reverseList(ListNode head) {\n        ListNode pre = null, cur = head;\n        while (cur != null) {\n            ListNode next = cur.next;\n            cur.next = pre;\n            pre = cur;\n            cur = next;\n        }\n        return pre;\n    }\n}\n</code></pre>"}]}